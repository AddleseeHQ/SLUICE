[
    {
        "chopped": {
            "question": "As of 2009, how many people lived in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2009')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),'2009')) }"
        },
        "original": {
            "question": "As of 2009, how many people lived in Somalia",
            "query": "SELECT ?obj WHERE { wd:Q1045 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2009')) }",
            "NLQuery": "SELECT ?obj WHERE { Somalia population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2009')) }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Somalia",
            "choppedEntity": "Q1045"
        }
    },
    {
        "chopped": {
            "question": "What nomination did Dolores del Rio receive for their work with ",
            "query": "SELECT ?ans1 WHERE { wd:Q124057 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Dolores del R\u00edo nominated for ?s . ?s nominated for ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "What nomination did Dolores del Rio receive for their work with La Otra",
            "query": "SELECT ?obj WHERE { wd:Q124057 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q3915489 }",
            "NLQuery": "SELECT ?obj WHERE { Dolores del R\u00edo nominated for ?s . ?s nominated for ?obj . ?s for work La Otra }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "La Otra",
            "choppedEntity": "Q3915489"
        }
    },
    {
        "chopped": {
            "question": "What is the end time for Whitehaven resident ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P551 ?s . ?s ps:P551 wd:Q1012481 . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown residence ?s . ?s residence Whitehaven . ?s end time ?ans1}"
        },
        "original": {
            "question": "What is the end time for Whitehaven resident Jonathan Swift",
            "query": "SELECT ?value WHERE { wd:Q41166 p:P551 ?s . ?s ps:P551 wd:Q1012481 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Jonathan Swift residence ?s . ?s residence Whitehaven . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jonathan Swift",
            "choppedEntity": "Q41166"
        }
    },
    {
        "chopped": {
            "question": "Franz Waxman was nominated for which statement of subject at the 23rd ",
            "query": "SELECT ?ans1 WHERE { wd:Q213611 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Franz Waxman nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "Franz Waxman was nominated for which statement of subject at the 23rd Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q213611 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q917076 }",
            "NLQuery": "SELECT ?obj WHERE { Franz Waxman nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 23rd Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q917076"
        }
    },
    {
        "chopped": {
            "question": "Which statement of subject was Franz Waxman nominated for at the 23rd ",
            "query": "SELECT ?ans1 WHERE { wd:Q213611 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Franz Waxman nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "Which statement of subject was Franz Waxman nominated for at the 23rd Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q213611 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q917076 }",
            "NLQuery": "SELECT ?obj WHERE { Franz Waxman nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 23rd Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q917076"
        }
    },
    {
        "chopped": {
            "question": "In what area does the Rideau Canal join ",
            "query": "SELECT ?ans1 WHERE { wd:Q651323 p:P403 ?s . ?s ps:P403 ?unknown . ?s pq:P131 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Rideau Canal mouth of the watercourse ?s . ?s mouth of the watercourse ?unknown . ?s located in the administrative territorial entity ?ans1}"
        },
        "original": {
            "question": "In what area does the Rideau Canal join the Ottawa River",
            "query": "SELECT ?value WHERE { wd:Q651323 p:P403 ?s . ?s ps:P403 wd:Q60974 . ?s pq:P131 ?value}",
            "NLQuery": "SELECT ?value WHERE { Rideau Canal mouth of the watercourse ?s . ?s mouth of the watercourse Ottawa River . ?s located in the administrative territorial entity ?value}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Ottawa River",
            "choppedEntity": "Q60974"
        }
    },
    {
        "chopped": {
            "question": "In which region does the Rideau Canal join ",
            "query": "SELECT ?ans1 WHERE { wd:Q651323 p:P403 ?s . ?s ps:P403 ?unknown . ?s pq:P131 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Rideau Canal mouth of the watercourse ?s . ?s mouth of the watercourse ?unknown . ?s located in the administrative territorial entity ?ans1}"
        },
        "original": {
            "question": "In which region does the Rideau Canal join the Ottawa River",
            "query": "SELECT ?value WHERE { wd:Q651323 p:P403 ?s . ?s ps:P403 wd:Q60974 . ?s pq:P131 ?value}",
            "NLQuery": "SELECT ?value WHERE { Rideau Canal mouth of the watercourse ?s . ?s mouth of the watercourse Ottawa River . ?s located in the administrative territorial entity ?value}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Ottawa River",
            "choppedEntity": "Q60974"
        }
    },
    {
        "chopped": {
            "question": "When did socialist state for contains administrative territorial entity of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P150 ?unknown . ?sbj wdt:P31 wd:Q842112 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj contains administrative territorial entity ?unknown . ?sbj instance of socialist state } "
        },
        "original": {
            "question": "When did socialist state for contains administrative territorial entity of Beijing",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P150 wd:Q956 . ?sbj wdt:P31 wd:Q842112 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj contains administrative territorial entity Beijing . ?sbj instance of socialist state } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Beijing",
            "choppedEntity": "Q956"
        }
    },
    {
        "chopped": {
            "question": "Which is the PIM authority ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3973 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown PIM authority ID ?ans1}"
        },
        "original": {
            "question": "Which is the PIM authority ID of Paul Erd\u0151s",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q173746 wdt:P3973 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Paul Erd\u0151s PIM authority ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Paul Erd\u0151s",
            "choppedEntity": "Q173746"
        }
    },
    {
        "chopped": {
            "question": "What is the MIA constituent ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3603 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Minneapolis Institute of Art constituent ID ?ans1}"
        },
        "original": {
            "question": "What is the MIA constituent ID for Johannes Gutenberg",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q8958 wdt:P3603 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Johannes Gutenberg Minneapolis Institute of Art constituent ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Johannes Gutenberg",
            "choppedEntity": "Q8958"
        }
    },
    {
        "chopped": {
            "question": "What is in the category of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P5506 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Poetry In Voice poet ID ?ans1}"
        },
        "original": {
            "question": "What is in the category of Percy Bysshe Shelley",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q93343 wdt:P5506 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Percy Bysshe Shelley Poetry In Voice poet ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Percy Bysshe Shelley",
            "choppedEntity": "Q93343"
        }
    },
    {
        "chopped": {
            "question": "Mention the spaceflight crew participant for accompanying ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1029 ?unknown . ?sbj wdt:P31 wd:Q752783 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj crew member ?unknown . ?sbj instance of human spaceflight } "
        },
        "original": {
            "question": "Mention the spaceflight crew participant for accompanying Yuri Gagarin",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1029 wd:Q7327 . ?sbj wdt:P31 wd:Q752783 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj crew member Yuri Gagarin . ?sbj instance of human spaceflight } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Yuri Gagarin",
            "choppedEntity": "Q7327"
        }
    },
    {
        "chopped": {
            "question": "Say the spaceflight group member for going with ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1029 ?unknown . ?sbj wdt:P31 wd:Q752783 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj crew member ?unknown . ?sbj instance of human spaceflight } "
        },
        "original": {
            "question": "Say the spaceflight group member for going with Yuri Gagarin",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1029 wd:Q7327 . ?sbj wdt:P31 wd:Q752783 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj crew member Yuri Gagarin . ?sbj instance of human spaceflight } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Yuri Gagarin",
            "choppedEntity": "Q7327"
        }
    },
    {
        "chopped": {
            "question": "What is the maximum Strahler number for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1548 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown maximum Strahler number ?ans1}"
        },
        "original": {
            "question": "What is the maximum Strahler number for Loire",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1469 wdt:P1548 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Loire maximum Strahler number ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Loire",
            "choppedEntity": "Q1469"
        }
    },
    {
        "chopped": {
            "question": "Who is the eponym of Lake Eyre that also is the winner of ",
            "query": "SELECT ?ans1 WHERE { wd:Q179970 wdt:P138 ?ans1 . ?ans1 wdt:P166 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Kati Thanda\u2013Lake Eyre named after ?ans1 . ?ans1 award received ?unknown}"
        },
        "original": {
            "question": "Who is the eponym of Lake Eyre that also is the winner of the Founder's Medal",
            "query": "SELECT ?answer WHERE { wd:Q179970 wdt:P138 ?answer . ?answer wdt:P166 wd:Q26268774}",
            "NLQuery": "SELECT ?answer WHERE { Kati Thanda\u2013Lake Eyre named after ?answer . ?answer award received Founder\u2019s Medal}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Founder's Medal",
            "choppedEntity": "Q26268774"
        }
    },
    {
        "chopped": {
            "question": "Who is the eponym of Lake Eyre that additionally is the winner of ",
            "query": "SELECT ?ans1 WHERE { wd:Q179970 wdt:P138 ?ans1 . ?ans1 wdt:P166 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Kati Thanda\u2013Lake Eyre named after ?ans1 . ?ans1 award received ?unknown}"
        },
        "original": {
            "question": "Who is the eponym of Lake Eyre that additionally is the winner of the Founder's Medal",
            "query": "SELECT ?answer WHERE { wd:Q179970 wdt:P138 ?answer . ?answer wdt:P166 wd:Q26268774}",
            "NLQuery": "SELECT ?answer WHERE { Kati Thanda\u2013Lake Eyre named after ?answer . ?answer award received Founder\u2019s Medal}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Founder's Medal",
            "choppedEntity": "Q26268774"
        }
    },
    {
        "chopped": {
            "question": "On 1/3/1935, what was the location held by ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1935')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),'1935')) }"
        },
        "original": {
            "question": "On 1/3/1935, what was the location held by Harry S. Truman",
            "query": "SELECT ?obj WHERE { wd:Q11613 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1935')) }",
            "NLQuery": "SELECT ?obj WHERE { Harry S. Truman position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1935')) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Harry S. Truman",
            "choppedEntity": "Q11613"
        }
    },
    {
        "chopped": {
            "question": "What is the significance of artists of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P175 ?X . ?X wdt:P800 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown performer ?X . ?X notable work ?ans1}"
        },
        "original": {
            "question": "What is the significance of artists of The Beatles' Story",
            "query": "SELECT ?answer WHERE { wd:Q2304936 wdt:P175 ?X . ?X wdt:P800 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Beatles' Story performer ?X . ?X notable work ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Beatles' Story",
            "choppedEntity": "Q2304936"
        }
    },
    {
        "chopped": {
            "question": "What is the centrality of craftsmen of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P175 ?X . ?X wdt:P800 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown performer ?X . ?X notable work ?ans1}"
        },
        "original": {
            "question": "What is the centrality of craftsmen of The Beatles' Story",
            "query": "SELECT ?answer WHERE { wd:Q2304936 wdt:P175 ?X . ?X wdt:P800 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Beatles' Story performer ?X . ?X notable work ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Beatles' Story",
            "choppedEntity": "Q2304936"
        }
    },
    {
        "chopped": {
            "question": "Which is the business for the publisher of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P123 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown publisher ?obj . ?obj instance of business } "
        },
        "original": {
            "question": "Which is the business for the publisher of Space Invaders",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q220665 wdt:P123 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Space Invaders publisher ?obj . ?obj instance of business } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Space Invaders",
            "choppedEntity": "Q220665"
        }
    },
    {
        "chopped": {
            "question": "What are the borders of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P706 ?X . ?X wdt:P47 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located on terrain feature ?X . ?X shares border with ?ans1}"
        },
        "original": {
            "question": "What are the borders of Southern Africa",
            "query": "SELECT ?answer WHERE { wd:Q27394 wdt:P706 ?X . ?X wdt:P47 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Southern Africa located on terrain feature ?X . ?X shares border with ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Southern Africa",
            "choppedEntity": "Q27394"
        }
    },
    {
        "chopped": {
            "question": "Who was the King of the Franks after ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P97 ?s . ?s ps:P97 wd:Q22923081 . ?s pq:P155 ?ans1 . ?s pq:P156 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown noble title ?s . ?s noble title king of Franks . ?s follows ?ans1 . ?s followed by ?ans2 }"
        },
        "original": {
            "question": "Who was the King of the Franks after Lothair I",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q150735 p:P97 ?s . ?s ps:P97 wd:Q22923081 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Lothair I noble title ?s . ?s noble title king of Franks . ?s follows ?value1 . ?s followed by ?value2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Lothair I",
            "choppedEntity": "Q150735"
        }
    },
    {
        "chopped": {
            "question": "Who was the Ruler of the Franks after ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P97 ?s . ?s ps:P97 wd:Q22923081 . ?s pq:P155 ?ans1 . ?s pq:P156 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown noble title ?s . ?s noble title king of Franks . ?s follows ?ans1 . ?s followed by ?ans2 }"
        },
        "original": {
            "question": "Who was the Ruler of the Franks after Lothair I",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q150735 p:P97 ?s . ?s ps:P97 wd:Q22923081 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Lothair I noble title ?s . ?s noble title king of Franks . ?s follows ?value1 . ?s followed by ?value2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Lothair I",
            "choppedEntity": "Q150735"
        }
    },
    {
        "chopped": {
            "question": "What is the total solar radiation reflected off of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4501 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown albedo ?ans1}"
        },
        "original": {
            "question": "What is the total solar radiation reflected off of Saturn",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q193 wdt:P4501 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Saturn albedo ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Saturn",
            "choppedEntity": "Q193"
        }
    },
    {
        "chopped": {
            "question": "In what grave is Henrik Ibsen buried ar ",
            "query": "SELECT ?ans1 WHERE { wd:Q36661 p:P119 ?s . ?s ps:P119 ?unknown . ?s pq:P965 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Henrik Ibsen place of burial ?s . ?s place of burial ?unknown . ?s burial plot reference ?ans1}"
        },
        "original": {
            "question": "In what grave is Henrik Ibsen buried ar Var Freisers gravlund",
            "query": "SELECT ?value WHERE { wd:Q36661 p:P119 ?s . ?s ps:P119 wd:Q1069938 . ?s pq:P965 ?value}",
            "NLQuery": "SELECT ?value WHERE { Henrik Ibsen place of burial ?s . ?s place of burial V\u00e5r Frelsers gravlund . ?s burial plot reference ?value}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Var Freisers gravlund",
            "choppedEntity": "Q1069938"
        }
    },
    {
        "chopped": {
            "question": "where grave is Henrik Ibsen buried ar ",
            "query": "SELECT ?ans1 WHERE { wd:Q36661 p:P119 ?s . ?s ps:P119 ?unknown . ?s pq:P965 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Henrik Ibsen place of burial ?s . ?s place of burial ?unknown . ?s burial plot reference ?ans1}"
        },
        "original": {
            "question": "where grave is Henrik Ibsen buried ar Var Freisers gravlund",
            "query": "SELECT ?value WHERE { wd:Q36661 p:P119 ?s . ?s ps:P119 wd:Q1069938 . ?s pq:P965 ?value}",
            "NLQuery": "SELECT ?value WHERE { Henrik Ibsen place of burial ?s . ?s place of burial V\u00e5r Frelsers gravlund . ?s burial plot reference ?value}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Var Freisers gravlund",
            "choppedEntity": "Q1069938"
        }
    },
    {
        "chopped": {
            "question": "What is the native language of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P37 ?X . ?X wdt:P155 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown official language ?X . ?X follows ?ans1}"
        },
        "original": {
            "question": "What is the native language of Champa",
            "query": "SELECT ?answer WHERE { wd:Q216786 wdt:P37 ?X . ?X wdt:P155 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Champa official language ?X . ?X follows ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Champa",
            "choppedEntity": "Q216786"
        }
    },
    {
        "chopped": {
            "question": "What is the local dialect of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P37 ?X . ?X wdt:P155 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown official language ?X . ?X follows ?ans1}"
        },
        "original": {
            "question": "What is the local dialect of Champa",
            "query": "SELECT ?answer WHERE { wd:Q216786 wdt:P37 ?X . ?X wdt:P155 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Champa official language ?X . ?X follows ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Champa",
            "choppedEntity": "Q216786"
        }
    },
    {
        "chopped": {
            "question": "What is the order of Augustine of Canterbury, which has been founded in ",
            "query": "SELECT ?ans1 WHERE { wd:Q32520 wdt:P611 ?ans1 . ?ans1 wdt:P740 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Augustine of Canterbury religious order ?ans1 . ?ans1 location of formation ?unknown}"
        },
        "original": {
            "question": "What is the order of Augustine of Canterbury, which has been founded in the Abbey of monte Cassino",
            "query": "SELECT ?answer WHERE { wd:Q32520 wdt:P611 ?answer . ?answer wdt:P740 wd:Q334051}",
            "NLQuery": "SELECT ?answer WHERE { Augustine of Canterbury religious order ?answer . ?answer location of formation Abbey of Monte Cassino}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "the Abbey of monte Cassino",
            "choppedEntity": "Q334051"
        }
    },
    {
        "chopped": {
            "question": "What is the order of Augustine of Canterbury, which has been based in ",
            "query": "SELECT ?ans1 WHERE { wd:Q32520 wdt:P611 ?ans1 . ?ans1 wdt:P740 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Augustine of Canterbury religious order ?ans1 . ?ans1 location of formation ?unknown}"
        },
        "original": {
            "question": "What is the order of Augustine of Canterbury, which has been based in the Abbey of monte Cassino",
            "query": "SELECT ?answer WHERE { wd:Q32520 wdt:P611 ?answer . ?answer wdt:P740 wd:Q334051}",
            "NLQuery": "SELECT ?answer WHERE { Augustine of Canterbury religious order ?answer . ?answer location of formation Abbey of Monte Cassino}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "the Abbey of monte Cassino",
            "choppedEntity": "Q334051"
        }
    },
    {
        "chopped": {
            "question": "What is a torque of the BMW ",
            "query": "ASK WHERE { ?unknown wdt:P2230 ?obj FILTER(?obj = 160) } ",
            "NLQuery": "ASK WHERE { ?unknown torque ?obj FILTER(?obj = 160) } "
        },
        "original": {
            "question": "What is a torque of the BMW M20B20",
            "query": "ASK WHERE { wd:Q42878353 wdt:P2230 ?obj FILTER(?obj = 160) } ",
            "NLQuery": "ASK WHERE { BMW M20B20 torque ?obj FILTER(?obj = 160) } "
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "M20B20",
            "choppedEntity": "Q42878353"
        }
    },
    {
        "chopped": {
            "question": "What is the musical based on the book ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P144 ?unknown . ?sbj wdt:P31 wd:Q2743 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj based on ?unknown . ?sbj instance of musical theatre } "
        },
        "original": {
            "question": "What is the musical based on the book The Count of Monte Cristo",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P144 wd:Q191838 . ?sbj wdt:P31 wd:Q2743 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj based on The Count of Monte Cristo . ?sbj instance of musical theatre } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Count of Monte Cristo",
            "choppedEntity": "Q191838"
        }
    },
    {
        "chopped": {
            "question": "What is the melodic based on the book ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P144 ?unknown . ?sbj wdt:P31 wd:Q2743 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj based on ?unknown . ?sbj instance of musical theatre } "
        },
        "original": {
            "question": "What is the melodic based on the book The Check of Monte Cristo",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P144 wd:Q191838 . ?sbj wdt:P31 wd:Q2743 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj based on The Count of Monte Cristo . ?sbj instance of musical theatre } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Check of Monte Cristo",
            "choppedEntity": "Q191838"
        }
    },
    {
        "chopped": {
            "question": "What award was Jean Umansky nominated for in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P2453 wd:Q6171615 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown nominated for ?s . ?s nominated for ?ans1 . ?s nominee Jean Umansky }"
        },
        "original": {
            "question": "What award was Jean Umansky nominated for in Amelie",
            "query": "SELECT ?obj WHERE { wd:Q484048 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P2453 wd:Q6171615 }",
            "NLQuery": "SELECT ?obj WHERE { Am\u00e9lie nominated for ?s . ?s nominated for ?obj . ?s nominee Jean Umansky }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Amelie",
            "choppedEntity": "Q484048"
        }
    },
    {
        "chopped": {
            "question": "Did Pope Paul VI work in both Rome and ",
            "query": "ASK WHERE { wd:Q16975 wdt:P937 wd:Q220 . wd:Q16975 wdt:P937 ?unknown }",
            "NLQuery": "ASK WHERE { Paul VI work location Rome . Paul VI work location ?unknown }"
        },
        "original": {
            "question": "Did Pope Paul VI work in both Rome and Munich",
            "query": "ASK WHERE { wd:Q16975 wdt:P937 wd:Q220 . wd:Q16975 wdt:P937 wd:Q1726 }",
            "NLQuery": "ASK WHERE { Paul VI work location Rome . Paul VI work location Munich }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Munich",
            "choppedEntity": "Q1726"
        }
    },
    {
        "chopped": {
            "question": "Where did Pope Paul VI work, Rome and ",
            "query": "ASK WHERE { wd:Q16975 wdt:P937 wd:Q220 . wd:Q16975 wdt:P937 ?unknown }",
            "NLQuery": "ASK WHERE { Paul VI work location Rome . Paul VI work location ?unknown }"
        },
        "original": {
            "question": "Where did Pope Paul VI work, Rome and Munich",
            "query": "ASK WHERE { wd:Q16975 wdt:P937 wd:Q220 . wd:Q16975 wdt:P937 wd:Q1726 }",
            "NLQuery": "ASK WHERE { Paul VI work location Rome . Paul VI work location Munich }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Munich",
            "choppedEntity": "Q1726"
        }
    },
    {
        "chopped": {
            "question": "Who introduced the prize received of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P166 ?X . ?X wdt:P571 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?X . ?X inception ?ans1}"
        },
        "original": {
            "question": "Who introduced the prize received of Semyon Budyonny",
            "query": "SELECT ?answer WHERE { wd:Q242474 wdt:P166 ?X . ?X wdt:P571 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Semyon Budyonny award received ?X . ?X inception ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Semyon Budyonny",
            "choppedEntity": "Q242474"
        }
    },
    {
        "chopped": {
            "question": "What is the name of 1st series of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P735 ?s . ?s ps:P735 ?ans1 . ?s pq:P1545 ?x FILTER(contains(?x,'1')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown given name ?s . ?s given name ?ans1 . ?s series ordinal ?x FILTER(contains(?x,'1')) }"
        },
        "original": {
            "question": "What is the name of 1st series of Heinrich Himmler",
            "query": "SELECT ?obj WHERE { wd:Q43067 p:P735 ?s . ?s ps:P735 ?obj . ?s pq:P1545 ?x FILTER(contains(?x,'1')) }",
            "NLQuery": "SELECT ?obj WHERE { Heinrich Himmler given name ?s . ?s given name ?obj . ?s series ordinal ?x FILTER(contains(?x,'1')) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Heinrich Himmler",
            "choppedEntity": "Q43067"
        }
    },
    {
        "chopped": {
            "question": "Give me the name of 1st series of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P735 ?s . ?s ps:P735 ?ans1 . ?s pq:P1545 ?x FILTER(contains(?x,'1')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown given name ?s . ?s given name ?ans1 . ?s series ordinal ?x FILTER(contains(?x,'1')) }"
        },
        "original": {
            "question": "Give me the name of 1st series of Heinrich Himmler",
            "query": "SELECT ?obj WHERE { wd:Q43067 p:P735 ?s . ?s ps:P735 ?obj . ?s pq:P1545 ?x FILTER(contains(?x,'1')) }",
            "NLQuery": "SELECT ?obj WHERE { Heinrich Himmler given name ?s . ?s given name ?obj . ?s series ordinal ?x FILTER(contains(?x,'1')) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Heinrich Himmler",
            "choppedEntity": "Q43067"
        }
    },
    {
        "chopped": {
            "question": "Is there a personal who is grammatical in ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P5110 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown has grammatical person ?obj }"
        },
        "original": {
            "question": "Is there a personal who is grammatical in French",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q150 wdt:P5110 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { French has grammatical person ?obj }"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "French",
            "choppedEntity": "Q150"
        }
    },
    {
        "chopped": {
            "question": "Which euroleague.net ID belongs to ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3536 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown euroleague.net ID ?ans1}"
        },
        "original": {
            "question": "Which euroleague.net ID belongs to Arvydas Sabonis",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q297750 wdt:P3536 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Arvydas Sabonis euroleague.net ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Arvydas Sabonis",
            "choppedEntity": "Q297750"
        }
    },
    {
        "chopped": {
            "question": "Which is St\u00e4del Museum artist ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4581 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown St\u00e4del Museum artist ID ?ans1}"
        },
        "original": {
            "question": "Which is St\u00e4del Museum artist ID for K\u00e4the Kollwitz",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q142472 wdt:P4581 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { K\u00e4the Kollwitz St\u00e4del Museum artist ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "K\u00e4the Kollwitz",
            "choppedEntity": "Q142472"
        }
    },
    {
        "chopped": {
            "question": "What job did Franz von Papen replace ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1365 wd:Q150552 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown position held ?s . ?s position held ?ans1 . ?s replaces Franz von Papen }"
        },
        "original": {
            "question": "What job did Franz von Papen replace Herman Goring",
            "query": "SELECT ?obj WHERE { wd:Q47906 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q150552 }",
            "NLQuery": "SELECT ?obj WHERE { Hermann G\u00f6ring position held ?s . ?s position held ?obj . ?s replaces Franz von Papen }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Herman Goring",
            "choppedEntity": "Q47906"
        }
    },
    {
        "chopped": {
            "question": "In which role did Franz von Papen replace ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1365 wd:Q150552 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown position held ?s . ?s position held ?ans1 . ?s replaces Franz von Papen }"
        },
        "original": {
            "question": "In which role did Franz von Papen replace Herman Goring",
            "query": "SELECT ?obj WHERE { wd:Q47906 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q150552 }",
            "NLQuery": "SELECT ?obj WHERE { Hermann G\u00f6ring position held ?s . ?s position held ?obj . ?s replaces Franz von Papen }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Herman Goring",
            "choppedEntity": "Q47906"
        }
    },
    {
        "chopped": {
            "question": "Is the developer of academic discipline, ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P101 ?X . ?X wdt:P61 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown field of work ?X . ?X discoverer or inventor ?ans1}"
        },
        "original": {
            "question": "Is the developer of academic discipline, Petr Vop\u011bnka",
            "query": "SELECT ?answer WHERE { wd:Q1888019 wdt:P101 ?X . ?X wdt:P61 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Petr Vop\u011bnka field of work ?X . ?X discoverer or inventor ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Petr Vop\u011bnka",
            "choppedEntity": "Q1888019"
        }
    },
    {
        "chopped": {
            "question": "Which is the parabolic reflector operated by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P137 ?unknown . ?sbj wdt:P31 wd:Q1087850 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj operator ?unknown . ?sbj instance of parabolic reflector } "
        },
        "original": {
            "question": "Which is the parabolic reflector operated by University of Toronto",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P137 wd:Q180865 . ?sbj wdt:P31 wd:Q1087850 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj operator University of Toronto . ?sbj instance of parabolic reflector } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "University of Toronto",
            "choppedEntity": "Q180865"
        }
    },
    {
        "chopped": {
            "question": "Which is the exploitation visa number of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2755 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown exploitation visa number ?ans1}"
        },
        "original": {
            "question": "Which is the exploitation visa number of Grease",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q267721 wdt:P2755 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Grease exploitation visa number ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Grease",
            "choppedEntity": "Q267721"
        }
    },
    {
        "chopped": {
            "question": "who is the art museum for residence of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P551 ?obj . ?obj wdt:P31 wd:Q207694 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown residence ?obj . ?obj instance of art museum } "
        },
        "original": {
            "question": "who is the art museum for residence of rembrandt",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q5598 wdt:P551 ?obj . ?obj wdt:P31 wd:Q207694 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Rembrandt residence ?obj . ?obj instance of art museum } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "rembrandt",
            "choppedEntity": "Q5598"
        }
    },
    {
        "chopped": {
            "question": "What is the LinkedIn company ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4264 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown LinkedIn company ID ?ans1}"
        },
        "original": {
            "question": "What is the LinkedIn company ID for Nanyang Technological University",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q721064 wdt:P4264 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Nanyang Technological University LinkedIn company ID ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Nanyang Technological University",
            "choppedEntity": "Q721064"
        }
    },
    {
        "chopped": {
            "question": "What was Yuri Gagarin's mission in ",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q7327 wdt:P450 ?obj . ?obj wdt:P31 ?unknown } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Yuri Gagarin astronaut mission ?obj . ?obj instance of ?unknown } "
        },
        "original": {
            "question": "What was Yuri Gagarin's mission in Vostok",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q7327 wdt:P450 ?obj . ?obj wdt:P31 wd:Q624038 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Yuri Gagarin astronaut mission ?obj . ?obj instance of Vostok } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Vostok",
            "choppedEntity": "Q624038"
        }
    },
    {
        "chopped": {
            "question": "Was George Arliss nominated for the movie  called ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1411 ?ans1 . ?ans1 wdt:P1346 wd:Q182229}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown nominated for ?ans1 . ?ans1 winner George Arliss}"
        },
        "original": {
            "question": "Was George Arliss nominated for the movie  called The Apartment",
            "query": "SELECT ?answer WHERE { wd:Q270510 wdt:P1411 ?answer . ?answer wdt:P1346 wd:Q182229}",
            "NLQuery": "SELECT ?answer WHERE { The Apartment nominated for ?answer . ?answer winner George Arliss}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Apartment",
            "choppedEntity": "Q270510"
        }
    },
    {
        "chopped": {
            "question": "Was George Arliss assigned for the motion picture called ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1411 ?ans1 . ?ans1 wdt:P1346 wd:Q182229}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown nominated for ?ans1 . ?ans1 winner George Arliss}"
        },
        "original": {
            "question": "Was George Arliss assigned for the motion picture called The Apartment",
            "query": "SELECT ?answer WHERE { wd:Q270510 wdt:P1411 ?answer . ?answer wdt:P1346 wd:Q182229}",
            "NLQuery": "SELECT ?answer WHERE { The Apartment nominated for ?answer . ?answer winner George Arliss}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Apartment",
            "choppedEntity": "Q270510"
        }
    },
    {
        "chopped": {
            "question": "In what series was Helmut Kohl's given name ",
            "query": "SELECT ?ans1 WHERE { wd:Q2518 p:P735 ?s . ?s ps:P735 ?unknown . ?s pq:P1545 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Helmut Kohl given name ?s . ?s given name ?unknown . ?s series ordinal ?ans1}"
        },
        "original": {
            "question": "In what series was Helmut Kohl's given name Michael",
            "query": "SELECT ?value WHERE { wd:Q2518 p:P735 ?s . ?s ps:P735 wd:Q4927524 . ?s pq:P1545 ?value}",
            "NLQuery": "SELECT ?value WHERE { Helmut Kohl given name ?s . ?s given name Michael . ?s series ordinal ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Michael",
            "choppedEntity": "Q4927524"
        }
    },
    {
        "chopped": {
            "question": "Do the vehicles per thousand people equal 540 in ",
            "query": "ASK WHERE { ?unknown wdt:P5167 ?obj FILTER(?obj = 540) } ",
            "NLQuery": "ASK WHERE { ?unknown vehicles per thousand people ?obj FILTER(?obj = 540) } "
        },
        "original": {
            "question": "Do the vehicles per thousand people equal 540 in Dubai",
            "query": "ASK WHERE { wd:Q612 wdt:P5167 ?obj FILTER(?obj = 540) } ",
            "NLQuery": "ASK WHERE { Dubai vehicles per thousand people ?obj FILTER(?obj = 540) } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Dubai",
            "choppedEntity": "Q612"
        }
    },
    {
        "chopped": {
            "question": "Which is the V&A artwork ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3929 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown V&A item ID ?ans1}"
        },
        "original": {
            "question": "Which is the V&A artwork ID for California Institute of the Arts",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1026827 wdt:P3929 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { California Institute of the Arts V&A item ID ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "California Institute of the Arts",
            "choppedEntity": "Q1026827"
        }
    },
    {
        "chopped": {
            "question": "What is the location of  ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P421 ?s . ?s ps:P421 ?ans1 . ?s pq:P1264 wd:Q36669 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in time zone ?s . ?s located in time zone ?ans1 . ?s valid in period daylight saving time }"
        },
        "original": {
            "question": "What is the location of  Saint-Denis",
            "query": "SELECT ?obj WHERE { wd:Q160506 p:P421 ?s . ?s ps:P421 ?obj . ?s pq:P1264 wd:Q36669 }",
            "NLQuery": "SELECT ?obj WHERE { Saint-Denis located in time zone ?s . ?s located in time zone ?obj . ?s valid in period daylight saving time }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Saint-Denis",
            "choppedEntity": "Q160506"
        }
    },
    {
        "chopped": {
            "question": "Where is ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P421 ?s . ?s ps:P421 ?ans1 . ?s pq:P1264 wd:Q36669 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in time zone ?s . ?s located in time zone ?ans1 . ?s valid in period daylight saving time }"
        },
        "original": {
            "question": "Where is Saint-Denis",
            "query": "SELECT ?obj WHERE { wd:Q160506 p:P421 ?s . ?s ps:P421 ?obj . ?s pq:P1264 wd:Q36669 }",
            "NLQuery": "SELECT ?obj WHERE { Saint-Denis located in time zone ?s . ?s located in time zone ?obj . ?s valid in period daylight saving time }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Saint-Denis",
            "choppedEntity": "Q160506"
        }
    },
    {
        "chopped": {
            "question": "What PhD advisor of Clifford Geertz has the significant works ",
            "query": "SELECT ?ans1 WHERE { wd:Q310956 wdt:P184 ?ans1 . ?ans1 wdt:P800 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Clifford Geertz doctoral advisor ?ans1 . ?ans1 notable work ?unknown}"
        },
        "original": {
            "question": "What PhD advisor of Clifford Geertz has the significant works The Structure of Social Action",
            "query": "SELECT ?answer WHERE { wd:Q310956 wdt:P184 ?answer . ?answer wdt:P800 wd:Q7767079}",
            "NLQuery": "SELECT ?answer WHERE { Clifford Geertz doctoral advisor ?answer . ?answer notable work The Structure of Social Action}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Structure of Social Action",
            "choppedEntity": "Q7767079"
        }
    },
    {
        "chopped": {
            "question": "What PhD advisor of Clifford Geertz has the critical works ",
            "query": "SELECT ?ans1 WHERE { wd:Q310956 wdt:P184 ?ans1 . ?ans1 wdt:P800 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Clifford Geertz doctoral advisor ?ans1 . ?ans1 notable work ?unknown}"
        },
        "original": {
            "question": "What PhD advisor of Clifford Geertz has the critical works The Structure of Social Action",
            "query": "SELECT ?answer WHERE { wd:Q310956 wdt:P184 ?answer . ?answer wdt:P800 wd:Q7767079}",
            "NLQuery": "SELECT ?answer WHERE { Clifford Geertz doctoral advisor ?answer . ?answer notable work The Structure of Social Action}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Structure of Social Action",
            "choppedEntity": "Q7767079"
        }
    },
    {
        "chopped": {
            "question": "Which is the rural city of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P131 ?ans1 . ?ans1 wdt:P150 wd:Q1347240}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in the administrative territorial entity ?ans1 . ?ans1 contains administrative territorial entity Kawamata}"
        },
        "original": {
            "question": "Which is the rural city of Fukushim",
            "query": "SELECT ?answer WHERE { wd:Q161176 wdt:P131 ?answer . ?answer wdt:P150 wd:Q1347240}",
            "NLQuery": "SELECT ?answer WHERE { Fukushima located in the administrative territorial entity ?answer . ?answer contains administrative territorial entity Kawamata}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Fukushim",
            "choppedEntity": "Q161176"
        }
    },
    {
        "chopped": {
            "question": "Which is the country city of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P131 ?ans1 . ?ans1 wdt:P150 wd:Q1347240}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in the administrative territorial entity ?ans1 . ?ans1 contains administrative territorial entity Kawamata}"
        },
        "original": {
            "question": "Which is the country city of Fukushim",
            "query": "SELECT ?answer WHERE { wd:Q161176 wdt:P131 ?answer . ?answer wdt:P150 wd:Q1347240}",
            "NLQuery": "SELECT ?answer WHERE { Fukushima located in the administrative territorial entity ?answer . ?answer contains administrative territorial entity Kawamata}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Fukushim",
            "choppedEntity": "Q161176"
        }
    },
    {
        "chopped": {
            "question": "What award was Joel Grey nominated for in the 33rd ",
            "query": "SELECT ?ans1 WHERE { wd:Q316641 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Joel Grey nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "What award was Joel Grey nominated for in the 33rd Tony Awards",
            "query": "SELECT ?obj WHERE { wd:Q316641 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q4635303 }",
            "NLQuery": "SELECT ?obj WHERE { Joel Grey nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 33rd Tony Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Tony Awards",
            "choppedEntity": "Q4635303"
        }
    },
    {
        "chopped": {
            "question": "What was the award that Joel Grey was nominated for in the 33rd ",
            "query": "SELECT ?ans1 WHERE { wd:Q316641 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Joel Grey nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "What was the award that Joel Grey was nominated for in the 33rd Tony Awards",
            "query": "SELECT ?obj WHERE { wd:Q316641 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q4635303 }",
            "NLQuery": "SELECT ?obj WHERE { Joel Grey nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 33rd Tony Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Tony Awards",
            "choppedEntity": "Q4635303"
        }
    },
    {
        "chopped": {
            "question": "how numerous records were held for sports occasion of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P2416 ?X . ?X wdt:P1000 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown sports discipline competed in ?X . ?X record held ?ans1}"
        },
        "original": {
            "question": "how numerous records were held for sports occasion of kamal ziani",
            "query": "SELECT ?answer WHERE { wd:Q6355549 wdt:P2416 ?X . ?X wdt:P1000 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Kamal Ziani sports discipline competed in ?X . ?X record held ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "kamal ziani",
            "choppedEntity": "Q6355549"
        }
    },
    {
        "chopped": {
            "question": "Give the first name of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P735 ?s . ?s ps:P735 ?ans1 . ?s pq:P1545 ?x FILTER(contains(?x,'1')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown given name ?s . ?s given name ?ans1 . ?s series ordinal ?x FILTER(contains(?x,'1')) }"
        },
        "original": {
            "question": "Give the first name of Gian Lorenzo Bernini",
            "query": "SELECT ?obj WHERE { wd:Q160538 p:P735 ?s . ?s ps:P735 ?obj . ?s pq:P1545 ?x FILTER(contains(?x,'1')) }",
            "NLQuery": "SELECT ?obj WHERE { Gian Lorenzo Bernini given name ?s . ?s given name ?obj . ?s series ordinal ?x FILTER(contains(?x,'1')) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Gian Lorenzo Bernini",
            "choppedEntity": "Q160538"
        }
    },
    {
        "chopped": {
            "question": "Which is the division of member of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P463 ?X . ?X wdt:P199 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown member of ?X . ?X business division ?ans1}"
        },
        "original": {
            "question": "Which is the division of member of \u00c9cole Centrale de Lille",
            "query": "SELECT ?answer WHERE { wd:Q273461 wdt:P463 ?X . ?X wdt:P199 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { \u00c9cole Centrale de Lille member of ?X . ?X business division ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "\u00c9cole Centrale de Lille",
            "choppedEntity": "Q273461"
        }
    },
    {
        "chopped": {
            "question": "How many members of the political party are there for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P102 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown member of political party ?obj }"
        },
        "original": {
            "question": "How many members of the political party are there for Matyas Rokosi",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q207631 wdt:P102 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { M\u00e1ty\u00e1s R\u00e1kosi member of political party ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Matyas Rokosi",
            "choppedEntity": "Q207631"
        }
    },
    {
        "chopped": {
            "question": "Who wrote ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1441 ?X . ?X wdt:P50 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown present in work ?X . ?X author ?ans1}"
        },
        "original": {
            "question": "Who wrote Trishira",
            "query": "SELECT ?answer WHERE { wd:Q7844041 wdt:P1441 ?X . ?X wdt:P50 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Trishira present in work ?X . ?X author ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Trishira",
            "choppedEntity": "Q7844041"
        }
    },
    {
        "chopped": {
            "question": "Who composed ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1441 ?X . ?X wdt:P50 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown present in work ?X . ?X author ?ans1}"
        },
        "original": {
            "question": "Who composed Trishira",
            "query": "SELECT ?answer WHERE { wd:Q7844041 wdt:P1441 ?X . ?X wdt:P50 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Trishira present in work ?X . ?X author ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Trishira",
            "choppedEntity": "Q7844041"
        }
    },
    {
        "chopped": {
            "question": "Who were the students of ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P1066 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown student of ?obj }"
        },
        "original": {
            "question": "Who were the students of Caspar David Friedrich",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q104884 wdt:P1066 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Caspar David Friedrich student of ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Caspar David Friedrich",
            "choppedEntity": "Q104884"
        }
    },
    {
        "chopped": {
            "question": "What degree did Katherine Dunham earn at ",
            "query": "SELECT ?ans1 WHERE { wd:Q272637 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P512 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Katherine Dunham educated at ?s . ?s educated at ?unknown . ?s academic degree ?ans1}"
        },
        "original": {
            "question": "What degree did Katherine Dunham earn at the University of Chicago",
            "query": "SELECT ?value WHERE { wd:Q272637 p:P69 ?s . ?s ps:P69 wd:Q131252 . ?s pq:P512 ?value}",
            "NLQuery": "SELECT ?value WHERE { Katherine Dunham educated at ?s . ?s educated at University of Chicago . ?s academic degree ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the University of Chicago",
            "choppedEntity": "Q131252"
        }
    },
    {
        "chopped": {
            "question": "What is Katherine Dunham's educational degree from ",
            "query": "SELECT ?ans1 WHERE { wd:Q272637 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P512 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Katherine Dunham educated at ?s . ?s educated at ?unknown . ?s academic degree ?ans1}"
        },
        "original": {
            "question": "What is Katherine Dunham's educational degree from the University of Chicago",
            "query": "SELECT ?value WHERE { wd:Q272637 p:P69 ?s . ?s ps:P69 wd:Q131252 . ?s pq:P512 ?value}",
            "NLQuery": "SELECT ?value WHERE { Katherine Dunham educated at ?s . ?s educated at University of Chicago . ?s academic degree ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the University of Chicago",
            "choppedEntity": "Q131252"
        }
    },
    {
        "chopped": {
            "question": "Mention the constituency of Rajya Sabha for enacting in ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P3403 ?obj . ?obj wdt:P31 wd:Q57156205 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown coextensive with ?obj . ?obj instance of constituency of the Rajya Sabha } "
        },
        "original": {
            "question": "Mention the constituency of Rajya Sabha for enacting in Himachal Pradesh",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q1177 wdt:P3403 ?obj . ?obj wdt:P31 wd:Q57156205 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Himachal Pradesh coextensive with ?obj . ?obj instance of constituency of the Rajya Sabha } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Himachal Pradesh",
            "choppedEntity": "Q1177"
        }
    },
    {
        "chopped": {
            "question": "Specify the voting public of Rajya Sabha for sanctioning in ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P3403 ?obj . ?obj wdt:P31 wd:Q57156205 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown coextensive with ?obj . ?obj instance of constituency of the Rajya Sabha } "
        },
        "original": {
            "question": "Specify the voting public of Rajya Sabha for sanctioning in Himachal Pradesh",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q1177 wdt:P3403 ?obj . ?obj wdt:P31 wd:Q57156205 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Himachal Pradesh coextensive with ?obj . ?obj instance of constituency of the Rajya Sabha } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Himachal Pradesh",
            "choppedEntity": "Q1177"
        }
    },
    {
        "chopped": {
            "question": "Which aircraft family is operated by ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P121 ?obj . ?obj wdt:P31 wd:Q15056993 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown item operated ?obj . ?obj instance of aircraft family } "
        },
        "original": {
            "question": "Which aircraft family is operated by EasyJet",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q191551 wdt:P121 ?obj . ?obj wdt:P31 wd:Q15056993 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { easyJet item operated ?obj . ?obj instance of aircraft family } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "EasyJet",
            "choppedEntity": "Q191551"
        }
    },
    {
        "chopped": {
            "question": "What is the country of citizenship and occupation of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P27 ?ans1 . ?unknown wdt:P106 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown country of citizenship ?ans1 . ?unknown occupation ?ans2 }"
        },
        "original": {
            "question": "What is the country of citizenship and occupation of Bruno Mars",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q1450 wdt:P27 ?ans_1 . wd:Q1450 wdt:P106 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Bruno Mars country of citizenship ?ans_1 . Bruno Mars occupation ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Bruno Mars",
            "choppedEntity": "Q1450"
        }
    },
    {
        "chopped": {
            "question": "What are the game mechanics of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4151 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown game mechanics ?ans1}"
        },
        "original": {
            "question": "What are the game mechanics of Dungeons & Dragons",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1375 wdt:P4151 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Dungeons & Dragons game mechanics ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Dungeons & Dragons",
            "choppedEntity": "Q1375"
        }
    },
    {
        "chopped": {
            "question": "Did Garth Brooks record with Big Machine Records and ",
            "query": "ASK WHERE { wd:Q216288 wdt:P264 wd:Q2902300 . wd:Q216288 wdt:P264 ?unknown }",
            "NLQuery": "ASK WHERE { Garth Brooks record label Big Machine Records . Garth Brooks record label ?unknown }"
        },
        "original": {
            "question": "Did Garth Brooks record with Big Machine Records and Decca",
            "query": "ASK WHERE { wd:Q216288 wdt:P264 wd:Q2902300 . wd:Q216288 wdt:P264 wd:Q557632 }",
            "NLQuery": "ASK WHERE { Garth Brooks record label Big Machine Records . Garth Brooks record label Decca }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Decca",
            "choppedEntity": "Q557632"
        }
    },
    {
        "chopped": {
            "question": "What's the mountain range of ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P4552 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub mountain range ?unknown }"
        },
        "original": {
            "question": "What's the mountain range of the Sayan Mountains",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P4552 wd:Q203239 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub mountain range Sayan Mountains }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Sayan Mountains",
            "choppedEntity": "Q203239"
        }
    },
    {
        "chopped": {
            "question": "In what mountain range is ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P4552 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub mountain range ?unknown }"
        },
        "original": {
            "question": "In what mountain range is the Sayan Mountains",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P4552 wd:Q203239 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub mountain range Sayan Mountains }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Sayan Mountains",
            "choppedEntity": "Q203239"
        }
    },
    {
        "chopped": {
            "question": "Which is the top-level Internet domain of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P78 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown top-level Internet domain ?ans1}"
        },
        "original": {
            "question": "Which is the top-level Internet domain of Saint-Barth\u00e9lemy",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q25362 wdt:P78 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Saint Barth\u00e9lemy top-level Internet domain ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Saint-Barth\u00e9lemy",
            "choppedEntity": "Q25362"
        }
    },
    {
        "chopped": {
            "question": "What is the Cultural heritage database in Austria ObjektID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2951 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Cultural heritage database in Austria ObjektID ?ans1}"
        },
        "original": {
            "question": "What is the Cultural heritage database in Austria ObjektID for Belvedere",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q211818 wdt:P2951 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Belvedere Cultural heritage database in Austria ObjektID ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Belvedere",
            "choppedEntity": "Q211818"
        }
    },
    {
        "chopped": {
            "question": "Which is the borough in the United Kingdom that contains the administrative territorial entity of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P150 ?obj . ?obj wdt:P31 wd:Q1006876 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown contains administrative territorial entity ?obj . ?obj instance of borough in the United Kingdom } "
        },
        "original": {
            "question": "Which is the borough in the United Kingdom that contains the administrative territorial entity of Norfolk",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q23109 wdt:P150 ?obj . ?obj wdt:P31 wd:Q1006876 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Norfolk contains administrative territorial entity ?obj . ?obj instance of borough in the United Kingdom } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Norfolk",
            "choppedEntity": "Q23109"
        }
    },
    {
        "chopped": {
            "question": "Which is bordered by the principle office of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P159 ?X . ?X wdt:P47 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown headquarters location ?X . ?X shares border with ?ans1}"
        },
        "original": {
            "question": "Which is bordered by the principle office of The Daily Manila Shimbun",
            "query": "SELECT ?answer WHERE { wd:Q50552435 wdt:P159 ?X . ?X wdt:P47 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Daily Manila Shimbun headquarters location ?X . ?X shares border with ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "The Daily Manila Shimbun",
            "choppedEntity": "Q50552435"
        }
    },
    {
        "chopped": {
            "question": "What is bordered by the principle office of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P159 ?X . ?X wdt:P47 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown headquarters location ?X . ?X shares border with ?ans1}"
        },
        "original": {
            "question": "What is bordered by the principle office of The Daily Manila Shimbun",
            "query": "SELECT ?answer WHERE { wd:Q50552435 wdt:P159 ?X . ?X wdt:P47 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Daily Manila Shimbun headquarters location ?X . ?X shares border with ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "The Daily Manila Shimbun",
            "choppedEntity": "Q50552435"
        }
    },
    {
        "chopped": {
            "question": "How many crew members work for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P1029 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown crew member ?obj }"
        },
        "original": {
            "question": "How many crew members work for Skylab",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q190776 wdt:P1029 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Skylab crew member ?obj }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Skylab",
            "choppedEntity": "Q190776"
        }
    },
    {
        "chopped": {
            "question": "Who is the seiyu of part of a series of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P179 ?X . ?X wdt:P725 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown part of the series ?X . ?X voice actor ?ans1}"
        },
        "original": {
            "question": "Who is the seiyu of part of a series of Max Jets",
            "query": "SELECT ?answer WHERE { wd:Q51164988 wdt:P179 ?X . ?X wdt:P725 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Max Jets part of the series ?X . ?X voice actor ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Max Jets",
            "choppedEntity": "Q51164988"
        }
    },
    {
        "chopped": {
            "question": "Who is bestowed by the award won from ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P166 ?X . ?X wdt:P1027 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?X . ?X conferred by ?ans1}"
        },
        "original": {
            "question": "Who is bestowed by the award won from Karmen Jelincic",
            "query": "SELECT ?answer WHERE { wd:Q43325468 wdt:P166 ?X . ?X wdt:P1027 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Karmen Jelincic award received ?X . ?X conferred by ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Karmen Jelincic",
            "choppedEntity": "Q43325468"
        }
    },
    {
        "chopped": {
            "question": "Which is the public holiday of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P832 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown public holiday ?ans1}"
        },
        "original": {
            "question": "Which is the public holiday of Georgia",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q230 wdt:P832 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Georgia public holiday ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Georgia",
            "choppedEntity": "Q230"
        }
    },
    {
        "chopped": {
            "question": "Which job did F.W. de Klerk take over from ",
            "query": "SELECT ?ans1 WHERE { wd:Q151813 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1365 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { F. W. de Klerk position held ?s . ?s position held ?ans1 . ?s replaces ?unknown }"
        },
        "original": {
            "question": "Which job did F.W. de Klerk take over from Alwyn Schelbusch",
            "query": "SELECT ?obj WHERE { wd:Q151813 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q449929 }",
            "NLQuery": "SELECT ?obj WHERE { F. W. de Klerk position held ?s . ?s position held ?obj . ?s replaces Alwyn Schlebusch }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Alwyn Schelbusch",
            "choppedEntity": "Q449929"
        }
    },
    {
        "chopped": {
            "question": "When did Jeff Bridges receive ",
            "query": "SELECT ?ans1 WHERE { wd:Q174843 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Jeff Bridges award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Jeff Bridges receive a Golden Globe Award",
            "query": "SELECT ?value WHERE { wd:Q174843 p:P166 ?s . ?s ps:P166 wd:Q1011547 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Jeff Bridges award received ?s . ?s award received Golden Globe Award . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "a Golden Globe Award",
            "choppedEntity": "Q1011547"
        }
    },
    {
        "chopped": {
            "question": "In 1258, what is ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P31 ?s . ?s ps:P31 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1258')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown instance of ?s . ?s instance of ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),'1258')) }"
        },
        "original": {
            "question": "In 1258, what is Abbasid Caliphate",
            "query": "SELECT ?obj WHERE { wd:Q12536 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1258')) }",
            "NLQuery": "SELECT ?obj WHERE { Abbasid Caliphate instance of ?s . ?s instance of ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1258')) }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Abbasid Caliphate",
            "choppedEntity": "Q12536"
        }
    },
    {
        "chopped": {
            "question": "Which is grant gotten by student of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P802 ?X . ?X wdt:P166 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown student ?X . ?X award received ?ans1}"
        },
        "original": {
            "question": "Which is grant gotten by student of Enrico Fermi",
            "query": "SELECT ?answer WHERE { wd:Q8753 wdt:P802 ?X . ?X wdt:P166 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Enrico Fermi student ?X . ?X award received ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Enrico Fermi",
            "choppedEntity": "Q8753"
        }
    },
    {
        "chopped": {
            "question": "What is in the village of Negev that has diplomatic relations with ",
            "query": "SELECT ?ans1 WHERE { wd:Q162843 wdt:P131 ?ans1 . ?ans1 wdt:P530 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Negev located in the administrative territorial entity ?ans1 . ?ans1 diplomatic relation ?unknown}"
        },
        "original": {
            "question": "What is in the village of Negev that has diplomatic relations with the Czech Republic",
            "query": "SELECT ?answer WHERE { wd:Q162843 wdt:P131 ?answer . ?answer wdt:P530 wd:Q213}",
            "NLQuery": "SELECT ?answer WHERE { Negev located in the administrative territorial entity ?answer . ?answer diplomatic relation Czech Republic}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Czech Republic",
            "choppedEntity": "Q213"
        }
    },
    {
        "chopped": {
            "question": "Who is the writer of the prequel \"",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P155 ?X . ?X wdt:P50 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown follows ?X . ?X author ?ans1}"
        },
        "original": {
            "question": "Who is the writer of the prequel \"Girls Under Pressure",
            "query": "SELECT ?answer WHERE { wd:Q5564713 wdt:P155 ?X . ?X wdt:P50 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Girls under Pressure follows ?X . ?X author ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Girls Under Pressure",
            "choppedEntity": "Q5564713"
        }
    },
    {
        "chopped": {
            "question": "What series of films was produced by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P162 ?unknown . ?sbj wdt:P31 wd:Q24856 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj producer ?unknown . ?sbj instance of film series } "
        },
        "original": {
            "question": "What series of films was produced by Mike Myers",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P162 wd:Q185724 . ?sbj wdt:P31 wd:Q24856 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj producer Mike Myers . ?sbj instance of film series } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mike Myers",
            "choppedEntity": "Q185724"
        }
    },
    {
        "chopped": {
            "question": "What is the Bien de Interes Cultural (BIC) code of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P808 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Bien de Inter\u00e9s Cultural (BIC) code ?ans1}"
        },
        "original": {
            "question": "What is the Bien de Interes Cultural (BIC) code of Cave of Altamira",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q133575 wdt:P808 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Cave of Altamira Bien de Inter\u00e9s Cultural (BIC) code ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Cave of Altamira",
            "choppedEntity": "Q133575"
        }
    },
    {
        "chopped": {
            "question": "Are Chongqing and Ulsan twinned administrative bodies of ",
            "query": "ASK WHERE { ?unknown wdt:P190 wd:Q11725 . ?unknown wdt:P190 wd:Q41278 }",
            "NLQuery": "ASK WHERE { ?unknown twinned administrative body Chongqing . ?unknown twinned administrative body Ulsan }"
        },
        "original": {
            "question": "Are Chongqing and Ulsan twinned administrative bodies of Chennai",
            "query": "ASK WHERE { wd:Q1352 wdt:P190 wd:Q11725 . wd:Q1352 wdt:P190 wd:Q41278 }",
            "NLQuery": "ASK WHERE { Chennai twinned administrative body Chongqing . Chennai twinned administrative body Ulsan }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Chennai",
            "choppedEntity": "Q1352"
        }
    },
    {
        "chopped": {
            "question": "Is it accurate to say that Chongqing and Ulsan are twinned administrative bodies of ",
            "query": "ASK WHERE { ?unknown wdt:P190 wd:Q11725 . ?unknown wdt:P190 wd:Q41278 }",
            "NLQuery": "ASK WHERE { ?unknown twinned administrative body Chongqing . ?unknown twinned administrative body Ulsan }"
        },
        "original": {
            "question": "Is it accurate to say that Chongqing and Ulsan are twinned administrative bodies of Chennai",
            "query": "ASK WHERE { wd:Q1352 wdt:P190 wd:Q11725 . wd:Q1352 wdt:P190 wd:Q41278 }",
            "NLQuery": "ASK WHERE { Chennai twinned administrative body Chongqing . Chennai twinned administrative body Ulsan }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Chennai",
            "choppedEntity": "Q1352"
        }
    },
    {
        "chopped": {
            "question": "What are the official languages of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P37 ?X . ?X wdt:P2989 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown official language ?X . ?X has grammatical case ?ans1}"
        },
        "original": {
            "question": "What are the official languages of Grand Duchy of Finland",
            "query": "SELECT ?answer WHERE { wd:Q62633 wdt:P37 ?X . ?X wdt:P2989 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Grand Duchy of Finland official language ?X . ?X has grammatical case ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Grand Duchy of Finland",
            "choppedEntity": "Q62633"
        }
    },
    {
        "chopped": {
            "question": "What are the official dialects of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P37 ?X . ?X wdt:P2989 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown official language ?X . ?X has grammatical case ?ans1}"
        },
        "original": {
            "question": "What are the official dialects of Amazing Duchy of Finland",
            "query": "SELECT ?answer WHERE { wd:Q62633 wdt:P37 ?X . ?X wdt:P2989 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Grand Duchy of Finland official language ?X . ?X has grammatical case ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Amazing Duchy of Finland",
            "choppedEntity": "Q62633"
        }
    },
    {
        "chopped": {
            "question": "Who was the creator of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1441 ?unknown . ?sbj wdt:P31 wd:Q28020127 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj present in work ?unknown . ?sbj instance of fictional humanoid } "
        },
        "original": {
            "question": "Who was the creator of Looney Tunes",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1441 wd:Q622435 . ?sbj wdt:P31 wd:Q28020127 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj present in work Looney Tunes . ?sbj instance of fictional humanoid } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Looney Tunes",
            "choppedEntity": "Q622435"
        }
    },
    {
        "chopped": {
            "question": "Who was the maker of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1441 ?unknown . ?sbj wdt:P31 wd:Q28020127 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj present in work ?unknown . ?sbj instance of fictional humanoid } "
        },
        "original": {
            "question": "Who was the maker of Looney Tunes",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1441 wd:Q622435 . ?sbj wdt:P31 wd:Q28020127 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj present in work Looney Tunes . ?sbj instance of fictional humanoid } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Looney Tunes",
            "choppedEntity": "Q622435"
        }
    },
    {
        "chopped": {
            "question": "What territory overlaps ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P3179 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown territory overlaps ?obj }"
        },
        "original": {
            "question": "What territory overlaps the Rideau Canal",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q651323 wdt:P3179 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Rideau Canal territory overlaps ?obj }"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "the Rideau Canal",
            "choppedEntity": "Q651323"
        }
    },
    {
        "chopped": {
            "question": "Which territory overlaps ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P3179 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown territory overlaps ?obj }"
        },
        "original": {
            "question": "Which territory overlaps the Rideau Canal",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q651323 wdt:P3179 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Rideau Canal territory overlaps ?obj }"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "the Rideau Canal",
            "choppedEntity": "Q651323"
        }
    },
    {
        "chopped": {
            "question": "Who is the actor from Looney Tunes that appeared in Super Stars' ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P161 ?X . ?X wdt:P1441 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cast member ?X . ?X present in work ?ans1}"
        },
        "original": {
            "question": "Who is the actor from Looney Tunes that appeared in Super Stars' Pepe Le Pew: Zee Best of Zee Best",
            "query": "SELECT ?answer WHERE { wd:Q6675710 wdt:P161 ?X . ?X wdt:P1441 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Looney Tunes Super Stars' Pepe Le Pew: Zee Best of Zee Best cast member ?X . ?X present in work ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Pepe Le Pew: Zee Best of Zee Best",
            "choppedEntity": "Q6675710"
        }
    },
    {
        "chopped": {
            "question": "Who compiled and published ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P123 ?X . ?X wdt:P98 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown publisher ?X . ?X editor ?ans1}"
        },
        "original": {
            "question": "Who compiled and published A Portrait of the Artist as a Young Man",
            "query": "SELECT ?answer WHERE { wd:Q465360 wdt:P123 ?X . ?X wdt:P98 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { A Portrait of the Artist as a Young Man publisher ?X . ?X editor ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "A Portrait of the Artist as a Young Man",
            "choppedEntity": "Q465360"
        }
    },
    {
        "chopped": {
            "question": "What city is adjacent to Essex and is ",
            "query": "SELECT ?ans1 WHERE { wd:Q23240 wdt:P47 ?ans1 . ?ans1 wdt:P150 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Essex shares border with ?ans1 . ?ans1 contains administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "What city is adjacent to Essex and is a Royal Borough of Kensington and Chelsea",
            "query": "SELECT ?answer WHERE { wd:Q23240 wdt:P47 ?answer . ?answer wdt:P150 wd:Q188801}",
            "NLQuery": "SELECT ?answer WHERE { Essex shares border with ?answer . ?answer contains administrative territorial entity Royal Borough of Kensington and Chelsea}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "a Royal Borough of Kensington and Chelsea",
            "choppedEntity": "Q188801"
        }
    },
    {
        "chopped": {
            "question": "Essex is next to ",
            "query": "SELECT ?ans1 WHERE { wd:Q23240 wdt:P47 ?ans1 . ?ans1 wdt:P150 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Essex shares border with ?ans1 . ?ans1 contains administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "Essex is next to what Royal Borough of Kensington and Chelsea",
            "query": "SELECT ?answer WHERE { wd:Q23240 wdt:P47 ?answer . ?answer wdt:P150 wd:Q188801}",
            "NLQuery": "SELECT ?answer WHERE { Essex shares border with ?answer . ?answer contains administrative territorial entity Royal Borough of Kensington and Chelsea}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "what Royal Borough of Kensington and Chelsea",
            "choppedEntity": "Q188801"
        }
    },
    {
        "chopped": {
            "question": "What do you call a citizen of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P530 ?X . ?X wdt:P463 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown diplomatic relation ?X . ?X member of ?ans1}"
        },
        "original": {
            "question": "What do you call a citizen of Belgium",
            "query": "SELECT ?answer WHERE { wd:Q31 wdt:P530 ?X . ?X wdt:P463 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Belgium diplomatic relation ?X . ?X member of ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Belgium",
            "choppedEntity": "Q31"
        }
    },
    {
        "chopped": {
            "question": "Which word is used for a citizen of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P530 ?X . ?X wdt:P463 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown diplomatic relation ?X . ?X member of ?ans1}"
        },
        "original": {
            "question": "Which word is used for a citizen of Belgium",
            "query": "SELECT ?answer WHERE { wd:Q31 wdt:P530 ?X . ?X wdt:P463 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Belgium diplomatic relation ?X . ?X member of ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Belgium",
            "choppedEntity": "Q31"
        }
    },
    {
        "chopped": {
            "question": "Which is the sub-orbital spaceflight for Astronaut ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P450 ?obj . ?obj wdt:P31 wd:Q832435 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown astronaut mission ?obj . ?obj instance of sub-orbital spaceflight } "
        },
        "original": {
            "question": "Which is the sub-orbital spaceflight for Astronaut Alan Shepard",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q174979 wdt:P450 ?obj . ?obj wdt:P31 wd:Q832435 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Alan Shepard astronaut mission ?obj . ?obj instance of sub-orbital spaceflight } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Alan Shepard",
            "choppedEntity": "Q174979"
        }
    },
    {
        "chopped": {
            "question": "Which is the sub-orbital spaceflight for Space explorer ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P450 ?obj . ?obj wdt:P31 wd:Q832435 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown astronaut mission ?obj . ?obj instance of sub-orbital spaceflight } "
        },
        "original": {
            "question": "Which is the sub-orbital spaceflight for Space explorer Alan Shepard",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q174979 wdt:P450 ?obj . ?obj wdt:P31 wd:Q832435 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Alan Shepard astronaut mission ?obj . ?obj instance of sub-orbital spaceflight } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Alan Shepard",
            "choppedEntity": "Q174979"
        }
    },
    {
        "chopped": {
            "question": "Which is the HQ location of the party of the member ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P102 ?X . ?X wdt:P159 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown member of political party ?X . ?X headquarters location ?ans1}"
        },
        "original": {
            "question": "Which is the HQ location of the party of the member Rajesh Khanna",
            "query": "SELECT ?answer WHERE { wd:Q107130 wdt:P102 ?X . ?X wdt:P159 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Rajesh Khanna member of political party ?X . ?X headquarters location ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Rajesh Khanna",
            "choppedEntity": "Q107130"
        }
    },
    {
        "chopped": {
            "question": "Which is the HQ location of the party of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P102 ?X . ?X wdt:P159 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown member of political party ?X . ?X headquarters location ?ans1}"
        },
        "original": {
            "question": "Which is the HQ location of the party of Rajesh Khanna",
            "query": "SELECT ?answer WHERE { wd:Q107130 wdt:P102 ?X . ?X wdt:P159 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Rajesh Khanna member of political party ?X . ?X headquarters location ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Rajesh Khanna",
            "choppedEntity": "Q107130"
        }
    },
    {
        "chopped": {
            "question": "How many work locations are by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P937 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub work location ?unknown }"
        },
        "original": {
            "question": "How many work locations are by Wuppertal",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P937 wd:Q2107 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub work location Wuppertal }"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Wuppertal",
            "choppedEntity": "Q2107"
        }
    },
    {
        "chopped": {
            "question": "What is the number of work locations by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P937 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub work location ?unknown }"
        },
        "original": {
            "question": "What is the number of work locations by Wuppertal",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P937 wd:Q2107 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub work location Wuppertal }"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Wuppertal",
            "choppedEntity": "Q2107"
        }
    },
    {
        "chopped": {
            "question": "Does Seoul contain administrative territorial entities Jongno District and ",
            "query": "ASK WHERE { wd:Q8684 wdt:P150 ?unknown . wd:Q8684 wdt:P150 wd:Q50349 }",
            "NLQuery": "ASK WHERE { Seoul contains administrative territorial entity ?unknown . Seoul contains administrative territorial entity Gangbuk District }"
        },
        "original": {
            "question": "Does Seoul contain administrative territorial entities Jongno District and Gangbuk District",
            "query": "ASK WHERE { wd:Q8684 wdt:P150 wd:Q36929 . wd:Q8684 wdt:P150 wd:Q50349 }",
            "NLQuery": "ASK WHERE { Seoul contains administrative territorial entity Jongno District . Seoul contains administrative territorial entity Gangbuk District }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Gangbuk District",
            "choppedEntity": "Q36929"
        }
    },
    {
        "chopped": {
            "question": "Does Seoul contain administrative territorial entities Jongno District and ",
            "query": "ASK WHERE { wd:Q8684 wdt:P150 wd:Q36929 . wd:Q8684 wdt:P150 ?unknown }",
            "NLQuery": "ASK WHERE { Seoul contains administrative territorial entity Jongno District . Seoul contains administrative territorial entity ?unknown }"
        },
        "original": {
            "question": "Does Seoul contain administrative territorial entities Jongno District and Gangbuk District",
            "query": "ASK WHERE { wd:Q8684 wdt:P150 wd:Q36929 . wd:Q8684 wdt:P150 wd:Q50349 }",
            "NLQuery": "ASK WHERE { Seoul contains administrative territorial entity Jongno District . Seoul contains administrative territorial entity Gangbuk District }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Gangbuk District",
            "choppedEntity": "Q50349"
        }
    },
    {
        "chopped": {
            "question": "Are the administrative territorial entities of Jongno District and Gangbuk District contained within ",
            "query": "ASK WHERE { ?unknown wdt:P150 wd:Q36929 . ?unknown wdt:P150 wd:Q50349 }",
            "NLQuery": "ASK WHERE { ?unknown contains administrative territorial entity Jongno District . ?unknown contains administrative territorial entity Gangbuk District }"
        },
        "original": {
            "question": "Are the administrative territorial entities of Jongno District and Gangbuk District contained within Seoul",
            "query": "ASK WHERE { wd:Q8684 wdt:P150 wd:Q36929 . wd:Q8684 wdt:P150 wd:Q50349 }",
            "NLQuery": "ASK WHERE { Seoul contains administrative territorial entity Jongno District . Seoul contains administrative territorial entity Gangbuk District }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Seoul",
            "choppedEntity": "Q8684"
        }
    },
    {
        "chopped": {
            "question": "Which is the publisher of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P123 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown publisher ?ans1}"
        },
        "original": {
            "question": "Which is the publisher of Through the Looking-Glass",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q220331 wdt:P123 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Through the Looking-Glass publisher ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Through the Looking-Glass",
            "choppedEntity": "Q220331"
        }
    },
    {
        "chopped": {
            "question": "What countries are within ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P150 ?obj . ?obj wdt:P31 wd:Q6256 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown contains administrative territorial entity ?obj . ?obj instance of country } "
        },
        "original": {
            "question": "What countries are within the European Union",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q458 wdt:P150 ?obj . ?obj wdt:P31 wd:Q6256 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { European Union contains administrative territorial entity ?obj . ?obj instance of country } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the European Union",
            "choppedEntity": "Q458"
        }
    },
    {
        "chopped": {
            "question": "What nations are inside ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P150 ?obj . ?obj wdt:P31 wd:Q6256 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown contains administrative territorial entity ?obj . ?obj instance of country } "
        },
        "original": {
            "question": "What nations are inside the European Union",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q458 wdt:P150 ?obj . ?obj wdt:P31 wd:Q6256 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { European Union contains administrative territorial entity ?obj . ?obj instance of country } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the European Union",
            "choppedEntity": "Q458"
        }
    },
    {
        "chopped": {
            "question": "Which is the Cycling Quotient male cyclist ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1541 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown CQ Ranking male cyclist ID ?ans1}"
        },
        "original": {
            "question": "Which is the Cycling Quotient male cyclist ID of Chris Froome",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q319591 wdt:P1541 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Chris Froome CQ Ranking male cyclist ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Chris Froome",
            "choppedEntity": "Q319591"
        }
    },
    {
        "chopped": {
            "question": "What position does Giorgio Vasari hold at ",
            "query": "SELECT ?ans1 WHERE { wd:Q128027 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P108 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Giorgio Vasari position held ?s . ?s position held ?ans1 . ?s employer ?unknown }"
        },
        "original": {
            "question": "What position does Giorgio Vasari hold at House of Medici",
            "query": "SELECT ?obj WHERE { wd:Q128027 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P108 wd:Q170022 }",
            "NLQuery": "SELECT ?obj WHERE { Giorgio Vasari position held ?s . ?s position held ?obj . ?s employer House of Medici }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "House of Medici",
            "choppedEntity": "Q170022"
        }
    },
    {
        "chopped": {
            "question": "Giorgio Vasari holds what position in ",
            "query": "SELECT ?ans1 WHERE { wd:Q128027 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P108 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Giorgio Vasari position held ?s . ?s position held ?ans1 . ?s employer ?unknown }"
        },
        "original": {
            "question": "Giorgio Vasari holds what position in the House of Medici",
            "query": "SELECT ?obj WHERE { wd:Q128027 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P108 wd:Q170022 }",
            "NLQuery": "SELECT ?obj WHERE { Giorgio Vasari position held ?s . ?s position held ?obj . ?s employer House of Medici }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the House of Medici",
            "choppedEntity": "Q170022"
        }
    },
    {
        "chopped": {
            "question": "Which is the Art Museum of Estonia artist ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4563 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Art Museum of Estonia artist ID ?ans1}"
        },
        "original": {
            "question": "Which is the Art Museum of Estonia artist ID for Egon Schiele",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q44032 wdt:P4563 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Egon Schiele Art Museum of Estonia artist ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Egon Schiele",
            "choppedEntity": "Q44032"
        }
    },
    {
        "chopped": {
            "question": "On September 11, 1991, how many people populated ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1991')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),'1991')) }"
        },
        "original": {
            "question": "On September 11, 1991, how many people populated Mashhad",
            "query": "SELECT ?obj WHERE { wd:Q121157 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1991')) }",
            "NLQuery": "SELECT ?obj WHERE { Mashhad population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1991')) }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Mashhad",
            "choppedEntity": "Q121157"
        }
    },
    {
        "chopped": {
            "question": "Which is the administrative territorial entity for the territory claimed by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1336 ?unknown . ?sbj wdt:P31 wd:Q56061 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj territory claimed by ?unknown . ?sbj instance of administrative territorial entity } "
        },
        "original": {
            "question": "Which is the administrative territorial entity for the territory claimed by the German Democratic Republic",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1336 wd:Q16957 . ?sbj wdt:P31 wd:Q56061 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj territory claimed by German Democratic Republic . ?sbj instance of administrative territorial entity } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the German Democratic Republic",
            "choppedEntity": "Q16957"
        }
    },
    {
        "chopped": {
            "question": "Which is the administrative territorial entity for the territory claimed via ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1336 ?unknown . ?sbj wdt:P31 wd:Q56061 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj territory claimed by ?unknown . ?sbj instance of administrative territorial entity } "
        },
        "original": {
            "question": "Which is the administrative territorial entity for the territory claimed via the German Democratic Republic",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1336 wd:Q16957 . ?sbj wdt:P31 wd:Q56061 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj territory claimed by German Democratic Republic . ?sbj instance of administrative territorial entity } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the German Democratic Republic",
            "choppedEntity": "Q16957"
        }
    },
    {
        "chopped": {
            "question": "what is the place of origin of the executive power headed by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P495 ?X . ?X wdt:P6 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country of origin ?X . ?X head of government ?ans1}"
        },
        "original": {
            "question": "what is the place of origin of the executive power headed by Led Zappelin",
            "query": "SELECT ?answer WHERE { wd:Q2331 wdt:P495 ?X . ?X wdt:P6 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Led Zeppelin country of origin ?X . ?X head of government ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Led Zappelin",
            "choppedEntity": "Q2331"
        }
    },
    {
        "chopped": {
            "question": "Where is ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P119 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj place of burial ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Where is the Taj Mahal",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P119 wd:Q9141 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj place of burial Taj Mahal . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "the Taj Mahal",
            "choppedEntity": "Q9141"
        }
    },
    {
        "chopped": {
            "question": "When did Gunter Grass recieved the award of ",
            "query": "SELECT ?ans1 WHERE { wd:Q6538 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { G\u00fcnter Grass award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Gunter Grass recieved the award of Princess of Asturias Literary Prize",
            "query": "SELECT ?value WHERE { wd:Q6538 p:P166 ?s . ?s ps:P166 wd:Q3332454 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { G\u00fcnter Grass award received ?s . ?s award received Prince of Asturias Literary Prize . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Princess of Asturias Literary Prize",
            "choppedEntity": "Q3332454"
        }
    },
    {
        "chopped": {
            "question": "What is the source of material of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P2647 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 source of material ?unknown}"
        },
        "original": {
            "question": "What is the source of material of Central Africa",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P2647 wd:Q27433}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer source of material Central Africa}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Central Africa",
            "choppedEntity": "Q27433"
        }
    },
    {
        "chopped": {
            "question": "What is the Swedish Gravestone ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P5259 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Swedish Gravestone ID ?ans1}"
        },
        "original": {
            "question": "What is the Swedish Gravestone ID of Alfred Nobel",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q23810 wdt:P5259 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Alfred Nobel Swedish Gravestone ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Alfred Nobel",
            "choppedEntity": "Q23810"
        }
    },
    {
        "chopped": {
            "question": "When did the Republic of Bashkortostan cease to be under the administrative territorial entity of ",
            "query": "SELECT ?ans1 WHERE { wd:Q5710 p:P131 ?s . ?s ps:P131 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Republic of Bashkortostan located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did the Republic of Bashkortostan cease to be under the administrative territorial entity of the Russian Soviet Federative Socialist Republic",
            "query": "SELECT ?value WHERE { wd:Q5710 p:P131 ?s . ?s ps:P131 wd:Q2184 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Republic of Bashkortostan located in the administrative territorial entity ?s . ?s located in the administrative territorial entity Russian Soviet Federative Socialist Republic . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Russian Soviet Federative Socialist Republic",
            "choppedEntity": "Q2184"
        }
    },
    {
        "chopped": {
            "question": "When did the Republic of Bashkortostan terminate to be beneath the regulatory regional substance of ",
            "query": "SELECT ?ans1 WHERE { wd:Q5710 p:P131 ?s . ?s ps:P131 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Republic of Bashkortostan located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did the Republic of Bashkortostan terminate to be beneath the regulatory regional substance of the Russian Soviet Federative Communist Republic",
            "query": "SELECT ?value WHERE { wd:Q5710 p:P131 ?s . ?s ps:P131 wd:Q2184 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Republic of Bashkortostan located in the administrative territorial entity ?s . ?s located in the administrative territorial entity Russian Soviet Federative Socialist Republic . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Russian Soviet Federative Communist Republic",
            "choppedEntity": "Q2184"
        }
    },
    {
        "chopped": {
            "question": "What is the Open Media Database ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3302 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Open Media Database film ID ?ans1}"
        },
        "original": {
            "question": "What is the Open Media Database ID of Mad Max",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q248775 wdt:P3302 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Mad Max Open Media Database film ID ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Mad Max",
            "choppedEntity": "Q248775"
        }
    },
    {
        "chopped": {
            "question": "What is depicted in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P180 ?X . ?X wdt:P150 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown depicts ?X . ?X contains administrative territorial entity ?ans1}"
        },
        "original": {
            "question": "What is depicted in the Garden of Guangzhou",
            "query": "SELECT ?answer WHERE { wd:Q50818549 wdt:P180 ?X . ?X wdt:P150 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Garden in Guangzhou depicts ?X . ?X contains administrative territorial entity ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Garden of Guangzhou",
            "choppedEntity": "Q50818549"
        }
    },
    {
        "chopped": {
            "question": "Which are the papers of the narrative set in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P840 ?X . ?X wdt:P485 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown narrative location ?X . ?X archives at ?ans1}"
        },
        "original": {
            "question": "Which are the papers of the narrative set in The Grapes of Wrath",
            "query": "SELECT ?answer WHERE { wd:Q215983 wdt:P840 ?X . ?X wdt:P485 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Grapes of Wrath narrative location ?X . ?X archives at ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Grapes of Wrath",
            "choppedEntity": "Q215983"
        }
    },
    {
        "chopped": {
            "question": "What are the narrative papers set out in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P840 ?X . ?X wdt:P485 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown narrative location ?X . ?X archives at ?ans1}"
        },
        "original": {
            "question": "What are the narrative papers set out in The Grapes of Wrath",
            "query": "SELECT ?answer WHERE { wd:Q215983 wdt:P840 ?X . ?X wdt:P485 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Grapes of Wrath narrative location ?X . ?X archives at ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Grapes of Wrath",
            "choppedEntity": "Q215983"
        }
    },
    {
        "chopped": {
            "question": "Historically, what is the capital and country where you can find ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P36 ?unknown . ?sbj wdt:P31 wd:Q3024240 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj capital ?unknown . ?sbj instance of historical country } "
        },
        "original": {
            "question": "Historically, what is the capital and country where you can find Tenochtitlan",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P36 wd:Q13695 . ?sbj wdt:P31 wd:Q3024240 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj capital Tenochtitlan . ?sbj instance of historical country } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Tenochtitlan",
            "choppedEntity": "Q13695"
        }
    },
    {
        "chopped": {
            "question": "Generally, what is the capital and nation where you'll discover ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P36 ?unknown . ?sbj wdt:P31 wd:Q3024240 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj capital ?unknown . ?sbj instance of historical country } "
        },
        "original": {
            "question": "Generally, what is the capital and nation where you'll discover Tenochtitlan",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P36 wd:Q13695 . ?sbj wdt:P31 wd:Q3024240 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj capital Tenochtitlan . ?sbj instance of historical country } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Tenochtitlan",
            "choppedEntity": "Q13695"
        }
    },
    {
        "chopped": {
            "question": "Was there a remake of the show Doctor Who that was also called ",
            "query": "ASK WHERE { ?unknown wdt:P2512 ?unknown }",
            "NLQuery": "ASK WHERE { ?unknown series spin-off ?unknown }"
        },
        "original": {
            "question": "Was there a remake of the show Doctor Who that was also called Doctor Who",
            "query": "ASK WHERE { wd:Q34316 wdt:P2512 wd:Q34316 }",
            "NLQuery": "ASK WHERE { Doctor Who series spin-off Doctor Who }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Doctor Who",
            "choppedEntity": "Q34316"
        }
    },
    {
        "chopped": {
            "question": "Was Doctor Who remade and also called ",
            "query": "ASK WHERE { ?unknown wdt:P2512 ?unknown }",
            "NLQuery": "ASK WHERE { ?unknown series spin-off ?unknown }"
        },
        "original": {
            "question": "Was Doctor Who remade and also called Doctor Who",
            "query": "ASK WHERE { wd:Q34316 wdt:P2512 wd:Q34316 }",
            "NLQuery": "ASK WHERE { Doctor Who series spin-off Doctor Who }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Doctor Who",
            "choppedEntity": "Q34316"
        }
    },
    {
        "chopped": {
            "question": "What is Gamebase64 identifier for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4917 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Gamebase64 identifier ?ans1}"
        },
        "original": {
            "question": "What is Gamebase64 identifier for Donkey Kong",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q12384 wdt:P4917 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Donkey Kong Gamebase64 identifier ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Donkey Kong",
            "choppedEntity": "Q12384"
        }
    },
    {
        "chopped": {
            "question": "How many participants were part of ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P1344 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub participant in ?unknown }"
        },
        "original": {
            "question": "How many participants were part of the Spanish Civil War",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P1344 wd:Q10859 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub participant in Spanish Civil War }"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the Spanish Civil War",
            "choppedEntity": "Q10859"
        }
    },
    {
        "chopped": {
            "question": "Who is the seiyu of the successful film ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P155 ?X . ?X wdt:P725 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown follows ?X . ?X voice actor ?ans1}"
        },
        "original": {
            "question": "Who is the seiyu of the successful film Planes: Fire & Rescue",
            "query": "SELECT ?answer WHERE { wd:Q15631322 wdt:P155 ?X . ?X wdt:P725 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Planes: Fire & Rescue follows ?X . ?X voice actor ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Planes: Fire & Rescue",
            "choppedEntity": "Q15631322"
        }
    },
    {
        "chopped": {
            "question": "what is the name of the seiyu of the successful film ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P155 ?X . ?X wdt:P725 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown follows ?X . ?X voice actor ?ans1}"
        },
        "original": {
            "question": "what is the name of the seiyu of the successful film Planes: Fire & Rescue",
            "query": "SELECT ?answer WHERE { wd:Q15631322 wdt:P155 ?X . ?X wdt:P725 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Planes: Fire & Rescue follows ?X . ?X voice actor ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Planes: Fire & Rescue",
            "choppedEntity": "Q15631322"
        }
    },
    {
        "chopped": {
            "question": "how many authors have there been for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P50 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown author ?obj }"
        },
        "original": {
            "question": "how many authors have there been for the new testament",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q18813 wdt:P50 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { New Testament author ?obj }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the new testament",
            "choppedEntity": "Q18813"
        }
    },
    {
        "chopped": {
            "question": "What is the admission rate for ",
            "query": "ASK WHERE { ?unknown wdt:P5822 ?obj FILTER(?obj > 0.4192) } ",
            "NLQuery": "ASK WHERE { ?unknown admission rate ?obj FILTER(?obj > 0.4192) } "
        },
        "original": {
            "question": "What is the admission rate for the University of British Columbia",
            "query": "ASK WHERE { wd:Q391028 wdt:P5822 ?obj FILTER(?obj > 0.4192) } ",
            "NLQuery": "ASK WHERE { University of British Columbia admission rate ?obj FILTER(?obj > 0.4192) } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the University of British Columbia",
            "choppedEntity": "Q391028"
        }
    },
    {
        "chopped": {
            "question": "Where is the sculptors of  male ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P170 ?ans1 . ?ans1 wdt:P21 wd:Q6581097}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown creator ?ans1 . ?ans1 sex or gender male}"
        },
        "original": {
            "question": "Where is the sculptors of  male Smurfs",
            "query": "SELECT ?answer WHERE { wd:Q11221 wdt:P170 ?answer . ?answer wdt:P21 wd:Q6581097}",
            "NLQuery": "SELECT ?answer WHERE { The Smurfs creator ?answer . ?answer sex or gender male}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Smurfs",
            "choppedEntity": "Q11221"
        }
    },
    {
        "chopped": {
            "question": "When was Jacobus Henricus van 't Hoff awarded ",
            "query": "SELECT ?ans1 WHERE { wd:Q102822 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Jacobus Henricus van 't Hoff award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was Jacobus Henricus van 't Hoff awarded the Helmoltzh Medal",
            "query": "SELECT ?value WHERE { wd:Q102822 p:P166 ?s . ?s ps:P166 wd:Q1562616 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Jacobus Henricus van 't Hoff award received ?s . ?s award received Helmholtz Medal . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Helmoltzh Medal",
            "choppedEntity": "Q1562616"
        }
    },
    {
        "chopped": {
            "question": "What was William Styron nominated for for his work in ",
            "query": "SELECT ?ans1 WHERE { wd:Q245257 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { William Styron nominated for ?s . ?s nominated for ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "What was William Styron nominated for for his work in Lie Down in Darkness",
            "query": "SELECT ?obj WHERE { wd:Q245257 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q4003902 }",
            "NLQuery": "SELECT ?obj WHERE { William Styron nominated for ?s . ?s nominated for ?obj . ?s for work Lie Down in Darkness }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Lie Down in Darkness",
            "choppedEntity": "Q4003902"
        }
    },
    {
        "chopped": {
            "question": "In which award category was William Styron nominated for his work in ",
            "query": "SELECT ?ans1 WHERE { wd:Q245257 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { William Styron nominated for ?s . ?s nominated for ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "In which award category was William Styron nominated for his work in Lie Down in Darkness",
            "query": "SELECT ?obj WHERE { wd:Q245257 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q4003902 }",
            "NLQuery": "SELECT ?obj WHERE { William Styron nominated for ?s . ?s nominated for ?obj . ?s for work Lie Down in Darkness }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Lie Down in Darkness",
            "choppedEntity": "Q4003902"
        }
    },
    {
        "chopped": {
            "question": "Tell me the number of points Peter Schmeichel has received as a member of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q182314 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P580 ?ans1 . ?s pq:P1351 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Peter Schmeichel member of sports team ?s . ?s member of sports team ?unknown . ?s start time ?ans1 . ?s number of points/goals/set scored ?ans2 }"
        },
        "original": {
            "question": "Tell me the number of points Peter Schmeichel has received as a member of the Manchester City F.C.",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q182314 p:P54 ?s . ?s ps:P54 wd:Q50602 . ?s pq:P580 ?value1 . ?s pq:P1351 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Peter Schmeichel member of sports team ?s . ?s member of sports team Manchester City F.C. . ?s start time ?value1 . ?s number of points/goals/set scored ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Manchester City F.C.",
            "choppedEntity": "Q50602"
        }
    },
    {
        "chopped": {
            "question": "What law subsides over ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P355 ?unknown . ?sbj wdt:P31 wd:Q1896989 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj subsidiary ?unknown . ?sbj instance of subject of international law } "
        },
        "original": {
            "question": "What law subsides over the United Nations General Assembly",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P355 wd:Q47423 . ?sbj wdt:P31 wd:Q1896989 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj subsidiary United Nations General Assembly . ?sbj instance of subject of international law } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the United Nations General Assembly",
            "choppedEntity": "Q47423"
        }
    },
    {
        "chopped": {
            "question": "When Demi Moore got married to ",
            "query": "SELECT ?ans1 WHERE { wd:Q43044 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Demi Moore spouse ?s . ?s spouse ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When Demi Moore got married to Bruce Willis",
            "query": "SELECT ?value WHERE { wd:Q43044 p:P26 ?s . ?s ps:P26 wd:Q2680 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Demi Moore spouse ?s . ?s spouse Bruce Willis . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Bruce Willis",
            "choppedEntity": "Q2680"
        }
    },
    {
        "chopped": {
            "question": "What is the wedding date for Bruce Willis and ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P26 ?s . ?s ps:P26 wd:Q2680 . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown spouse ?s . ?s spouse Bruce Willis . ?s start time ?ans1}"
        },
        "original": {
            "question": "What is the wedding date for Bruce Willis and Demi Moore",
            "query": "SELECT ?value WHERE { wd:Q43044 p:P26 ?s . ?s ps:P26 wd:Q2680 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Demi Moore spouse ?s . ?s spouse Bruce Willis . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Demi Moore",
            "choppedEntity": "Q43044"
        }
    },
    {
        "chopped": {
            "question": "What is Gene Hackman's nomination area for the 43rd ",
            "query": "SELECT ?ans1 WHERE { wd:Q150943 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Gene Hackman nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "What is Gene Hackman's nomination area for the 43rd Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q150943 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q937162 }",
            "NLQuery": "SELECT ?obj WHERE { Gene Hackman nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 43rd Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q937162"
        }
    },
    {
        "chopped": {
            "question": "What was the university attended by Jad Abumrad while he was a member of ",
            "query": "SELECT ?ans1 WHERE { wd:Q2856132 wdt:P69 ?ans1 . ?ans1 wdt:P463 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Jad Abumrad educated at ?ans1 . ?ans1 member of ?unknown}"
        },
        "original": {
            "question": "What was the university attended by Jad Abumrad while he was a member of the Center for Research Libraries",
            "query": "SELECT ?answer WHERE { wd:Q2856132 wdt:P69 ?answer . ?answer wdt:P463 wd:Q5059850}",
            "NLQuery": "SELECT ?answer WHERE { Jad Abumrad educated at ?answer . ?answer member of Center for Research Libraries}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Center for Research Libraries",
            "choppedEntity": "Q5059850"
        }
    },
    {
        "chopped": {
            "question": "What used to be the university attended by using Jad Abumrad whilst he was a member of ",
            "query": "SELECT ?ans1 WHERE { wd:Q2856132 wdt:P69 ?ans1 . ?ans1 wdt:P463 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Jad Abumrad educated at ?ans1 . ?ans1 member of ?unknown}"
        },
        "original": {
            "question": "What used to be the university attended by using Jad Abumrad whilst he was a member of the Center for Research Libraries",
            "query": "SELECT ?answer WHERE { wd:Q2856132 wdt:P69 ?answer . ?answer wdt:P463 wd:Q5059850}",
            "NLQuery": "SELECT ?answer WHERE { Jad Abumrad educated at ?answer . ?answer member of Center for Research Libraries}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Center for Research Libraries",
            "choppedEntity": "Q5059850"
        }
    },
    {
        "chopped": {
            "question": "Who is starring in the film series of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P179 ?X . ?X wdt:P161 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown part of the series ?X . ?X cast member ?ans1}"
        },
        "original": {
            "question": "Who is starring in the film series of Souls of the Departed",
            "query": "SELECT ?answer WHERE { wd:Q23022717 wdt:P179 ?X . ?X wdt:P161 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Souls of the Departed part of the series ?X . ?X cast member ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Souls of the Departed",
            "choppedEntity": "Q23022717"
        }
    },
    {
        "chopped": {
            "question": "Which main actor is featured in the film series of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P179 ?X . ?X wdt:P161 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown part of the series ?X . ?X cast member ?ans1}"
        },
        "original": {
            "question": "Which main actor is featured in the film series of Souls of the Departed",
            "query": "SELECT ?answer WHERE { wd:Q23022717 wdt:P179 ?X . ?X wdt:P161 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Souls of the Departed part of the series ?X . ?X cast member ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Souls of the Departed",
            "choppedEntity": "Q23022717"
        }
    },
    {
        "chopped": {
            "question": "When did Maria Tallchief receive ",
            "query": "SELECT ?ans1 WHERE { wd:Q264400 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Maria Tallchief award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Maria Tallchief receive the Capezio Dance Award",
            "query": "SELECT ?value WHERE { wd:Q264400 p:P166 ?s . ?s ps:P166 wd:Q29032885 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Maria Tallchief award received ?s . ?s award received Capezio Dance Award . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Capezio Dance Award",
            "choppedEntity": "Q29032885"
        }
    },
    {
        "chopped": {
            "question": "When did Adunis win ",
            "query": "SELECT ?ans1 WHERE { wd:Q380787 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Adunis award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Adunis win the Janus Pannonius International Poetry Prize",
            "query": "SELECT ?value WHERE { wd:Q380787 p:P166 ?s . ?s ps:P166 wd:Q17550770 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Adunis award received ?s . ?s award received Janus Pannonius International Poetry Prize . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Janus Pannonius International Poetry Prize",
            "choppedEntity": "Q17550770"
        }
    },
    {
        "chopped": {
            "question": "At what time did Adunis win ",
            "query": "SELECT ?ans1 WHERE { wd:Q380787 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Adunis award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "At what time did Adunis win the Janus Pannonius International Poetry Prize",
            "query": "SELECT ?value WHERE { wd:Q380787 p:P166 ?s . ?s ps:P166 wd:Q17550770 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Adunis award received ?s . ?s award received Janus Pannonius International Poetry Prize . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Janus Pannonius International Poetry Prize",
            "choppedEntity": "Q17550770"
        }
    },
    {
        "chopped": {
            "question": "What degree did Bashar al-Assad receive from ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q44329 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P812 ?ans1 . ?s pq:P512 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Bashar al-Assad educated at ?s . ?s educated at ?unknown . ?s academic major ?ans1 . ?s academic degree ?ans2 }"
        },
        "original": {
            "question": "What degree did Bashar al-Assad receive from Damascus University",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q44329 p:P69 ?s . ?s ps:P69 wd:Q1351317 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Bashar al-Assad educated at ?s . ?s educated at Damascus University . ?s academic major ?value1 . ?s academic degree ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Damascus University",
            "choppedEntity": "Q1351317"
        }
    },
    {
        "chopped": {
            "question": "What is the location of the ghost town of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P840 ?obj . ?obj wdt:P31 wd:Q74047 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown narrative location ?obj . ?obj instance of ghost town } "
        },
        "original": {
            "question": "What is the location of the ghost town of South Park",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q16538 wdt:P840 ?obj . ?obj wdt:P31 wd:Q74047 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { South Park narrative location ?obj . ?obj instance of ghost town } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "South Park",
            "choppedEntity": "Q16538"
        }
    },
    {
        "chopped": {
            "question": "What steel bridge was designed by the architect ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P84 ?unknown . ?sbj wdt:P31 wd:Q12042110 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj architect ?unknown . ?sbj instance of steel bridge } "
        },
        "original": {
            "question": "What steel bridge was designed by the architect Isambard Kingdom Brunel",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P84 wd:Q207380 . ?sbj wdt:P31 wd:Q12042110 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj architect Isambard Kingdom Brunel . ?sbj instance of steel bridge } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Isambard Kingdom Brunel",
            "choppedEntity": "Q207380"
        }
    },
    {
        "chopped": {
            "question": "How many countries are in ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P17 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown country ?obj }"
        },
        "original": {
            "question": "How many countries are in Translyvania",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q39473 wdt:P17 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Transylvania country ?obj }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Translyvania",
            "choppedEntity": "Q39473"
        }
    },
    {
        "chopped": {
            "question": "What is the number of countries in ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P17 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown country ?obj }"
        },
        "original": {
            "question": "What is the number of countries in Transylvania",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q39473 wdt:P17 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Transylvania country ?obj }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Transylvania",
            "choppedEntity": "Q39473"
        }
    },
    {
        "chopped": {
            "question": "Who is the telescope operator for ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P137 ?unknown . ?sbj wdt:P31 wd:Q17004698 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj operator ?unknown . ?sbj instance of astronomical interferometer } "
        },
        "original": {
            "question": "Who is the telescope operator for California Institute of Technology",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P137 wd:Q161562 . ?sbj wdt:P31 wd:Q17004698 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj operator California Institute of Technology . ?sbj instance of astronomical interferometer } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "California Institute of Technology",
            "choppedEntity": "Q161562"
        }
    },
    {
        "chopped": {
            "question": "Which is the noble title of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P97 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown noble title ?ans1}"
        },
        "original": {
            "question": "Which is the noble title of Alexander the Great",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q8409 wdt:P97 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Alexander the Great noble title ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Alexander the Great",
            "choppedEntity": "Q8409"
        }
    },
    {
        "chopped": {
            "question": "Which is conferred by ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P1027 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 conferred by ?unknown}"
        },
        "original": {
            "question": "Which is conferred by WWE",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P1027 wd:Q35339}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer conferred by WWE}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "WWE",
            "choppedEntity": "Q35339"
        }
    },
    {
        "chopped": {
            "question": "Who is the writer of the remake of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P144 ?X . ?X wdt:P50 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown based on ?X . ?X author ?ans1}"
        },
        "original": {
            "question": "Who is the writer of the remake of Lake in the Lake",
            "query": "SELECT ?answer WHERE { wd:Q1884921 wdt:P144 ?X . ?X wdt:P50 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Lady in the Lake based on ?X . ?X author ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Lake in the Lake",
            "choppedEntity": "Q1884921"
        }
    },
    {
        "chopped": {
            "question": "Who is the author of the remake of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P144 ?X . ?X wdt:P50 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown based on ?X . ?X author ?ans1}"
        },
        "original": {
            "question": "Who is the author of the remake of Lake within the Lake",
            "query": "SELECT ?answer WHERE { wd:Q1884921 wdt:P144 ?X . ?X wdt:P50 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Lady in the Lake based on ?X . ?X author ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Lake within the Lake",
            "choppedEntity": "Q1884921"
        }
    },
    {
        "chopped": {
            "question": "Who founded the video game publisher of the game ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P123 ?X . ?X wdt:P112 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown publisher ?X . ?X founded by ?ans1}"
        },
        "original": {
            "question": "Who founded the video game publisher of the game Inca",
            "query": "SELECT ?answer WHERE { wd:Q3797547 wdt:P123 ?X . ?X wdt:P112 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Inca publisher ?X . ?X founded by ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Inca",
            "choppedEntity": "Q3797547"
        }
    },
    {
        "chopped": {
            "question": "Who established the video diversion distributer of the amusement ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P123 ?X . ?X wdt:P112 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown publisher ?X . ?X founded by ?ans1}"
        },
        "original": {
            "question": "Who established the video diversion distributer of the amusement Inca",
            "query": "SELECT ?answer WHERE { wd:Q3797547 wdt:P123 ?X . ?X wdt:P112 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Inca publisher ?X . ?X founded by ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Inca",
            "choppedEntity": "Q3797547"
        }
    },
    {
        "chopped": {
            "question": "What is the name of the organization that begins with K, whose leader is named ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3238445 . ?ans1 wdt:P488 ?unknown . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), 'k')) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of security agency . ?ans1 chairperson ?unknown . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), 'k')) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is the name of the organization that begins with K, whose leader is named Yuri Andropov",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3238445 . ?sbj wdt:P488 wd:Q44071 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of security agency . ?sbj chairperson Yuri Andropov . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Yuri Andropov",
            "choppedEntity": "Q44071"
        }
    },
    {
        "chopped": {
            "question": "What is the name of the association that starts with K, whose pioneer is named ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3238445 . ?ans1 wdt:P488 ?unknown . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), 'k')) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of security agency . ?ans1 chairperson ?unknown . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), 'k')) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is the name of the association that starts with K, whose pioneer is named Yuri Andropov",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3238445 . ?sbj wdt:P488 wd:Q44071 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of security agency . ?sbj chairperson Yuri Andropov . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Yuri Andropov",
            "choppedEntity": "Q44071"
        }
    },
    {
        "chopped": {
            "question": "Who is the architect they used for ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P84 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown architect ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who is the architect they used for the White House",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q35525 wdt:P84 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { White House architect ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "the White House",
            "choppedEntity": "Q35525"
        }
    },
    {
        "chopped": {
            "question": "Who is the planner they utilized for ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P84 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown architect ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who is the planner they utilized for the White House",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q35525 wdt:P84 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { White House architect ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the White House",
            "choppedEntity": "Q35525"
        }
    },
    {
        "chopped": {
            "question": "What is Czech Street ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4533 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Czech street ID ?ans1}"
        },
        "original": {
            "question": "What is Czech Street ID of Charles Bridge",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q204871 wdt:P4533 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Charles Bridge Czech street ID ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Charles Bridge",
            "choppedEntity": "Q204871"
        }
    },
    {
        "chopped": {
            "question": "According to the census, what is the population of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P459 wd:Q39825 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown population ?s . ?s population ?ans1 . ?s determination method census }"
        },
        "original": {
            "question": "According to the census, what is the population of Ky\u014dto Prefecture",
            "query": "SELECT ?obj WHERE { wd:Q120730 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q39825 }",
            "NLQuery": "SELECT ?obj WHERE { Ky\u014dto Prefecture population ?s . ?s population ?obj . ?s determination method census }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Ky\u014dto Prefecture",
            "choppedEntity": "Q120730"
        }
    },
    {
        "chopped": {
            "question": "Is Ziauddin Yousafzai a father of ",
            "query": "ASK WHERE { ?unknown wdt:P22 wd:Q8071389 }",
            "NLQuery": "ASK WHERE { ?unknown father Ziauddin Yousafzai }"
        },
        "original": {
            "question": "Is Ziauddin Yousafzai a father of Malala Yousafzai",
            "query": "ASK WHERE { wd:Q32732 wdt:P22 wd:Q8071389 }",
            "NLQuery": "ASK WHERE { Malala Yousafzai father Ziauddin Yousafzai }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Malala Yousafzai",
            "choppedEntity": "Q32732"
        }
    },
    {
        "chopped": {
            "question": "Was Constantin Stanislavski born in ",
            "query": "SELECT ?ans1 WHERE { wd:Q49484 p:P19 ?s . ?s ps:P19 ?unknown . ?s pq:P17 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Constantin Stanislavski place of birth ?s . ?s place of birth ?unknown . ?s country ?ans1}"
        },
        "original": {
            "question": "Was Constantin Stanislavski born in Moscow",
            "query": "SELECT ?value WHERE { wd:Q49484 p:P19 ?s . ?s ps:P19 wd:Q649 . ?s pq:P17 ?value}",
            "NLQuery": "SELECT ?value WHERE { Constantin Stanislavski place of birth ?s . ?s place of birth Moscow . ?s country ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Moscow",
            "choppedEntity": "Q649"
        }
    },
    {
        "chopped": {
            "question": "Is Constantin Stanislavski born in ",
            "query": "SELECT ?ans1 WHERE { wd:Q49484 p:P19 ?s . ?s ps:P19 ?unknown . ?s pq:P17 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Constantin Stanislavski place of birth ?s . ?s place of birth ?unknown . ?s country ?ans1}"
        },
        "original": {
            "question": "Is Constantin Stanislavski born in Moscow",
            "query": "SELECT ?value WHERE { wd:Q49484 p:P19 ?s . ?s ps:P19 wd:Q649 . ?s pq:P17 ?value}",
            "NLQuery": "SELECT ?value WHERE { Constantin Stanislavski place of birth ?s . ?s place of birth Moscow . ?s country ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Moscow",
            "choppedEntity": "Q649"
        }
    },
    {
        "chopped": {
            "question": "Which place is adjacent to Turkmenistan that is a member of ",
            "query": "SELECT ?ans1 WHERE { wd:Q874 wdt:P47 ?ans1 . ?ans1 wdt:P463 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Turkmenistan shares border with ?ans1 . ?ans1 member of ?unknown}"
        },
        "original": {
            "question": "Which place is adjacent to Turkmenistan that is a member of Commonwealth of Independent States",
            "query": "SELECT ?answer WHERE { wd:Q874 wdt:P47 ?answer . ?answer wdt:P463 wd:Q7779}",
            "NLQuery": "SELECT ?answer WHERE { Turkmenistan shares border with ?answer . ?answer member of Commonwealth of Independent States}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Commonwealth of Independent States",
            "choppedEntity": "Q7779"
        }
    },
    {
        "chopped": {
            "question": "Which put is adjoining to Turkmenistan that's a part of ",
            "query": "SELECT ?ans1 WHERE { wd:Q874 wdt:P47 ?ans1 . ?ans1 wdt:P463 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Turkmenistan shares border with ?ans1 . ?ans1 member of ?unknown}"
        },
        "original": {
            "question": "Which put is adjoining to Turkmenistan that's a part of Commonwealth of Autonomous States",
            "query": "SELECT ?answer WHERE { wd:Q874 wdt:P47 ?answer . ?answer wdt:P463 wd:Q7779}",
            "NLQuery": "SELECT ?answer WHERE { Turkmenistan shares border with ?answer . ?answer member of Commonwealth of Independent States}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Commonwealth of Autonomous States",
            "choppedEntity": "Q7779"
        }
    },
    {
        "chopped": {
            "question": "Which hurricane in the Pacific had the highest sustained winds during ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q3306242 . ?ans1 wdt:P2895 ?obj . ?ans1 wdt:P361 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of Northeast Pacific tropical cyclone . ?ans1 maximum sustained winds ?obj . ?ans1 part of ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "Which hurricane in the Pacific had the highest sustained winds during the Pacific hurricane season of 1959",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q3306242 . ?ent wdt:P2895 ?obj . ?ent wdt:P361 wd:Q4569683 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of Northeast Pacific tropical cyclone . ?ent maximum sustained winds ?obj . ?ent part of 1959 Pacific hurricane season } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "the Pacific hurricane season of 1959",
            "choppedEntity": "Q4569683"
        }
    },
    {
        "chopped": {
            "question": "What amount of crosses are there to ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P177 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub crosses ?unknown }"
        },
        "original": {
            "question": "What amount of crosses are there to the Jhelum River",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P177 wd:Q214874 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub crosses Jhelum River }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Jhelum River",
            "choppedEntity": "Q214874"
        }
    },
    {
        "chopped": {
            "question": "What is the inventory number for Robert Southey in ",
            "query": "SELECT ?ans1 WHERE { wd:Q216838 p:P485 ?s . ?s ps:P485 ?unknown . ?s pq:P217 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Robert Southey archives at ?s . ?s archives at ?unknown . ?s inventory number ?ans1}"
        },
        "original": {
            "question": "What is the inventory number for Robert Southey in Leeds University Library",
            "query": "SELECT ?value WHERE { wd:Q216838 p:P485 ?s . ?s ps:P485 wd:Q24568958 . ?s pq:P217 ?value}",
            "NLQuery": "SELECT ?value WHERE { Robert Southey archives at ?s . ?s archives at Leeds University Library . ?s inventory number ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Leeds University Library",
            "choppedEntity": "Q24568958"
        }
    },
    {
        "chopped": {
            "question": "What is the mascot of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P822 ?obj . ?obj wdt:P31 wd:Q386208 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown mascot ?obj . ?obj instance of mascot character } "
        },
        "original": {
            "question": "What is the mascot of Georgetown University",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q333886 wdt:P822 ?obj . ?obj wdt:P31 wd:Q386208 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Georgetown University mascot ?obj . ?obj instance of mascot character } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Georgetown University",
            "choppedEntity": "Q333886"
        }
    },
    {
        "chopped": {
            "question": "Was San_Diego owner of SDCCU Stadium and ",
            "query": "ASK WHERE { wd:Q16552 wdt:P1830 wd:Q956072 . wd:Q16552 wdt:P1830 ?unknown }",
            "NLQuery": "ASK WHERE { San Diego owner of SDCCU Stadium . San Diego owner of ?unknown }"
        },
        "original": {
            "question": "Was San_Diego owner of SDCCU Stadium and California State Route 209",
            "query": "ASK WHERE { wd:Q16552 wdt:P1830 wd:Q956072 . wd:Q16552 wdt:P1830 wd:Q623695 }",
            "NLQuery": "ASK WHERE { San Diego owner of SDCCU Stadium . San Diego owner of California State Route 209 }"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "California State Route 209",
            "choppedEntity": "Q623695"
        }
    },
    {
        "chopped": {
            "question": "Did San Diego own the SDCCU Stadium and ",
            "query": "ASK WHERE { wd:Q16552 wdt:P1830 wd:Q956072 . wd:Q16552 wdt:P1830 ?unknown }",
            "NLQuery": "ASK WHERE { San Diego owner of SDCCU Stadium . San Diego owner of ?unknown }"
        },
        "original": {
            "question": "Did San Diego own the SDCCU Stadium and California State Route 209",
            "query": "ASK WHERE { wd:Q16552 wdt:P1830 wd:Q956072 . wd:Q16552 wdt:P1830 wd:Q623695 }",
            "NLQuery": "ASK WHERE { San Diego owner of SDCCU Stadium . San Diego owner of California State Route 209 }"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "California State Route 209",
            "choppedEntity": "Q623695"
        }
    },
    {
        "chopped": {
            "question": "Which is the musical conductor of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P3300 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 musical conductor ?unknown}"
        },
        "original": {
            "question": "Which is the musical conductor of Lorin Maazel",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P3300 wd:Q117710}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer musical conductor Lorin Maazel}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Lorin Maazel",
            "choppedEntity": "Q117710"
        }
    },
    {
        "chopped": {
            "question": "Which is the CiNii author ID of the books of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P271 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown CiNii author ID (books) ?ans1}"
        },
        "original": {
            "question": "Which is the CiNii author ID of the books of Fran\u00e7ois Hollande",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q157 wdt:P271 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Fran\u00e7ois Hollande CiNii author ID (books) ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Fran\u00e7ois Hollande",
            "choppedEntity": "Q157"
        }
    },
    {
        "chopped": {
            "question": "Who is buried next to ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P20 ?X . ?X wdt:P47 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of death ?X . ?X shares border with ?ans1}"
        },
        "original": {
            "question": "Who is buried next to Hasdai Crescas",
            "query": "SELECT ?answer WHERE { wd:Q528415 wdt:P20 ?X . ?X wdt:P47 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Hasdai Crescas place of death ?X . ?X shares border with ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Hasdai Crescas",
            "choppedEntity": "Q528415"
        }
    },
    {
        "chopped": {
            "question": "Who is buried another to ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P20 ?X . ?X wdt:P47 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of death ?X . ?X shares border with ?ans1}"
        },
        "original": {
            "question": "Who is buried another to Hasdai Crescas",
            "query": "SELECT ?answer WHERE { wd:Q528415 wdt:P20 ?X . ?X wdt:P47 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Hasdai Crescas place of death ?X . ?X shares border with ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Hasdai Crescas",
            "choppedEntity": "Q528415"
        }
    },
    {
        "chopped": {
            "question": "What is the aspect of the history of Malta, which has a diplomatic relation that is ",
            "query": "SELECT ?ans1 WHERE { wd:Q243842 wdt:P1269 ?ans1 . ?ans1 wdt:P530 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { history of Malta facet of ?ans1 . ?ans1 diplomatic relation ?unknown}"
        },
        "original": {
            "question": "What is the aspect of the history of Malta, which has a diplomatic relation that is India",
            "query": "SELECT ?answer WHERE { wd:Q243842 wdt:P1269 ?answer . ?answer wdt:P530 wd:Q668}",
            "NLQuery": "SELECT ?answer WHERE { history of Malta facet of ?answer . ?answer diplomatic relation India}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "India",
            "choppedEntity": "Q668"
        }
    },
    {
        "chopped": {
            "question": "What is the angle of the history of Malta, which contains a political connection that's ",
            "query": "SELECT ?ans1 WHERE { wd:Q243842 wdt:P1269 ?ans1 . ?ans1 wdt:P530 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { history of Malta facet of ?ans1 . ?ans1 diplomatic relation ?unknown}"
        },
        "original": {
            "question": "What is the angle of the history of Malta, which contains a political connection that's India",
            "query": "SELECT ?answer WHERE { wd:Q243842 wdt:P1269 ?answer . ?answer wdt:P530 wd:Q668}",
            "NLQuery": "SELECT ?answer WHERE { history of Malta facet of ?answer . ?answer diplomatic relation India}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "India",
            "choppedEntity": "Q668"
        }
    },
    {
        "chopped": {
            "question": "What is the place of origin of the central bank of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P495 ?X . ?X wdt:P1304 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country of origin ?X . ?X central bank ?ans1}"
        },
        "original": {
            "question": "What is the place of origin of the central bank of Sydney Morning Herald",
            "query": "SELECT ?answer WHERE { wd:Q390216 wdt:P495 ?X . ?X wdt:P1304 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Sydney Morning Herald country of origin ?X . ?X central bank ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Sydney Morning Herald",
            "choppedEntity": "Q390216"
        }
    },
    {
        "chopped": {
            "question": "What is the place of origin of the central bank at ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P495 ?X . ?X wdt:P1304 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country of origin ?X . ?X central bank ?ans1}"
        },
        "original": {
            "question": "What is the place of origin of the central bank at Sydney Morning Herald",
            "query": "SELECT ?answer WHERE { wd:Q390216 wdt:P495 ?X . ?X wdt:P1304 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Sydney Morning Herald country of origin ?X . ?X central bank ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Sydney Morning Herald",
            "choppedEntity": "Q390216"
        }
    },
    {
        "chopped": {
            "question": "Which is GOST 7.67 cyrillic for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2988 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown GOST 7.67 cyrillic ?ans1}"
        },
        "original": {
            "question": "Which is GOST 7.67 cyrillic for South Korea",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q884 wdt:P2988 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { South Korea GOST 7.67 cyrillic ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "South Korea",
            "choppedEntity": "Q884"
        }
    },
    {
        "chopped": {
            "question": "Enlist the business domain of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P749 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown parent organization ?obj . ?obj instance of business } "
        },
        "original": {
            "question": "Enlist the business domain of AI Jazeera",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q13477 wdt:P749 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Al Jazeera parent organization ?obj . ?obj instance of business } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "AI Jazeera",
            "choppedEntity": "Q13477"
        }
    },
    {
        "chopped": {
            "question": "Which video game company developed ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P178 ?obj . ?obj wdt:P31 wd:Q210167 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown developer ?obj . ?obj instance of video game developer } "
        },
        "original": {
            "question": "Which video game company developed Pong",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q216293 wdt:P178 ?obj . ?obj wdt:P31 wd:Q210167 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Pong developer ?obj . ?obj instance of video game developer } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Pong",
            "choppedEntity": "Q216293"
        }
    },
    {
        "chopped": {
            "question": "Did the Daytime Emmy Award for Outstanding Younger Actress in a Drama Series and Outstanding Lead Actress in a Drama Series nominate ",
            "query": "ASK WHERE { ?unknown wdt:P1411 wd:Q5243457 . ?unknown wdt:P1411 wd:Q3019357 }",
            "NLQuery": "ASK WHERE { ?unknown nominated for Daytime Emmy Award for Outstanding Younger Actress in a Drama Series . ?unknown nominated for Daytime Emmy Award for Outstanding Lead Actress in a Drama Series }"
        },
        "original": {
            "question": "Did the Daytime Emmy Award for Outstanding Younger Actress in a Drama Series and Outstanding Lead Actress in a Drama Series nominate Kelly Ripa",
            "query": "ASK WHERE { wd:Q1148035 wdt:P1411 wd:Q5243457 . wd:Q1148035 wdt:P1411 wd:Q3019357 }",
            "NLQuery": "ASK WHERE { Kelly Ripa nominated for Daytime Emmy Award for Outstanding Younger Actress in a Drama Series . Kelly Ripa nominated for Daytime Emmy Award for Outstanding Lead Actress in a Drama Series }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Kelly Ripa",
            "choppedEntity": "Q1148035"
        }
    },
    {
        "chopped": {
            "question": "How many children are out of school in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P30 ?X . ?X wdt:P2573 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown continent ?X . ?X number of out-of-school children ?ans1}"
        },
        "original": {
            "question": "How many children are out of school in the Middle East",
            "query": "SELECT ?answer WHERE { wd:Q7204 wdt:P30 ?X . ?X wdt:P2573 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Middle East continent ?X . ?X number of out-of-school children ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Middle East",
            "choppedEntity": "Q7204"
        }
    },
    {
        "chopped": {
            "question": "What is located in the administrative territorial entity of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P131 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 located in the administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "What is located in the administrative territorial entity of Nicaragua",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P131 wd:Q811}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer located in the administrative territorial entity Nicaragua}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Nicaragua",
            "choppedEntity": "Q811"
        }
    },
    {
        "chopped": {
            "question": "What is registration number for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2802 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown fleet or registration number ?ans1}"
        },
        "original": {
            "question": "What is registration number for Ahmedabad",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1070 wdt:P2802 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Ahmedabad fleet or registration number ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Ahmedabad",
            "choppedEntity": "Q1070"
        }
    },
    {
        "chopped": {
            "question": "Is 1.2 less than the number of races by ",
            "query": "ASK WHERE { ?unknown wdt:P1350 ?obj FILTER(?obj > 1.2) } ",
            "NLQuery": "ASK WHERE { ?unknown number of matches played/races/starts ?obj FILTER(?obj > 1.2) } "
        },
        "original": {
            "question": "Is 1.2 less than the number of races by Alan Staley",
            "query": "ASK WHERE { wd:Q4707818 wdt:P1350 ?obj FILTER(?obj > 1.2) } ",
            "NLQuery": "ASK WHERE { Alan Staley number of matches played/races/starts ?obj FILTER(?obj > 1.2) } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Alan Staley",
            "choppedEntity": "Q4707818"
        }
    },
    {
        "chopped": {
            "question": "Which is the Internet Broadway Database show ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1219 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Internet Broadway Database show ID ?ans1}"
        },
        "original": {
            "question": "Which is the Internet Broadway Database show ID for Antigone",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q241077 wdt:P1219 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Antigone Internet Broadway Database show ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Antigone",
            "choppedEntity": "Q241077"
        }
    },
    {
        "chopped": {
            "question": "Which is the Tropicos publication ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4904 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Tropicos publication ID ?ans1}"
        },
        "original": {
            "question": "Which is the Tropicos publication ID for Botanical Journal of the Linnean Society",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q2975482 wdt:P4904 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Botanical Journal of the Linnean Society Tropicos publication ID ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Botanical Journal of the Linnean Society",
            "choppedEntity": "Q2975482"
        }
    },
    {
        "chopped": {
            "question": "Which continent is located in ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P30 ?obj . ?obj wdt:P31 wd:Q5107 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown continent ?obj . ?obj instance of continent } "
        },
        "original": {
            "question": "Which continent is located in East Asia",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q27231 wdt:P30 ?obj . ?obj wdt:P31 wd:Q5107 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { East Asia continent ?obj . ?obj instance of continent } "
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "East Asia",
            "choppedEntity": "Q27231"
        }
    },
    {
        "chopped": {
            "question": "Who was Herbert von Karajan employed by when he was replaced by ",
            "query": "SELECT ?ans1 WHERE { wd:Q154895 p:P108 ?s . ?s ps:P108 ?ans1 . ?s pq:P1366 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Herbert von Karajan employer ?s . ?s employer ?ans1 . ?s replaced by ?unknown }"
        },
        "original": {
            "question": "Who was Herbert von Karajan employed by when he was replaced by Paul van Kempen",
            "query": "SELECT ?obj WHERE { wd:Q154895 p:P108 ?s . ?s ps:P108 ?obj . ?s pq:P1366 wd:Q529444 }",
            "NLQuery": "SELECT ?obj WHERE { Herbert von Karajan employer ?s . ?s employer ?obj . ?s replaced by Paul van Kempen }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Paul van Kempen",
            "choppedEntity": "Q529444"
        }
    },
    {
        "chopped": {
            "question": "What is the native language of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P103 ?ans1 . ?ans1 wdt:P2919 ?x FILTER(contains(?x,'Csc-angl\u00e8s-spreadthesign.ogv'))}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown native language ?ans1 . ?ans1 label in sign language ?x FILTER(contains(?x,'Csc-angl\u00e8s-spreadthesign.ogv'))}"
        },
        "original": {
            "question": "What is the native language of Vivien Leigh",
            "query": "SELECT ?answer WHERE { wd:Q129429 wdt:P103 ?answer . ?answer wdt:P2919 ?x FILTER(contains(?x,'Csc-angl\u00e8s-spreadthesign.ogv'))}",
            "NLQuery": "SELECT ?answer WHERE { Vivien Leigh native language ?answer . ?answer label in sign language ?x FILTER(contains(?x,'Csc-angl\u00e8s-spreadthesign.ogv'))}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Vivien Leigh",
            "choppedEntity": "Q129429"
        }
    },
    {
        "chopped": {
            "question": "How many residents are in ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P551 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub residence ?unknown }"
        },
        "original": {
            "question": "How many residents are in Yekaterinburg",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P551 wd:Q887 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub residence Yekaterinburg }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Yekaterinburg",
            "choppedEntity": "Q887"
        }
    },
    {
        "chopped": {
            "question": "What number of academic degrees are held by ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P512 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown academic degree ?obj }"
        },
        "original": {
            "question": "What number of academic degrees are held by Ernest Rutherford",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q9123 wdt:P512 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Ernest Rutherford academic degree ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ernest Rutherford",
            "choppedEntity": "Q9123"
        }
    },
    {
        "chopped": {
            "question": "Where did Boleslaw Prus pass away It is a sister city of V",
            "query": "SELECT ?ans1 WHERE { wd:Q144439 wdt:P20 ?ans1 . ?ans1 wdt:P190 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Boles\u0142aw Prus place of death ?ans1 . ?ans1 twinned administrative body ?unknown}"
        },
        "original": {
            "question": "Where did Boleslaw Prus pass away It is a sister city of Vilnius.",
            "query": "SELECT ?answer WHERE { wd:Q144439 wdt:P20 ?answer . ?answer wdt:P190 wd:Q216}",
            "NLQuery": "SELECT ?answer WHERE { Boles\u0142aw Prus place of death ?answer . ?answer twinned administrative body Vilnius}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Vilnius",
            "choppedEntity": "Q216"
        }
    },
    {
        "chopped": {
            "question": "Which is the season start for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4794 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown season starts ?ans1}"
        },
        "original": {
            "question": "Which is the season start for the A-League",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q219586 wdt:P4794 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { A-League season starts ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the A-League",
            "choppedEntity": "Q219586"
        }
    },
    {
        "chopped": {
            "question": "How was the movement during ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P135 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub movement ?unknown }"
        },
        "original": {
            "question": "How was the movement during the Hellenistic period",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P135 wd:Q428995 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub movement Hellenistic period }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "the Hellenistic period",
            "choppedEntity": "Q428995"
        }
    },
    {
        "chopped": {
            "question": "When did Thuringia become ",
            "query": "SELECT ?ans1 WHERE { wd:Q1205 p:P1365 ?s . ?s ps:P1365 ?unknown . ?s pq:P518 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Thuringia replaces ?s . ?s replaces ?unknown . ?s applies to part ?ans1}"
        },
        "original": {
            "question": "When did Thuringia become the Leipzig District",
            "query": "SELECT ?value WHERE { wd:Q1205 p:P1365 ?s . ?s ps:P1365 wd:Q48079 . ?s pq:P518 ?value}",
            "NLQuery": "SELECT ?value WHERE { Thuringia replaces ?s . ?s replaces Leipzig District . ?s applies to part ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Leipzig District",
            "choppedEntity": "Q48079"
        }
    },
    {
        "chopped": {
            "question": "When did Thuringia start as ",
            "query": "SELECT ?ans1 WHERE { wd:Q1205 p:P1365 ?s . ?s ps:P1365 ?unknown . ?s pq:P518 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Thuringia replaces ?s . ?s replaces ?unknown . ?s applies to part ?ans1}"
        },
        "original": {
            "question": "When did Thuringia start as the Leipzig District",
            "query": "SELECT ?value WHERE { wd:Q1205 p:P1365 ?s . ?s ps:P1365 wd:Q48079 . ?s pq:P518 ?value}",
            "NLQuery": "SELECT ?value WHERE { Thuringia replaces ?s . ?s replaces Leipzig District . ?s applies to part ?value}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Leipzig District",
            "choppedEntity": "Q48079"
        }
    },
    {
        "chopped": {
            "question": "What is the UK Provider Reference Number for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4971 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown UK Provider Reference Number ?ans1}"
        },
        "original": {
            "question": "What is the UK Provider Reference Number for the University of Birmingham",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q223429 wdt:P4971 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { University of Birmingham UK Provider Reference Number ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the University of Birmingham",
            "choppedEntity": "Q223429"
        }
    },
    {
        "chopped": {
            "question": "What is the topic of History of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1269 ?X . ?X wdt:P1333 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown facet of ?X . ?X coordinates of southernmost point ?ans1}"
        },
        "original": {
            "question": "What is the topic of History of British Columbia",
            "query": "SELECT ?answer WHERE { wd:Q603812 wdt:P1269 ?X . ?X wdt:P1333 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { history of British Columbia facet of ?X . ?X coordinates of southernmost point ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "British Columbia",
            "choppedEntity": "Q603812"
        }
    },
    {
        "chopped": {
            "question": "What was previously PlayStation 3 published on ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P400 ?ans1 . ?ans1 wdt:P155 wd:Q10683}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown platform ?ans1 . ?ans1 follows PlayStation 3}"
        },
        "original": {
            "question": "What was previously PlayStation 3 published on Mortal Kombat",
            "query": "SELECT ?answer WHERE { wd:Q241163 wdt:P400 ?answer . ?answer wdt:P155 wd:Q10683}",
            "NLQuery": "SELECT ?answer WHERE { Mortal Kombat platform ?answer . ?answer follows PlayStation 3}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Mortal Kombat",
            "choppedEntity": "Q241163"
        }
    },
    {
        "chopped": {
            "question": "What is the airline for business division of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P199 ?obj . ?obj wdt:P31 wd:Q46970 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown business division ?obj . ?obj instance of airline } "
        },
        "original": {
            "question": "What is the airline for business division of AirAsia",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q406643 wdt:P199 ?obj . ?obj wdt:P31 wd:Q46970 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { AirAsia business division ?obj . ?obj instance of airline } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "AirAsia",
            "choppedEntity": "Q406643"
        }
    },
    {
        "chopped": {
            "question": "What is the carrier for commerce division of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P199 ?obj . ?obj wdt:P31 wd:Q46970 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown business division ?obj . ?obj instance of airline } "
        },
        "original": {
            "question": "What is the carrier for commerce division of AirAsia",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q406643 wdt:P199 ?obj . ?obj wdt:P31 wd:Q46970 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { AirAsia business division ?obj . ?obj instance of airline } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "AirAsia",
            "choppedEntity": "Q406643"
        }
    },
    {
        "chopped": {
            "question": "Is Hokkien the official language of ",
            "query": "ASK WHERE { ?unknown wdt:P37 wd:Q1624231 }",
            "NLQuery": "ASK WHERE { ?unknown official language Hokkien }"
        },
        "original": {
            "question": "Is Hokkien the official language of United Nations",
            "query": "ASK WHERE { wd:Q1065 wdt:P37 wd:Q1624231 }",
            "NLQuery": "ASK WHERE { United Nations official language Hokkien }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "United Nations",
            "choppedEntity": "Q1065"
        }
    },
    {
        "chopped": {
            "question": "Which television channel is affiliated to ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1416 ?unknown . ?sbj wdt:P31 wd:Q2001305 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj affiliation ?unknown . ?sbj instance of television channel } "
        },
        "original": {
            "question": "Which television channel is affiliated to PBS",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1416 wd:Q215616 . ?sbj wdt:P31 wd:Q2001305 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj affiliation PBS . ?sbj instance of television channel } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "PBS",
            "choppedEntity": "Q215616"
        }
    },
    {
        "chopped": {
            "question": "Which is the BAV ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1017 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown BAV (Vatican Library) identifier ?ans1}"
        },
        "original": {
            "question": "Which is the BAV ID for Ida Tarbell",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q271712 wdt:P1017 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Ida Tarbell BAV (Vatican Library) identifier ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ida Tarbell",
            "choppedEntity": "Q271712"
        }
    },
    {
        "chopped": {
            "question": "Who founded and currently owns ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P127 ?ans1 . ?unknown wdt:P112 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown owned by ?ans1 . ?unknown founded by ?ans2 }"
        },
        "original": {
            "question": "Who founded and currently owns Ultimate Fighting Championship",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q186471 wdt:P127 ?ans_1 . wd:Q186471 wdt:P112 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Ultimate Fighting Championship owned by ?ans_1 . Ultimate Fighting Championship founded by ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Ultimate Fighting Championship",
            "choppedEntity": "Q186471"
        }
    },
    {
        "chopped": {
            "question": "Which is the author name string for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2093 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown author name string ?ans1}"
        },
        "original": {
            "question": "Which is the author name string for A Mathematical Theory of Communication",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q724029 wdt:P2093 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { A Mathematical Theory of Communication author name string ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "A Mathematical Theory of Communication",
            "choppedEntity": "Q724029"
        }
    },
    {
        "chopped": {
            "question": "What is the mean age of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4442 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown mean age ?ans1}"
        },
        "original": {
            "question": "What is the mean age of the South Bohemian Region",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q188373 wdt:P4442 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { South Bohemian Region mean age ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the South Bohemian Region",
            "choppedEntity": "Q188373"
        }
    },
    {
        "chopped": {
            "question": "Which is the Swedish Olympic Committee athelete ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2323 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Swedish Olympic Committee athlete ID ?ans1}"
        },
        "original": {
            "question": "Which is the Swedish Olympic Committee athelete ID for Jan-Ove Waldner",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q345360 wdt:P2323 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Jan-Ove Waldner Swedish Olympic Committee athlete ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jan-Ove Waldner",
            "choppedEntity": "Q345360"
        }
    },
    {
        "chopped": {
            "question": "What medals did Michael Phelps win in the 2012 ",
            "query": "SELECT ?ans1 WHERE { wd:Q39562 p:P1344 ?s . ?s ps:P1344 ?unknown . ?s pq:P166 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Michael Phelps participant in ?s . ?s participant in ?unknown . ?s award received ?ans1}"
        },
        "original": {
            "question": "What medals did Michael Phelps win in the 2012 Summer Olympics",
            "query": "SELECT ?value WHERE { wd:Q39562 p:P1344 ?s . ?s ps:P1344 wd:Q8577 . ?s pq:P166 ?value}",
            "NLQuery": "SELECT ?value WHERE { Michael Phelps participant in ?s . ?s participant in 2012 Summer Olympics . ?s award received ?value}"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "Summer Olympics",
            "choppedEntity": "Q8577"
        }
    },
    {
        "chopped": {
            "question": "Which time point for Vera Caslavska as ",
            "query": "SELECT ?ans1 WHERE { wd:Q229503 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { V\u011bra \u010c\u00e1slavsk\u00e1 award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "Which time point for Vera Caslavska as Gratias Agit",
            "query": "SELECT ?value WHERE { wd:Q229503 p:P166 ?s . ?s ps:P166 wd:Q16550275 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { V\u011bra \u010c\u00e1slavsk\u00e1 award received ?s . ?s award received Gratias Agit . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Gratias Agit",
            "choppedEntity": "Q16550275"
        }
    },
    {
        "chopped": {
            "question": "Where is the grave of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P119 ?obj . ?obj wdt:P31 wd:Q162875 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown place of burial ?obj . ?obj instance of mausoleum } "
        },
        "original": {
            "question": "Where is the grave of Sun Yat-sen",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q8573 wdt:P119 ?obj . ?obj wdt:P31 wd:Q162875 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Sun Yat-sen place of burial ?obj . ?obj instance of mausoleum } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Sun Yat-sen",
            "choppedEntity": "Q8573"
        }
    },
    {
        "chopped": {
            "question": "Who is the mother and child of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P25 ?ans1 . ?unknown wdt:P40 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown mother ?ans1 . ?unknown child ?ans2 }"
        },
        "original": {
            "question": "Who is the mother and child of Courtney Love",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q222071 wdt:P25 ?ans_1 . wd:Q222071 wdt:P40 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Courtney Love mother ?ans_1 . Courtney Love child ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Courtney Love",
            "choppedEntity": "Q222071"
        }
    },
    {
        "chopped": {
            "question": "Who is the favorite player of the writer of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P50 ?X . ?X wdt:P737 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown author ?X . ?X influenced by ?ans1}"
        },
        "original": {
            "question": "Who is the favorite player of the writer of Black Girl/White Girl",
            "query": "SELECT ?answer WHERE { wd:Q4920825 wdt:P50 ?X . ?X wdt:P737 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Black Girl / White Girl author ?X . ?X influenced by ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Black Girl/White Girl",
            "choppedEntity": "Q4920825"
        }
    },
    {
        "chopped": {
            "question": "Name the sibling of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P3373 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown sibling ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Name the sibling of Jon Voight",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q167520 wdt:P3373 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Jon Voight sibling ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jon Voight",
            "choppedEntity": "Q167520"
        }
    },
    {
        "chopped": {
            "question": "Title the kin of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P3373 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown sibling ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Title the kin of Jon Voight",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q167520 wdt:P3373 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Jon Voight sibling ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jon Voight",
            "choppedEntity": "Q167520"
        }
    },
    {
        "chopped": {
            "question": "What material is used for the runway at ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P529 ?s . ?s ps:P529 ?x FILTER(contains(?x,'10R/28L')) . ?s pq:P186 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown runway ?s . ?s runway ?x FILTER(contains(?x,'10R/28L')) . ?s material used ?ans1}"
        },
        "original": {
            "question": "What material is used for the runway at O'Hare International Airport",
            "query": "SELECT ?value WHERE { wd:Q213717 p:P529 ?s . ?s ps:P529 ?x FILTER(contains(?x,'10R/28L')) . ?s pq:P186 ?value}",
            "NLQuery": "SELECT ?value WHERE { O'Hare International Airport runway ?s . ?s runway ?x FILTER(contains(?x,'10R/28L')) . ?s material used ?value}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "O'Hare International Airport",
            "choppedEntity": "Q213717"
        }
    },
    {
        "chopped": {
            "question": "Who co-founded the label of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P264 ?X . ?X wdt:P112 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown record label ?X . ?X founded by ?ans1}"
        },
        "original": {
            "question": "Who co-founded the label of Godfather Buried Alive",
            "query": "SELECT ?answer WHERE { wd:Q10506666 wdt:P264 ?X . ?X wdt:P112 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Godfather Buried Alive record label ?X . ?X founded by ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Godfather Buried Alive",
            "choppedEntity": "Q10506666"
        }
    },
    {
        "chopped": {
            "question": "Who co-founded the name of Adoptive parent ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P264 ?X . ?X wdt:P112 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown record label ?X . ?X founded by ?ans1}"
        },
        "original": {
            "question": "Who co-founded the name of Adoptive parent Buried Alive",
            "query": "SELECT ?answer WHERE { wd:Q10506666 wdt:P264 ?X . ?X wdt:P112 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Godfather Buried Alive record label ?X . ?X founded by ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Buried Alive",
            "choppedEntity": "Q10506666"
        }
    },
    {
        "chopped": {
            "question": "Who is the narrator of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P2438 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 narrator ?unknown}"
        },
        "original": {
            "question": "Who is the narrator of Derek Jacobi",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P2438 wd:Q256164}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer narrator Derek Jacobi}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Derek Jacobi",
            "choppedEntity": "Q256164"
        }
    },
    {
        "chopped": {
            "question": "Was Playboy published by Playboy Enterprises and ",
            "query": "ASK WHERE { wd:Q150820 wdt:P123 wd:Q3107204 . wd:Q150820 wdt:P123 ?unknown }",
            "NLQuery": "ASK WHERE { Playboy publisher Playboy Enterprises . Playboy publisher ?unknown }"
        },
        "original": {
            "question": "Was Playboy published by Playboy Enterprises and Hubert Burda Media Holding",
            "query": "ASK WHERE { wd:Q150820 wdt:P123 wd:Q3107204 . wd:Q150820 wdt:P123 wd:Q459029 }",
            "NLQuery": "ASK WHERE { Playboy publisher Playboy Enterprises . Playboy publisher Hubert Burda Media Holding }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Hubert Burda Media Holding",
            "choppedEntity": "Q459029"
        }
    },
    {
        "chopped": {
            "question": "What chronicles are written in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P407 ?unknown . ?sbj wdt:P31 wd:Q185363 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj language of work or name ?unknown . ?sbj instance of chronicle } "
        },
        "original": {
            "question": "What chronicles are written in Old English",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P407 wd:Q42365 . ?sbj wdt:P31 wd:Q185363 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj language of work or name Old English . ?sbj instance of chronicle } "
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Old English",
            "choppedEntity": "Q42365"
        }
    },
    {
        "chopped": {
            "question": "What are the names of the chronicles written in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P407 ?unknown . ?sbj wdt:P31 wd:Q185363 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj language of work or name ?unknown . ?sbj instance of chronicle } "
        },
        "original": {
            "question": "What are the names of the chronicles written in Old English",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P407 wd:Q42365 . ?sbj wdt:P31 wd:Q185363 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj language of work or name Old English . ?sbj instance of chronicle } "
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Old English",
            "choppedEntity": "Q42365"
        }
    },
    {
        "chopped": {
            "question": "Who is the owner of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1429 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj has pet ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who is the owner of Grumpy Cat",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1429 wd:Q7714263 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj has pet Grumpy Cat . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Grumpy Cat",
            "choppedEntity": "Q7714263"
        }
    },
    {
        "chopped": {
            "question": "Who is the proprietor of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1429 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj has pet ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who is the proprietor of Grouchy Cat",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1429 wd:Q7714263 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj has pet Grumpy Cat . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Grouchy Cat",
            "choppedEntity": "Q7714263"
        }
    },
    {
        "chopped": {
            "question": "Which is the Smithsonian American Art Museum: person/institution thesaurus ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1795 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Smithsonian American Art Museum person/institution ID ?ans1}"
        },
        "original": {
            "question": "Which is the Smithsonian American Art Museum: person/institution thesaurus ID for Antoine Watteau",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q183221 wdt:P1795 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Antoine Watteau Smithsonian American Art Museum person/institution ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Antoine Watteau",
            "choppedEntity": "Q183221"
        }
    },
    {
        "chopped": {
            "question": "Which is the GeoNames feature code of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2452 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown GeoNames feature code ?ans1}"
        },
        "original": {
            "question": "Which is the GeoNames feature code of wetland",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q170321 wdt:P2452 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { wetland GeoNames feature code ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "wetland",
            "choppedEntity": "Q170321"
        }
    },
    {
        "chopped": {
            "question": "What is the spoken language of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P4913 ?unknown . ?sbj wdt:P31 wd:Q34770 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj dialect of ?unknown . ?sbj instance of language } "
        },
        "original": {
            "question": "What is the spoken language of Tagalog",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P4913 wd:Q34057 . ?sbj wdt:P31 wd:Q34770 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj dialect of Tagalog . ?sbj instance of language } "
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Tagalog",
            "choppedEntity": "Q34057"
        }
    },
    {
        "chopped": {
            "question": "Which language is spoken by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P4913 ?unknown . ?sbj wdt:P31 wd:Q34770 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj dialect of ?unknown . ?sbj instance of language } "
        },
        "original": {
            "question": "Which language is spoken by Tagalog",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P4913 wd:Q34057 . ?sbj wdt:P31 wd:Q34770 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj dialect of Tagalog . ?sbj instance of language } "
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Tagalog",
            "choppedEntity": "Q34057"
        }
    },
    {
        "chopped": {
            "question": "Which is the Commonwealth Games Federation athlete ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4548 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Commonwealth Games Federation athlete ID ?ans1}"
        },
        "original": {
            "question": "Which is the Commonwealth Games Federation athlete ID of Sebastian Coe",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q188502 wdt:P4548 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Sebastian Coe Commonwealth Games Federation athlete ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Sebastian Coe",
            "choppedEntity": "Q188502"
        }
    },
    {
        "chopped": {
            "question": "Who is the tenant in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P276 ?X . ?X wdt:P466 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown location ?X . ?X occupant ?ans1}"
        },
        "original": {
            "question": "Who is the tenant in The Rape of Proserpina",
            "query": "SELECT ?answer WHERE { wd:Q2352789 wdt:P276 ?X . ?X wdt:P466 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Rape of Proserpina location ?X . ?X occupant ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Rape of Proserpina",
            "choppedEntity": "Q2352789"
        }
    },
    {
        "chopped": {
            "question": "Which is the OpenPlaques subject ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1430 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown OpenPlaques subject ID ?ans1}"
        },
        "original": {
            "question": "Which is the OpenPlaques subject ID of Richard Wagner",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1511 wdt:P1430 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Richard Wagner OpenPlaques subject ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Richard Wagner",
            "choppedEntity": "Q1511"
        }
    },
    {
        "chopped": {
            "question": "In what country is Vyacheslav Tikhonov's birthplace, ",
            "query": "SELECT ?ans1 WHERE { wd:Q312483 p:P19 ?s . ?s ps:P19 ?unknown . ?s pq:P17 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Vyacheslav Tikhonov place of birth ?s . ?s place of birth ?unknown . ?s country ?ans1}"
        },
        "original": {
            "question": "In what country is Vyacheslav Tikhonov's birthplace, Pavlovsky Posad",
            "query": "SELECT ?value WHERE { wd:Q312483 p:P19 ?s . ?s ps:P19 wd:Q177908 . ?s pq:P17 ?value}",
            "NLQuery": "SELECT ?value WHERE { Vyacheslav Tikhonov place of birth ?s . ?s place of birth Pavlovsky Posad . ?s country ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Pavlovsky Posad",
            "choppedEntity": "Q177908"
        }
    },
    {
        "chopped": {
            "question": "Which is the birthplace country of Vyacheslav Tikhonov from ",
            "query": "SELECT ?ans1 WHERE { wd:Q312483 p:P19 ?s . ?s ps:P19 ?unknown . ?s pq:P17 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Vyacheslav Tikhonov place of birth ?s . ?s place of birth ?unknown . ?s country ?ans1}"
        },
        "original": {
            "question": "Which is the birthplace country of Vyacheslav Tikhonov from Pavlovsky Posad",
            "query": "SELECT ?value WHERE { wd:Q312483 p:P19 ?s . ?s ps:P19 wd:Q177908 . ?s pq:P17 ?value}",
            "NLQuery": "SELECT ?value WHERE { Vyacheslav Tikhonov place of birth ?s . ?s place of birth Pavlovsky Posad . ?s country ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Pavlovsky Posad",
            "choppedEntity": "Q177908"
        }
    },
    {
        "chopped": {
            "question": "What type of work is available in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P937 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj work location ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "What type of work is available in Seville",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P937 wd:Q8717 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj work location Seville . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Seville",
            "choppedEntity": "Q8717"
        }
    },
    {
        "chopped": {
            "question": "What radio award is named after ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P138 ?unknown . ?sbj wdt:P31 wd:Q16948252 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj named after ?unknown . ?sbj instance of radio award } "
        },
        "original": {
            "question": "What radio award is named after Salzburg",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P138 wd:Q34713 . ?sbj wdt:P31 wd:Q16948252 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj named after Salzburg . ?sbj instance of radio award } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Salzburg",
            "choppedEntity": "Q34713"
        }
    },
    {
        "chopped": {
            "question": "What radio grant is named after ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P138 ?unknown . ?sbj wdt:P31 wd:Q16948252 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj named after ?unknown . ?sbj instance of radio award } "
        },
        "original": {
            "question": "What radio grant is named after Salzburg",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P138 wd:Q34713 . ?sbj wdt:P31 wd:Q16948252 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj named after Salzburg . ?sbj instance of radio award } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Salzburg",
            "choppedEntity": "Q34713"
        }
    },
    {
        "chopped": {
            "question": "Which is the minimum wavelength of sensitivity of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3738 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown minimum wavelength of sensitivity ?ans1}"
        },
        "original": {
            "question": "Which is the minimum wavelength of sensitivity of Karl G. Jansky Very Large Array",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q461382 wdt:P3738 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Karl G. Jansky Very Large Array minimum wavelength of sensitivity ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Karl G. Jansky Very Large Array",
            "choppedEntity": "Q461382"
        }
    },
    {
        "chopped": {
            "question": "What audio language is O Tannenbaum in The regulatory body is t",
            "query": "SELECT ?ans1 WHERE { wd:Q1046985 wdt:P407 ?ans1 . ?ans1 wdt:P1018 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { O Tannenbaum language of work or name ?ans1 . ?ans1 language regulatory body ?unknown}"
        },
        "original": {
            "question": "What audio language is O Tannenbaum in The regulatory body is the IDS - Institute for the German Language.",
            "query": "SELECT ?answer WHERE { wd:Q1046985 wdt:P407 ?answer . ?answer wdt:P1018 wd:Q1664834}",
            "NLQuery": "SELECT ?answer WHERE { O Tannenbaum language of work or name ?answer . ?answer language regulatory body IDS \u2013 Institute for the German Language}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the IDS - Institute for the German Language",
            "choppedEntity": "Q1664834"
        }
    },
    {
        "chopped": {
            "question": "Was Billy_Bob_Thornton award received Golden Globe Award for Best Screenplay and ",
            "query": "ASK WHERE { wd:Q202735 wdt:P166 wd:Q849124 . wd:Q202735 wdt:P166 ?unknown }",
            "NLQuery": "ASK WHERE { Billy Bob Thornton award received Golden Globe Award for Best Screenplay . Billy Bob Thornton award received ?unknown }"
        },
        "original": {
            "question": "Was Billy_Bob_Thornton award received Golden Globe Award for Best Screenplay and Edgar Award",
            "query": "ASK WHERE { wd:Q202735 wdt:P166 wd:Q849124 . wd:Q202735 wdt:P166 wd:Q833154 }",
            "NLQuery": "ASK WHERE { Billy Bob Thornton award received Golden Globe Award for Best Screenplay . Billy Bob Thornton award received Edgar Award }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Edgar Award",
            "choppedEntity": "Q833154"
        }
    },
    {
        "chopped": {
            "question": "Did Billy Bob Thornton receive the Golden Globe for Best Screenplay and ",
            "query": "ASK WHERE { wd:Q202735 wdt:P166 wd:Q849124 . wd:Q202735 wdt:P166 ?unknown }",
            "NLQuery": "ASK WHERE { Billy Bob Thornton award received Golden Globe Award for Best Screenplay . Billy Bob Thornton award received ?unknown }"
        },
        "original": {
            "question": "Did Billy Bob Thornton receive the Golden Globe for Best Screenplay and Edgar Award",
            "query": "ASK WHERE { wd:Q202735 wdt:P166 wd:Q849124 . wd:Q202735 wdt:P166 wd:Q833154 }",
            "NLQuery": "ASK WHERE { Billy Bob Thornton award received Golden Globe Award for Best Screenplay . Billy Bob Thornton award received Edgar Award }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Edgar Award",
            "choppedEntity": "Q833154"
        }
    },
    {
        "chopped": {
            "question": "What written work precedes that of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P156 ?X . ?X wdt:P50 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown followed by ?X . ?X author ?ans1}"
        },
        "original": {
            "question": "What written work precedes that of A Long Way from Chicago",
            "query": "SELECT ?answer WHERE { wd:Q4657935 wdt:P156 ?X . ?X wdt:P50 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { A Long Way from Chicago followed by ?X . ?X author ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "A Long Way from Chicago",
            "choppedEntity": "Q4657935"
        }
    },
    {
        "chopped": {
            "question": "What composed work goes before that of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P156 ?X . ?X wdt:P50 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown followed by ?X . ?X author ?ans1}"
        },
        "original": {
            "question": "What composed work goes before that of A Long Way from Chicago",
            "query": "SELECT ?answer WHERE { wd:Q4657935 wdt:P156 ?X . ?X wdt:P50 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { A Long Way from Chicago followed by ?X . ?X author ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "A Long Way from Chicago",
            "choppedEntity": "Q4657935"
        }
    },
    {
        "chopped": {
            "question": "Which is the postcode of the hometown of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P551 ?X . ?X wdt:P281 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown residence ?X . ?X postal code ?ans1}"
        },
        "original": {
            "question": "Which is the postcode of the hometown of Ricky Martin",
            "query": "SELECT ?answer WHERE { wd:Q128799 wdt:P551 ?X . ?X wdt:P281 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Ricky Martin residence ?X . ?X postal code ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ricky Martin",
            "choppedEntity": "Q128799"
        }
    },
    {
        "chopped": {
            "question": "Which is the military rank for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P410 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown military rank ?ans1}"
        },
        "original": {
            "question": "Which is the military rank for George Vancouver",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q205485 wdt:P410 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { George Vancouver military rank ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "George Vancouver",
            "choppedEntity": "Q205485"
        }
    },
    {
        "chopped": {
            "question": "Name the disciple or the faith followed up by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P802 ?X . ?X wdt:P140 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown student ?X . ?X religion ?ans1}"
        },
        "original": {
            "question": "Name the disciple or the faith followed up by Theodosius Dobzhansky",
            "query": "SELECT ?answer WHERE { wd:Q246731 wdt:P802 ?X . ?X wdt:P140 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Theodosius Dobzhansky student ?X . ?X religion ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Theodosius Dobzhansky",
            "choppedEntity": "Q246731"
        }
    },
    {
        "chopped": {
            "question": "Title the follower or the confidence taken after up by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P802 ?X . ?X wdt:P140 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown student ?X . ?X religion ?ans1}"
        },
        "original": {
            "question": "Title the follower or the confidence taken after up by Theodosius Dobzhansky",
            "query": "SELECT ?answer WHERE { wd:Q246731 wdt:P802 ?X . ?X wdt:P140 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Theodosius Dobzhansky student ?X . ?X religion ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Theodosius Dobzhansky",
            "choppedEntity": "Q246731"
        }
    },
    {
        "chopped": {
            "question": "What Wikipedia article lists the monuments in ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1456 ?obj . ?obj wdt:P31 wd:Q13406463 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown list of monuments ?obj . ?obj instance of Wikimedia list article } "
        },
        "original": {
            "question": "What Wikipedia article lists the monuments in Lyon",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q456 wdt:P1456 ?obj . ?obj wdt:P31 wd:Q13406463 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Lyon list of monuments ?obj . ?obj instance of Wikimedia list article } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Lyon",
            "choppedEntity": "Q456"
        }
    },
    {
        "chopped": {
            "question": "What Wikipedia article records the landmarks in ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1456 ?obj . ?obj wdt:P31 wd:Q13406463 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown list of monuments ?obj . ?obj instance of Wikimedia list article } "
        },
        "original": {
            "question": "What Wikipedia article records the landmarks in Lyon",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q456 wdt:P1456 ?obj . ?obj wdt:P31 wd:Q13406463 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Lyon list of monuments ?obj . ?obj instance of Wikimedia list article } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Lyon",
            "choppedEntity": "Q456"
        }
    },
    {
        "chopped": {
            "question": "What was Raiders of the Lost Ark nominated for at the 54th ",
            "query": "SELECT ?ans1 WHERE { wd:Q174284 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Raiders of the Lost Ark nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "What was Raiders of the Lost Ark nominated for at the 54th Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q174284 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q28969 }",
            "NLQuery": "SELECT ?obj WHERE { Raiders of the Lost Ark nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 54th Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q28969"
        }
    },
    {
        "chopped": {
            "question": "Which award was Raiders of the Lost Ark nominated for at the 54th ",
            "query": "SELECT ?ans1 WHERE { wd:Q174284 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Raiders of the Lost Ark nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "Which award was Raiders of the Lost Ark nominated for at the 54th Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q174284 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q28969 }",
            "NLQuery": "SELECT ?obj WHERE { Raiders of the Lost Ark nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 54th Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q28969"
        }
    },
    {
        "chopped": {
            "question": "Who is the sister of Claudius whose public office is the consul of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1411 wdt:P3373 ?ans1 . ?ans1 wdt:P39 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Claudius sibling ?ans1 . ?ans1 position held ?unknown}"
        },
        "original": {
            "question": "Who is the sister of Claudius whose public office is the consul of the Roman Empire",
            "query": "SELECT ?answer WHERE { wd:Q1411 wdt:P3373 ?answer . ?answer wdt:P39 wd:Q26203875}",
            "NLQuery": "SELECT ?answer WHERE { Claudius sibling ?answer . ?answer position held consul of the Roman Empire}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Roman Empire",
            "choppedEntity": "Q26203875"
        }
    },
    {
        "chopped": {
            "question": "Which binary star has the lowest color index and is the parent of ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q50053 . ?ans1 wdt:P1458 ?obj . ?ans1 wdt:P398 ?unknown. } ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of binary star . ?ans1 color index ?obj . ?ans1 child astronomical body ?unknown. } ORDER BY ASC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "Which binary star has the lowest color index and is the parent of Aldebran b",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q50053 . ?ent wdt:P1458 ?obj . ?ent wdt:P398 wd:Q21067503. } ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of binary star . ?ent color index ?obj . ?ent child astronomical body Aldebaran b. } ORDER BY ASC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Aldebran b",
            "choppedEntity": "Q21067503"
        }
    },
    {
        "chopped": {
            "question": "Is Anderson Cooper's mother ",
            "query": "ASK WHERE { wd:Q316997 wdt:P25 ?unknown }",
            "NLQuery": "ASK WHERE { Anderson Cooper mother ?unknown }"
        },
        "original": {
            "question": "Is Anderson Cooper's mother Gloria Vanderbilt",
            "query": "ASK WHERE { wd:Q316997 wdt:P25 wd:Q264730 }",
            "NLQuery": "ASK WHERE { Anderson Cooper mother Gloria Vanderbilt }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Gloria Vanderbilt",
            "choppedEntity": "Q264730"
        }
    },
    {
        "chopped": {
            "question": "Is Gloria Vanderbilt the mother of ",
            "query": "ASK WHERE { ?unknown wdt:P25 wd:Q264730 }",
            "NLQuery": "ASK WHERE { ?unknown mother Gloria Vanderbilt }"
        },
        "original": {
            "question": "Is Gloria Vanderbilt the mother of Anderson Cooper",
            "query": "ASK WHERE { wd:Q316997 wdt:P25 wd:Q264730 }",
            "NLQuery": "ASK WHERE { Anderson Cooper mother Gloria Vanderbilt }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Anderson Cooper",
            "choppedEntity": "Q316997"
        }
    },
    {
        "chopped": {
            "question": "What is in the category of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P115 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 home venue ?unknown}"
        },
        "original": {
            "question": "What is in the category of Wembley Stadium",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P115 wd:Q128468}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer home venue Wembley Stadium}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Wembley Stadium",
            "choppedEntity": "Q128468"
        }
    },
    {
        "chopped": {
            "question": "What academic major studies ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P2578 ?unknown . ?sbj wdt:P31 wd:Q4671286 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj studies ?unknown . ?sbj instance of academic major } "
        },
        "original": {
            "question": "What academic major studies Hebrew",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P2578 wd:Q9288 . ?sbj wdt:P31 wd:Q4671286 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj studies Hebrew . ?sbj instance of academic major } "
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Hebrew",
            "choppedEntity": "Q9288"
        }
    },
    {
        "chopped": {
            "question": "What scholastic major considers ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P2578 ?unknown . ?sbj wdt:P31 wd:Q4671286 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj studies ?unknown . ?sbj instance of academic major } "
        },
        "original": {
            "question": "What scholastic major considers Hebrew",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P2578 wd:Q9288 . ?sbj wdt:P31 wd:Q4671286 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj studies Hebrew . ?sbj instance of academic major } "
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Hebrew",
            "choppedEntity": "Q9288"
        }
    },
    {
        "chopped": {
            "question": "Who is the choreographer of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1809 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown choreographer ?ans1}"
        },
        "original": {
            "question": "Who is the choreographer of The Rite of Spring",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q206015 wdt:P1809 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { The Rite of Spring choreographer ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Rite of Spring",
            "choppedEntity": "Q206015"
        }
    },
    {
        "chopped": {
            "question": "What is the version, edition or translation of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P747 ?obj . ?obj wdt:P31 wd:Q3331189 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown edition ?obj . ?obj instance of version, edition, or translation } "
        },
        "original": {
            "question": "What is the version, edition or translation of The Little Prince",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q25338 wdt:P747 ?obj . ?obj wdt:P31 wd:Q3331189 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { The Little Prince edition ?obj . ?obj instance of version, edition, or translation } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Little Prince",
            "choppedEntity": "Q25338"
        }
    },
    {
        "chopped": {
            "question": "What is the adaptation, version or interpretation of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P747 ?obj . ?obj wdt:P31 wd:Q3331189 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown edition ?obj . ?obj instance of version, edition, or translation } "
        },
        "original": {
            "question": "What is the adaptation, version or interpretation of The Small Prince",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q25338 wdt:P747 ?obj . ?obj wdt:P31 wd:Q3331189 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { The Little Prince edition ?obj . ?obj instance of version, edition, or translation } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Small Prince",
            "choppedEntity": "Q25338"
        }
    },
    {
        "chopped": {
            "question": "Is Brooklyn that has cities the birth location of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P19 ?ans1 . ?ans1 wdt:P150 wd:Q18419}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of birth ?ans1 . ?ans1 contains administrative territorial entity Brooklyn}"
        },
        "original": {
            "question": "Is Brooklyn that has cities the birth location of Richard E. Bellman",
            "query": "SELECT ?answer WHERE { wd:Q441199 wdt:P19 ?answer . ?answer wdt:P150 wd:Q18419}",
            "NLQuery": "SELECT ?answer WHERE { Richard E. Bellman place of birth ?answer . ?answer contains administrative territorial entity Brooklyn}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Richard E. Bellman",
            "choppedEntity": "Q441199"
        }
    },
    {
        "chopped": {
            "question": "Is Brooklyn that has cities the birth area of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P19 ?ans1 . ?ans1 wdt:P150 wd:Q18419}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of birth ?ans1 . ?ans1 contains administrative territorial entity Brooklyn}"
        },
        "original": {
            "question": "Is Brooklyn that has cities the birth area of Richard E. Bellman",
            "query": "SELECT ?answer WHERE { wd:Q441199 wdt:P19 ?answer . ?answer wdt:P150 wd:Q18419}",
            "NLQuery": "SELECT ?answer WHERE { Richard E. Bellman place of birth ?answer . ?answer contains administrative territorial entity Brooklyn}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Richard E. Bellman",
            "choppedEntity": "Q441199"
        }
    },
    {
        "chopped": {
            "question": "A stockholder of Nintendo, what is the publishing house of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P123 ?ans1 . ?ans1 wdt:P127 wd:Q8093}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown publisher ?ans1 . ?ans1 owned by Nintendo}"
        },
        "original": {
            "question": "A stockholder of Nintendo, what is the publishing house of Pok\u00e9mon",
            "query": "SELECT ?answer WHERE { wd:Q864 wdt:P123 ?answer . ?answer wdt:P127 wd:Q8093}",
            "NLQuery": "SELECT ?answer WHERE { Pok\u00e9mon publisher ?answer . ?answer owned by Nintendo}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Pok\u00e9mon",
            "choppedEntity": "Q864"
        }
    },
    {
        "chopped": {
            "question": "Who owns the paintings of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1830 ?X . ?X wdt:P180 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown owner of ?X . ?X depicts ?ans1}"
        },
        "original": {
            "question": "Who owns the paintings of Paula Hoegh-Guldberg",
            "query": "SELECT ?answer WHERE { wd:Q47508083 wdt:P1830 ?X . ?X wdt:P180 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Paula H\u00f8egh-Guldberg owner of ?X . ?X depicts ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Paula Hoegh-Guldberg",
            "choppedEntity": "Q47508083"
        }
    },
    {
        "chopped": {
            "question": "Who claims the canvases of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1830 ?X . ?X wdt:P180 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown owner of ?X . ?X depicts ?ans1}"
        },
        "original": {
            "question": "Who claims the canvases of Paula Hoegh-Guldberg",
            "query": "SELECT ?answer WHERE { wd:Q47508083 wdt:P1830 ?X . ?X wdt:P180 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Paula H\u00f8egh-Guldberg owner of ?X . ?X depicts ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Paula Hoegh-Guldberg",
            "choppedEntity": "Q47508083"
        }
    },
    {
        "chopped": {
            "question": "Which character did Graham Chapman play in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P161 ?s . ?s ps:P161 wd:Q24962 . ?s pq:P453 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cast member ?s . ?s cast member Graham Chapman . ?s character role ?ans1}"
        },
        "original": {
            "question": "Which character did Graham Chapman play in Monty Python and the Holy Grail",
            "query": "SELECT ?value WHERE { wd:Q25043 p:P161 ?s . ?s ps:P161 wd:Q24962 . ?s pq:P453 ?value}",
            "NLQuery": "SELECT ?value WHERE { Monty Python and the Holy Grail cast member ?s . ?s cast member Graham Chapman . ?s character role ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Monty Python and the Holy Grail",
            "choppedEntity": "Q25043"
        }
    },
    {
        "chopped": {
            "question": "What role did Graham Chapman play in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P161 ?s . ?s ps:P161 wd:Q24962 . ?s pq:P453 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cast member ?s . ?s cast member Graham Chapman . ?s character role ?ans1}"
        },
        "original": {
            "question": "What role did Graham Chapman play in Monty Python and the Holy Grail",
            "query": "SELECT ?value WHERE { wd:Q25043 p:P161 ?s . ?s ps:P161 wd:Q24962 . ?s pq:P453 ?value}",
            "NLQuery": "SELECT ?value WHERE { Monty Python and the Holy Grail cast member ?s . ?s cast member Graham Chapman . ?s character role ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Monty Python and the Holy Grail",
            "choppedEntity": "Q25043"
        }
    },
    {
        "chopped": {
            "question": "At the time of 2009-1-1, who was the spouse of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'2009')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),'2009')) }"
        },
        "original": {
            "question": "At the time of 2009-1-1, who was the spouse of Ted Kennedy",
            "query": "SELECT ?obj WHERE { wd:Q134549 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'2009')) }",
            "NLQuery": "SELECT ?obj WHERE { Ted Kennedy spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'2009')) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ted Kennedy",
            "choppedEntity": "Q134549"
        }
    },
    {
        "chopped": {
            "question": "What is the academic major and degree of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P512 ?s . ?s ps:P512 ?ans1 . ?s pq:P812 wd:Q194292 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown academic degree ?s . ?s academic degree ?ans1 . ?s academic major operations research }"
        },
        "original": {
            "question": "What is the academic major and degree of Bengt Holmstrom's",
            "query": "SELECT ?obj WHERE { wd:Q354897 p:P512 ?s . ?s ps:P512 ?obj . ?s pq:P812 wd:Q194292 }",
            "NLQuery": "SELECT ?obj WHERE { Bengt Holmstr\u00f6m academic degree ?s . ?s academic degree ?obj . ?s academic major operations research }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Bengt Holmstrom's",
            "choppedEntity": "Q354897"
        }
    },
    {
        "chopped": {
            "question": "What degree and academic major are held by ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P512 ?s . ?s ps:P512 ?ans1 . ?s pq:P812 wd:Q194292 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown academic degree ?s . ?s academic degree ?ans1 . ?s academic major operations research }"
        },
        "original": {
            "question": "What degree and academic major are held by Bengt Holmstrom",
            "query": "SELECT ?obj WHERE { wd:Q354897 p:P512 ?s . ?s ps:P512 ?obj . ?s pq:P812 wd:Q194292 }",
            "NLQuery": "SELECT ?obj WHERE { Bengt Holmstr\u00f6m academic degree ?s . ?s academic degree ?obj . ?s academic major operations research }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Bengt Holmstrom",
            "choppedEntity": "Q354897"
        }
    },
    {
        "chopped": {
            "question": "Which diplomats signed ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1891 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown signatory ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "Which diplomats signed the Treaty of Versailles",
            "query": "SELECT ?answer WHERE { wd:Q8736 wdt:P1891 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Treaty of Versailles signatory ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "LAW",
            "choppedText": "the Treaty of Versailles",
            "choppedEntity": "Q8736"
        }
    },
    {
        "chopped": {
            "question": "What is crew member Yuri Gagarin's ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1029 wd:Q7327 . ?sbj wdt:P31 ?unknown } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj crew member Yuri Gagarin . ?sbj instance of ?unknown } "
        },
        "original": {
            "question": "What is crew member Yuri Gagarin's Vostok",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1029 wd:Q7327 . ?sbj wdt:P31 wd:Q624038 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj crew member Yuri Gagarin . ?sbj instance of Vostok } "
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Vostok",
            "choppedEntity": "Q624038"
        }
    },
    {
        "chopped": {
            "question": "When was the Marriage of Brittany Murphy and ",
            "query": "SELECT ?ans1 WHERE { wd:Q168847 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Brittany Murphy spouse ?s . ?s spouse ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When was the Marriage of Brittany Murphy and Simon Monjack",
            "query": "SELECT ?value WHERE { wd:Q168847 p:P26 ?s . ?s ps:P26 wd:Q645704 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Brittany Murphy spouse ?s . ?s spouse Simon Monjack . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Simon Monjack",
            "choppedEntity": "Q645704"
        }
    },
    {
        "chopped": {
            "question": "What is the minimum age for compulsory education in ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3270 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown compulsory education (minimum age) ?ans1}"
        },
        "original": {
            "question": "What is the minimum age for compulsory education in Oregon",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q824 wdt:P3270 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Oregon compulsory education (minimum age) ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Oregon",
            "choppedEntity": "Q824"
        }
    },
    {
        "chopped": {
            "question": "Who gave the membership to ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P463 ?X . ?X wdt:P112 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown member of ?X . ?X founded by ?ans1}"
        },
        "original": {
            "question": "Who gave the membership to Ernest Lawrence",
            "query": "SELECT ?answer WHERE { wd:Q169577 wdt:P463 ?X . ?X wdt:P112 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Ernest Lawrence member of ?X . ?X founded by ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ernest Lawrence",
            "choppedEntity": "Q169577"
        }
    },
    {
        "chopped": {
            "question": "Who practices ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P3095 ?ans1 . ?unknown wdt:P457 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown practiced by ?ans1 . ?unknown foundational text ?ans2 }"
        },
        "original": {
            "question": "Who practices Islam",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q432 wdt:P3095 ?ans_1 . wd:Q432 wdt:P457 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Islam practiced by ?ans_1 . Islam foundational text ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Islam",
            "choppedEntity": "Q432"
        }
    },
    {
        "chopped": {
            "question": "When did the Willis Group sell ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P127 ?s . ?s ps:P127 wd:Q919120 . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown owned by ?s . ?s owned by Willis Group . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did the Willis Group sell Willis Tower",
            "query": "SELECT ?value WHERE { wd:Q29294 p:P127 ?s . ?s ps:P127 wd:Q919120 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Willis Tower owned by ?s . ?s owned by Willis Group . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Willis Tower",
            "choppedEntity": "Q29294"
        }
    },
    {
        "chopped": {
            "question": "What was the year when willis tower sold by ",
            "query": "SELECT ?ans1 WHERE { wd:Q29294 p:P127 ?s . ?s ps:P127 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Willis Tower owned by ?s . ?s owned by ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "What was the year when willis tower sold by willis group",
            "query": "SELECT ?value WHERE { wd:Q29294 p:P127 ?s . ?s ps:P127 wd:Q919120 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Willis Tower owned by ?s . ?s owned by Willis Group . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "willis group",
            "choppedEntity": "Q919120"
        }
    },
    {
        "chopped": {
            "question": "What painter of Maoism died in ",
            "query": "SELECT ?ans1 WHERE { wd:Q167651 wdt:P170 ?ans1 . ?ans1 wdt:P20 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Maoism creator ?ans1 . ?ans1 place of death ?unknown}"
        },
        "original": {
            "question": "What painter of Maoism died in Zhongnanhai",
            "query": "SELECT ?answer WHERE { wd:Q167651 wdt:P170 ?answer . ?answer wdt:P20 wd:Q197889}",
            "NLQuery": "SELECT ?answer WHERE { Maoism creator ?answer . ?answer place of death Zhongnanhai}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Zhongnanhai",
            "choppedEntity": "Q197889"
        }
    },
    {
        "chopped": {
            "question": "What painter of Maoism kicked the bucket in ",
            "query": "SELECT ?ans1 WHERE { wd:Q167651 wdt:P170 ?ans1 . ?ans1 wdt:P20 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Maoism creator ?ans1 . ?ans1 place of death ?unknown}"
        },
        "original": {
            "question": "What painter of Maoism kicked the bucket in Zhongnanhai",
            "query": "SELECT ?answer WHERE { wd:Q167651 wdt:P170 ?answer . ?answer wdt:P20 wd:Q197889}",
            "NLQuery": "SELECT ?answer WHERE { Maoism creator ?answer . ?answer place of death Zhongnanhai}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Zhongnanhai",
            "choppedEntity": "Q197889"
        }
    },
    {
        "chopped": {
            "question": "who human spaceflight for astronaut mission of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P450 ?obj . ?obj wdt:P31 wd:Q752783 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown astronaut mission ?obj . ?obj instance of human spaceflight } "
        },
        "original": {
            "question": "who human spaceflight for astronaut mission of Gordon Cooper",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q312833 wdt:P450 ?obj . ?obj wdt:P31 wd:Q752783 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Gordon Cooper astronaut mission ?obj . ?obj instance of human spaceflight } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Gordon Cooper",
            "choppedEntity": "Q312833"
        }
    },
    {
        "chopped": {
            "question": "who human spaceflight for space explorer mission of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P450 ?obj . ?obj wdt:P31 wd:Q752783 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown astronaut mission ?obj . ?obj instance of human spaceflight } "
        },
        "original": {
            "question": "who human spaceflight for space explorer mission of Gordon Cooper",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q312833 wdt:P450 ?obj . ?obj wdt:P31 wd:Q752783 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Gordon Cooper astronaut mission ?obj . ?obj instance of human spaceflight } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Gordon Cooper",
            "choppedEntity": "Q312833"
        }
    },
    {
        "chopped": {
            "question": "Which is the number of countries of origin for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P495 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown country of origin ?obj }"
        },
        "original": {
            "question": "Which is the number of countries of origin for ska",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q54365 wdt:P495 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { ska country of origin ?obj }"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "ska",
            "choppedEntity": "Q54365"
        }
    },
    {
        "chopped": {
            "question": "Which is a service entry of Airbus ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P729 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown service entry ?ans1}"
        },
        "original": {
            "question": "Which is a service entry of Airbus A340",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q6481 wdt:P729 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { A340 service entry ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "A340",
            "choppedEntity": "Q6481"
        }
    },
    {
        "chopped": {
            "question": "Which is the Deutsche Synchronkartei film ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3844 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Deutsche Synchronkartei film ID ?ans1}"
        },
        "original": {
            "question": "Which is the Deutsche Synchronkartei film ID of Pan's Labyrinth",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q216006 wdt:P3844 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Pan's Labyrinth Deutsche Synchronkartei film ID ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Pan's Labyrinth",
            "choppedEntity": "Q216006"
        }
    },
    {
        "chopped": {
            "question": "Do Jammu and Kashmir share borders with Punjab and ",
            "query": "ASK WHERE { wd:Q1180 wdt:P47 wd:Q22424 . wd:Q1180 wdt:P47 ?unknown }",
            "NLQuery": "ASK WHERE { Jammu and Kashmir shares border with Punjab . Jammu and Kashmir shares border with ?unknown }"
        },
        "original": {
            "question": "Do Jammu and Kashmir share borders with Punjab and Himachal Pradesh",
            "query": "ASK WHERE { wd:Q1180 wdt:P47 wd:Q22424 . wd:Q1180 wdt:P47 wd:Q1177 }",
            "NLQuery": "ASK WHERE { Jammu and Kashmir shares border with Punjab . Jammu and Kashmir shares border with Himachal Pradesh }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Himachal Pradesh",
            "choppedEntity": "Q1177"
        }
    },
    {
        "chopped": {
            "question": "Which is the research institute for subsidiary of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P355 ?obj . ?obj wdt:P31 wd:Q31855 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown subsidiary ?obj . ?obj instance of research institute } "
        },
        "original": {
            "question": "Which is the research institute for subsidiary of Rutgers University",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q499451 wdt:P355 ?obj . ?obj wdt:P31 wd:Q31855 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Rutgers University subsidiary ?obj . ?obj instance of research institute } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Rutgers University",
            "choppedEntity": "Q499451"
        }
    },
    {
        "chopped": {
            "question": "Which is the investigate established for backup of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P355 ?obj . ?obj wdt:P31 wd:Q31855 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown subsidiary ?obj . ?obj instance of research institute } "
        },
        "original": {
            "question": "Which is the investigate established for backup of Rutgers University",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q499451 wdt:P355 ?obj . ?obj wdt:P31 wd:Q31855 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Rutgers University subsidiary ?obj . ?obj instance of research institute } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Rutgers University",
            "choppedEntity": "Q499451"
        }
    },
    {
        "chopped": {
            "question": "Which non-profit organization runs ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P137 ?obj . ?obj wdt:P31 wd:Q163740 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown operator ?obj . ?obj instance of nonprofit organization } "
        },
        "original": {
            "question": "Which non-profit organization runs Wikipedia",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q52 wdt:P137 ?obj . ?obj wdt:P31 wd:Q163740 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Wikipedia operator ?obj . ?obj instance of nonprofit organization } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Wikipedia",
            "choppedEntity": "Q52"
        }
    },
    {
        "chopped": {
            "question": "Who is the performer ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P175 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub performer ?unknown }"
        },
        "original": {
            "question": "Who is the performer Boris Grebenshcikov",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P175 wd:Q542101 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub performer Boris Grebenshchikov }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Boris Grebenshcikov",
            "choppedEntity": "Q542101"
        }
    },
    {
        "chopped": {
            "question": "Who is ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P175 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub performer ?unknown }"
        },
        "original": {
            "question": "Who is Boris Grebenshcikov",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P175 wd:Q542101 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub performer Boris Grebenshchikov }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Boris Grebenshcikov",
            "choppedEntity": "Q542101"
        }
    },
    {
        "chopped": {
            "question": "Which is the diaspora of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3833 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown diaspora ?ans1}"
        },
        "original": {
            "question": "Which is the diaspora of the African Americans",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q49085 wdt:P3833 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { African Americans diaspora ?answer}"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "the African Americans",
            "choppedEntity": "Q49085"
        }
    },
    {
        "chopped": {
            "question": "Which is the Basketball-Reference.com NBA coach ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4718 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Basketball-Reference.com NBA coach ID ?ans1}"
        },
        "original": {
            "question": "Which is the Basketball-Reference.com NBA coach ID of George Mikan",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q314185 wdt:P4718 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { George Mikan Basketball-Reference.com NBA coach ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "George Mikan",
            "choppedEntity": "Q314185"
        }
    },
    {
        "chopped": {
            "question": "At what time was Bank of China owned as ",
            "query": "SELECT ?ans1 WHERE { wd:Q790068 p:P127 ?s . ?s ps:P127 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Bank of China owned by ?s . ?s owned by ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "At what time was Bank of China owned as National Council for Social Security Fund",
            "query": "SELECT ?value WHERE { wd:Q790068 p:P127 ?s . ?s ps:P127 wd:Q6971896 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Bank of China owned by ?s . ?s owned by National Council for Social Security Fund . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "National Council for Social Security Fund",
            "choppedEntity": "Q6971896"
        }
    },
    {
        "chopped": {
            "question": "What is the diplomatic relation between Iceland, which has arrondissements, and ",
            "query": "SELECT ?ans1 WHERE { wd:Q189 wdt:P530 ?ans1 . ?ans1 wdt:P150 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Iceland diplomatic relation ?ans1 . ?ans1 contains administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "What is the diplomatic relation between Iceland, which has arrondissements, and Arkhangelsk Oblast",
            "query": "SELECT ?answer WHERE { wd:Q189 wdt:P530 ?answer . ?answer wdt:P150 wd:Q1875}",
            "NLQuery": "SELECT ?answer WHERE { Iceland diplomatic relation ?answer . ?answer contains administrative territorial entity Arkhangelsk Oblast}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Arkhangelsk Oblast",
            "choppedEntity": "Q1875"
        }
    },
    {
        "chopped": {
            "question": "Which is the grants academic degree for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P5460 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown grants ?ans1}"
        },
        "original": {
            "question": "Which is the grants academic degree for Free University of Berlin",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q153006 wdt:P5460 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Free University of Berlin grants ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Free University of Berlin",
            "choppedEntity": "Q153006"
        }
    },
    {
        "chopped": {
            "question": "What typology is used in the written language of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1412 ?X . ?X wdt:P4132 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown languages spoken, written or signed ?X . ?X linguistic typology ?ans1}"
        },
        "original": {
            "question": "What typology is used in the written language of Robert Oppenheimer",
            "query": "SELECT ?answer WHERE { wd:Q132537 wdt:P1412 ?X . ?X wdt:P4132 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { J. Robert Oppenheimer languages spoken, written or signed ?X . ?X linguistic typology ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Robert Oppenheimer",
            "choppedEntity": "Q132537"
        }
    },
    {
        "chopped": {
            "question": "Which controversial state is headed by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P35 ?unknown . ?sbj wdt:P31 wd:Q15634554 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj head of state ?unknown . ?sbj instance of state with limited recognition } "
        },
        "original": {
            "question": "Which controversial state is headed by Mahmoud Abbas",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P35 wd:Q127998 . ?sbj wdt:P31 wd:Q15634554 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj head of state Mahmoud Abbas . ?sbj instance of state with limited recognition } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mahmoud Abbas",
            "choppedEntity": "Q127998"
        }
    },
    {
        "chopped": {
            "question": "Who won for writing the comedy series ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 wd:Q3045762 . ?s pq:P1346 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received Primetime Emmy Award for Outstanding Writing for a Comedy Series . ?s winner ?ans1}"
        },
        "original": {
            "question": "Who won for writing the comedy series Family Tiles",
            "query": "SELECT ?value WHERE { wd:Q1144624 p:P166 ?s . ?s ps:P166 wd:Q3045762 . ?s pq:P1346 ?value}",
            "NLQuery": "SELECT ?value WHERE { Family Ties award received ?s . ?s award received Primetime Emmy Award for Outstanding Writing for a Comedy Series . ?s winner ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Family Tiles",
            "choppedEntity": "Q1144624"
        }
    },
    {
        "chopped": {
            "question": "What is the start time for the Santo Tomas de Aquinas feast on ",
            "query": "SELECT ?ans1 WHERE { wd:Q9438 p:P841 ?s . ?s ps:P841 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Thomas Aquinas feast day ?s . ?s feast day ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "What is the start time for the Santo Tomas de Aquinas feast on March 7th",
            "query": "SELECT ?value WHERE { wd:Q9438 p:P841 ?s . ?s ps:P841 wd:Q2394 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Thomas Aquinas feast day ?s . ?s feast day March 7 . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "March 7th",
            "choppedEntity": "Q2394"
        }
    },
    {
        "chopped": {
            "question": "When will Triple H return to ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P156 ?X . ?X wdt:P161 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown followed by ?X . ?X cast member ?ans1}"
        },
        "original": {
            "question": "When will Triple H return to Wrestle Mania",
            "query": "SELECT ?answer WHERE { wd:Q50805 wdt:P156 ?X . ?X wdt:P161 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { WrestleMania I followed by ?X . ?X cast member ?answer}"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "Wrestle Mania",
            "choppedEntity": "Q50805"
        }
    },
    {
        "chopped": {
            "question": "When is Triple H's return on ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P156 ?X . ?X wdt:P161 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown followed by ?X . ?X cast member ?ans1}"
        },
        "original": {
            "question": "When is Triple H's return on Wreste Mania",
            "query": "SELECT ?answer WHERE { wd:Q50805 wdt:P156 ?X . ?X wdt:P161 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { WrestleMania I followed by ?X . ?X cast member ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Wreste Mania",
            "choppedEntity": "Q50805"
        }
    },
    {
        "chopped": {
            "question": "Where is the medals of the artist who inspired this of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1877 ?X . ?X wdt:P166 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown after a work by ?X . ?X award received ?ans1}"
        },
        "original": {
            "question": "Where is the medals of the artist who inspired this of Solaris",
            "query": "SELECT ?answer WHERE { wd:Q125772 wdt:P1877 ?X . ?X wdt:P166 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Solaris after a work by ?X . ?X award received ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Solaris",
            "choppedEntity": "Q125772"
        }
    },
    {
        "chopped": {
            "question": "Where is the awards of the craftsman who motivated this of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1877 ?X . ?X wdt:P166 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown after a work by ?X . ?X award received ?ans1}"
        },
        "original": {
            "question": "Where is the awards of the craftsman who motivated this of Solaris",
            "query": "SELECT ?answer WHERE { wd:Q125772 wdt:P1877 ?X . ?X wdt:P166 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Solaris after a work by ?X . ?X award received ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Solaris",
            "choppedEntity": "Q125772"
        }
    },
    {
        "chopped": {
            "question": "Which is Swiss Federal Archives ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3889 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Swiss Federal Archives ID ?ans1}"
        },
        "original": {
            "question": "Which is Swiss Federal Archives ID for Rudolf Hess",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q75866 wdt:P3889 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Rudolf Hess Swiss Federal Archives ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Rudolf Hess",
            "choppedEntity": "Q75866"
        }
    },
    {
        "chopped": {
            "question": "Which instrument is of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1303 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown instrument ?ans1}"
        },
        "original": {
            "question": "Which instrument is of Herbie Hancock",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q105875 wdt:P1303 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Herbie Hancock instrument ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Herbie Hancock",
            "choppedEntity": "Q105875"
        }
    },
    {
        "chopped": {
            "question": "Which is the KMDb person ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1649 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown KMDb person ID ?ans1}"
        },
        "original": {
            "question": "Which is the KMDb person ID for Jeff Bridges",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q174843 wdt:P1649 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Jeff Bridges KMDb person ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jeff Bridges",
            "choppedEntity": "Q174843"
        }
    },
    {
        "chopped": {
            "question": "What academic degree does Tina Fey hold from ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q14540 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P512 ?ans1 . ?s pq:P812 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Tina Fey educated at ?s . ?s educated at ?unknown . ?s academic degree ?ans1 . ?s academic major ?ans2 }"
        },
        "original": {
            "question": "What academic degree does Tina Fey hold from the University of Virginia",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q14540 p:P69 ?s . ?s ps:P69 wd:Q213439 . ?s pq:P512 ?value1 . ?s pq:P812 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Tina Fey educated at ?s . ?s educated at University of Virginia . ?s academic degree ?value1 . ?s academic major ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the University of Virginia",
            "choppedEntity": "Q213439"
        }
    },
    {
        "chopped": {
            "question": "What tutorial diploma does Tina Fey hold from ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q14540 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P512 ?ans1 . ?s pq:P812 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Tina Fey educated at ?s . ?s educated at ?unknown . ?s academic degree ?ans1 . ?s academic major ?ans2 }"
        },
        "original": {
            "question": "What tutorial diploma does Tina Fey hold from the University of Virginia",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q14540 p:P69 ?s . ?s ps:P69 wd:Q213439 . ?s pq:P512 ?value1 . ?s pq:P812 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Tina Fey educated at ?s . ?s educated at University of Virginia . ?s academic degree ?value1 . ?s academic major ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the University of Virginia",
            "choppedEntity": "Q213439"
        }
    },
    {
        "chopped": {
            "question": "Which is the statistical leader of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P3279 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 statistical leader ?unknown}"
        },
        "original": {
            "question": "Which is the statistical leader of LeBron James",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P3279 wd:Q36159}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer statistical leader LeBron James}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "LeBron James",
            "choppedEntity": "Q36159"
        }
    },
    {
        "chopped": {
            "question": "What's the CPI rate in the state of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P17 ?X . ?X wdt:P1279 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country ?X . ?X inflation rate ?ans1}"
        },
        "original": {
            "question": "What's the CPI rate in the state of Munster",
            "query": "SELECT ?answer WHERE { wd:Q2742 wdt:P17 ?X . ?X wdt:P1279 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { M\u00fcnster country ?X . ?X inflation rate ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Munster",
            "choppedEntity": "Q2742"
        }
    },
    {
        "chopped": {
            "question": "What's the CPI rate within the state of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P17 ?X . ?X wdt:P1279 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country ?X . ?X inflation rate ?ans1}"
        },
        "original": {
            "question": "What's the CPI rate within the state of Munster",
            "query": "SELECT ?answer WHERE { wd:Q2742 wdt:P17 ?X . ?X wdt:P1279 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { M\u00fcnster country ?X . ?X inflation rate ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Munster",
            "choppedEntity": "Q2742"
        }
    },
    {
        "chopped": {
            "question": "Who are the lineal descendants of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1038 ?X . ?X wdt:P136 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown relative ?X . ?X genre ?ans1}"
        },
        "original": {
            "question": "Who are the lineal descendants of Mazhar Ali Khan",
            "query": "SELECT ?answer WHERE { wd:Q6798492 wdt:P1038 ?X . ?X wdt:P136 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Mazhar Ali Khan relative ?X . ?X genre ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mazhar Ali Khan",
            "choppedEntity": "Q6798492"
        }
    },
    {
        "chopped": {
            "question": "Who are decendants fo ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1038 ?X . ?X wdt:P136 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown relative ?X . ?X genre ?ans1}"
        },
        "original": {
            "question": "Who are decendants fo Mazhar Ali Khan",
            "query": "SELECT ?answer WHERE { wd:Q6798492 wdt:P1038 ?X . ?X wdt:P136 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Mazhar Ali Khan relative ?X . ?X genre ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mazhar Ali Khan",
            "choppedEntity": "Q6798492"
        }
    },
    {
        "chopped": {
            "question": "When was Ted Stevens hired and fired from ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q50599 p:P108 ?s . ?s ps:P108 ?unknown . ?s pq:P582 ?ans1 . ?s pq:P580 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Ted Stevens employer ?s . ?s employer ?unknown . ?s end time ?ans1 . ?s start time ?ans2 }"
        },
        "original": {
            "question": "When was Ted Stevens hired and fired from the United States Department of the Interior",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q50599 p:P108 ?s . ?s ps:P108 wd:Q608427 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Ted Stevens employer ?s . ?s employer United States Department of the Interior . ?s end time ?value1 . ?s start time ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the United States Department of the Interior",
            "choppedEntity": "Q608427"
        }
    },
    {
        "chopped": {
            "question": "Who replaced the position held by Bill Clinton as President of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1124 p:P39 ?s . ?s ps:P39 ?unknown . ?s pq:P1365 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Bill Clinton position held ?s . ?s position held ?unknown . ?s replaces ?ans1}"
        },
        "original": {
            "question": "Who replaced the position held by Bill Clinton as President of the United States",
            "query": "SELECT ?value WHERE { wd:Q1124 p:P39 ?s . ?s ps:P39 wd:Q11696 . ?s pq:P1365 ?value}",
            "NLQuery": "SELECT ?value WHERE { Bill Clinton position held ?s . ?s position held President of the United States . ?s replaces ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the United States",
            "choppedEntity": "Q11696"
        }
    },
    {
        "chopped": {
            "question": "Who was the replacement for President ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P39 ?s . ?s ps:P39 wd:Q11696 . ?s pq:P1365 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown position held ?s . ?s position held President of the United States . ?s replaces ?ans1}"
        },
        "original": {
            "question": "Who was the replacement for President Bill Clinton",
            "query": "SELECT ?value WHERE { wd:Q1124 p:P39 ?s . ?s ps:P39 wd:Q11696 . ?s pq:P1365 ?value}",
            "NLQuery": "SELECT ?value WHERE { Bill Clinton position held ?s . ?s position held President of the United States . ?s replaces ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Bill Clinton",
            "choppedEntity": "Q1124"
        }
    },
    {
        "chopped": {
            "question": "Who is the nominee for Eternal Sunshine of the Spotless Mind which has been nominated for an Academy Award for ",
            "query": "SELECT ?ans1 WHERE { wd:Q208269 p:P1411 ?s . ?s ps:P1411 ?unknown . ?s pq:P2453 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Eternal Sunshine of the Spotless Mind nominated for ?s . ?s nominated for ?unknown . ?s nominee ?ans1}"
        },
        "original": {
            "question": "Who is the nominee for Eternal Sunshine of the Spotless Mind which has been nominated for an Academy Award for Best Writing, Original Screenplay",
            "query": "SELECT ?value WHERE { wd:Q208269 p:P1411 ?s . ?s ps:P1411 wd:Q41417 . ?s pq:P2453 ?value}",
            "NLQuery": "SELECT ?value WHERE { Eternal Sunshine of the Spotless Mind nominated for ?s . ?s nominated for Academy Award for Best Writing, Original Screenplay . ?s nominee ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Best Writing, Original Screenplay",
            "choppedEntity": "Q41417"
        }
    },
    {
        "chopped": {
            "question": "What is the name of the nominee for Eternal Sunshine of the Spotless Mind that has been considered for ",
            "query": "SELECT ?ans1 WHERE { wd:Q208269 p:P1411 ?s . ?s ps:P1411 ?unknown . ?s pq:P2453 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Eternal Sunshine of the Spotless Mind nominated for ?s . ?s nominated for ?unknown . ?s nominee ?ans1}"
        },
        "original": {
            "question": "What is the name of the nominee for Eternal Sunshine of the Spotless Mind that has been considered for an Academy Award for Best Writing, Original Screenplay",
            "query": "SELECT ?value WHERE { wd:Q208269 p:P1411 ?s . ?s ps:P1411 wd:Q41417 . ?s pq:P2453 ?value}",
            "NLQuery": "SELECT ?value WHERE { Eternal Sunshine of the Spotless Mind nominated for ?s . ?s nominated for Academy Award for Best Writing, Original Screenplay . ?s nominee ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "an Academy Award for Best Writing, Original Screenplay",
            "choppedEntity": "Q41417"
        }
    },
    {
        "chopped": {
            "question": "Who is related to actress ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P161 ?X . ?X wdt:P1038 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cast member ?X . ?X relative ?ans1}"
        },
        "original": {
            "question": "Who is related to actress Ishaqzaade",
            "query": "SELECT ?answer WHERE { wd:Q3155258 wdt:P161 ?X . ?X wdt:P1038 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Ishaqzaade cast member ?X . ?X relative ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ishaqzaade",
            "choppedEntity": "Q3155258"
        }
    },
    {
        "chopped": {
            "question": "Who is related to on-screen character ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P161 ?X . ?X wdt:P1038 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cast member ?X . ?X relative ?ans1}"
        },
        "original": {
            "question": "Who is related to on-screen character Ishaqzaade",
            "query": "SELECT ?answer WHERE { wd:Q3155258 wdt:P161 ?X . ?X wdt:P1038 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Ishaqzaade cast member ?X . ?X relative ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ishaqzaade",
            "choppedEntity": "Q3155258"
        }
    },
    {
        "chopped": {
            "question": "Were the Middle Ages followed by the High Middle Ages and ",
            "query": "ASK WHERE { wd:Q12554 wdt:P156 wd:Q212685 . wd:Q12554 wdt:P156 ?unknown }",
            "NLQuery": "ASK WHERE { Middle Ages followed by High Middle Ages . Middle Ages followed by ?unknown }"
        },
        "original": {
            "question": "Were the Middle Ages followed by the High Middle Ages and the early modern period",
            "query": "ASK WHERE { wd:Q12554 wdt:P156 wd:Q212685 . wd:Q12554 wdt:P156 wd:Q5308718 }",
            "NLQuery": "ASK WHERE { Middle Ages followed by High Middle Ages . Middle Ages followed by early modern period }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "the early modern period",
            "choppedEntity": "Q5308718"
        }
    },
    {
        "chopped": {
            "question": "Who is the operator of business at ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P137 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown operator ?obj . ?obj instance of business } "
        },
        "original": {
            "question": "Who is the operator of business at CBS",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q43380 wdt:P137 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { CBS operator ?obj . ?obj instance of business } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "CBS",
            "choppedEntity": "Q43380"
        }
    },
    {
        "chopped": {
            "question": "Who is the administrator of commerce at ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P137 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown operator ?obj . ?obj instance of business } "
        },
        "original": {
            "question": "Who is the administrator of commerce at CBS",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q43380 wdt:P137 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { CBS operator ?obj . ?obj instance of business } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "CBS",
            "choppedEntity": "Q43380"
        }
    },
    {
        "chopped": {
            "question": "Who is the person that created ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P170 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown creator ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who is the person that created Winnie the Pooh",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q188574 wdt:P170 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Winnie the Pooh creator ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Winnie the Pooh",
            "choppedEntity": "Q188574"
        }
    },
    {
        "chopped": {
            "question": "Who created ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P170 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown creator ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who created Winnie the Pooh",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q188574 wdt:P170 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Winnie the Pooh creator ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Winnie the Pooh",
            "choppedEntity": "Q188574"
        }
    },
    {
        "chopped": {
            "question": "What is located in the administrative territorial entity of North Yorkshire that is part of ",
            "query": "SELECT ?ans1 WHERE { wd:Q23086 p:P131 ?s . ?s ps:P131 ?ans1 . ?s pq:P518 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { North Yorkshire located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?ans1 . ?s applies to part ?unknown }"
        },
        "original": {
            "question": "What is located in the administrative territorial entity of North Yorkshire that is part of Stockton-on-Tees",
            "query": "SELECT ?obj WHERE { wd:Q23086 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P518 wd:Q894094 }",
            "NLQuery": "SELECT ?obj WHERE { North Yorkshire located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?obj . ?s applies to part Stockton-on-Tees }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Stockton-on-Tees",
            "choppedEntity": "Q894094"
        }
    },
    {
        "chopped": {
            "question": "What can be found in both the administrative territorial entity of North Yorkshire and ",
            "query": "SELECT ?ans1 WHERE { wd:Q23086 p:P131 ?s . ?s ps:P131 ?ans1 . ?s pq:P518 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { North Yorkshire located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?ans1 . ?s applies to part ?unknown }"
        },
        "original": {
            "question": "What can be found in both the administrative territorial entity of North Yorkshire and Stockton-on-Tees",
            "query": "SELECT ?obj WHERE { wd:Q23086 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P518 wd:Q894094 }",
            "NLQuery": "SELECT ?obj WHERE { North Yorkshire located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?obj . ?s applies to part Stockton-on-Tees }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Stockton-on-Tees",
            "choppedEntity": "Q894094"
        }
    },
    {
        "chopped": {
            "question": "What is the name of a painting created by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P170 ?unknown . ?sbj wdt:P31 wd:Q3305213 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj creator ?unknown . ?sbj instance of painting } "
        },
        "original": {
            "question": "What is the name of a painting created by Rembrandt",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P170 wd:Q5598 . ?sbj wdt:P31 wd:Q3305213 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj creator Rembrandt . ?sbj instance of painting } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Rembrandt",
            "choppedEntity": "Q5598"
        }
    },
    {
        "chopped": {
            "question": "What is the title of a portray made by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P170 ?unknown . ?sbj wdt:P31 wd:Q3305213 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj creator ?unknown . ?sbj instance of painting } "
        },
        "original": {
            "question": "What is the title of a portray made by Rembrandt",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P170 wd:Q5598 . ?sbj wdt:P31 wd:Q3305213 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj creator Rembrandt . ?sbj instance of painting } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Rembrandt",
            "choppedEntity": "Q5598"
        }
    },
    {
        "chopped": {
            "question": "What is the academic degree and academic major of Zora Neale Hurston at ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q220480 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P512 ?ans1 . ?s pq:P812 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Zora Neale Hurston educated at ?s . ?s educated at ?unknown . ?s academic degree ?ans1 . ?s academic major ?ans2 }"
        },
        "original": {
            "question": "What is the academic degree and academic major of Zora Neale Hurston at Barnard College",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q220480 p:P69 ?s . ?s ps:P69 wd:Q167733 . ?s pq:P512 ?value1 . ?s pq:P812 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Zora Neale Hurston educated at ?s . ?s educated at Barnard College . ?s academic degree ?value1 . ?s academic major ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Barnard College",
            "choppedEntity": "Q167733"
        }
    },
    {
        "chopped": {
            "question": "Who was formed as the leader of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P740 ?X . ?X wdt:P1376 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown location of formation ?X . ?X capital of ?ans1}"
        },
        "original": {
            "question": "Who was formed as the leader of Momoiro Clover Z",
            "query": "SELECT ?answer WHERE { wd:Q1070606 wdt:P740 ?X . ?X wdt:P1376 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Momoiro Clover Z location of formation ?X . ?X capital of ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Momoiro Clover Z",
            "choppedEntity": "Q1070606"
        }
    },
    {
        "chopped": {
            "question": "Give me the name of the leader of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P740 ?X . ?X wdt:P1376 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown location of formation ?X . ?X capital of ?ans1}"
        },
        "original": {
            "question": "Give me the name of the leader of Momoiro Clover Z.",
            "query": "SELECT ?answer WHERE { wd:Q1070606 wdt:P740 ?X . ?X wdt:P1376 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Momoiro Clover Z location of formation ?X . ?X capital of ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Momoiro Clover Z.",
            "choppedEntity": "Q1070606"
        }
    },
    {
        "chopped": {
            "question": "What is the Wikimedia category for films shot in ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1740 ?obj . ?obj wdt:P31 wd:Q4167836 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown category for films shot at this location ?obj . ?obj instance of Wikimedia category } "
        },
        "original": {
            "question": "What is the Wikimedia category for films shot in Lyon",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q456 wdt:P1740 ?obj . ?obj wdt:P31 wd:Q4167836 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Lyon category for films shot at this location ?obj . ?obj instance of Wikimedia category } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Lyon",
            "choppedEntity": "Q456"
        }
    },
    {
        "chopped": {
            "question": "What is the Wikimedia category for movies shot in ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1740 ?obj . ?obj wdt:P31 wd:Q4167836 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown category for films shot at this location ?obj . ?obj instance of Wikimedia category } "
        },
        "original": {
            "question": "What is the Wikimedia category for movies shot in Lyon",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q456 wdt:P1740 ?obj . ?obj wdt:P31 wd:Q4167836 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Lyon category for films shot at this location ?obj . ?obj instance of Wikimedia category } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Lyon",
            "choppedEntity": "Q456"
        }
    },
    {
        "chopped": {
            "question": "Was Roald_Dahl's place of death ",
            "query": "ASK WHERE { wd:Q25161 wdt:P20 ?unknown }",
            "NLQuery": "ASK WHERE { Roald Dahl place of death ?unknown }"
        },
        "original": {
            "question": "Was Roald_Dahl's place of death Oxford",
            "query": "ASK WHERE { wd:Q25161 wdt:P20 wd:Q34217 }",
            "NLQuery": "ASK WHERE { Roald Dahl place of death Oxford }"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Oxford",
            "choppedEntity": "Q34217"
        }
    },
    {
        "chopped": {
            "question": "Did Roald Dahl die in ",
            "query": "ASK WHERE { wd:Q25161 wdt:P20 ?unknown }",
            "NLQuery": "ASK WHERE { Roald Dahl place of death ?unknown }"
        },
        "original": {
            "question": "Did Roald Dahl die in Oxford",
            "query": "ASK WHERE { wd:Q25161 wdt:P20 wd:Q34217 }",
            "NLQuery": "ASK WHERE { Roald Dahl place of death Oxford }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Oxford",
            "choppedEntity": "Q34217"
        }
    },
    {
        "chopped": {
            "question": "Who are the parent organization and the parent club of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P749 ?ans1 . ?unknown wdt:P831 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown parent organization ?ans1 . ?unknown parent club ?ans2 }"
        },
        "original": {
            "question": "Who are the parent organization and the parent club of FC Barcelona",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q7156 wdt:P749 ?ans_1 . wd:Q7156 wdt:P831 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { FC Barcelona parent organization ?ans_1 . FC Barcelona parent club ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "FC Barcelona",
            "choppedEntity": "Q7156"
        }
    },
    {
        "chopped": {
            "question": "What is the parent organization and club of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P749 ?ans1 . ?unknown wdt:P831 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown parent organization ?ans1 . ?unknown parent club ?ans2 }"
        },
        "original": {
            "question": "What is the parent organization and club of FC Barcelona",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q7156 wdt:P749 ?ans_1 . wd:Q7156 wdt:P831 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { FC Barcelona parent organization ?ans_1 . FC Barcelona parent club ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "FC Barcelona",
            "choppedEntity": "Q7156"
        }
    },
    {
        "chopped": {
            "question": "Which is the installation for the collection of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P195 ?unknown . ?sbj wdt:P31 wd:Q20437094 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj collection ?unknown . ?sbj instance of installation } "
        },
        "original": {
            "question": "Which is the installation for the collection of University of Pennsylvania",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P195 wd:Q49117 . ?sbj wdt:P31 wd:Q20437094 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj collection University of Pennsylvania . ?sbj instance of installation } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "University of Pennsylvania",
            "choppedEntity": "Q49117"
        }
    },
    {
        "chopped": {
            "question": "What award did Elia Kazan receive in the 27th ",
            "query": "SELECT ?ans1 WHERE { wd:Q72717 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Elia Kazan award received ?s . ?s award received ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "What award did Elia Kazan receive in the 27th Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q72717 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q608130 }",
            "NLQuery": "SELECT ?obj WHERE { Elia Kazan award received ?s . ?s award received ?obj . ?s statement is subject of 27th Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q608130"
        }
    },
    {
        "chopped": {
            "question": "What is the village with the highest number of households whose country is ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q532 . ?ans1 wdt:P1538 ?obj . ?ans1 wdt:P17 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of village . ?ans1 number of households ?obj . ?ans1 country ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the village with the highest number of households whose country is India",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q532 . ?ent wdt:P1538 ?obj . ?ent wdt:P17 wd:Q668 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of village . ?ent number of households ?obj . ?ent country India } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "India",
            "choppedEntity": "Q668"
        }
    },
    {
        "chopped": {
            "question": "Who are the characters of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P144 ?X . ?X wdt:P674 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown based on ?X . ?X characters ?ans1}"
        },
        "original": {
            "question": "Who are the characters of Adam and Eve",
            "query": "SELECT ?answer WHERE { wd:Q3605055 wdt:P144 ?X . ?X wdt:P674 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Adam and Eve based on ?X . ?X characters ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Adam and Eve",
            "choppedEntity": "Q3605055"
        }
    },
    {
        "chopped": {
            "question": "Who is the architect responsible for the architectural style of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P84 ?ans1 . ?unknown wdt:P149 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown architect ?ans1 . ?unknown architectural style ?ans2 }"
        },
        "original": {
            "question": "Who is the architect responsible for the architectural style of the Palace of Westminster",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q62408 wdt:P84 ?ans_1 . wd:Q62408 wdt:P149 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Palace of Westminster architect ?ans_1 . Palace of Westminster architectural style ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "the Palace of Westminster",
            "choppedEntity": "Q62408"
        }
    },
    {
        "chopped": {
            "question": "For what work did Judy Blume win ",
            "query": "SELECT ?ans1 WHERE { wd:Q441214 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P1686 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Judy Blume award received ?s . ?s award received ?unknown . ?s for work ?ans1}"
        },
        "original": {
            "question": "For what work did Judy Blume win the Dorothy Canfield Fisher Children's Book Award",
            "query": "SELECT ?value WHERE { wd:Q441214 p:P166 ?s . ?s ps:P166 wd:Q5298343 . ?s pq:P1686 ?value}",
            "NLQuery": "SELECT ?value WHERE { Judy Blume award received ?s . ?s award received Dorothy Canfield Fisher Children's Book Award . ?s for work ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Dorothy Canfield Fisher Children's Book Award",
            "choppedEntity": "Q5298343"
        }
    },
    {
        "chopped": {
            "question": "Which is the UAI code for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3202 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown UAI code ?ans1}"
        },
        "original": {
            "question": "Which is the UAI code for Coll\u00e8ge de France",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q202660 wdt:P3202 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Coll\u00e8ge de France UAI code ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Coll\u00e8ge de France",
            "choppedEntity": "Q202660"
        }
    },
    {
        "chopped": {
            "question": "Which is the storyboard artist for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P3275 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 storyboard artist ?unknown}"
        },
        "original": {
            "question": "Which is the storyboard artist for Ub Iwerks",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P3275 wd:Q336424}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer storyboard artist Ub Iwerks}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Ub Iwerks",
            "choppedEntity": "Q336424"
        }
    },
    {
        "chopped": {
            "question": "Which literary works are from sculptor ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P170 ?X . ?X wdt:P800 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown creator ?X . ?X notable work ?ans1}"
        },
        "original": {
            "question": "Which literary works are from sculptor Arturo Belano",
            "query": "SELECT ?answer WHERE { wd:Q4801703 wdt:P170 ?X . ?X wdt:P800 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Arturo Belano creator ?X . ?X notable work ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Arturo Belano",
            "choppedEntity": "Q4801703"
        }
    },
    {
        "chopped": {
            "question": "What literary works were produced by the sculptor ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P170 ?X . ?X wdt:P800 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown creator ?X . ?X notable work ?ans1}"
        },
        "original": {
            "question": "What literary works were produced by the sculptor Arturo Belano",
            "query": "SELECT ?answer WHERE { wd:Q4801703 wdt:P170 ?X . ?X wdt:P800 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Arturo Belano creator ?X . ?X notable work ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Arturo Belano",
            "choppedEntity": "Q4801703"
        }
    },
    {
        "chopped": {
            "question": "What diplomatic relation comes from ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P495 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country of origin ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "What diplomatic relation comes from The Amazing Spider Man",
            "query": "SELECT ?answer WHERE { wd:Q944598 wdt:P495 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Amazing Spider-Man country of origin ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Amazing Spider Man",
            "choppedEntity": "Q944598"
        }
    },
    {
        "chopped": {
            "question": "Which is the work present in the work of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1441 ?obj . ?obj wdt:P31 wd:Q386724 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown present in work ?obj . ?obj instance of work } "
        },
        "original": {
            "question": "Which is the work present in the work of Confucius",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q4604 wdt:P1441 ?obj . ?obj wdt:P31 wd:Q386724 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Confucius present in work ?obj . ?obj instance of work } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Confucius",
            "choppedEntity": "Q4604"
        }
    },
    {
        "chopped": {
            "question": "Which is the work display within the work of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1441 ?obj . ?obj wdt:P31 wd:Q386724 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown present in work ?obj . ?obj instance of work } "
        },
        "original": {
            "question": "Which is the work display within the work of Confucius",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q4604 wdt:P1441 ?obj . ?obj wdt:P31 wd:Q386724 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Confucius present in work ?obj . ?obj instance of work } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Confucius",
            "choppedEntity": "Q4604"
        }
    },
    {
        "chopped": {
            "question": "When was Julian Castro the head of government for ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P6 ?s . ?s ps:P6 wd:Q970720 . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown head of government ?s . ?s head of government Juli\u00e1n Castro . ?s start time ?ans1}"
        },
        "original": {
            "question": "When was Julian Castro the head of government for San Antonio",
            "query": "SELECT ?value WHERE { wd:Q975 p:P6 ?s . ?s ps:P6 wd:Q970720 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { San Antonio head of government ?s . ?s head of government Juli\u00e1n Castro . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "San Antonio",
            "choppedEntity": "Q975"
        }
    },
    {
        "chopped": {
            "question": "What is the BFMTV.com ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4939 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown BFMTV.com director ID ?ans1}"
        },
        "original": {
            "question": "What is the BFMTV.com ID for Bernard Arnault",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q32055 wdt:P4939 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Bernard Arnault BFMTV.com director ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Bernard Arnault",
            "choppedEntity": "Q32055"
        }
    },
    {
        "chopped": {
            "question": "Was James_Madison member of American Academy of Arts and Sciences and ",
            "query": "ASK WHERE { wd:Q11813 wdt:P463 wd:Q463303 . wd:Q11813 wdt:P463 ?unknown }",
            "NLQuery": "ASK WHERE { James Madison member of American Academy of Arts and Sciences . James Madison member of ?unknown }"
        },
        "original": {
            "question": "Was James_Madison member of American Academy of Arts and Sciences and American Antiquarian Society",
            "query": "ASK WHERE { wd:Q11813 wdt:P463 wd:Q463303 . wd:Q11813 wdt:P463 wd:Q4742987 }",
            "NLQuery": "ASK WHERE { James Madison member of American Academy of Arts and Sciences . James Madison member of American Antiquarian Society }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "American Antiquarian Society",
            "choppedEntity": "Q4742987"
        }
    },
    {
        "chopped": {
            "question": "Is it true that James Madison was a member of American Academy of Arts and Sciences and ",
            "query": "ASK WHERE { wd:Q11813 wdt:P463 wd:Q463303 . wd:Q11813 wdt:P463 ?unknown }",
            "NLQuery": "ASK WHERE { James Madison member of American Academy of Arts and Sciences . James Madison member of ?unknown }"
        },
        "original": {
            "question": "Is it true that James Madison was a member of American Academy of Arts and Sciences and American Antiquarian Society",
            "query": "ASK WHERE { wd:Q11813 wdt:P463 wd:Q463303 . wd:Q11813 wdt:P463 wd:Q4742987 }",
            "NLQuery": "ASK WHERE { James Madison member of American Academy of Arts and Sciences . James Madison member of American Antiquarian Society }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "American Antiquarian Society",
            "choppedEntity": "Q4742987"
        }
    },
    {
        "chopped": {
            "question": "Who is the mass murder for the location of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P276 ?unknown . ?sbj wdt:P31 wd:Q750215 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj location ?unknown . ?sbj instance of mass murder } "
        },
        "original": {
            "question": "Who is the mass murder for the location of Manhattan",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P276 wd:Q11299 . ?sbj wdt:P31 wd:Q750215 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj location Manhattan . ?sbj instance of mass murder } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Manhattan",
            "choppedEntity": "Q11299"
        }
    },
    {
        "chopped": {
            "question": "What is the SoC with minimum clock speed manufactured by ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q610398 . ?ans1 wdt:P2149 ?obj . ?ans1 wdt:P176 ?unknown} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of system on a chip . ?ans1 clock speed ?obj . ?ans1 manufacturer ?unknown} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the SoC with minimum clock speed manufactured by Qualcomm Atheros",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q610398 . ?ent wdt:P2149 ?obj . ?ent wdt:P176 wd:Q1083858} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of system on a chip . ?ent clock speed ?obj . ?ent manufacturer Qualcomm Atheros} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Qualcomm Atheros",
            "choppedEntity": "Q1083858"
        }
    },
    {
        "chopped": {
            "question": "What is the position of Goh Chok Tong in the 13th ",
            "query": "SELECT ?ans1 WHERE { wd:Q313300 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P2937 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Goh Chok Tong position held ?s . ?s position held ?ans1 . ?s parliamentary term ?unknown }"
        },
        "original": {
            "question": "What is the position of Goh Chok Tong in the 13th Parliament of Singapore",
            "query": "SELECT ?obj WHERE { wd:Q313300 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2937 wd:Q20967954 }",
            "NLQuery": "SELECT ?obj WHERE { Goh Chok Tong position held ?s . ?s position held ?obj . ?s parliamentary term 13th Parliament of Singapore }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Parliament of Singapore",
            "choppedEntity": "Q20967954"
        }
    },
    {
        "chopped": {
            "question": "Goh Chok Tong holds which position in the 13th ",
            "query": "SELECT ?ans1 WHERE { wd:Q313300 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P2937 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Goh Chok Tong position held ?s . ?s position held ?ans1 . ?s parliamentary term ?unknown }"
        },
        "original": {
            "question": "Goh Chok Tong holds which position in the 13th Parliament of Singapore",
            "query": "SELECT ?obj WHERE { wd:Q313300 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2937 wd:Q20967954 }",
            "NLQuery": "SELECT ?obj WHERE { Goh Chok Tong position held ?s . ?s position held ?obj . ?s parliamentary term 13th Parliament of Singapore }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Parliament of Singapore",
            "choppedEntity": "Q20967954"
        }
    },
    {
        "chopped": {
            "question": "What is the heritage designation of the administrative centre of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P36 ?X . ?X wdt:P1435 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown capital ?X . ?X heritage designation ?ans1}"
        },
        "original": {
            "question": "What is the heritage designation of the administrative centre of Kingdom of Kongo",
            "query": "SELECT ?answer WHERE { wd:Q796583 wdt:P36 ?X . ?X wdt:P1435 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Kingdom of Kongo capital ?X . ?X heritage designation ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Kingdom of Kongo",
            "choppedEntity": "Q796583"
        }
    },
    {
        "chopped": {
            "question": "Who is the assassin of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P547 ?X . ?X wdt:P157 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown commemorates ?X . ?X killed by ?ans1}"
        },
        "original": {
            "question": "Who is the assassin of the Martin Luther King Jr.",
            "query": "SELECT ?answer WHERE { wd:Q40889111 wdt:P547 ?X . ?X wdt:P157 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { memorials to Martin Luther King Jr. commemorates ?X . ?X killed by ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "the Martin Luther King Jr.",
            "choppedEntity": "Q40889111"
        }
    },
    {
        "chopped": {
            "question": "what is the assassin of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P547 ?X . ?X wdt:P157 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown commemorates ?X . ?X killed by ?ans1}"
        },
        "original": {
            "question": "what is the assassin of the Martin Luther King Jr.",
            "query": "SELECT ?answer WHERE { wd:Q40889111 wdt:P547 ?X . ?X wdt:P157 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { memorials to Martin Luther King Jr. commemorates ?X . ?X killed by ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "the Martin Luther King Jr.",
            "choppedEntity": "Q40889111"
        }
    },
    {
        "chopped": {
            "question": "Who is different from ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1889 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj different from ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who is different from Kevin Garnett",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1889 wd:Q189240 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj different from Kevin Garnett . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Kevin Garnett",
            "choppedEntity": "Q189240"
        }
    },
    {
        "chopped": {
            "question": "Who's the same as ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1889 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj different from ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who's the same as Kevin Garnett",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1889 wd:Q189240 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj different from Kevin Garnett . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Kevin Garnett",
            "choppedEntity": "Q189240"
        }
    },
    {
        "chopped": {
            "question": "Who received the Academy Award for Best Art Direction, Black and White for directing ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 wd:Q22253133 . ?s pq:P805 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received Academy Award for Best Art Direction, Black and White . ?s statement is subject of ?ans1}"
        },
        "original": {
            "question": "Who received the Academy Award for Best Art Direction, Black and White for directing Sunset Boulevard",
            "query": "SELECT ?value WHERE { wd:Q193570 p:P166 ?s . ?s ps:P166 wd:Q22253133 . ?s pq:P805 ?value}",
            "NLQuery": "SELECT ?value WHERE { Sunset Boulevard award received ?s . ?s award received Academy Award for Best Art Direction, Black and White . ?s statement is subject of ?value}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Sunset Boulevard",
            "choppedEntity": "Q193570"
        }
    },
    {
        "chopped": {
            "question": "Who was the Best Art Direction, Black and White Academy Award recipient for directing ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 wd:Q22253133 . ?s pq:P805 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received Academy Award for Best Art Direction, Black and White . ?s statement is subject of ?ans1}"
        },
        "original": {
            "question": "Who was the Best Art Direction, Black and White Academy Award recipient for directing Sunset Boulevard",
            "query": "SELECT ?value WHERE { wd:Q193570 p:P166 ?s . ?s ps:P166 wd:Q22253133 . ?s pq:P805 ?value}",
            "NLQuery": "SELECT ?value WHERE { Sunset Boulevard award received ?s . ?s award received Academy Award for Best Art Direction, Black and White . ?s statement is subject of ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Sunset Boulevard",
            "choppedEntity": "Q193570"
        }
    },
    {
        "chopped": {
            "question": "Which is the filming location for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P915 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown filming location ?ans1}"
        },
        "original": {
            "question": "Which is the filming location for The Godfather Part II",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q184768 wdt:P915 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { The Godfather Part II filming location ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Godfather Part II",
            "choppedEntity": "Q184768"
        }
    },
    {
        "chopped": {
            "question": "Which was established, before there was ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P155 ?X . ?X wdt:P112 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown follows ?X . ?X founded by ?ans1}"
        },
        "original": {
            "question": "Which was established, before there was Mission San Carlos Borromeo de Carmelo",
            "query": "SELECT ?answer WHERE { wd:Q2689743 wdt:P155 ?X . ?X wdt:P112 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Mission San Carlos Borromeo de Carmelo follows ?X . ?X founded by ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Mission San Carlos Borromeo de Carmelo",
            "choppedEntity": "Q2689743"
        }
    },
    {
        "chopped": {
            "question": "Which was built up, some time recently there was ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P155 ?X . ?X wdt:P112 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown follows ?X . ?X founded by ?ans1}"
        },
        "original": {
            "question": "Which was built up, some time recently there was Mission San Carlos Borromeo de Carmelo",
            "query": "SELECT ?answer WHERE { wd:Q2689743 wdt:P155 ?X . ?X wdt:P112 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Mission San Carlos Borromeo de Carmelo follows ?X . ?X founded by ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Mission San Carlos Borromeo de Carmelo",
            "choppedEntity": "Q2689743"
        }
    },
    {
        "chopped": {
            "question": "Where was the birth place of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P19 ?X . ?X wdt:P47 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of birth ?X . ?X shares border with ?ans1}"
        },
        "original": {
            "question": "Where was the birth place of Grazia Deledda",
            "query": "SELECT ?answer WHERE { wd:Q7728 wdt:P19 ?X . ?X wdt:P47 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Grazia Deledda place of birth ?X . ?X shares border with ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Grazia Deledda",
            "choppedEntity": "Q7728"
        }
    },
    {
        "chopped": {
            "question": "Where was the birth put of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P19 ?X . ?X wdt:P47 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of birth ?X . ?X shares border with ?ans1}"
        },
        "original": {
            "question": "Where was the birth put of Grazia Deledda",
            "query": "SELECT ?answer WHERE { wd:Q7728 wdt:P19 ?X . ?X wdt:P47 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Grazia Deledda place of birth ?X . ?X shares border with ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Grazia Deledda",
            "choppedEntity": "Q7728"
        }
    },
    {
        "chopped": {
            "question": "How many official residences are there in ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P263 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown official residence ?obj }"
        },
        "original": {
            "question": "How many official residences are there in the Parthian Empire",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q1986139 wdt:P263 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Parthian Empire official residence ?obj }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Parthian Empire",
            "choppedEntity": "Q1986139"
        }
    },
    {
        "chopped": {
            "question": "How many people live in ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P263 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown official residence ?obj }"
        },
        "original": {
            "question": "How many people live in the Parthian Empire",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q1986139 wdt:P263 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Parthian Empire official residence ?obj }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Parthian Empire",
            "choppedEntity": "Q1986139"
        }
    },
    {
        "chopped": {
            "question": "Name a movie directed by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P57 ?unknown . ?sbj wdt:P31 wd:Q11424 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj director ?unknown . ?sbj instance of film } "
        },
        "original": {
            "question": "Name a movie directed by Federico Fellini",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P57 wd:Q7371 . ?sbj wdt:P31 wd:Q11424 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj director Federico Fellini . ?sbj instance of film } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Federico Fellini",
            "choppedEntity": "Q7371"
        }
    },
    {
        "chopped": {
            "question": "What is the U-boat with the lowest vehicle range whose conflict is ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q428661 . ?ans1 wdt:P2073 ?obj . ?ans1 wdt:P607 ?unknown} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of U-boat . ?ans1 vehicle range ?obj . ?ans1 conflict ?unknown} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the U-boat with the lowest vehicle range whose conflict is World War II",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q428661 . ?ent wdt:P2073 ?obj . ?ent wdt:P607 wd:Q362} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of U-boat . ?ent vehicle range ?obj . ?ent conflict World War II} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "World War II",
            "choppedEntity": "Q362"
        }
    },
    {
        "chopped": {
            "question": "How many people have the given name ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P735 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub given name ?unknown }"
        },
        "original": {
            "question": "How many people have the given name Andrew",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P735 wd:Q43399 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub given name Andrew }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Andrew",
            "choppedEntity": "Q43399"
        }
    },
    {
        "chopped": {
            "question": "How popular is the name ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P735 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub given name ?unknown }"
        },
        "original": {
            "question": "How popular is the name Andrew",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P735 wd:Q43399 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub given name Andrew }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Andrew",
            "choppedEntity": "Q43399"
        }
    },
    {
        "chopped": {
            "question": "Where was Lujo Brentano a student of ",
            "query": "SELECT ?ans1 WHERE { wd:Q62830 p:P69 ?s . ?s ps:P69 ?ans1 . ?s pq:P1066 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Lujo Brentano educated at ?s . ?s educated at ?ans1 . ?s student of ?unknown }"
        },
        "original": {
            "question": "Where was Lujo Brentano a student of Johann von Helferich",
            "query": "SELECT ?obj WHERE { wd:Q62830 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P1066 wd:Q5798542 }",
            "NLQuery": "SELECT ?obj WHERE { Lujo Brentano educated at ?s . ?s educated at ?obj . ?s student of Johann von Helferich }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Johann von Helferich",
            "choppedEntity": "Q5798542"
        }
    },
    {
        "chopped": {
            "question": "In what location was Lujo Brentano a student of ",
            "query": "SELECT ?ans1 WHERE { wd:Q62830 p:P69 ?s . ?s ps:P69 ?ans1 . ?s pq:P1066 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Lujo Brentano educated at ?s . ?s educated at ?ans1 . ?s student of ?unknown }"
        },
        "original": {
            "question": "In what location was Lujo Brentano a student of Johann von Helferich",
            "query": "SELECT ?obj WHERE { wd:Q62830 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P1066 wd:Q5798542 }",
            "NLQuery": "SELECT ?obj WHERE { Lujo Brentano educated at ?s . ?s educated at ?obj . ?s student of Johann von Helferich }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Johann von Helferich",
            "choppedEntity": "Q5798542"
        }
    },
    {
        "chopped": {
            "question": "Did William Wallace participate in the Wars of Scottish Independence and ",
            "query": "ASK WHERE { wd:Q82457 wdt:P607 wd:Q1368240 . wd:Q82457 wdt:P607 ?unknown }",
            "NLQuery": "ASK WHERE { William Wallace conflict Wars of Scottish Independence . William Wallace conflict ?unknown }"
        },
        "original": {
            "question": "Did William Wallace participate in the Wars of Scottish Independence and the Battle of Bannockburn",
            "query": "ASK WHERE { wd:Q82457 wdt:P607 wd:Q1368240 . wd:Q82457 wdt:P607 wd:Q222520 }",
            "NLQuery": "ASK WHERE { William Wallace conflict Wars of Scottish Independence . William Wallace conflict Battle of Bannockburn }"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the Battle of Bannockburn",
            "choppedEntity": "Q222520"
        }
    },
    {
        "chopped": {
            "question": "Who is the replacement as Imperial chancellor for ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P39 ?s . ?s ps:P39 wd:Q7618907 . ?s pq:P1366 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown position held ?s . ?s position held Imperial chancellor . ?s replaced by ?ans1}"
        },
        "original": {
            "question": "Who is the replacement as Imperial chancellor for Bernhard von B\u00fclow",
            "query": "SELECT ?value WHERE { wd:Q60113 p:P39 ?s . ?s ps:P39 wd:Q7618907 . ?s pq:P1366 ?value}",
            "NLQuery": "SELECT ?value WHERE { Bernhard von B\u00fclow position held ?s . ?s position held Imperial chancellor . ?s replaced by ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Bernhard von B\u00fclow",
            "choppedEntity": "Q60113"
        }
    },
    {
        "chopped": {
            "question": "Which is the Yelp ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3108 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Yelp ID ?ans1}"
        },
        "original": {
            "question": "Which is the Yelp ID for Eiffel tower",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q243 wdt:P3108 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Eiffel Tower Yelp ID ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Eiffel tower",
            "choppedEntity": "Q243"
        }
    },
    {
        "chopped": {
            "question": "What title is held by the head of state of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1906 ?obj . ?obj wdt:P31 wd:Q216353 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown office held by head of state ?obj . ?obj instance of title } "
        },
        "original": {
            "question": "What title is held by the head of state of the Achaemenid Empire",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q389688 wdt:P1906 ?obj . ?obj wdt:P31 wd:Q216353 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Achaemenid Empire office held by head of state ?obj . ?obj instance of title } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Achaemenid Empire",
            "choppedEntity": "Q389688"
        }
    },
    {
        "chopped": {
            "question": "What time is it for Brittany as she in time zone ",
            "query": "SELECT ?ans1 WHERE { wd:Q327 p:P421 ?s . ?s ps:P421 ?unknown . ?s pq:P1264 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Brittany located in time zone ?s . ?s located in time zone ?unknown . ?s valid in period ?ans1}"
        },
        "original": {
            "question": "What time is it for Brittany as she in time zone UTC+01:00",
            "query": "SELECT ?value WHERE { wd:Q327 p:P421 ?s . ?s ps:P421 wd:Q6655 . ?s pq:P1264 ?value}",
            "NLQuery": "SELECT ?value WHERE { Brittany located in time zone ?s . ?s located in time zone UTC+01:00 . ?s valid in period ?value}"
        },
        "meta": {
            "entityTagNER": "TIME",
            "choppedText": "UTC+01:00",
            "choppedEntity": "Q6655"
        }
    },
    {
        "chopped": {
            "question": "How many production companies is by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P272 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub production company ?unknown }"
        },
        "original": {
            "question": "How many production companies is by ITV",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P272 wd:Q220072 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub production company ITV }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "ITV",
            "choppedEntity": "Q220072"
        }
    },
    {
        "chopped": {
            "question": "How many production companies are by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P272 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub production company ?unknown }"
        },
        "original": {
            "question": "How many production companies are by ITV",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P272 wd:Q220072 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub production company ITV }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "ITV",
            "choppedEntity": "Q220072"
        }
    },
    {
        "chopped": {
            "question": "How many performers are there for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P175 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown performer ?obj }"
        },
        "original": {
            "question": "How many performers are there for Thor",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q717588 wdt:P175 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Thor performer ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Thor",
            "choppedEntity": "Q717588"
        }
    },
    {
        "chopped": {
            "question": "What is the number of performers for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P175 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown performer ?obj }"
        },
        "original": {
            "question": "What is the number of performers for Thor",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q717588 wdt:P175 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Thor performer ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Thor",
            "choppedEntity": "Q717588"
        }
    },
    {
        "chopped": {
            "question": "Which is the metropolis that is twinned administrative body of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P190 ?obj . ?obj wdt:P31 wd:Q200250 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown twinned administrative body ?obj . ?obj instance of metropolis } "
        },
        "original": {
            "question": "Which is the metropolis that is twinned administrative body of Sofia",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q472 wdt:P190 ?obj . ?obj wdt:P31 wd:Q200250 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Sofia twinned administrative body ?obj . ?obj instance of metropolis } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Sofia",
            "choppedEntity": "Q472"
        }
    },
    {
        "chopped": {
            "question": "Which is the city that's twinned authoritative body of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P190 ?obj . ?obj wdt:P31 wd:Q200250 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown twinned administrative body ?obj . ?obj instance of metropolis } "
        },
        "original": {
            "question": "Which is the city that's twinned authoritative body of Sofia",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q472 wdt:P190 ?obj . ?obj wdt:P31 wd:Q200250 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Sofia twinned administrative body ?obj . ?obj instance of metropolis } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Sofia",
            "choppedEntity": "Q472"
        }
    },
    {
        "chopped": {
            "question": "What character is portrayed by Peter Hawkins in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P674 ?s . ?s ps:P674 wd:Q28049935 . ?s pq:P3831 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown characters ?s . ?s characters Peter Hawkins . ?s object has role ?ans1}"
        },
        "original": {
            "question": "What character is portrayed by Peter Hawkins in Dracula",
            "query": "SELECT ?value WHERE { wd:Q41542 p:P674 ?s . ?s ps:P674 wd:Q28049935 . ?s pq:P3831 ?value}",
            "NLQuery": "SELECT ?value WHERE { Dracula characters ?s . ?s characters Peter Hawkins . ?s object has role ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Dracula",
            "choppedEntity": "Q41542"
        }
    },
    {
        "chopped": {
            "question": "Which character is performed by Peter Hawkins in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P674 ?s . ?s ps:P674 wd:Q28049935 . ?s pq:P3831 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown characters ?s . ?s characters Peter Hawkins . ?s object has role ?ans1}"
        },
        "original": {
            "question": "Which character is performed by Peter Hawkins in Dracula",
            "query": "SELECT ?value WHERE { wd:Q41542 p:P674 ?s . ?s ps:P674 wd:Q28049935 . ?s pq:P3831 ?value}",
            "NLQuery": "SELECT ?value WHERE { Dracula characters ?s . ?s characters Peter Hawkins . ?s object has role ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Dracula",
            "choppedEntity": "Q41542"
        }
    },
    {
        "chopped": {
            "question": "What is recorded species holding of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P915 ?X . ?X wdt:P1990 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown filming location ?X . ?X species kept ?ans1}"
        },
        "original": {
            "question": "What is recorded species holding of Nashorn, Zebra & Co.",
            "query": "SELECT ?answer WHERE { wd:Q1965742 wdt:P915 ?X . ?X wdt:P1990 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Nashorn, Zebra & Co. filming location ?X . ?X species kept ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Nashorn, Zebra & Co.",
            "choppedEntity": "Q1965742"
        }
    },
    {
        "chopped": {
            "question": "How many countries have diplomatic relations with ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P530 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub diplomatic relation ?unknown }"
        },
        "original": {
            "question": "How many countries have diplomatic relations with Burkina Faso",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P530 wd:Q965 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub diplomatic relation Burkina Faso }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Burkina Faso",
            "choppedEntity": "Q965"
        }
    },
    {
        "chopped": {
            "question": "Who has diplomatic relations with ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P530 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub diplomatic relation ?unknown }"
        },
        "original": {
            "question": "Who has diplomatic relations with Burkina Faso",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P530 wd:Q965 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub diplomatic relation Burkina Faso }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Burkina Faso",
            "choppedEntity": "Q965"
        }
    },
    {
        "chopped": {
            "question": "What is ITIS TSN for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P815 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown ITIS TSN ?ans1}"
        },
        "original": {
            "question": "What is ITIS TSN for Sphyraena",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q193921 wdt:P815 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Sphyraena ITIS TSN ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Sphyraena",
            "choppedEntity": "Q193921"
        }
    },
    {
        "chopped": {
            "question": "What is the Lotsawa house tibetan author ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4348 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Lotsawa House Tibetan author ID ?ans1}"
        },
        "original": {
            "question": "What is the Lotsawa house tibetan author ID of Tenzin Gyatso",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q17293 wdt:P4348 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Tenzin Gyatso Lotsawa House Tibetan author ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Tenzin Gyatso",
            "choppedEntity": "Q17293"
        }
    },
    {
        "chopped": {
            "question": "What is the minimum elevation above sea level of the country ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q24529780 . ?ans1 wdt:P2044 ?obj . ?ans1 wdt:P17 ?unknown} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of point . ?ans1 elevation above sea level ?obj . ?ans1 country ?unknown} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the minimum elevation above sea level of the country Brazil",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q24529780 . ?ent wdt:P2044 ?obj . ?ent wdt:P17 wd:Q155} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of point . ?ent elevation above sea level ?obj . ?ent country Brazil} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Brazil",
            "choppedEntity": "Q155"
        }
    },
    {
        "chopped": {
            "question": "What is the least height over ocean level of the nation ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q24529780 . ?ans1 wdt:P2044 ?obj . ?ans1 wdt:P17 ?unknown} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of point . ?ans1 elevation above sea level ?obj . ?ans1 country ?unknown} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the least height over ocean level of the nation Brazil",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q24529780 . ?ent wdt:P2044 ?obj . ?ent wdt:P17 wd:Q155} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of point . ?ent elevation above sea level ?obj . ?ent country Brazil} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Brazil",
            "choppedEntity": "Q155"
        }
    },
    {
        "chopped": {
            "question": "When did Betty Grable die who was married to ",
            "query": "SELECT ?ans1 WHERE { wd:Q233852 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Betty Grable spouse ?s . ?s spouse ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did Betty Grable die who was married to Jackie Coogan",
            "query": "SELECT ?value WHERE { wd:Q233852 p:P26 ?s . ?s ps:P26 wd:Q313279 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Betty Grable spouse ?s . ?s spouse Jackie Coogan . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jackie Coogan",
            "choppedEntity": "Q313279"
        }
    },
    {
        "chopped": {
            "question": "What is the position held by Lyndon B. Johnson by replacing ",
            "query": "SELECT ?ans1 WHERE { wd:Q9640 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1365 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Lyndon B. Johnson position held ?s . ?s position held ?ans1 . ?s replaces ?unknown }"
        },
        "original": {
            "question": "What is the position held by Lyndon B. Johnson by replacing Richard Nixon",
            "query": "SELECT ?obj WHERE { wd:Q9640 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q9588 }",
            "NLQuery": "SELECT ?obj WHERE { Lyndon B. Johnson position held ?s . ?s position held ?obj . ?s replaces Richard Nixon }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Richard Nixon",
            "choppedEntity": "Q9588"
        }
    },
    {
        "chopped": {
            "question": "What is the consumer price inflation rate in the capital city, ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1376 ?X . ?X wdt:P1279 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown capital of ?X . ?X inflation rate ?ans1}"
        },
        "original": {
            "question": "What is the consumer price inflation rate in the capital city, Sri Jayawardenepura Kotte",
            "query": "SELECT ?answer WHERE { wd:Q41963 wdt:P1376 ?X . ?X wdt:P1279 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Sri Jayawardenepura Kotte capital of ?X . ?X inflation rate ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Sri Jayawardenepura Kotte",
            "choppedEntity": "Q41963"
        }
    },
    {
        "chopped": {
            "question": "What is Alexander Fleming's award-winning, time-honored prize for ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q37064 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P2121 ?ans1 . ?s pq:P585 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Alexander Fleming award received ?s . ?s award received ?unknown . ?s prize money ?ans1 . ?s point in time ?ans2 }"
        },
        "original": {
            "question": "What is Alexander Fleming's award-winning, time-honored prize for the Nobel Prize in Physiology and Medicine",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q37064 p:P166 ?s . ?s ps:P166 wd:Q80061 . ?s pq:P2121 ?value1 . ?s pq:P585 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Alexander Fleming award received ?s . ?s award received Nobel Prize in Physiology or Medicine . ?s prize money ?value1 . ?s point in time ?value2 }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Nobel Prize in Physiology and Medicine",
            "choppedEntity": "Q80061"
        }
    },
    {
        "chopped": {
            "question": "What is the award - winning, time - honored Nobel Prize in Physiology and Medicine award from ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P166 ?s . ?s ps:P166 wd:Q80061 . ?s pq:P2121 ?ans1 . ?s pq:P585 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown award received ?s . ?s award received Nobel Prize in Physiology or Medicine . ?s prize money ?ans1 . ?s point in time ?ans2 }"
        },
        "original": {
            "question": "What is the award - winning, time - honored Nobel Prize in Physiology and Medicine award from Alexander Fleming",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q37064 p:P166 ?s . ?s ps:P166 wd:Q80061 . ?s pq:P2121 ?value1 . ?s pq:P585 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Alexander Fleming award received ?s . ?s award received Nobel Prize in Physiology or Medicine . ?s prize money ?value1 . ?s point in time ?value2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Alexander Fleming",
            "choppedEntity": "Q37064"
        }
    },
    {
        "chopped": {
            "question": "What is the name of the prequel to Red Dead Redemption that came out for ",
            "query": "SELECT ?ans1 WHERE { wd:Q548203 wdt:P155 ?ans1 . ?ans1 wdt:P400 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Red Dead Redemption follows ?ans1 . ?ans1 platform ?unknown}"
        },
        "original": {
            "question": "What is the name of the prequel to Red Dead Redemption that came out for the Playstation 2",
            "query": "SELECT ?answer WHERE { wd:Q548203 wdt:P155 ?answer . ?answer wdt:P400 wd:Q10680}",
            "NLQuery": "SELECT ?answer WHERE { Red Dead Redemption follows ?answer . ?answer platform PlayStation 2}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "the Playstation 2",
            "choppedEntity": "Q10680"
        }
    },
    {
        "chopped": {
            "question": "What is the title of the prequel to Ruddy Dead Recovery that came out for ",
            "query": "SELECT ?ans1 WHERE { wd:Q548203 wdt:P155 ?ans1 . ?ans1 wdt:P400 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Red Dead Redemption follows ?ans1 . ?ans1 platform ?unknown}"
        },
        "original": {
            "question": "What is the title of the prequel to Ruddy Dead Recovery that came out for the Playstation 2",
            "query": "SELECT ?answer WHERE { wd:Q548203 wdt:P155 ?answer . ?answer wdt:P400 wd:Q10680}",
            "NLQuery": "SELECT ?answer WHERE { Red Dead Redemption follows ?answer . ?answer platform PlayStation 2}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "the Playstation 2",
            "choppedEntity": "Q10680"
        }
    },
    {
        "chopped": {
            "question": "How many islands are located by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P5130 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub none ?unknown }"
        },
        "original": {
            "question": "How many islands are located by Saint Vincent",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P5130 wd:Q379656 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub none Saint Vincent }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Saint Vincent",
            "choppedEntity": "Q379656"
        }
    },
    {
        "chopped": {
            "question": "How many islands are there near ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P5130 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub none ?unknown }"
        },
        "original": {
            "question": "How many islands are there near Saint Vincent",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P5130 wd:Q379656 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub none Saint Vincent }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Saint Vincent",
            "choppedEntity": "Q379656"
        }
    },
    {
        "chopped": {
            "question": "Tell me what is the artwork of shareholders ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P127 ?X . ?X wdt:P800 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown owned by ?X . ?X notable work ?ans1}"
        },
        "original": {
            "question": "Tell me what is the artwork of shareholders W. Chump & Sons Ltd.",
            "query": "SELECT ?answer WHERE { wd:Q21903339 wdt:P127 ?X . ?X wdt:P800 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { W. Chump & Sons Ltd owned by ?X . ?X notable work ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "W. Chump & Sons Ltd.",
            "choppedEntity": "Q21903339"
        }
    },
    {
        "chopped": {
            "question": "What is located near the birthplace of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P19 ?X . ?X wdt:P47 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of birth ?X . ?X shares border with ?ans1}"
        },
        "original": {
            "question": "What is located near the birthplace of Catherine Deneuve",
            "query": "SELECT ?answer WHERE { wd:Q106418 wdt:P19 ?X . ?X wdt:P47 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Catherine Deneuve place of birth ?X . ?X shares border with ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Catherine Deneuve",
            "choppedEntity": "Q106418"
        }
    },
    {
        "chopped": {
            "question": "What is found close the origin of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P19 ?X . ?X wdt:P47 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of birth ?X . ?X shares border with ?ans1}"
        },
        "original": {
            "question": "What is found close the origin of Catherine Deneuve",
            "query": "SELECT ?answer WHERE { wd:Q106418 wdt:P19 ?X . ?X wdt:P47 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Catherine Deneuve place of birth ?X . ?X shares border with ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Catherine Deneuve",
            "choppedEntity": "Q106418"
        }
    },
    {
        "chopped": {
            "question": "Which is the ISO 639-6 code for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P221 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown ISO 639-6 code ?ans1}"
        },
        "original": {
            "question": "Which is the ISO 639-6 code for Old English",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q42365 wdt:P221 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Old English ISO 639-6 code ?answer}"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Old English",
            "choppedEntity": "Q42365"
        }
    },
    {
        "chopped": {
            "question": "Which put, named after curium, may be a part of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1876 wdt:P138 ?ans1 . ?ans1 wdt:P463 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { curium named after ?ans1 . ?ans1 member of ?unknown}"
        },
        "original": {
            "question": "Which put, named after curium, may be a part of the German Foundation of Sciences Leopoldina",
            "query": "SELECT ?answer WHERE { wd:Q1876 wdt:P138 ?answer . ?answer wdt:P463 wd:Q543804}",
            "NLQuery": "SELECT ?answer WHERE { curium named after ?answer . ?answer member of German Academy of Sciences Leopoldina}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the German Foundation of Sciences Leopoldina",
            "choppedEntity": "Q543804"
        }
    },
    {
        "chopped": {
            "question": "What film is starring the series of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P179 ?X . ?X wdt:P161 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown part of the series ?X . ?X cast member ?ans1}"
        },
        "original": {
            "question": "What film is starring the series of The Smell of Music",
            "query": "SELECT ?answer WHERE { wd:Q50523484 wdt:P179 ?X . ?X wdt:P161 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Smell of Music part of the series ?X . ?X cast member ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Smell of Music",
            "choppedEntity": "Q50523484"
        }
    },
    {
        "chopped": {
            "question": "Which is the home world for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1165 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown home world ?ans1}"
        },
        "original": {
            "question": "Which is the home world for Superman",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q79015 wdt:P1165 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Superman home world ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Superman",
            "choppedEntity": "Q79015"
        }
    },
    {
        "chopped": {
            "question": "In what region of Ethiopia is ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P501 ?obj . ?obj wdt:P31 wd:Q1057504 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown enclave within ?obj . ?obj instance of region of Ethiopia } "
        },
        "original": {
            "question": "In what region of Ethiopia is Addis Ababa",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q3624 wdt:P501 ?obj . ?obj wdt:P31 wd:Q1057504 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Addis Ababa enclave within ?obj . ?obj instance of region of Ethiopia } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Addis Ababa",
            "choppedEntity": "Q3624"
        }
    },
    {
        "chopped": {
            "question": "How many were inspired by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P941 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub inspired by ?unknown }"
        },
        "original": {
            "question": "How many were inspired by Christianity",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P941 wd:Q5043 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub inspired by Christianity }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Christianity",
            "choppedEntity": "Q5043"
        }
    },
    {
        "chopped": {
            "question": "Which is the fictional universe of the fictional universe described in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1445 ?unknown . ?sbj wdt:P31 wd:Q559618 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj fictional universe described in ?unknown . ?sbj instance of fictional universe } "
        },
        "original": {
            "question": "Which is the fictional universe of the fictional universe described in Futurama",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1445 wd:Q73622 . ?sbj wdt:P31 wd:Q559618 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj fictional universe described in Futurama . ?sbj instance of fictional universe } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Futurama",
            "choppedEntity": "Q73622"
        }
    },
    {
        "chopped": {
            "question": "Which is the anecdotal universe of the anecdotal universe portrayed in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1445 ?unknown . ?sbj wdt:P31 wd:Q559618 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj fictional universe described in ?unknown . ?sbj instance of fictional universe } "
        },
        "original": {
            "question": "Which is the anecdotal universe of the anecdotal universe portrayed in Futurama",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1445 wd:Q73622 . ?sbj wdt:P31 wd:Q559618 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj fictional universe described in Futurama . ?sbj instance of fictional universe } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Futurama",
            "choppedEntity": "Q73622"
        }
    },
    {
        "chopped": {
            "question": "Does Johnny Depp have a child ",
            "query": "ASK WHERE { wd:Q37175 wdt:P40 ?unknown }",
            "NLQuery": "ASK WHERE { Johnny Depp child ?unknown }"
        },
        "original": {
            "question": "Does Johnny Depp have a child Lily-Rose Depp",
            "query": "ASK WHERE { wd:Q37175 wdt:P40 wd:Q20670730 }",
            "NLQuery": "ASK WHERE { Johnny Depp child Lily-Rose Depp }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Lily-Rose Depp",
            "choppedEntity": "Q20670730"
        }
    },
    {
        "chopped": {
            "question": "Is Lily-Rose Depp the child of ",
            "query": "ASK WHERE { ?unknown wdt:P40 wd:Q20670730 }",
            "NLQuery": "ASK WHERE { ?unknown child Lily-Rose Depp }"
        },
        "original": {
            "question": "Is Lily-Rose Depp the child of Johnny Depp",
            "query": "ASK WHERE { wd:Q37175 wdt:P40 wd:Q20670730 }",
            "NLQuery": "ASK WHERE { Johnny Depp child Lily-Rose Depp }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Johnny Depp",
            "choppedEntity": "Q37175"
        }
    },
    {
        "chopped": {
            "question": "Was Assassination_of_John_F._Kennedy location ",
            "query": "ASK WHERE { wd:Q193484 wdt:P276 ?unknown }",
            "NLQuery": "ASK WHERE { assassination of John F. Kennedy location ?unknown }"
        },
        "original": {
            "question": "Was Assassination_of_John_F._Kennedy location Dealey Plaza",
            "query": "ASK WHERE { wd:Q193484 wdt:P276 wd:Q1181004 }",
            "NLQuery": "ASK WHERE { assassination of John F. Kennedy location Dealey Plaza }"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Dealey Plaza",
            "choppedEntity": "Q1181004"
        }
    },
    {
        "chopped": {
            "question": "Which is the chivalric order for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P550 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown chivalric order ?ans1}"
        },
        "original": {
            "question": "Which is the chivalric order for Pedro Calder\u00f2n de la Barca",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q170800 wdt:P550 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Pedro Calder\u00f3n de la Barca chivalric order ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Pedro Calder\u00f2n de la Barca",
            "choppedEntity": "Q170800"
        }
    },
    {
        "chopped": {
            "question": "What type of kinship does Charles Darwin have in relation to his relative ",
            "query": "SELECT ?ans1 WHERE { wd:Q1035 p:P1038 ?s . ?s ps:P1038 ?unknown . ?s pq:P1039 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Charles Darwin relative ?s . ?s relative ?unknown . ?s type of kinship ?ans1}"
        },
        "original": {
            "question": "What type of kinship does Charles Darwin have in relation to his relative Bernard Darwin",
            "query": "SELECT ?value WHERE { wd:Q1035 p:P1038 ?s . ?s ps:P1038 wd:Q822372 . ?s pq:P1039 ?value}",
            "NLQuery": "SELECT ?value WHERE { Charles Darwin relative ?s . ?s relative Bernard Darwin . ?s type of kinship ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Bernard Darwin",
            "choppedEntity": "Q822372"
        }
    },
    {
        "chopped": {
            "question": "Where was Charles V born in ",
            "query": "SELECT ?ans1 WHERE { wd:Q32500 p:P19 ?s . ?s ps:P19 ?unknown . ?s pq:P131 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Charles V, Holy Roman Emperor place of birth ?s . ?s place of birth ?unknown . ?s located in the administrative territorial entity ?ans1}"
        },
        "original": {
            "question": "Where was Charles V born in Ghent",
            "query": "SELECT ?value WHERE { wd:Q32500 p:P19 ?s . ?s ps:P19 wd:Q1296 . ?s pq:P131 ?value}",
            "NLQuery": "SELECT ?value WHERE { Charles V, Holy Roman Emperor place of birth ?s . ?s place of birth Ghent . ?s located in the administrative territorial entity ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Ghent",
            "choppedEntity": "Q1296"
        }
    },
    {
        "chopped": {
            "question": "What is the official language and continent of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P30 ?ans1 . ?unknown wdt:P37 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown continent ?ans1 . ?unknown official language ?ans2 }"
        },
        "original": {
            "question": "What is the official language and continent of Kurdistan",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q41470 wdt:P30 ?ans_1 . wd:Q41470 wdt:P37 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Kurdistan continent ?ans_1 . Kurdistan official language ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Kurdistan",
            "choppedEntity": "Q41470"
        }
    },
    {
        "chopped": {
            "question": "Who is the doctoral student ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P185 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj doctoral student ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who is the doctoral student Richard Dawkins",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P185 wd:Q44461 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj doctoral student Richard Dawkins . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Richard Dawkins",
            "choppedEntity": "Q44461"
        }
    },
    {
        "chopped": {
            "question": "Who is the doctoral understudy ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P185 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj doctoral student ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who is the doctoral understudy Richard Dawkins",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P185 wd:Q44461 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj doctoral student Richard Dawkins . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Richard Dawkins",
            "choppedEntity": "Q44461"
        }
    },
    {
        "chopped": {
            "question": "Who is the publisher and editor of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P123 ?ans1 . ?unknown wdt:P98 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown publisher ?ans1 . ?unknown editor ?ans2 }"
        },
        "original": {
            "question": "Who is the publisher and editor of Playboy",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q150820 wdt:P123 ?ans_1 . wd:Q150820 wdt:P98 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Playboy publisher ?ans_1 . Playboy editor ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Playboy",
            "choppedEntity": "Q150820"
        }
    },
    {
        "chopped": {
            "question": "Who publishes and edits ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P123 ?ans1 . ?unknown wdt:P98 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown publisher ?ans1 . ?unknown editor ?ans2 }"
        },
        "original": {
            "question": "Who publishes and edits Playboy",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q150820 wdt:P123 ?ans_1 . wd:Q150820 wdt:P98 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Playboy publisher ?ans_1 . Playboy editor ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Playboy",
            "choppedEntity": "Q150820"
        }
    },
    {
        "chopped": {
            "question": "What is the loyalty program for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4446 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown reward program ?ans1}"
        },
        "original": {
            "question": "What is the loyalty program for Turkish Airlines",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q4548 wdt:P4446 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Turkish Airlines reward program ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Turkish Airlines",
            "choppedEntity": "Q4548"
        }
    },
    {
        "chopped": {
            "question": "how many participant together with ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P1344 ?s . ?s ps:P1344 ?ans2 . ?s pq:P1706 ?ans1 . }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown participant in ?s . ?s participant in ?ans2 . ?s together with ?ans1 . }"
        },
        "original": {
            "question": "how many participant together with Park Sung-hyun",
            "query": "SELECT ?value1 ?obj WHERE { wd:Q233884 p:P1344 ?s . ?s ps:P1344 ?obj . ?s pq:P1706 ?value1 . }",
            "NLQuery": "SELECT ?value1 ?obj WHERE { Park Sung-hyun participant in ?s . ?s participant in ?obj . ?s together with ?value1 . }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Park Sung-hyun",
            "choppedEntity": "Q233884"
        }
    },
    {
        "chopped": {
            "question": "how numerous member along with ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P1344 ?s . ?s ps:P1344 ?ans2 . ?s pq:P1706 ?ans1 . }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown participant in ?s . ?s participant in ?ans2 . ?s together with ?ans1 . }"
        },
        "original": {
            "question": "how numerous member along with Stop Sung-hyun",
            "query": "SELECT ?value1 ?obj WHERE { wd:Q233884 p:P1344 ?s . ?s ps:P1344 ?obj . ?s pq:P1706 ?value1 . }",
            "NLQuery": "SELECT ?value1 ?obj WHERE { Park Sung-hyun participant in ?s . ?s participant in ?obj . ?s together with ?value1 . }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Stop Sung-hyun",
            "choppedEntity": "Q233884"
        }
    },
    {
        "chopped": {
            "question": "What kind of vessel is ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1876 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown vehicle ?ans1}"
        },
        "original": {
            "question": "What kind of vessel is the Hubble Space Telescope",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q2513 wdt:P1876 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Hubble Space Telescope vehicle ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "the Hubble Space Telescope",
            "choppedEntity": "Q2513"
        }
    },
    {
        "chopped": {
            "question": "What's also known as roentgen in ",
            "query": "SELECT ?ans1 WHERE { wd:Q321017 wdt:P138 ?ans1 . ?ans1 wdt:P937 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { roentgen named after ?ans1 . ?ans1 work location ?unknown}"
        },
        "original": {
            "question": "What's also known as roentgen in W\u00fcrzburg",
            "query": "SELECT ?answer WHERE { wd:Q321017 wdt:P138 ?answer . ?answer wdt:P937 wd:Q2999}",
            "NLQuery": "SELECT ?answer WHERE { roentgen named after ?answer . ?answer work location W\u00fcrzburg}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "W\u00fcrzburg",
            "choppedEntity": "Q2999"
        }
    },
    {
        "chopped": {
            "question": "Is it best picture academy award nominee is ",
            "query": "ASK WHERE { ?unknown wdt:P1411 wd:Q102427 }",
            "NLQuery": "ASK WHERE { ?unknown nominated for Academy Award for Best Picture }"
        },
        "original": {
            "question": "Is it best picture academy award nominee is jessica chastain",
            "query": "ASK WHERE { wd:Q229313 wdt:P1411 wd:Q102427 }",
            "NLQuery": "ASK WHERE { Jessica Chastain nominated for Academy Award for Best Picture }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "jessica chastain",
            "choppedEntity": "Q229313"
        }
    },
    {
        "chopped": {
            "question": "What work shows the role model of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P737 ?X . ?X wdt:P937 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown influenced by ?X . ?X work location ?ans1}"
        },
        "original": {
            "question": "What work shows the role model of Edward Albee",
            "query": "SELECT ?answer WHERE { wd:Q219420 wdt:P737 ?X . ?X wdt:P937 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Edward Albee influenced by ?X . ?X work location ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Edward Albee",
            "choppedEntity": "Q219420"
        }
    },
    {
        "chopped": {
            "question": "What work appears the part demonstrate of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P737 ?X . ?X wdt:P937 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown influenced by ?X . ?X work location ?ans1}"
        },
        "original": {
            "question": "What work appears the part demonstrate of Edward Albee",
            "query": "SELECT ?answer WHERE { wd:Q219420 wdt:P737 ?X . ?X wdt:P937 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Edward Albee influenced by ?X . ?X work location ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Edward Albee",
            "choppedEntity": "Q219420"
        }
    },
    {
        "chopped": {
            "question": "What colleges are part of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P355 ?obj . ?obj wdt:P31 wd:Q4671277 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown subsidiary ?obj . ?obj instance of academic institution } "
        },
        "original": {
            "question": "What colleges are part of Rutgers University",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q499451 wdt:P355 ?obj . ?obj wdt:P31 wd:Q4671277 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Rutgers University subsidiary ?obj . ?obj instance of academic institution } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Rutgers University",
            "choppedEntity": "Q499451"
        }
    },
    {
        "chopped": {
            "question": "Name someone working in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P937 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj work location ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Name someone working in Vancouver",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P937 wd:Q24639 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj work location Vancouver . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Vancouver",
            "choppedEntity": "Q24639"
        }
    },
    {
        "chopped": {
            "question": "Title somebody working in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P937 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj work location ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Title somebody working in Vancouver",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P937 wd:Q24639 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj work location Vancouver . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Vancouver",
            "choppedEntity": "Q24639"
        }
    },
    {
        "chopped": {
            "question": "Who is the favorite player of the writer of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P50 ?X . ?X wdt:P737 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown author ?X . ?X influenced by ?ans1}"
        },
        "original": {
            "question": "Who is the favorite player of the writer of The Indian War of Independence",
            "query": "SELECT ?answer WHERE { wd:Q7741873 wdt:P50 ?X . ?X wdt:P737 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Indian War of Independence author ?X . ?X influenced by ?answer}"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "The Indian War of Independence",
            "choppedEntity": "Q7741873"
        }
    },
    {
        "chopped": {
            "question": "Did the Wright Brothers receive the Presidential Citizens Medal and ",
            "query": "ASK WHERE { wd:Q35820 wdt:P166 wd:Q1582967 . wd:Q35820 wdt:P166 ?unknown }",
            "NLQuery": "ASK WHERE { Wright brothers award received Presidential Citizens Medal . Wright brothers award received ?unknown }"
        },
        "original": {
            "question": "Did the Wright Brothers receive the Presidential Citizens Medal and the Albert Medal",
            "query": "ASK WHERE { wd:Q35820 wdt:P166 wd:Q1582967 . wd:Q35820 wdt:P166 wd:Q4710826 }",
            "NLQuery": "ASK WHERE { Wright brothers award received Presidential Citizens Medal . Wright brothers award received Albert Medal }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Albert Medal",
            "choppedEntity": "Q4710826"
        }
    },
    {
        "chopped": {
            "question": "Were the Wright Brothers recipients of the the Albert Medal and ",
            "query": "ASK WHERE { wd:Q35820 wdt:P166 ?unknown . wd:Q35820 wdt:P166 wd:Q4710826 }",
            "NLQuery": "ASK WHERE { Wright brothers award received ?unknown . Wright brothers award received Albert Medal }"
        },
        "original": {
            "question": "Were the Wright Brothers recipients of the the Albert Medal and Presidential Citizens Medal",
            "query": "ASK WHERE { wd:Q35820 wdt:P166 wd:Q1582967 . wd:Q35820 wdt:P166 wd:Q4710826 }",
            "NLQuery": "ASK WHERE { Wright brothers award received Presidential Citizens Medal . Wright brothers award received Albert Medal }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Presidential Citizens Medal",
            "choppedEntity": "Q1582967"
        }
    },
    {
        "chopped": {
            "question": "Which person is the stepfather of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P3448 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj stepparent ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Which person is the stepfather of Antoninus Pius",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P3448 wd:Q1429 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj stepparent Antoninus Pius . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Antoninus Pius",
            "choppedEntity": "Q1429"
        }
    },
    {
        "chopped": {
            "question": "Which individual is the stepfather of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P3448 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj stepparent ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Which individual is the stepfather of Antoninus Pius",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P3448 wd:Q1429 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj stepparent Antoninus Pius . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Antoninus Pius",
            "choppedEntity": "Q1429"
        }
    },
    {
        "chopped": {
            "question": "What position did Aaron Burr hold in which he was later replaced by ",
            "query": "SELECT ?ans1 WHERE { wd:Q179090 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1365 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Aaron Burr position held ?s . ?s position held ?ans1 . ?s replaces ?unknown }"
        },
        "original": {
            "question": "What position did Aaron Burr hold in which he was later replaced by Philip John Schuyler",
            "query": "SELECT ?obj WHERE { wd:Q179090 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q1115886 }",
            "NLQuery": "SELECT ?obj WHERE { Aaron Burr position held ?s . ?s position held ?obj . ?s replaces Philip Schuyler }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Philip John Schuyler",
            "choppedEntity": "Q1115886"
        }
    },
    {
        "chopped": {
            "question": "Were more than 4,800,000 copies sold by ",
            "query": "ASK WHERE { ?unknown wdt:P2664 ?obj FILTER(?obj = 4800000.0) } ",
            "NLQuery": "ASK WHERE { ?unknown units sold ?obj FILTER(?obj = 4800000.0) } "
        },
        "original": {
            "question": "Were more than 4,800,000 copies sold by The Best Damn Thing",
            "query": "ASK WHERE { wd:Q192257 wdt:P2664 ?obj FILTER(?obj = 4800000.0) } ",
            "NLQuery": "ASK WHERE { The Best Damn Thing units sold ?obj FILTER(?obj = 4800000.0) } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Best Damn Thing",
            "choppedEntity": "Q192257"
        }
    },
    {
        "chopped": {
            "question": "What is the standard time in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P421 ?s . ?s ps:P421 ?ans1 . ?s pq:P1264 wd:Q1777301 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in time zone ?s . ?s located in time zone ?ans1 . ?s valid in period standard time }"
        },
        "original": {
            "question": "What is the standard time in Genoa",
            "query": "SELECT ?obj WHERE { wd:Q1449 p:P421 ?s . ?s ps:P421 ?obj . ?s pq:P1264 wd:Q1777301 }",
            "NLQuery": "SELECT ?obj WHERE { Genoa located in time zone ?s . ?s located in time zone ?obj . ?s valid in period standard time }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Genoa",
            "choppedEntity": "Q1449"
        }
    },
    {
        "chopped": {
            "question": "Which is the standard time for ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P421 ?s . ?s ps:P421 ?ans1 . ?s pq:P1264 wd:Q1777301 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in time zone ?s . ?s located in time zone ?ans1 . ?s valid in period standard time }"
        },
        "original": {
            "question": "Which is the standard time for Genoa",
            "query": "SELECT ?obj WHERE { wd:Q1449 p:P421 ?s . ?s ps:P421 ?obj . ?s pq:P1264 wd:Q1777301 }",
            "NLQuery": "SELECT ?obj WHERE { Genoa located in time zone ?s . ?s located in time zone ?obj . ?s valid in period standard time }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Genoa",
            "choppedEntity": "Q1449"
        }
    },
    {
        "chopped": {
            "question": "What is the AMCA Radiocommunications Licence ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2472 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown ACMA Radiocommunications Client Number ?ans1}"
        },
        "original": {
            "question": "What is the AMCA Radiocommunications Licence ID for Qantas",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q32491 wdt:P2472 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Qantas ACMA Radiocommunications Client Number ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Qantas",
            "choppedEntity": "Q32491"
        }
    },
    {
        "chopped": {
            "question": "What is the native language of the ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P103 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown native language ?obj }"
        },
        "original": {
            "question": "What is the native language of the Circassians",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q15763 wdt:P103 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { circassians native language ?obj }"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Circassians",
            "choppedEntity": "Q15763"
        }
    },
    {
        "chopped": {
            "question": "What language is native to the ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P103 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown native language ?obj }"
        },
        "original": {
            "question": "What language is native to the Circassians",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q15763 wdt:P103 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { circassians native language ?obj }"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Circassians",
            "choppedEntity": "Q15763"
        }
    },
    {
        "chopped": {
            "question": "Are there more than 1036389448.8 total reserves of ",
            "query": "ASK WHERE { ?unknown wdt:P2134 ?obj FILTER(?obj > 1036389448.8) } ",
            "NLQuery": "ASK WHERE { ?unknown total reserves ?obj FILTER(?obj > 1036389448.8) } "
        },
        "original": {
            "question": "Are there more than 1036389448.8 total reserves of Luxembourg",
            "query": "ASK WHERE { wd:Q32 wdt:P2134 ?obj FILTER(?obj > 1036389448.8) } ",
            "NLQuery": "ASK WHERE { Luxembourg total reserves ?obj FILTER(?obj > 1036389448.8) } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Luxembourg",
            "choppedEntity": "Q32"
        }
    },
    {
        "chopped": {
            "question": "What was the diplomatic relation of the release region of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P291 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of publication ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "What was the diplomatic relation of the release region of Pet Sounds",
            "query": "SELECT ?answer WHERE { wd:Q212863 wdt:P291 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Pet Sounds place of publication ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Pet Sounds",
            "choppedEntity": "Q212863"
        }
    },
    {
        "chopped": {
            "question": "What was the discretionary connection of the discharge locale of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P291 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of publication ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "What was the discretionary connection of the discharge locale of Pet Sounds",
            "query": "SELECT ?answer WHERE { wd:Q212863 wdt:P291 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Pet Sounds place of publication ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Pet Sounds",
            "choppedEntity": "Q212863"
        }
    },
    {
        "chopped": {
            "question": "Was Yao_Ming participant of 2008 Summer Olympics and 1994 ",
            "query": "ASK WHERE { wd:Q58590 wdt:P1344 wd:Q8567 . wd:Q58590 wdt:P1344 ?unknown }",
            "NLQuery": "ASK WHERE { Yao Ming participant in 2008 Summer Olympics . Yao Ming participant in ?unknown }"
        },
        "original": {
            "question": "Was Yao_Ming participant of 2008 Summer Olympics and 1994 Asian Games",
            "query": "ASK WHERE { wd:Q58590 wdt:P1344 wd:Q8567 . wd:Q58590 wdt:P1344 wd:Q729592 }",
            "NLQuery": "ASK WHERE { Yao Ming participant in 2008 Summer Olympics . Yao Ming participant in 1994 Asian Games }"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "Asian Games",
            "choppedEntity": "Q729592"
        }
    },
    {
        "chopped": {
            "question": "Did Yao Ming participate in the 2008 Summer Olympics and the 1994 ",
            "query": "ASK WHERE { wd:Q58590 wdt:P1344 wd:Q8567 . wd:Q58590 wdt:P1344 ?unknown }",
            "NLQuery": "ASK WHERE { Yao Ming participant in 2008 Summer Olympics . Yao Ming participant in ?unknown }"
        },
        "original": {
            "question": "Did Yao Ming participate in the 2008 Summer Olympics and the 1994 Asian Games",
            "query": "ASK WHERE { wd:Q58590 wdt:P1344 wd:Q8567 . wd:Q58590 wdt:P1344 wd:Q729592 }",
            "NLQuery": "ASK WHERE { Yao Ming participant in 2008 Summer Olympics . Yao Ming participant in 1994 Asian Games }"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "Asian Games",
            "choppedEntity": "Q729592"
        }
    },
    {
        "chopped": {
            "question": "Is the prescribed drug esmolol the cause of death of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P509 ?ans1 . ?ans1 wdt:P2176 wd:Q418139}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cause of death ?ans1 . ?ans1 drug used for treatment esmolol}"
        },
        "original": {
            "question": "Is the prescribed drug esmolol the cause of death of Randy Savage",
            "query": "SELECT ?answer WHERE { wd:Q59635 wdt:P509 ?answer . ?answer wdt:P2176 wd:Q418139}",
            "NLQuery": "SELECT ?answer WHERE { Randy Savage cause of death ?answer . ?answer drug used for treatment esmolol}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Randy Savage",
            "choppedEntity": "Q59635"
        }
    },
    {
        "chopped": {
            "question": "Is the endorsed sedate esmolol the cause of passing of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P509 ?ans1 . ?ans1 wdt:P2176 wd:Q418139}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cause of death ?ans1 . ?ans1 drug used for treatment esmolol}"
        },
        "original": {
            "question": "Is the endorsed sedate esmolol the cause of passing of Randy Savage",
            "query": "SELECT ?answer WHERE { wd:Q59635 wdt:P509 ?answer . ?answer wdt:P2176 wd:Q418139}",
            "NLQuery": "SELECT ?answer WHERE { Randy Savage cause of death ?answer . ?answer drug used for treatment esmolol}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Randy Savage",
            "choppedEntity": "Q59635"
        }
    },
    {
        "chopped": {
            "question": "Is Premier League happening in ",
            "query": "ASK WHERE { wd:Q9448 wdt:P17 ?unknown }",
            "NLQuery": "ASK WHERE { Premier League country ?unknown }"
        },
        "original": {
            "question": "Is Premier League happening in United Kingdom",
            "query": "ASK WHERE { wd:Q9448 wdt:P17 wd:Q145 }",
            "NLQuery": "ASK WHERE { Premier League country United Kingdom }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "United Kingdom",
            "choppedEntity": "Q145"
        }
    },
    {
        "chopped": {
            "question": "Which character was a musician in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P674 ?X . ?X wdt:P175 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown characters ?X . ?X performer ?ans1}"
        },
        "original": {
            "question": "Which character was a musician in Guardians of the Galaxy",
            "query": "SELECT ?answer WHERE { wd:Q5887360 wdt:P674 ?X . ?X wdt:P175 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Guardians of the Galaxy characters ?X . ?X performer ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Guardians of the Galaxy",
            "choppedEntity": "Q5887360"
        }
    },
    {
        "chopped": {
            "question": "Which character was a artist in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P674 ?X . ?X wdt:P175 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown characters ?X . ?X performer ?ans1}"
        },
        "original": {
            "question": "Which character was a artist in Gatekeepers of the Galaxy",
            "query": "SELECT ?answer WHERE { wd:Q5887360 wdt:P674 ?X . ?X wdt:P175 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Guardians of the Galaxy characters ?X . ?X performer ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Gatekeepers of the Galaxy",
            "choppedEntity": "Q5887360"
        }
    },
    {
        "chopped": {
            "question": "For what was Anne V. Coates in nomination, for her work in ",
            "query": "SELECT ?ans1 WHERE { wd:Q31294 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Anne V. Coates nominated for ?s . ?s nominated for ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "For what was Anne V. Coates in nomination, for her work in Lawrence of Arabia",
            "query": "SELECT ?obj WHERE { wd:Q31294 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q228186 }",
            "NLQuery": "SELECT ?obj WHERE { Anne V. Coates nominated for ?s . ?s nominated for ?obj . ?s for work Lawrence of Arabia }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Lawrence of Arabia",
            "choppedEntity": "Q228186"
        }
    },
    {
        "chopped": {
            "question": "In which category was Anne V. Coates nominated for her work in ",
            "query": "SELECT ?ans1 WHERE { wd:Q31294 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Anne V. Coates nominated for ?s . ?s nominated for ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "In which category was Anne V. Coates nominated for her work in Lawrence of Arabia",
            "query": "SELECT ?obj WHERE { wd:Q31294 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q228186 }",
            "NLQuery": "SELECT ?obj WHERE { Anne V. Coates nominated for ?s . ?s nominated for ?obj . ?s for work Lawrence of Arabia }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Lawrence of Arabia",
            "choppedEntity": "Q228186"
        }
    },
    {
        "chopped": {
            "question": "How many areas are in ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P2046 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown area ?obj }"
        },
        "original": {
            "question": "How many areas are in Karlsruhe",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q1040 wdt:P2046 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Karlsruhe area ?obj }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Karlsruhe",
            "choppedEntity": "Q1040"
        }
    },
    {
        "chopped": {
            "question": "What is the partner town of the place from ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P937 ?X . ?X wdt:P190 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown work location ?X . ?X twinned administrative body ?ans1}"
        },
        "original": {
            "question": "What is the partner town of the place from Tomas Cruz Martinez",
            "query": "SELECT ?answer WHERE { wd:Q17465858 wdt:P937 ?X . ?X wdt:P190 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Tom\u00e1s Cruz Mart\u00ednez work location ?X . ?X twinned administrative body ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Tomas Cruz Martinez",
            "choppedEntity": "Q17465858"
        }
    },
    {
        "chopped": {
            "question": "What is the accomplice town of the put from ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P937 ?X . ?X wdt:P190 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown work location ?X . ?X twinned administrative body ?ans1}"
        },
        "original": {
            "question": "What is the accomplice town of the put from Tomas Cruz Martinez",
            "query": "SELECT ?answer WHERE { wd:Q17465858 wdt:P937 ?X . ?X wdt:P190 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Tom\u00e1s Cruz Mart\u00ednez work location ?X . ?X twinned administrative body ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Tomas Cruz Martinez",
            "choppedEntity": "Q17465858"
        }
    },
    {
        "chopped": {
            "question": "What are the signs of the method of murder of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P509 ?X . ?X wdt:P780 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cause of death ?X . ?X symptoms ?ans1}"
        },
        "original": {
            "question": "What are the signs of the method of murder of Claude Monet",
            "query": "SELECT ?answer WHERE { wd:Q296 wdt:P509 ?X . ?X wdt:P780 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Claude Monet cause of death ?X . ?X symptoms ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Claude Monet",
            "choppedEntity": "Q296"
        }
    },
    {
        "chopped": {
            "question": "What are the signs of the strategy of kill of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P509 ?X . ?X wdt:P780 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cause of death ?X . ?X symptoms ?ans1}"
        },
        "original": {
            "question": "What are the signs of the strategy of kill of Claude Monet",
            "query": "SELECT ?answer WHERE { wd:Q296 wdt:P509 ?X . ?X wdt:P780 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Claude Monet cause of death ?X . ?X symptoms ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Claude Monet",
            "choppedEntity": "Q296"
        }
    },
    {
        "chopped": {
            "question": "For the New York Stock Exchange, what is the ticker symbol for ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P414 ?s . ?s ps:P414 ?ans1 . ?s pq:P249 ?x FILTER(contains(?x,'NYSE')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown stock exchange ?s . ?s stock exchange ?ans1 . ?s ticker symbol ?x FILTER(contains(?x,'NYSE')) }"
        },
        "original": {
            "question": "For the New York Stock Exchange, what is the ticker symbol for LinkedIn",
            "query": "SELECT ?obj WHERE { wd:Q213660 p:P414 ?s . ?s ps:P414 ?obj . ?s pq:P249 ?x FILTER(contains(?x,'NYSE')) }",
            "NLQuery": "SELECT ?obj WHERE { LinkedIn stock exchange ?s . ?s stock exchange ?obj . ?s ticker symbol ?x FILTER(contains(?x,'NYSE')) }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "LinkedIn",
            "choppedEntity": "Q213660"
        }
    },
    {
        "chopped": {
            "question": "Which is the Quebec municipalities geographical code for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3856 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Quebec municipalities geographical code ?ans1}"
        },
        "original": {
            "question": "Which is the Quebec municipalities geographical code for Montreal",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q340 wdt:P3856 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Montreal Quebec municipalities geographical code ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Montreal",
            "choppedEntity": "Q340"
        }
    },
    {
        "chopped": {
            "question": "What is the most consumed product as stated in ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q2424752 . ?ans1 wdt:P2292 ?obj . ?ans1 wdt:P1343 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of product . ?ans1 consumption rate ?obj . ?ans1 described by source ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the most consumed product as stated in the New Encyclopedic Dictionary",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q2424752 . ?ent wdt:P2292 ?obj . ?ent wdt:P1343 wd:Q19190511 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of product . ?ent consumption rate ?obj . ?ent described by source New Encyclopedic Dictionary } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the New Encyclopedic Dictionary",
            "choppedEntity": "Q19190511"
        }
    },
    {
        "chopped": {
            "question": "How does one verbally pronounce the foods traditionally associated with ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P868 ?X . ?X wdt:P443 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown foods traditionally associated ?X . ?X pronunciation audio ?ans1}"
        },
        "original": {
            "question": "How does one verbally pronounce the foods traditionally associated with Eid Al-Adha",
            "query": "SELECT ?answer WHERE { wd:Q514400 wdt:P868 ?X . ?X wdt:P443 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Eid al-Adha foods traditionally associated ?X . ?X pronunciation audio ?answer}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "Eid Al-Adha",
            "choppedEntity": "Q514400"
        }
    },
    {
        "chopped": {
            "question": "What is the verbal pronunciation of the foods associated with ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P868 ?X . ?X wdt:P443 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown foods traditionally associated ?X . ?X pronunciation audio ?ans1}"
        },
        "original": {
            "question": "What is the verbal pronunciation of the foods associated with Eid Al-Adha",
            "query": "SELECT ?answer WHERE { wd:Q514400 wdt:P868 ?X . ?X wdt:P443 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Eid al-Adha foods traditionally associated ?X . ?X pronunciation audio ?answer}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "Eid Al-Adha",
            "choppedEntity": "Q514400"
        }
    },
    {
        "chopped": {
            "question": "Is Jennifer Lopez date ",
            "query": "ASK WHERE { wd:Q40715 wdt:P451 ?unknown }",
            "NLQuery": "ASK WHERE { Jennifer Lopez unmarried partner ?unknown }"
        },
        "original": {
            "question": "Is Jennifer Lopez date Alex Rodriguez",
            "query": "ASK WHERE { wd:Q40715 wdt:P451 wd:Q558664 }",
            "NLQuery": "ASK WHERE { Jennifer Lopez unmarried partner Alex Rodriguez }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Alex Rodriguez",
            "choppedEntity": "Q558664"
        }
    },
    {
        "chopped": {
            "question": "Is Alex Rodriguez dating ",
            "query": "ASK WHERE { ?unknown wdt:P451 wd:Q558664 }",
            "NLQuery": "ASK WHERE { ?unknown unmarried partner Alex Rodriguez }"
        },
        "original": {
            "question": "Is Alex Rodriguez dating Jennifer Lopez",
            "query": "ASK WHERE { wd:Q40715 wdt:P451 wd:Q558664 }",
            "NLQuery": "ASK WHERE { Jennifer Lopez unmarried partner Alex Rodriguez }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jennifer Lopez",
            "choppedEntity": "Q40715"
        }
    },
    {
        "chopped": {
            "question": "How many goals did Kevin Keegan score and when did he start playing for ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q152832 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P580 ?ans1 . ?s pq:P1351 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Kevin Keegan member of sports team ?s . ?s member of sports team ?unknown . ?s start time ?ans1 . ?s number of points/goals/set scored ?ans2 }"
        },
        "original": {
            "question": "How many goals did Kevin Keegan score and when did he start playing for Hamburger SV",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q152832 p:P54 ?s . ?s ps:P54 wd:Q51974 . ?s pq:P580 ?value1 . ?s pq:P1351 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Kevin Keegan member of sports team ?s . ?s member of sports team Hamburger SV . ?s start time ?value1 . ?s number of points/goals/set scored ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Hamburger SV",
            "choppedEntity": "Q51974"
        }
    },
    {
        "chopped": {
            "question": "What is named after ",
            "query": "SELECT ?ans1 WHERE { wd:Q132 p:P138 ?s . ?s ps:P138 ?ans1 . ?s pq:P407 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Sunday named after ?s . ?s named after ?ans1 . ?s language of work or name ?unknown }"
        },
        "original": {
            "question": "What is named after Slovene",
            "query": "SELECT ?obj WHERE { wd:Q132 p:P138 ?s . ?s ps:P138 ?obj . ?s pq:P407 wd:Q9063 }",
            "NLQuery": "SELECT ?obj WHERE { Sunday named after ?s . ?s named after ?obj . ?s language of work or name Slovene }"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Slovene",
            "choppedEntity": "Q9063"
        }
    },
    {
        "chopped": {
            "question": "When did Einheitsgemeinde of Germany for shares border with of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P47 ?obj . ?obj wdt:P31 wd:Q15974307 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown shares border with ?obj . ?obj instance of Einheitsgemeinde of Germany } "
        },
        "original": {
            "question": "When did Einheitsgemeinde of Germany for shares border with of Hamburg",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q1055 wdt:P47 ?obj . ?obj wdt:P31 wd:Q15974307 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Hamburg shares border with ?obj . ?obj instance of Einheitsgemeinde of Germany } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Hamburg",
            "choppedEntity": "Q1055"
        }
    },
    {
        "chopped": {
            "question": "What is the official name of the star ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P59 ?X . ?X wdt:P1705 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown constellation ?X . ?X native label ?ans1}"
        },
        "original": {
            "question": "What is the official name of the star Arp 220",
            "query": "SELECT ?answer WHERE { wd:Q698547 wdt:P59 ?X . ?X wdt:P1705 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Arp 220 constellation ?X . ?X native label ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Arp 220",
            "choppedEntity": "Q698547"
        }
    },
    {
        "chopped": {
            "question": "Which is the trunk prefix from ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P740 ?X . ?X wdt:P3238 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown location of formation ?X . ?X trunk prefix ?ans1}"
        },
        "original": {
            "question": "Which is the trunk prefix from Nintendo",
            "query": "SELECT ?answer WHERE { wd:Q8093 wdt:P740 ?X . ?X wdt:P3238 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Nintendo location of formation ?X . ?X trunk prefix ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Nintendo",
            "choppedEntity": "Q8093"
        }
    },
    {
        "chopped": {
            "question": "Which is the storage compartment prefix from ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P740 ?X . ?X wdt:P3238 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown location of formation ?X . ?X trunk prefix ?ans1}"
        },
        "original": {
            "question": "Which is the storage compartment prefix from Nintendo",
            "query": "SELECT ?answer WHERE { wd:Q8093 wdt:P740 ?X . ?X wdt:P3238 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Nintendo location of formation ?X . ?X trunk prefix ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Nintendo",
            "choppedEntity": "Q8093"
        }
    },
    {
        "chopped": {
            "question": "How many conjugations are there in ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P5206 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown has conjugation class ?obj }"
        },
        "original": {
            "question": "How many conjugations are there in Latin",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q397 wdt:P5206 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Latin has conjugation class ?obj }"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Latin",
            "choppedEntity": "Q397"
        }
    },
    {
        "chopped": {
            "question": "What is the name of the television program created by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P170 ?unknown . ?sbj wdt:P31 wd:Q15416 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj creator ?unknown . ?sbj instance of television program } "
        },
        "original": {
            "question": "What is the name of the television program created by Julian Assange",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P170 wd:Q360 . ?sbj wdt:P31 wd:Q15416 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj creator Julian Assange . ?sbj instance of television program } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Julian Assange",
            "choppedEntity": "Q360"
        }
    },
    {
        "chopped": {
            "question": "What is the title of the tv program made by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P170 ?unknown . ?sbj wdt:P31 wd:Q15416 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj creator ?unknown . ?sbj instance of television program } "
        },
        "original": {
            "question": "What is the title of the tv program made by Julian Assange",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P170 wd:Q360 . ?sbj wdt:P31 wd:Q15416 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj creator Julian Assange . ?sbj instance of television program } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Julian Assange",
            "choppedEntity": "Q360"
        }
    },
    {
        "chopped": {
            "question": "What is the classification scheme discovered by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P61 ?unknown . ?sbj wdt:P31 wd:Q24249534 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj discoverer or inventor ?unknown . ?sbj instance of specialised classification scheme } "
        },
        "original": {
            "question": "What is the classification scheme discovered by Dimitri Mendeleyev",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P61 wd:Q9106 . ?sbj wdt:P31 wd:Q24249534 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj discoverer or inventor Dmitri Mendeleev . ?sbj instance of specialised classification scheme } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Dimitri Mendeleyev",
            "choppedEntity": "Q9106"
        }
    },
    {
        "chopped": {
            "question": "Is it true that Frank Abagnale live in ",
            "query": "ASK WHERE { wd:Q116774 wdt:P551 ?unknown }",
            "NLQuery": "ASK WHERE { Frank Abagnale residence ?unknown }"
        },
        "original": {
            "question": "Is it true that Frank Abagnale live in Tulsa",
            "query": "ASK WHERE { wd:Q116774 wdt:P551 wd:Q44989 }",
            "NLQuery": "ASK WHERE { Frank Abagnale residence Tulsa }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Tulsa",
            "choppedEntity": "Q44989"
        }
    },
    {
        "chopped": {
            "question": "Did Frank Abagnale live in ",
            "query": "ASK WHERE { wd:Q116774 wdt:P551 ?unknown }",
            "NLQuery": "ASK WHERE { Frank Abagnale residence ?unknown }"
        },
        "original": {
            "question": "Did Frank Abagnale live in Tulsa",
            "query": "ASK WHERE { wd:Q116774 wdt:P551 wd:Q44989 }",
            "NLQuery": "ASK WHERE { Frank Abagnale residence Tulsa }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Tulsa",
            "choppedEntity": "Q44989"
        }
    },
    {
        "chopped": {
            "question": "What is the profit for stockholders of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P127 ?X . ?X wdt:P2139 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown owned by ?X . ?X total revenue ?ans1}"
        },
        "original": {
            "question": "What is the profit for stockholders of Disney",
            "query": "SELECT ?answer WHERE { wd:Q181185 wdt:P127 ?X . ?X wdt:P2139 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Disneyland owned by ?X . ?X total revenue ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Disney",
            "choppedEntity": "Q181185"
        }
    },
    {
        "chopped": {
            "question": "What award did Lewis Milestone get for ",
            "query": "SELECT ?ans1 WHERE { wd:Q285928 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Lewis Milestone award received ?s . ?s award received ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "What award did Lewis Milestone get for All Quiet on the Western Front",
            "query": "SELECT ?obj WHERE { wd:Q285928 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q272599 }",
            "NLQuery": "SELECT ?obj WHERE { Lewis Milestone award received ?s . ?s award received ?obj . ?s for work All Quiet on the Western Front }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "All Quiet on the Western Front",
            "choppedEntity": "Q272599"
        }
    },
    {
        "chopped": {
            "question": "Lewis Milestone received which award for ",
            "query": "SELECT ?ans1 WHERE { wd:Q285928 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Lewis Milestone award received ?s . ?s award received ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "Lewis Milestone received which award for All Quiet on the Western Front",
            "query": "SELECT ?obj WHERE { wd:Q285928 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q272599 }",
            "NLQuery": "SELECT ?obj WHERE { Lewis Milestone award received ?s . ?s award received ?obj . ?s for work All Quiet on the Western Front }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "All Quiet on the Western Front",
            "choppedEntity": "Q272599"
        }
    },
    {
        "chopped": {
            "question": "In which year Steve Jobs finished his education from ",
            "query": "SELECT ?ans1 WHERE { wd:Q19837 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Steve Jobs educated at ?s . ?s educated at ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "In which year Steve Jobs finished his education from the Reed College",
            "query": "SELECT ?value WHERE { wd:Q19837 p:P69 ?s . ?s ps:P69 wd:Q1140775 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Steve Jobs educated at ?s . ?s educated at Reed College . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Reed College",
            "choppedEntity": "Q1140775"
        }
    },
    {
        "chopped": {
            "question": "What year did Steve Jobs finish his education at ",
            "query": "SELECT ?ans1 WHERE { wd:Q19837 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Steve Jobs educated at ?s . ?s educated at ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "What year did Steve Jobs finish his education at Reed College",
            "query": "SELECT ?value WHERE { wd:Q19837 p:P69 ?s . ?s ps:P69 wd:Q1140775 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Steve Jobs educated at ?s . ?s educated at Reed College . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Reed College",
            "choppedEntity": "Q1140775"
        }
    },
    {
        "chopped": {
            "question": "What is Cullum number for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4026 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Cullum number ?ans1}"
        },
        "original": {
            "question": "What is Cullum number for James Longstreet",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q311514 wdt:P4026 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { James Longstreet Cullum number ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "James Longstreet",
            "choppedEntity": "Q311514"
        }
    },
    {
        "chopped": {
            "question": "Who came after Zhao Ziyang as Chairman of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P488 ?s . ?s ps:P488 wd:Q99829 . ?s pq:P155 ?ans1 . ?s pq:P156 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown chairperson ?s . ?s chairperson Zhao Ziyang . ?s follows ?ans1 . ?s followed by ?ans2 }"
        },
        "original": {
            "question": "Who came after Zhao Ziyang as Chairman of Communist Party of China",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q17427 p:P488 ?s . ?s ps:P488 wd:Q99829 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Communist Party of China chairperson ?s . ?s chairperson Zhao Ziyang . ?s follows ?value1 . ?s followed by ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Communist Party of China",
            "choppedEntity": "Q17427"
        }
    },
    {
        "chopped": {
            "question": "When and in what field did Donald Trump receive his ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q22686 p:P512 ?s . ?s ps:P512 ?unknown . ?s pq:P585 ?ans1 . ?s pq:P101 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Donald Trump academic degree ?s . ?s academic degree ?unknown . ?s point in time ?ans1 . ?s field of work ?ans2 }"
        },
        "original": {
            "question": "When and in what field did Donald Trump receive his Bachelor of Science",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q22686 p:P512 ?s . ?s ps:P512 wd:Q787674 . ?s pq:P585 ?value1 . ?s pq:P101 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Donald Trump academic degree ?s . ?s academic degree Bachelor of Science . ?s point in time ?value1 . ?s field of work ?value2 }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Bachelor of Science",
            "choppedEntity": "Q787674"
        }
    },
    {
        "chopped": {
            "question": "When was Carl Spitteler nominated for ",
            "query": "SELECT ?ans1 WHERE { wd:Q226525 p:P1411 ?s . ?s ps:P1411 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Carl Spitteler nominated for ?s . ?s nominated for ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was Carl Spitteler nominated for the Nobel Prize in Literature",
            "query": "SELECT ?value WHERE { wd:Q226525 p:P1411 ?s . ?s ps:P1411 wd:Q37922 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Carl Spitteler nominated for ?s . ?s nominated for Nobel Prize in Literature . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Nobel Prize in Literature",
            "choppedEntity": "Q37922"
        }
    },
    {
        "chopped": {
            "question": "In what year was Carl Spitteler nominated for ",
            "query": "SELECT ?ans1 WHERE { wd:Q226525 p:P1411 ?s . ?s ps:P1411 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Carl Spitteler nominated for ?s . ?s nominated for ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "In what year was Carl Spitteler nominated for the Nobel Prize in Literature",
            "query": "SELECT ?value WHERE { wd:Q226525 p:P1411 ?s . ?s ps:P1411 wd:Q37922 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Carl Spitteler nominated for ?s . ?s nominated for Nobel Prize in Literature . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Nobel Prize in Literature",
            "choppedEntity": "Q37922"
        }
    },
    {
        "chopped": {
            "question": "What is the official language of a member of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P463 ?X . ?X wdt:P37 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown member of ?X . ?X official language ?ans1}"
        },
        "original": {
            "question": "What is the official language of a member of Iran",
            "query": "SELECT ?answer WHERE { wd:Q794 wdt:P463 ?X . ?X wdt:P37 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Iran member of ?X . ?X official language ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Iran",
            "choppedEntity": "Q794"
        }
    },
    {
        "chopped": {
            "question": "What is the official language of the country of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P463 ?X . ?X wdt:P37 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown member of ?X . ?X official language ?ans1}"
        },
        "original": {
            "question": "What is the official language of the country of Iran",
            "query": "SELECT ?answer WHERE { wd:Q794 wdt:P463 ?X . ?X wdt:P37 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Iran member of ?X . ?X official language ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Iran",
            "choppedEntity": "Q794"
        }
    },
    {
        "chopped": {
            "question": "What is  geographical feature continent of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P30 ?X . ?X wdt:P706 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown continent ?X . ?X located on terrain feature ?ans1}"
        },
        "original": {
            "question": "What is  geographical feature continent of Kamenn\u00fd vrch",
            "query": "SELECT ?answer WHERE { wd:Q11734432 wdt:P30 ?X . ?X wdt:P706 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Kamenn\u00fd vrch continent ?X . ?X located on terrain feature ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Kamenn\u00fd vrch",
            "choppedEntity": "Q11734432"
        }
    },
    {
        "chopped": {
            "question": "What is topographical highlight landmass of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P30 ?X . ?X wdt:P706 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown continent ?X . ?X located on terrain feature ?ans1}"
        },
        "original": {
            "question": "What is topographical highlight landmass of Kamenn\u00fd vrch",
            "query": "SELECT ?answer WHERE { wd:Q11734432 wdt:P30 ?X . ?X wdt:P706 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Kamenn\u00fd vrch continent ?X . ?X located on terrain feature ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Kamenn\u00fd vrch",
            "choppedEntity": "Q11734432"
        }
    },
    {
        "chopped": {
            "question": "What number is \"Goodbye Blue Sky\" in the tracklist for the album ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P658 ?s . ?s ps:P658 wd:Q2454009 . ?s pq:P1545 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown tracklist ?s . ?s tracklist Goodbye Blue Sky . ?s series ordinal ?ans1}"
        },
        "original": {
            "question": "What number is \"Goodbye Blue Sky\" in the tracklist for the album The Wall",
            "query": "SELECT ?value WHERE { wd:Q151114 p:P658 ?s . ?s ps:P658 wd:Q2454009 . ?s pq:P1545 ?value}",
            "NLQuery": "SELECT ?value WHERE { The Wall tracklist ?s . ?s tracklist Goodbye Blue Sky . ?s series ordinal ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Wall",
            "choppedEntity": "Q151114"
        }
    },
    {
        "chopped": {
            "question": "What is the tracklist number of the song \"Goodbye Blue Sky\" from the album ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P658 ?s . ?s ps:P658 wd:Q2454009 . ?s pq:P1545 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown tracklist ?s . ?s tracklist Goodbye Blue Sky . ?s series ordinal ?ans1}"
        },
        "original": {
            "question": "What is the tracklist number of the song \"Goodbye Blue Sky\" from the album The Wall",
            "query": "SELECT ?value WHERE { wd:Q151114 p:P658 ?s . ?s ps:P658 wd:Q2454009 . ?s pq:P1545 ?value}",
            "NLQuery": "SELECT ?value WHERE { The Wall tracklist ?s . ?s tracklist Goodbye Blue Sky . ?s series ordinal ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Wall",
            "choppedEntity": "Q151114"
        }
    },
    {
        "chopped": {
            "question": "What is the NFL ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3539 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown NFL.com ID (former scheme) ?ans1}"
        },
        "original": {
            "question": "What is the NFL ID for George Blanda",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q980691 wdt:P3539 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { George Blanda NFL.com ID (former scheme) ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "George Blanda",
            "choppedEntity": "Q980691"
        }
    },
    {
        "chopped": {
            "question": "Mention the supergroup member comprising of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P463 ?obj . ?obj wdt:P31 wd:Q215048 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown member of ?obj . ?obj instance of supergroup } "
        },
        "original": {
            "question": "Mention the supergroup member comprising of Johnny Depp",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q37175 wdt:P463 ?obj . ?obj wdt:P31 wd:Q215048 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Johnny Depp member of ?obj . ?obj instance of supergroup } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Johnny Depp",
            "choppedEntity": "Q37175"
        }
    },
    {
        "chopped": {
            "question": "Specify the supergroup part comprising of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P463 ?obj . ?obj wdt:P31 wd:Q215048 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown member of ?obj . ?obj instance of supergroup } "
        },
        "original": {
            "question": "Specify the supergroup part comprising of Johnny Depp",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q37175 wdt:P463 ?obj . ?obj wdt:P31 wd:Q215048 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Johnny Depp member of ?obj . ?obj instance of supergroup } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Johnny Depp",
            "choppedEntity": "Q37175"
        }
    },
    {
        "chopped": {
            "question": "What is the number of objects in the museum collection of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P195 ?X . ?X wdt:P1436 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown collection ?X . ?X collection or exhibition size ?ans1}"
        },
        "original": {
            "question": "What is the number of objects in the museum collection of The Garden of Earthly Delights",
            "query": "SELECT ?answer WHERE { wd:Q321303 wdt:P195 ?X . ?X wdt:P1436 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Garden of Earthly Delights collection ?X . ?X collection or exhibition size ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Garden of Earthly Delights",
            "choppedEntity": "Q321303"
        }
    },
    {
        "chopped": {
            "question": "Was Roanoke Colony in ",
            "query": "ASK WHERE { wd:Q59222 wdt:P17 ?unknown }",
            "NLQuery": "ASK WHERE { Roanoke Colony country ?unknown }"
        },
        "original": {
            "question": "Was Roanoke Colony in the United States of America",
            "query": "ASK WHERE { wd:Q59222 wdt:P17 wd:Q30 }",
            "NLQuery": "ASK WHERE { Roanoke Colony country United States of America }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the United States of America",
            "choppedEntity": "Q30"
        }
    },
    {
        "chopped": {
            "question": "Was Roanoke Colony located within ",
            "query": "ASK WHERE { wd:Q59222 wdt:P17 ?unknown }",
            "NLQuery": "ASK WHERE { Roanoke Colony country ?unknown }"
        },
        "original": {
            "question": "Was Roanoke Colony located within the United States of America",
            "query": "ASK WHERE { wd:Q59222 wdt:P17 wd:Q30 }",
            "NLQuery": "ASK WHERE { Roanoke Colony country United States of America }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the United States of America",
            "choppedEntity": "Q30"
        }
    },
    {
        "chopped": {
            "question": "Which is the Library of Congress authority ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P244 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Library of Congress authority ID ?ans1}"
        },
        "original": {
            "question": "Which is the Library of Congress authority ID of George Albert Boulenger",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q435731 wdt:P244 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { George Albert Boulenger Library of Congress authority ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "George Albert Boulenger",
            "choppedEntity": "Q435731"
        }
    },
    {
        "chopped": {
            "question": "Who is manufacturer of  microprocessor for ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P176 ?unknown . ?sbj wdt:P31 wd:Q5297 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj manufacturer ?unknown . ?sbj instance of microprocessor } "
        },
        "original": {
            "question": "Who is manufacturer of  microprocessor for intel",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P176 wd:Q248 . ?sbj wdt:P31 wd:Q5297 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj manufacturer Intel . ?sbj instance of microprocessor } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "intel",
            "choppedEntity": "Q248"
        }
    },
    {
        "chopped": {
            "question": "What is the geographical region of the continent of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P30 ?X . ?X wdt:P706 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown continent ?X . ?X located on terrain feature ?ans1}"
        },
        "original": {
            "question": "What is the geographical region of the continent of Espoo",
            "query": "SELECT ?answer WHERE { wd:Q47034 wdt:P30 ?X . ?X wdt:P706 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Espoo continent ?X . ?X located on terrain feature ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Espoo",
            "choppedEntity": "Q47034"
        }
    },
    {
        "chopped": {
            "question": "What is the geological locale of the landmass of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P30 ?X . ?X wdt:P706 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown continent ?X . ?X located on terrain feature ?ans1}"
        },
        "original": {
            "question": "What is the geological locale of the landmass of Espoo",
            "query": "SELECT ?answer WHERE { wd:Q47034 wdt:P30 ?X . ?X wdt:P706 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Espoo continent ?X . ?X located on terrain feature ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Espoo",
            "choppedEntity": "Q47034"
        }
    },
    {
        "chopped": {
            "question": "What is the ARICNS for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P999 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown ARICNS ?ans1}"
        },
        "original": {
            "question": "What is the ARICNS for Fomalhaut",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q13169 wdt:P999 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Fomalhaut ARICNS ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Fomalhaut",
            "choppedEntity": "Q13169"
        }
    },
    {
        "chopped": {
            "question": "Which is NLBPA ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4405 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown NLBPA ID ?ans1}"
        },
        "original": {
            "question": "Which is NLBPA ID for Hank Aaron",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q215777 wdt:P4405 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Hank Aaron NLBPA ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Hank Aaron",
            "choppedEntity": "Q215777"
        }
    },
    {
        "chopped": {
            "question": "When did Cornel West receive his ",
            "query": "SELECT ?ans1 WHERE { wd:Q712469 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Cornel West award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Cornel West receive his Lannan Cultural Freedom Prize",
            "query": "SELECT ?value WHERE { wd:Q712469 p:P166 ?s . ?s ps:P166 wd:Q27021071 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Cornel West award received ?s . ?s award received Lannan Cultural Freedom Prize . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Lannan Cultural Freedom Prize",
            "choppedEntity": "Q27021071"
        }
    },
    {
        "chopped": {
            "question": "When did Mainz cease to be a part of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1720 p:P17 ?s . ?s ps:P17 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Mainz country ?s . ?s country ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did Mainz cease to be a part of the Kingdom of Persia",
            "query": "SELECT ?value WHERE { wd:Q1720 p:P17 ?s . ?s ps:P17 wd:Q27306 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Mainz country ?s . ?s country Kingdom of Prussia . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Kingdom of Persia",
            "choppedEntity": "Q27306"
        }
    },
    {
        "chopped": {
            "question": "From which year did Mainz ceased to be a part of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1720 p:P17 ?s . ?s ps:P17 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Mainz country ?s . ?s country ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "From which year did Mainz ceased to be a part of the Kingdom of Persia",
            "query": "SELECT ?value WHERE { wd:Q1720 p:P17 ?s . ?s ps:P17 wd:Q27306 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Mainz country ?s . ?s country Kingdom of Prussia . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Kingdom of Persia",
            "choppedEntity": "Q27306"
        }
    },
    {
        "chopped": {
            "question": "Which is the parliament that applies to the jurisdiction of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1001 ?unknown . ?sbj wdt:P31 wd:Q35749 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj applies to jurisdiction ?unknown . ?sbj instance of parliament } "
        },
        "original": {
            "question": "Which is the parliament that applies to the jurisdiction of Weimar Republic",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1001 wd:Q41304 . ?sbj wdt:P31 wd:Q35749 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj applies to jurisdiction Weimar Republic . ?sbj instance of parliament } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Weimar Republic",
            "choppedEntity": "Q41304"
        }
    },
    {
        "chopped": {
            "question": "Which is the organization that is member of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P463 ?obj . ?obj wdt:P31 wd:Q43229 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown member of ?obj . ?obj instance of organization } "
        },
        "original": {
            "question": "Which is the organization that is member of Auburn University",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q540672 wdt:P463 ?obj . ?obj wdt:P31 wd:Q43229 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Auburn University member of ?obj . ?obj instance of organization } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Auburn University",
            "choppedEntity": "Q540672"
        }
    },
    {
        "chopped": {
            "question": "When was Ren\u00e9 Cassin in nomination for ",
            "query": "SELECT ?ans1 WHERE { wd:Q232873 p:P1411 ?s . ?s ps:P1411 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ren\u00e9 Cassin nominated for ?s . ?s nominated for ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was Ren\u00e9 Cassin in nomination for the Nobel Peace Prize",
            "query": "SELECT ?value WHERE { wd:Q232873 p:P1411 ?s . ?s ps:P1411 wd:Q35637 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ren\u00e9 Cassin nominated for ?s . ?s nominated for Nobel Peace Prize . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Nobel Peace Prize",
            "choppedEntity": "Q35637"
        }
    },
    {
        "chopped": {
            "question": "When did Rene Cassin get nominated for ",
            "query": "SELECT ?ans1 WHERE { wd:Q232873 p:P1411 ?s . ?s ps:P1411 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ren\u00e9 Cassin nominated for ?s . ?s nominated for ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Rene Cassin get nominated for the Nobel Peace Prize",
            "query": "SELECT ?value WHERE { wd:Q232873 p:P1411 ?s . ?s ps:P1411 wd:Q35637 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ren\u00e9 Cassin nominated for ?s . ?s nominated for Nobel Peace Prize . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Nobel Peace Prize",
            "choppedEntity": "Q35637"
        }
    },
    {
        "chopped": {
            "question": "The holiday Nowruz is celebrated by which ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P832 wd:Q483236 . ?sbj wdt:P31 ?unknown } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj public holiday Nowruz . ?sbj instance of ?unknown } "
        },
        "original": {
            "question": "The holiday Nowruz is celebrated by which Islamic Republic",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P832 wd:Q483236 . ?sbj wdt:P31 wd:Q672729 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj public holiday Nowruz . ?sbj instance of Islamic republic } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Islamic Republic",
            "choppedEntity": "Q672729"
        }
    },
    {
        "chopped": {
            "question": "When did Bob Woodward receive the award ",
            "query": "SELECT ?ans1 WHERE { wd:Q312782 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Bob Woodward award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Bob Woodward receive the award Worth Bingham Prize",
            "query": "SELECT ?value WHERE { wd:Q312782 p:P166 ?s . ?s ps:P166 wd:Q8037157 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Bob Woodward award received ?s . ?s award received Worth Bingham Prize . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Worth Bingham Prize",
            "choppedEntity": "Q8037157"
        }
    },
    {
        "chopped": {
            "question": "What was the date when Bob Woodward was presented with ",
            "query": "SELECT ?ans1 WHERE { wd:Q312782 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Bob Woodward award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "What was the date when Bob Woodward was presented with the Worth Bingham Prize",
            "query": "SELECT ?value WHERE { wd:Q312782 p:P166 ?s . ?s ps:P166 wd:Q8037157 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Bob Woodward award received ?s . ?s award received Worth Bingham Prize . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Worth Bingham Prize",
            "choppedEntity": "Q8037157"
        }
    },
    {
        "chopped": {
            "question": "Who are the writers of the Sermon on the Mount, whose personal name is ",
            "query": "SELECT ?ans1 WHERE { wd:Q51640 wdt:P50 ?ans1 . ?ans1 wdt:P735 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Sermon on the Mount author ?ans1 . ?ans1 given name ?unknown}"
        },
        "original": {
            "question": "Who are the writers of the Sermon on the Mount, whose personal name is Emmanuel",
            "query": "SELECT ?answer WHERE { wd:Q51640 wdt:P50 ?answer . ?answer wdt:P735 wd:Q18001873}",
            "NLQuery": "SELECT ?answer WHERE { Sermon on the Mount author ?answer . ?answer given name Emmanuel}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Emmanuel",
            "choppedEntity": "Q18001873"
        }
    },
    {
        "chopped": {
            "question": "In 1977, what was the area of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P2046 ?s . ?s ps:P2046 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1977')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown area ?s . ?s area ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),'1977')) }"
        },
        "original": {
            "question": "In 1977, what was the area of Stuttgart",
            "query": "SELECT ?obj WHERE { wd:Q1022 p:P2046 ?s . ?s ps:P2046 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1977')) }",
            "NLQuery": "SELECT ?obj WHERE { Stuttgart area ?s . ?s area ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1977')) }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Stuttgart",
            "choppedEntity": "Q1022"
        }
    },
    {
        "chopped": {
            "question": "On what date did Edward O. Wilson win ",
            "query": "SELECT ?ans1 WHERE { wd:Q211029 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Edward O. Wilson award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "On what date did Edward O. Wilson win the Kew International Medal",
            "query": "SELECT ?value WHERE { wd:Q211029 p:P166 ?s . ?s ps:P166 wd:Q53619124 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Edward O. Wilson award received ?s . ?s award received Kew International Medal . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Kew International Medal",
            "choppedEntity": "Q53619124"
        }
    },
    {
        "chopped": {
            "question": "What is the position held by Mart\u00edn Vizcarra who replaces ",
            "query": "SELECT ?ans1 WHERE { wd:Q24030720 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1365 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Mart\u00edn Vizcarra position held ?s . ?s position held ?ans1 . ?s replaces ?unknown }"
        },
        "original": {
            "question": "What is the position held by Mart\u00edn Vizcarra who replaces Marisol Espinoza",
            "query": "SELECT ?obj WHERE { wd:Q24030720 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q4532785 }",
            "NLQuery": "SELECT ?obj WHERE { Mart\u00edn Vizcarra position held ?s . ?s position held ?obj . ?s replaces Marisol Espinoza }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Marisol Espinoza",
            "choppedEntity": "Q4532785"
        }
    },
    {
        "chopped": {
            "question": "How many capitals are in ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P36 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown capital ?obj }"
        },
        "original": {
            "question": "How many capitals are in Federal Republic of Central America",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q190025 wdt:P36 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Federal Republic of Central America capital ?obj }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Federal Republic of Central America",
            "choppedEntity": "Q190025"
        }
    },
    {
        "chopped": {
            "question": "How many capital cities exist in ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P36 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown capital ?obj }"
        },
        "original": {
            "question": "How many capital cities exist in the Federal Republic of Central America",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q190025 wdt:P36 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Federal Republic of Central America capital ?obj }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Federal Republic of Central America",
            "choppedEntity": "Q190025"
        }
    },
    {
        "chopped": {
            "question": "Which is the Google Play Music artist ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4198 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Google Play Music artist ID (former scheme) ?ans1}"
        },
        "original": {
            "question": "Which is the Google Play Music artist ID for Tim McGraw",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q356487 wdt:P4198 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Tim McGraw Google Play Music artist ID (former scheme) ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Tim McGraw",
            "choppedEntity": "Q356487"
        }
    },
    {
        "chopped": {
            "question": "Where abouts did Alexander Hamilton marry ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q178903 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P2842 ?ans1 . ?s pq:P1534 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Alexander Hamilton spouse ?s . ?s spouse ?unknown . ?s place of marriage ?ans1 . ?s end cause ?ans2 }"
        },
        "original": {
            "question": "Where abouts did Alexander Hamilton marry Elizabeth Schuyler Hamilton",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q178903 p:P26 ?s . ?s ps:P26 wd:Q5363475 . ?s pq:P2842 ?value1 . ?s pq:P1534 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Alexander Hamilton spouse ?s . ?s spouse Elizabeth Schuyler Hamilton . ?s place of marriage ?value1 . ?s end cause ?value2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Elizabeth Schuyler Hamilton",
            "choppedEntity": "Q5363475"
        }
    },
    {
        "chopped": {
            "question": "When did Arvo P\u00e4rt receive an honorary Doctorate from ",
            "query": "SELECT ?ans1 WHERE { wd:Q189534 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Arvo P\u00e4rt award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Arvo P\u00e4rt receive an honorary Doctorate from the University of Li\u00e8ge",
            "query": "SELECT ?value WHERE { wd:Q189534 p:P166 ?s . ?s ps:P166 wd:Q23700921 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Arvo P\u00e4rt award received ?s . ?s award received Honorary doctor of the University of Li\u00e8ge . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the University of Li\u00e8ge",
            "choppedEntity": "Q23700921"
        }
    },
    {
        "chopped": {
            "question": "What is Jamie Whincup's personal name that is said to be different from ",
            "query": "SELECT ?ans1 WHERE { wd:Q1468945 wdt:P735 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Jamie Whincup given name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "What is Jamie Whincup's personal name that is said to be different from Jakov",
            "query": "SELECT ?answer WHERE { wd:Q1468945 wdt:P735 ?answer . ?answer wdt:P460 wd:Q544124}",
            "NLQuery": "SELECT ?answer WHERE { Jamie Whincup given name ?answer . ?answer said to be the same as Yakov}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jakov",
            "choppedEntity": "Q544124"
        }
    },
    {
        "chopped": {
            "question": "What is Jamie Whincup's individual title that's said to be diverse from ",
            "query": "SELECT ?ans1 WHERE { wd:Q1468945 wdt:P735 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Jamie Whincup given name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "What is Jamie Whincup's individual title that's said to be diverse from Jakov",
            "query": "SELECT ?answer WHERE { wd:Q1468945 wdt:P735 ?answer . ?answer wdt:P460 wd:Q544124}",
            "NLQuery": "SELECT ?answer WHERE { Jamie Whincup given name ?answer . ?answer said to be the same as Yakov}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Jakov",
            "choppedEntity": "Q544124"
        }
    },
    {
        "chopped": {
            "question": "who is the spouse of Pierre-Simon Laplace that was married in ",
            "query": "SELECT ?ans1 WHERE { wd:Q44481 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P2842 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Pierre-Simon Laplace spouse ?s . ?s spouse ?ans1 . ?s place of marriage ?unknown }"
        },
        "original": {
            "question": "who is the spouse of Pierre-Simon Laplace that was married in Saint-Sulpice",
            "query": "SELECT ?obj WHERE { wd:Q44481 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P2842 wd:Q295844 }",
            "NLQuery": "SELECT ?obj WHERE { Pierre-Simon Laplace spouse ?s . ?s spouse ?obj . ?s place of marriage Saint-Sulpice }"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Saint-Sulpice",
            "choppedEntity": "Q295844"
        }
    },
    {
        "chopped": {
            "question": "Pierre-Simon Laplace was wedded to what person in ",
            "query": "SELECT ?ans1 WHERE { wd:Q44481 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P2842 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Pierre-Simon Laplace spouse ?s . ?s spouse ?ans1 . ?s place of marriage ?unknown }"
        },
        "original": {
            "question": "Pierre-Simon Laplace was wedded to what person in Saint-Sulpice",
            "query": "SELECT ?obj WHERE { wd:Q44481 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P2842 wd:Q295844 }",
            "NLQuery": "SELECT ?obj WHERE { Pierre-Simon Laplace spouse ?s . ?s spouse ?obj . ?s place of marriage Saint-Sulpice }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Saint-Sulpice",
            "choppedEntity": "Q295844"
        }
    },
    {
        "chopped": {
            "question": "Which is the federal state for the participant of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1344 ?unknown . ?sbj wdt:P31 wd:Q43702 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj participant in ?unknown . ?sbj instance of federation } "
        },
        "original": {
            "question": "Which is the federal state for the participant of World War II",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1344 wd:Q362 . ?sbj wdt:P31 wd:Q43702 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj participant in World War II . ?sbj instance of federation } "
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "World War II",
            "choppedEntity": "Q362"
        }
    },
    {
        "chopped": {
            "question": "Which is Artists in Canada record number of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P5239 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Artists in Canada record number ?ans1}"
        },
        "original": {
            "question": "Which is Artists in Canada record number of Leonard Cohen",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1276 wdt:P5239 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Leonard Cohen Artists in Canada record number ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Leonard Cohen",
            "choppedEntity": "Q1276"
        }
    },
    {
        "chopped": {
            "question": "Where and when did Galbraith study with ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P69 ?s . ?s ps:P69 ?ans2 . ?s pq:P512 ?ans1 . }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown educated at ?s . ?s educated at ?ans2 . ?s academic degree ?ans1 . }"
        },
        "original": {
            "question": "Where and when did Galbraith study with John Kenneth",
            "query": "SELECT ?value1 ?obj WHERE { wd:Q186042 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 ?value1 . }",
            "NLQuery": "SELECT ?value1 ?obj WHERE { John Kenneth Galbraith educated at ?s . ?s educated at ?obj . ?s academic degree ?value1 . }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "John Kenneth",
            "choppedEntity": "Q186042"
        }
    },
    {
        "chopped": {
            "question": "Was garage rock a style of music performed by ",
            "query": "ASK WHERE { ?unknown wdt:P136 wd:Q211573 }",
            "NLQuery": "ASK WHERE { ?unknown genre garage rock }"
        },
        "original": {
            "question": "Was garage rock a style of music performed by John Lennon",
            "query": "ASK WHERE { wd:Q1203 wdt:P136 wd:Q211573 }",
            "NLQuery": "ASK WHERE { John Lennon genre garage rock }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "John Lennon",
            "choppedEntity": "Q1203"
        }
    },
    {
        "chopped": {
            "question": "Which research library archives the works of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P485 ?obj . ?obj wdt:P31 wd:Q1438040 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown archives at ?obj . ?obj instance of research library } "
        },
        "original": {
            "question": "Which research library archives the works of James Joyce",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q6882 wdt:P485 ?obj . ?obj wdt:P31 wd:Q1438040 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { James Joyce archives at ?obj . ?obj instance of research library } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "James Joyce",
            "choppedEntity": "Q6882"
        }
    },
    {
        "chopped": {
            "question": "What is the party and ideology of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P102 ?X . ?X wdt:P1142 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown member of political party ?X . ?X political ideology ?ans1}"
        },
        "original": {
            "question": "What is the party and ideology of Vladimir Ovsyannikov",
            "query": "SELECT ?answer WHERE { wd:Q4330844 wdt:P102 ?X . ?X wdt:P1142 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Vladimir Ovsyannikov member of political party ?X . ?X political ideology ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Vladimir Ovsyannikov",
            "choppedEntity": "Q4330844"
        }
    },
    {
        "chopped": {
            "question": "What is the party and belief system of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P102 ?X . ?X wdt:P1142 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown member of political party ?X . ?X political ideology ?ans1}"
        },
        "original": {
            "question": "What is the party and belief system of Vladimir Ovsyannikov",
            "query": "SELECT ?answer WHERE { wd:Q4330844 wdt:P102 ?X . ?X wdt:P1142 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Vladimir Ovsyannikov member of political party ?X . ?X political ideology ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Vladimir Ovsyannikov",
            "choppedEntity": "Q4330844"
        }
    },
    {
        "chopped": {
            "question": "What company was founded by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P112 ?unknown . ?sbj wdt:P31 wd:Q726870 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj founded by ?unknown . ?sbj instance of brick and mortar } "
        },
        "original": {
            "question": "What company was founded by Verizon",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P112 wd:Q467752 . ?sbj wdt:P31 wd:Q726870 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj founded by Verizon . ?sbj instance of brick and mortar } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Verizon",
            "choppedEntity": "Q467752"
        }
    },
    {
        "chopped": {
            "question": "What company was established by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P112 ?unknown . ?sbj wdt:P31 wd:Q726870 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj founded by ?unknown . ?sbj instance of brick and mortar } "
        },
        "original": {
            "question": "What company was established by Verizon",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P112 wd:Q467752 . ?sbj wdt:P31 wd:Q726870 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj founded by Verizon . ?sbj instance of brick and mortar } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Verizon",
            "choppedEntity": "Q467752"
        }
    },
    {
        "chopped": {
            "question": "When was Tom Wolfe awarded with ",
            "query": "SELECT ?ans1 WHERE { wd:Q216195 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Tom Wolfe award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was Tom Wolfe awarded with the Dos Passos Prize",
            "query": "SELECT ?value WHERE { wd:Q216195 p:P166 ?s . ?s ps:P166 wd:Q2439701 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Tom Wolfe award received ?s . ?s award received Dos Passos Prize . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Dos Passos Prize",
            "choppedEntity": "Q2439701"
        }
    },
    {
        "chopped": {
            "question": "Which year was Tom Wolfe awarded with ",
            "query": "SELECT ?ans1 WHERE { wd:Q216195 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Tom Wolfe award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "Which year was Tom Wolfe awarded with the Dos Passos Prize",
            "query": "SELECT ?value WHERE { wd:Q216195 p:P166 ?s . ?s ps:P166 wd:Q2439701 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Tom Wolfe award received ?s . ?s award received Dos Passos Prize . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Dos Passos Prize",
            "choppedEntity": "Q2439701"
        }
    },
    {
        "chopped": {
            "question": "What was John Williams nominated for in the 60th ",
            "query": "SELECT ?ans1 WHERE { wd:Q131285 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { John Williams nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "What was John Williams nominated for in the 60th Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q131285 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q257443 }",
            "NLQuery": "SELECT ?obj WHERE { John Williams nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 60th Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q257443"
        }
    },
    {
        "chopped": {
            "question": "In which category did John Williams was nominated for the 60th ",
            "query": "SELECT ?ans1 WHERE { wd:Q131285 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { John Williams nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "In which category did John Williams was nominated for the 60th Academy Award",
            "query": "SELECT ?obj WHERE { wd:Q131285 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q257443 }",
            "NLQuery": "SELECT ?obj WHERE { John Williams nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 60th Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Award",
            "choppedEntity": "Q257443"
        }
    },
    {
        "chopped": {
            "question": "Which person is know for ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P138 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown named after ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Which person is know for Taj Mahal",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q9141 wdt:P138 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Taj Mahal named after ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Taj Mahal",
            "choppedEntity": "Q9141"
        }
    },
    {
        "chopped": {
            "question": "Which individual is know for ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P138 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown named after ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Which individual is know for Taj Mahal",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q9141 wdt:P138 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Taj Mahal named after ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Taj Mahal",
            "choppedEntity": "Q9141"
        }
    },
    {
        "chopped": {
            "question": "Who is the publisher of the video game ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P123 ?obj . ?obj wdt:P31 wd:Q1137109 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown publisher ?obj . ?obj instance of video game publisher } "
        },
        "original": {
            "question": "Who is the publisher of the video game Space Invaders",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q220665 wdt:P123 ?obj . ?obj wdt:P31 wd:Q1137109 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Space Invaders publisher ?obj . ?obj instance of video game publisher } "
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Space Invaders",
            "choppedEntity": "Q220665"
        }
    },
    {
        "chopped": {
            "question": "Who is the distributer of the video diversion ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P123 ?obj . ?obj wdt:P31 wd:Q1137109 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown publisher ?obj . ?obj instance of video game publisher } "
        },
        "original": {
            "question": "Who is the distributer of the video diversion Space Invaders",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q220665 wdt:P123 ?obj . ?obj wdt:P31 wd:Q1137109 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Space Invaders publisher ?obj . ?obj instance of video game publisher } "
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Space Invaders",
            "choppedEntity": "Q220665"
        }
    },
    {
        "chopped": {
            "question": "Which is the Libraries.org ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4848 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Libraries.org ID ?ans1}"
        },
        "original": {
            "question": "Which is the Libraries.org ID for Biblioth\u00e8que nationale de France",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q193563 wdt:P4848 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Biblioth\u00e8que nationale de France Libraries.org ID ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Biblioth\u00e8que nationale de France",
            "choppedEntity": "Q193563"
        }
    },
    {
        "chopped": {
            "question": "What is the Time Zone of administrative headquarters ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P36 ?X . ?X wdt:P421 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown capital ?X . ?X located in time zone ?ans1}"
        },
        "original": {
            "question": "What is the Time Zone of administrative headquarters taungoo dyansty",
            "query": "SELECT ?answer WHERE { wd:Q519718 wdt:P36 ?X . ?X wdt:P421 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Taungoo Dynasty capital ?X . ?X located in time zone ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "taungoo dyansty",
            "choppedEntity": "Q519718"
        }
    },
    {
        "chopped": {
            "question": "In which time zone is the administrative headquarters of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P36 ?X . ?X wdt:P421 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown capital ?X . ?X located in time zone ?ans1}"
        },
        "original": {
            "question": "In which time zone is the administrative headquarters of the Taungoo Dynasty",
            "query": "SELECT ?answer WHERE { wd:Q519718 wdt:P36 ?X . ?X wdt:P421 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Taungoo Dynasty capital ?X . ?X located in time zone ?answer}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "the Taungoo Dynasty",
            "choppedEntity": "Q519718"
        }
    },
    {
        "chopped": {
            "question": "Which language rule is a facet of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1269 ?unknown . ?sbj wdt:P31 wd:Q4536544 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj facet of ?unknown . ?sbj instance of language law } "
        },
        "original": {
            "question": "Which language rule is a facet of Japanese",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1269 wd:Q5287 . ?sbj wdt:P31 wd:Q4536544 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj facet of Japanese . ?sbj instance of language law } "
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Japanese",
            "choppedEntity": "Q5287"
        }
    },
    {
        "chopped": {
            "question": "What is the maximum length of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P2043 ?s . ?s ps:P2043 ?ans1 . ?s pq:P518 wd:Q10578722 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown length ?s . ?s length ?ans1 . ?s applies to part maximum }"
        },
        "original": {
            "question": "What is the maximum length of Lake Baikal",
            "query": "SELECT ?obj WHERE { wd:Q5513 p:P2043 ?s . ?s ps:P2043 ?obj . ?s pq:P518 wd:Q10578722 }",
            "NLQuery": "SELECT ?obj WHERE { Lake Baikal length ?s . ?s length ?obj . ?s applies to part maximum }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Lake Baikal",
            "choppedEntity": "Q5513"
        }
    },
    {
        "chopped": {
            "question": "vehicles per capit in ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P5167 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown vehicles per thousand people ?ans1}"
        },
        "original": {
            "question": "vehicles per capit in shanghai",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q8686 wdt:P5167 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Shanghai vehicles per thousand people ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "shanghai",
            "choppedEntity": "Q8686"
        }
    },
    {
        "chopped": {
            "question": "What church building was constructed by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P176 ?unknown . ?sbj wdt:P31 wd:Q16970 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj manufacturer ?unknown . ?sbj instance of church building } "
        },
        "original": {
            "question": "What church building was constructed by Dutch East India Company",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P176 wd:Q159766 . ?sbj wdt:P31 wd:Q16970 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj manufacturer Dutch East India Company . ?sbj instance of church building } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Dutch East India Company",
            "choppedEntity": "Q159766"
        }
    },
    {
        "chopped": {
            "question": "What church building was built by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P176 ?unknown . ?sbj wdt:P31 wd:Q16970 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj manufacturer ?unknown . ?sbj instance of church building } "
        },
        "original": {
            "question": "What church building was built by Dutch East India Company",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P176 wd:Q159766 . ?sbj wdt:P31 wd:Q16970 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj manufacturer Dutch East India Company . ?sbj instance of church building } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Dutch East India Company",
            "choppedEntity": "Q159766"
        }
    },
    {
        "chopped": {
            "question": "Which is the British Museum person-institution for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1711 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown British Museum person or institution ID ?ans1}"
        },
        "original": {
            "question": "Which is the British Museum person-institution for Henry Lawson",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q453577 wdt:P1711 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Henry Lawson British Museum person or institution ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Henry Lawson",
            "choppedEntity": "Q453577"
        }
    },
    {
        "chopped": {
            "question": "What is professional or sports partner for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P1327 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 partner in business or sport ?unknown}"
        },
        "original": {
            "question": "What is professional or sports partner for giovanni falcone",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P1327 wd:Q207073}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer partner in business or sport Giovanni Falcone}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "giovanni falcone",
            "choppedEntity": "Q207073"
        }
    },
    {
        "chopped": {
            "question": "Which urban municipality in Germany uses the language ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P2936 ?unknown . ?sbj wdt:P31 wd:Q42744322 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj language used ?unknown . ?sbj instance of urban municipality of Germany } "
        },
        "original": {
            "question": "Which urban municipality in Germany uses the language Esperanto",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P2936 wd:Q143 . ?sbj wdt:P31 wd:Q42744322 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj language used Esperanto . ?sbj instance of urban municipality of Germany } "
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Esperanto",
            "choppedEntity": "Q143"
        }
    },
    {
        "chopped": {
            "question": "Which is the academic major and the academic degree of Frank Gehry who was educated at ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q180374 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P812 ?ans1 . ?s pq:P512 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Frank Gehry educated at ?s . ?s educated at ?unknown . ?s academic major ?ans1 . ?s academic degree ?ans2 }"
        },
        "original": {
            "question": "Which is the academic major and the academic degree of Frank Gehry who was educated at USC School of Architecture",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q180374 p:P69 ?s . ?s ps:P69 wd:Q7866351 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Frank Gehry educated at ?s . ?s educated at USC School of Architecture . ?s academic major ?value1 . ?s academic degree ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "USC School of Architecture",
            "choppedEntity": "Q7866351"
        }
    },
    {
        "chopped": {
            "question": "What academic major and degree did Frank Gehry have at ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q180374 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P812 ?ans1 . ?s pq:P512 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Frank Gehry educated at ?s . ?s educated at ?unknown . ?s academic major ?ans1 . ?s academic degree ?ans2 }"
        },
        "original": {
            "question": "What academic major and degree did Frank Gehry have at the USC School of Architecture",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q180374 p:P69 ?s . ?s ps:P69 wd:Q7866351 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Frank Gehry educated at ?s . ?s educated at USC School of Architecture . ?s academic major ?value1 . ?s academic degree ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the USC School of Architecture",
            "choppedEntity": "Q7866351"
        }
    },
    {
        "chopped": {
            "question": "What number of homes belong to the ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P1165 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub home world ?unknown }"
        },
        "original": {
            "question": "What number of homes belong to the Earth",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P1165 wd:Q2 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub home world Earth }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Earth",
            "choppedEntity": "Q2"
        }
    },
    {
        "chopped": {
            "question": "how many records are done in ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P483 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub recorded at studio or venue ?unknown }"
        },
        "original": {
            "question": "how many records are done in Los Angeles",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P483 wd:Q65 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub recorded at studio or venue Los Angeles }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Los Angeles",
            "choppedEntity": "Q65"
        }
    },
    {
        "chopped": {
            "question": "Who owns ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P1830 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 owner of ?unknown}"
        },
        "original": {
            "question": "Who owns The Storm on the Sea of Galilee",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P1830 wd:Q2246489}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer owner of The Storm on the Sea of Galilee}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Storm on the Sea of Galilee",
            "choppedEntity": "Q2246489"
        }
    },
    {
        "chopped": {
            "question": "Who is the facility operator of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P121 ?X . ?X wdt:P137 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown item operated ?X . ?X operator ?ans1}"
        },
        "original": {
            "question": "Who is the facility operator of Atlas Air",
            "query": "SELECT ?answer WHERE { wd:Q757135 wdt:P121 ?X . ?X wdt:P137 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Atlas Air item operated ?X . ?X operator ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Atlas Air",
            "choppedEntity": "Q757135"
        }
    },
    {
        "chopped": {
            "question": "What are they types of drugs used for the makeup of ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P2176 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub drug used for treatment ?unknown }"
        },
        "original": {
            "question": "What are they types of drugs used for the makeup of ibuprofen",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P2176 wd:Q186969 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub drug used for treatment ibuprofen }"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "ibuprofen",
            "choppedEntity": "Q186969"
        }
    },
    {
        "chopped": {
            "question": "Tell me me a public university whose name consist of the word \"university\" and whoselanguage used ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q875538 . ?ans1 wdt:P2936 ?unknown . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), 'university')) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of public university . ?ans1 language used ?unknown . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), 'university')) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me me a public university whose name consist of the word \"university\" and whoselanguage used English",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q875538 . ?sbj wdt:P2936 wd:Q1860 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'university')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of public university . ?sbj language used English . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'university')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "English",
            "choppedEntity": "Q1860"
        }
    },
    {
        "chopped": {
            "question": "Tell me me a public university whose identify consist of the phrase \"university\" and whoselanguage used ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q875538 . ?ans1 wdt:P2936 ?unknown . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), 'university')) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of public university . ?ans1 language used ?unknown . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), 'university')) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me me a public university whose identify consist of the phrase \"university\" and whoselanguage used English",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q875538 . ?sbj wdt:P2936 wd:Q1860 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'university')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of public university . ?sbj language used English . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'university')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "English",
            "choppedEntity": "Q1860"
        }
    },
    {
        "chopped": {
            "question": "Does Elizabeth Taylor speak ",
            "query": "ASK WHERE { wd:Q34851 wdt:P1412 ?unknown }",
            "NLQuery": "ASK WHERE { Elizabeth Taylor languages spoken, written or signed ?unknown }"
        },
        "original": {
            "question": "Does Elizabeth Taylor speak Icelandic",
            "query": "ASK WHERE { wd:Q34851 wdt:P1412 wd:Q294 }",
            "NLQuery": "ASK WHERE { Elizabeth Taylor languages spoken, written or signed Icelandic }"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Icelandic",
            "choppedEntity": "Q294"
        }
    },
    {
        "chopped": {
            "question": "Can Elizabeth Taylor converse in ",
            "query": "ASK WHERE { wd:Q34851 wdt:P1412 ?unknown }",
            "NLQuery": "ASK WHERE { Elizabeth Taylor languages spoken, written or signed ?unknown }"
        },
        "original": {
            "question": "Can Elizabeth Taylor converse in Icelandic",
            "query": "ASK WHERE { wd:Q34851 wdt:P1412 wd:Q294 }",
            "NLQuery": "ASK WHERE { Elizabeth Taylor languages spoken, written or signed Icelandic }"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Icelandic",
            "choppedEntity": "Q294"
        }
    },
    {
        "chopped": {
            "question": "Who is the singer in the series of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P156 ?X . ?X wdt:P175 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown followed by ?X . ?X performer ?ans1}"
        },
        "original": {
            "question": "Who is the singer in the series of Bone Palace Ballet",
            "query": "SELECT ?answer WHERE { wd:Q3642092 wdt:P156 ?X . ?X wdt:P175 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Bone Palace Ballet followed by ?X . ?X performer ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Bone Palace Ballet",
            "choppedEntity": "Q3642092"
        }
    },
    {
        "chopped": {
            "question": "Which is the archaeological site for the official residence of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P263 ?obj . ?obj wdt:P31 wd:Q839954 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown official residence ?obj . ?obj instance of archaeological site } "
        },
        "original": {
            "question": "Which is the archaeological site for the official residence of the Parthian Empire",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q1986139 wdt:P263 ?obj . ?obj wdt:P31 wd:Q839954 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Parthian Empire official residence ?obj . ?obj instance of archaeological site } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Parthian Empire",
            "choppedEntity": "Q1986139"
        }
    },
    {
        "chopped": {
            "question": "Which country is the leader of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P35 ?unknown . ?sbj wdt:P31 wd:Q6256 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj head of state ?unknown . ?sbj instance of country } "
        },
        "original": {
            "question": "Which country is the leader of Moon Jae",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P35 wd:Q21001 . ?sbj wdt:P31 wd:Q6256 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj head of state Moon Jae-in . ?sbj instance of country } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Moon Jae",
            "choppedEntity": "Q21001"
        }
    },
    {
        "chopped": {
            "question": "Which countries had diplomatic relations with ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P530 ?unknown . ?sbj wdt:P31 wd:Q43702 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj diplomatic relation ?unknown . ?sbj instance of federation } "
        },
        "original": {
            "question": "Which countries had diplomatic relations with the Russian Empire",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P530 wd:Q34266 . ?sbj wdt:P31 wd:Q43702 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj diplomatic relation Russian Empire . ?sbj instance of federation } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Russian Empire",
            "choppedEntity": "Q34266"
        }
    },
    {
        "chopped": {
            "question": "Which musician's sequel is ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P156 ?X . ?X wdt:P175 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown followed by ?X . ?X performer ?ans1}"
        },
        "original": {
            "question": "Which musician's sequel is Amos Moses",
            "query": "SELECT ?answer WHERE { wd:Q4747920 wdt:P156 ?X . ?X wdt:P175 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Amos Moses followed by ?X . ?X performer ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Amos Moses",
            "choppedEntity": "Q4747920"
        }
    },
    {
        "chopped": {
            "question": "Name the musician  whose sequel is ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P156 ?X . ?X wdt:P175 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown followed by ?X . ?X performer ?ans1}"
        },
        "original": {
            "question": "Name the musician  whose sequel is Amos Moses",
            "query": "SELECT ?answer WHERE { wd:Q4747920 wdt:P156 ?X . ?X wdt:P175 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Amos Moses followed by ?X . ?X performer ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Amos Moses",
            "choppedEntity": "Q4747920"
        }
    },
    {
        "chopped": {
            "question": "Which is the twinned administrative body for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P190 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown twinned administrative body ?ans1}"
        },
        "original": {
            "question": "Which is the twinned administrative body for Besan\u00e7on",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q37776 wdt:P190 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Besan\u00e7on twinned administrative body ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Besan\u00e7on",
            "choppedEntity": "Q37776"
        }
    },
    {
        "chopped": {
            "question": "Who is the partner and child of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P25 ?X . ?X wdt:P26 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown mother ?X . ?X spouse ?ans1}"
        },
        "original": {
            "question": "Who is the partner and child of Constantine V",
            "query": "SELECT ?answer WHERE { wd:Q41635 wdt:P25 ?X . ?X wdt:P26 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Konstantinos V mother ?X . ?X spouse ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Constantine V",
            "choppedEntity": "Q41635"
        }
    },
    {
        "chopped": {
            "question": "Who is the accomplice and child of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P25 ?X . ?X wdt:P26 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown mother ?X . ?X spouse ?ans1}"
        },
        "original": {
            "question": "Who is the accomplice and child of Constantine V",
            "query": "SELECT ?answer WHERE { wd:Q41635 wdt:P25 ?X . ?X wdt:P26 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Konstantinos V mother ?X . ?X spouse ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Constantine V",
            "choppedEntity": "Q41635"
        }
    },
    {
        "chopped": {
            "question": "What is IPv6 routing prefix for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3793 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown IPv6 routing prefix ?ans1}"
        },
        "original": {
            "question": "What is IPv6 routing prefix for University of T\u00fcbingen",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q153978 wdt:P3793 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { University of T\u00fcbingen IPv6 routing prefix ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "University of T\u00fcbingen",
            "choppedEntity": "Q153978"
        }
    },
    {
        "chopped": {
            "question": "Who is the dad of the famed ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P22 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj father ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who is the dad of the famed Pablo Picasso",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P22 wd:Q5593 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj father human593 . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Pablo Picasso",
            "choppedEntity": "Q5593"
        }
    },
    {
        "chopped": {
            "question": "In 1882, what was educated at ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P69 ?s . ?s ps:P69 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1882')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown educated at ?s . ?s educated at ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),'1882')) }"
        },
        "original": {
            "question": "In 1882, what was educated at G.E. Moore",
            "query": "SELECT ?obj WHERE { wd:Q295386 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1882')) }",
            "NLQuery": "SELECT ?obj WHERE { G. E. Moore educated at ?s . ?s educated at ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1882')) }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "G.E. Moore",
            "choppedEntity": "Q295386"
        }
    },
    {
        "chopped": {
            "question": "Tell me the legislative bodies are there for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P194 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown legislative body ?obj }"
        },
        "original": {
            "question": "Tell me the legislative bodies are there for France",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q142 wdt:P194 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { France legislative body ?obj }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "France",
            "choppedEntity": "Q142"
        }
    },
    {
        "chopped": {
            "question": "Which are the legislative bodies for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P194 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown legislative body ?obj }"
        },
        "original": {
            "question": "Which are the legislative bodies for France",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q142 wdt:P194 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { France legislative body ?obj }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "France",
            "choppedEntity": "Q142"
        }
    },
    {
        "chopped": {
            "question": "Who is the guilty actress in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P161 ?X . ?X wdt:P1399 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cast member ?X . ?X convicted of ?ans1}"
        },
        "original": {
            "question": "Who is the guilty actress in Johnny Comes Flying Home",
            "query": "SELECT ?answer WHERE { wd:Q3809711 wdt:P161 ?X . ?X wdt:P1399 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Johnny Comes Flying Home cast member ?X . ?X convicted of ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Johnny Comes Flying Home",
            "choppedEntity": "Q3809711"
        }
    },
    {
        "chopped": {
            "question": "What is the team that created the screenplay ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P58 ?X . ?X wdt:P54 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown screenwriter ?X . ?X member of sports team ?ans1}"
        },
        "original": {
            "question": "What is the team that created the screenplay Senna",
            "query": "SELECT ?answer WHERE { wd:Q534785 wdt:P58 ?X . ?X wdt:P54 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Senna screenwriter ?X . ?X member of sports team ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Senna",
            "choppedEntity": "Q534785"
        }
    },
    {
        "chopped": {
            "question": "Who created the documentary ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P58 ?X . ?X wdt:P54 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown screenwriter ?X . ?X member of sports team ?ans1}"
        },
        "original": {
            "question": "Who created the documentary Senna",
            "query": "SELECT ?answer WHERE { wd:Q534785 wdt:P58 ?X . ?X wdt:P54 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Senna screenwriter ?X . ?X member of sports team ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Senna",
            "choppedEntity": "Q534785"
        }
    },
    {
        "chopped": {
            "question": "What is the address of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P1817 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 addressee ?unknown}"
        },
        "original": {
            "question": "What is the address of James Madison",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P1817 wd:Q11813}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer addressee James Madison}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "James Madison",
            "choppedEntity": "Q11813"
        }
    },
    {
        "chopped": {
            "question": "What is the forename of John Ames Mitchell that is said to be the same as ",
            "query": "SELECT ?ans1 WHERE { wd:Q6218902 wdt:P735 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { John Ames Mitchell given name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "What is the forename of John Ames Mitchell that is said to be the same as J\u00f3gvan",
            "query": "SELECT ?answer WHERE { wd:Q6218902 wdt:P735 ?answer . ?answer wdt:P460 wd:Q1715025}",
            "NLQuery": "SELECT ?answer WHERE { John Ames Mitchell given name ?answer . ?answer said to be the same as J\u00f3gvan}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "J\u00f3gvan",
            "choppedEntity": "Q1715025"
        }
    },
    {
        "chopped": {
            "question": "What is the forename of John Ames Mitchell that's said to be the same as ",
            "query": "SELECT ?ans1 WHERE { wd:Q6218902 wdt:P735 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { John Ames Mitchell given name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "What is the forename of John Ames Mitchell that's said to be the same as J\u00f3gvan",
            "query": "SELECT ?answer WHERE { wd:Q6218902 wdt:P735 ?answer . ?answer wdt:P460 wd:Q1715025}",
            "NLQuery": "SELECT ?answer WHERE { John Ames Mitchell given name ?answer . ?answer said to be the same as J\u00f3gvan}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "J\u00f3gvan",
            "choppedEntity": "Q1715025"
        }
    },
    {
        "chopped": {
            "question": "Which is the Latvian Olympic Committee athlete ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2593 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Latvian Olympic Committee athlete ID ?ans1}"
        },
        "original": {
            "question": "Which is the Latvian Olympic Committee athlete ID for M\u0101ris \u0160trombergs",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q441870 wdt:P2593 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { M\u0101ris \u0160trombergs Latvian Olympic Committee athlete ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "M\u0101ris \u0160trombergs",
            "choppedEntity": "Q441870"
        }
    },
    {
        "chopped": {
            "question": "What is the official language of Solomon Islands, which has been distinguished from ",
            "query": "SELECT ?ans1 WHERE { wd:Q685 wdt:P37 ?ans1 . ?ans1 wdt:P1889 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Solomon Islands official language ?ans1 . ?ans1 different from ?unknown}"
        },
        "original": {
            "question": "What is the official language of Solomon Islands, which has been distinguished from Spanglish",
            "query": "SELECT ?answer WHERE { wd:Q685 wdt:P37 ?answer . ?answer wdt:P1889 wd:Q56418}",
            "NLQuery": "SELECT ?answer WHERE { Solomon Islands official language ?answer . ?answer different from Spanglish}"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Spanglish",
            "choppedEntity": "Q56418"
        }
    },
    {
        "chopped": {
            "question": "What is Solomon Islands ' official language, which was distinguished from ",
            "query": "SELECT ?ans1 WHERE { wd:Q685 wdt:P37 ?ans1 . ?ans1 wdt:P1889 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Solomon Islands official language ?ans1 . ?ans1 different from ?unknown}"
        },
        "original": {
            "question": "What is Solomon Islands ' official language, which was distinguished from Spanglish",
            "query": "SELECT ?answer WHERE { wd:Q685 wdt:P37 ?answer . ?answer wdt:P1889 wd:Q56418}",
            "NLQuery": "SELECT ?answer WHERE { Solomon Islands official language ?answer . ?answer different from Spanglish}"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Spanglish",
            "choppedEntity": "Q56418"
        }
    },
    {
        "chopped": {
            "question": "What is the governing text of obstruction of justice that belongs to jurisdiction of ",
            "query": "SELECT ?ans1 WHERE { wd:Q525302 wdt:P92 ?ans1 . ?ans1 wdt:P1001 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { obstruction of justice main regulatory text ?ans1 . ?ans1 applies to jurisdiction ?unknown}"
        },
        "original": {
            "question": "What is the governing text of obstruction of justice that belongs to jurisdiction of Germany",
            "query": "SELECT ?answer WHERE { wd:Q525302 wdt:P92 ?answer . ?answer wdt:P1001 wd:Q183}",
            "NLQuery": "SELECT ?answer WHERE { obstruction of justice main regulatory text ?answer . ?answer applies to jurisdiction Germany}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Germany",
            "choppedEntity": "Q183"
        }
    },
    {
        "chopped": {
            "question": "What is the governing textual content of obstruction of justice that belongs to jurisdiction of ",
            "query": "SELECT ?ans1 WHERE { wd:Q525302 wdt:P92 ?ans1 . ?ans1 wdt:P1001 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { obstruction of justice main regulatory text ?ans1 . ?ans1 applies to jurisdiction ?unknown}"
        },
        "original": {
            "question": "What is the governing textual content of obstruction of justice that belongs to jurisdiction of Germany",
            "query": "SELECT ?answer WHERE { wd:Q525302 wdt:P92 ?answer . ?answer wdt:P1001 wd:Q183}",
            "NLQuery": "SELECT ?answer WHERE { obstruction of justice main regulatory text ?answer . ?answer applies to jurisdiction Germany}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Germany",
            "choppedEntity": "Q183"
        }
    },
    {
        "chopped": {
            "question": "What is the avionics of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P878 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown avionics ?ans1}"
        },
        "original": {
            "question": "What is the avionics of a B-2 Spirit",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q180285 wdt:P878 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { B-2 Spirit avionics ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "a B-2 Spirit",
            "choppedEntity": "Q180285"
        }
    },
    {
        "chopped": {
            "question": "Did Jayne Mansfield portray ",
            "query": "SELECT ?ans1 WHERE { wd:Q229507 p:P106 ?s . ?s ps:P106 ?ans1 . ?s pq:P155 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Jayne Mansfield occupation ?s . ?s occupation ?ans1 . ?s follows ?unknown }"
        },
        "original": {
            "question": "Did Jayne Mansfield portray Bettie Page",
            "query": "SELECT ?obj WHERE { wd:Q229507 p:P106 ?s . ?s ps:P106 ?obj . ?s pq:P155 wd:Q61898 }",
            "NLQuery": "SELECT ?obj WHERE { Jayne Mansfield occupation ?s . ?s occupation ?obj . ?s follows Bettie Page }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Bettie Page",
            "choppedEntity": "Q61898"
        }
    },
    {
        "chopped": {
            "question": "Was Bettie Page portrayed by ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P106 ?s . ?s ps:P106 ?ans1 . ?s pq:P155 wd:Q61898 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown occupation ?s . ?s occupation ?ans1 . ?s follows Bettie Page }"
        },
        "original": {
            "question": "Was Bettie Page portrayed by Jayne Mansfield",
            "query": "SELECT ?obj WHERE { wd:Q229507 p:P106 ?s . ?s ps:P106 ?obj . ?s pq:P155 wd:Q61898 }",
            "NLQuery": "SELECT ?obj WHERE { Jayne Mansfield occupation ?s . ?s occupation ?obj . ?s follows Bettie Page }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jayne Mansfield",
            "choppedEntity": "Q229507"
        }
    },
    {
        "chopped": {
            "question": "Which is the end time and the start time of Anna Wintour as a wife of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q230744 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P582 ?ans1 . ?s pq:P580 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Anna Wintour spouse ?s . ?s spouse ?unknown . ?s end time ?ans1 . ?s start time ?ans2 }"
        },
        "original": {
            "question": "Which is the end time and the start time of Anna Wintour as a wife of David Shaffer",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q230744 p:P26 ?s . ?s ps:P26 wd:Q2195431 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Anna Wintour spouse ?s . ?s spouse David Shaffer . ?s end time ?value1 . ?s start time ?value2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "David Shaffer",
            "choppedEntity": "Q2195431"
        }
    },
    {
        "chopped": {
            "question": "When was Anna Wintour married to ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q230744 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P582 ?ans1 . ?s pq:P580 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Anna Wintour spouse ?s . ?s spouse ?unknown . ?s end time ?ans1 . ?s start time ?ans2 }"
        },
        "original": {
            "question": "When was Anna Wintour married to David Shaffer",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q230744 p:P26 ?s . ?s ps:P26 wd:Q2195431 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Anna Wintour spouse ?s . ?s spouse David Shaffer . ?s end time ?value1 . ?s start time ?value2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "David Shaffer",
            "choppedEntity": "Q2195431"
        }
    },
    {
        "chopped": {
            "question": "How do you address the head or the supreme authority of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P205 ?X . ?X wdt:P35 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown basin country ?X . ?X head of state ?ans1}"
        },
        "original": {
            "question": "How do you address the head or the supreme authority of Khanka Lake",
            "query": "SELECT ?answer WHERE { wd:Q201843 wdt:P205 ?X . ?X wdt:P35 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Khanka Lake basin country ?X . ?X head of state ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Khanka Lake",
            "choppedEntity": "Q201843"
        }
    },
    {
        "chopped": {
            "question": "How do you address the head or the incomparable specialist of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P205 ?X . ?X wdt:P35 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown basin country ?X . ?X head of state ?ans1}"
        },
        "original": {
            "question": "How do you address the head or the incomparable specialist of Khanka Lake",
            "query": "SELECT ?answer WHERE { wd:Q201843 wdt:P205 ?X . ?X wdt:P35 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Khanka Lake basin country ?X . ?X head of state ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Khanka Lake",
            "choppedEntity": "Q201843"
        }
    },
    {
        "chopped": {
            "question": "Is Morgan Freeman's family name ",
            "query": "ASK WHERE { wd:Q48337 wdt:P734 ?unknown }",
            "NLQuery": "ASK WHERE { Morgan Freeman family name ?unknown }"
        },
        "original": {
            "question": "Is Morgan Freeman's family name Freeman",
            "query": "ASK WHERE { wd:Q48337 wdt:P734 wd:Q9014839 }",
            "NLQuery": "ASK WHERE { Morgan Freeman family name Freeman }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Freeman",
            "choppedEntity": "Q9014839"
        }
    },
    {
        "chopped": {
            "question": "Is the surname Freeman the family name of ",
            "query": "ASK WHERE { ?unknown wdt:P734 wd:Q9014839 }",
            "NLQuery": "ASK WHERE { ?unknown family name Freeman }"
        },
        "original": {
            "question": "Is the surname Freeman the family name of Morgan Freeman",
            "query": "ASK WHERE { wd:Q48337 wdt:P734 wd:Q9014839 }",
            "NLQuery": "ASK WHERE { Morgan Freeman family name Freeman }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Morgan Freeman",
            "choppedEntity": "Q48337"
        }
    },
    {
        "chopped": {
            "question": "What file format is the environment of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P400 ?X . ?X wdt:P1072 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown platform ?X . ?X readable file format ?ans1}"
        },
        "original": {
            "question": "What file format is the environment of Grand Theft Auto III",
            "query": "SELECT ?answer WHERE { wd:Q149106 wdt:P400 ?X . ?X wdt:P1072 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Grand Theft Auto III platform ?X . ?X readable file format ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Grand Theft Auto III",
            "choppedEntity": "Q149106"
        }
    },
    {
        "chopped": {
            "question": "What was the prequel and sequel to ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P179 ?s . ?s ps:P179 wd:Q18124780 . ?s pq:P156 ?ans1 . ?s pq:P155 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown part of the series ?s . ?s part of the series Love trilogy . ?s followed by ?ans1 . ?s follows ?ans2 }"
        },
        "original": {
            "question": "What was the prequel and sequel to In the Mood for Love",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q1056853 p:P179 ?s . ?s ps:P179 wd:Q18124780 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { In the Mood for Love part of the series ?s . ?s part of the series Love trilogy . ?s followed by ?value1 . ?s follows ?value2 }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "In the Mood for Love",
            "choppedEntity": "Q1056853"
        }
    },
    {
        "chopped": {
            "question": "What edition's translation of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P629 ?X . ?X wdt:P747 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown edition or translation of ?X . ?X edition ?ans1}"
        },
        "original": {
            "question": "What edition's translation of Vulgate",
            "query": "SELECT ?answer WHERE { wd:Q131175 wdt:P629 ?X . ?X wdt:P747 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Vulgate edition or translation of ?X . ?X edition ?answer}"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Vulgate",
            "choppedEntity": "Q131175"
        }
    },
    {
        "chopped": {
            "question": "What is the Commons map category of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3722 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown none ?ans1}"
        },
        "original": {
            "question": "What is the Commons map category of Salvador",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q36947 wdt:P3722 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Salvador none ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Salvador",
            "choppedEntity": "Q36947"
        }
    },
    {
        "chopped": {
            "question": "What is the lighthouse range of ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 ?unknown . ?ans1 wdt:P2929 ?obj . ?ans1 wdt:P31 wd:Q39715 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of ?unknown . ?ans1 lighthouse range ?obj . ?ans1 instance of lighthouse } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the lighthouse range of the Heidenstam lighthouse",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q10519294 . ?ent wdt:P2929 ?obj . ?ent wdt:P31 wd:Q39715 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of Heidenstam lighthouses . ?ent lighthouse range ?obj . ?ent instance of lighthouse } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "the Heidenstam lighthouse",
            "choppedEntity": "Q10519294"
        }
    },
    {
        "chopped": {
            "question": "Is Moscow in the administrative territorial entity of Sokolniki District and ",
            "query": "ASK WHERE { wd:Q649 wdt:P150 wd:Q1935566 . wd:Q649 wdt:P150 ?unknown }",
            "NLQuery": "ASK WHERE { Moscow contains administrative territorial entity Sokolniki District . Moscow contains administrative territorial entity ?unknown }"
        },
        "original": {
            "question": "Is Moscow in the administrative territorial entity of Sokolniki District and Eastern Administrative Okrug",
            "query": "ASK WHERE { wd:Q649 wdt:P150 wd:Q1935566 . wd:Q649 wdt:P150 wd:Q307234 }",
            "NLQuery": "ASK WHERE { Moscow contains administrative territorial entity Sokolniki District . Moscow contains administrative territorial entity Eastern Administrative Okrug }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Eastern Administrative Okrug",
            "choppedEntity": "Q307234"
        }
    },
    {
        "chopped": {
            "question": "Is the territorial entity of Sokolniki District and ",
            "query": "ASK WHERE { wd:Q649 wdt:P150 wd:Q1935566 . wd:Q649 wdt:P150 ?unknown }",
            "NLQuery": "ASK WHERE { Moscow contains administrative territorial entity Sokolniki District . Moscow contains administrative territorial entity ?unknown }"
        },
        "original": {
            "question": "Is the territorial entity of Sokolniki District and Eastern Administrative Okrug Moscow",
            "query": "ASK WHERE { wd:Q649 wdt:P150 wd:Q1935566 . wd:Q649 wdt:P150 wd:Q307234 }",
            "NLQuery": "ASK WHERE { Moscow contains administrative territorial entity Sokolniki District . Moscow contains administrative territorial entity Eastern Administrative Okrug }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Eastern Administrative Okrug Moscow",
            "choppedEntity": "Q307234"
        }
    },
    {
        "chopped": {
            "question": "Which governmental department operates in the capital city of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1376 ?obj . ?obj wdt:P31 wd:Q56059 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown capital of ?obj . ?obj instance of department of Uruguay } "
        },
        "original": {
            "question": "Which governmental department operates in the capital city of Montevideo",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q1335 wdt:P1376 ?obj . ?obj wdt:P31 wd:Q56059 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Montevideo capital of ?obj . ?obj instance of department of Uruguay } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Montevideo",
            "choppedEntity": "Q1335"
        }
    },
    {
        "chopped": {
            "question": "What government offices are located in ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1376 ?obj . ?obj wdt:P31 wd:Q56059 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown capital of ?obj . ?obj instance of department of Uruguay } "
        },
        "original": {
            "question": "What government offices are located in Montevideo",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q1335 wdt:P1376 ?obj . ?obj wdt:P31 wd:Q56059 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Montevideo capital of ?obj . ?obj instance of department of Uruguay } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Montevideo",
            "choppedEntity": "Q1335"
        }
    },
    {
        "chopped": {
            "question": "What is the Human Development Index for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1081 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Human Development Index ?ans1}"
        },
        "original": {
            "question": "What is the Human Development Index for Papua New Guinea",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q691 wdt:P1081 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Papua New Guinea Human Development Index ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Papua New Guinea",
            "choppedEntity": "Q691"
        }
    },
    {
        "chopped": {
            "question": "Who is the diplomat of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P530 ?X . ?X wdt:P463 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown diplomatic relation ?X . ?X member of ?ans1}"
        },
        "original": {
            "question": "Who is the diplomat of Serbia",
            "query": "SELECT ?answer WHERE { wd:Q403 wdt:P530 ?X . ?X wdt:P463 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Serbia diplomatic relation ?X . ?X member of ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Serbia",
            "choppedEntity": "Q403"
        }
    },
    {
        "chopped": {
            "question": "Which is the song that is the theme music of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P942 ?obj . ?obj wdt:P31 wd:Q7366 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown theme music ?obj . ?obj instance of song } "
        },
        "original": {
            "question": "Which is the song that is the theme music of The Lion King",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q36479 wdt:P942 ?obj . ?obj wdt:P31 wd:Q7366 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { The Lion King theme music ?obj . ?obj instance of song } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Lion King",
            "choppedEntity": "Q36479"
        }
    },
    {
        "chopped": {
            "question": "What resident of Werner Herzog lives in ",
            "query": "SELECT ?ans1 WHERE { wd:Q44131 wdt:P551 ?ans1 . ?ans1 wdt:P47 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Werner Herzog residence ?ans1 . ?ans1 shares border with ?unknown}"
        },
        "original": {
            "question": "What resident of Werner Herzog lives in West Carson",
            "query": "SELECT ?answer WHERE { wd:Q44131 wdt:P551 ?answer . ?answer wdt:P47 wd:Q655926}",
            "NLQuery": "SELECT ?answer WHERE { Werner Herzog residence ?answer . ?answer shares border with West Carson}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "West Carson",
            "choppedEntity": "Q655926"
        }
    },
    {
        "chopped": {
            "question": "What inhabitant of Werner Herzog lives in ",
            "query": "SELECT ?ans1 WHERE { wd:Q44131 wdt:P551 ?ans1 . ?ans1 wdt:P47 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Werner Herzog residence ?ans1 . ?ans1 shares border with ?unknown}"
        },
        "original": {
            "question": "What inhabitant of Werner Herzog lives in West Carson",
            "query": "SELECT ?answer WHERE { wd:Q44131 wdt:P551 ?answer . ?answer wdt:P47 wd:Q655926}",
            "NLQuery": "SELECT ?answer WHERE { Werner Herzog residence ?answer . ?answer shares border with West Carson}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "West Carson",
            "choppedEntity": "Q655926"
        }
    },
    {
        "chopped": {
            "question": "When was Juventus F.C. a chairman of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1422 p:P488 ?s . ?s ps:P488 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Juventus F.C. chairperson ?s . ?s chairperson ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When was Juventus F.C. a chairman of Atillo Ubertalli",
            "query": "SELECT ?value WHERE { wd:Q1422 p:P488 ?s . ?s ps:P488 wd:Q2870115 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Juventus F.C. chairperson ?s . ?s chairperson Attilio Ubertalli . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Atillo Ubertalli",
            "choppedEntity": "Q2870115"
        }
    },
    {
        "chopped": {
            "question": "Give me the year that Atillo Ubertalli's chairman was ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P488 ?s . ?s ps:P488 wd:Q2870115 . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown chairperson ?s . ?s chairperson Attilio Ubertalli . ?s start time ?ans1}"
        },
        "original": {
            "question": "Give me the year that Atillo Ubertalli's chairman was Juventus F.C.",
            "query": "SELECT ?value WHERE { wd:Q1422 p:P488 ?s . ?s ps:P488 wd:Q2870115 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Juventus F.C. chairperson ?s . ?s chairperson Attilio Ubertalli . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Juventus F.C.",
            "choppedEntity": "Q1422"
        }
    },
    {
        "chopped": {
            "question": "What kind of role did James Earl Jones have when he played ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P175 ?s . ?s ps:P175 wd:Q203960 . ?s pq:P642 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown performer ?s . ?s performer James Earl Jones . ?s of ?ans1}"
        },
        "original": {
            "question": "What kind of role did James Earl Jones have when he played Darth Vader",
            "query": "SELECT ?value WHERE { wd:Q12206942 p:P175 ?s . ?s ps:P175 wd:Q203960 . ?s pq:P642 ?value}",
            "NLQuery": "SELECT ?value WHERE { Darth Vader performer ?s . ?s performer James Earl Jones . ?s of ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Darth Vader",
            "choppedEntity": "Q12206942"
        }
    },
    {
        "chopped": {
            "question": "What is the proportion of Korean Air in its subsidiary ",
            "query": "SELECT ?ans1 WHERE { wd:Q213147 p:P355 ?s . ?s ps:P355 ?unknown . ?s pq:P1107 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Korean Air subsidiary ?s . ?s subsidiary ?unknown . ?s proportion ?ans1}"
        },
        "original": {
            "question": "What is the proportion of Korean Air in its subsidiary \u010cesk\u00e9 aerolinie",
            "query": "SELECT ?value WHERE { wd:Q213147 p:P355 ?s . ?s ps:P355 wd:Q192653 . ?s pq:P1107 ?value}",
            "NLQuery": "SELECT ?value WHERE { Korean Air subsidiary ?s . ?s subsidiary \u010cesk\u00e9 aerolinie . ?s proportion ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "\u010cesk\u00e9 aerolinie",
            "choppedEntity": "Q192653"
        }
    },
    {
        "chopped": {
            "question": "What towns are near ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P30 ?X . ?X wdt:P150 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown continent ?X . ?X contains administrative territorial entity ?ans1}"
        },
        "original": {
            "question": "What towns are near the Gamburtsev Mountain Range",
            "query": "SELECT ?answer WHERE { wd:Q1422867 wdt:P30 ?X . ?X wdt:P150 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Gamburtsev Mountain Range continent ?X . ?X contains administrative territorial entity ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Gamburtsev Mountain Range",
            "choppedEntity": "Q1422867"
        }
    },
    {
        "chopped": {
            "question": "Mention the title followed after the king of germany related to ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P97 ?s . ?s ps:P97 wd:Q24004130 . ?s pq:P155 ?ans1 . ?s pq:P156 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown noble title ?s . ?s noble title king of Germany . ?s follows ?ans1 . ?s followed by ?ans2 }"
        },
        "original": {
            "question": "Mention the title followed after the king of germany related to the Charles the Fat",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q150712 p:P97 ?s . ?s ps:P97 wd:Q24004130 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Charles the Fat noble title ?s . ?s noble title king of Germany . ?s follows ?value1 . ?s followed by ?value2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "the Charles the Fat",
            "choppedEntity": "Q150712"
        }
    },
    {
        "chopped": {
            "question": "Mention the title accompanied after the king of germany associated to ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P97 ?s . ?s ps:P97 wd:Q24004130 . ?s pq:P155 ?ans1 . ?s pq:P156 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown noble title ?s . ?s noble title king of Germany . ?s follows ?ans1 . ?s followed by ?ans2 }"
        },
        "original": {
            "question": "Mention the title accompanied after the king of germany associated to the Charles the Fat",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q150712 p:P97 ?s . ?s ps:P97 wd:Q24004130 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Charles the Fat noble title ?s . ?s noble title king of Germany . ?s follows ?value1 . ?s followed by ?value2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "the Charles the Fat",
            "choppedEntity": "Q150712"
        }
    },
    {
        "chopped": {
            "question": "What is the tracklist of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P658 ?obj . ?obj wdt:P31 wd:Q7366 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown tracklist ?obj . ?obj instance of song } "
        },
        "original": {
            "question": "What is the tracklist of The Wall",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q151114 wdt:P658 ?obj . ?obj wdt:P31 wd:Q7366 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { The Wall tracklist ?obj . ?obj instance of song } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Wall",
            "choppedEntity": "Q151114"
        }
    },
    {
        "chopped": {
            "question": "What is the DBS ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4007 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown DBS ID ?ans1}"
        },
        "original": {
            "question": "What is the DBS ID of the Technical University of Munich",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q157808 wdt:P4007 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Technical University of Munich DBS ID ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Technical University of Munich",
            "choppedEntity": "Q157808"
        }
    },
    {
        "chopped": {
            "question": "What other entities are owned by ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P127 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown owned by ?obj }"
        },
        "original": {
            "question": "What other entities are owned by Alphabet Inc",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q20800404 wdt:P127 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Alphabet Inc. owned by ?obj }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Alphabet Inc",
            "choppedEntity": "Q20800404"
        }
    },
    {
        "chopped": {
            "question": "Which are the other entities that are owned by ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P127 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown owned by ?obj }"
        },
        "original": {
            "question": "Which are the other entities that are owned by Alphabet Inc",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q20800404 wdt:P127 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Alphabet Inc. owned by ?obj }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Alphabet Inc",
            "choppedEntity": "Q20800404"
        }
    },
    {
        "chopped": {
            "question": "what is elfilm of person id of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3144 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown elFilm person ID ?ans1}"
        },
        "original": {
            "question": "what is elfilm of person id of linus torvalds",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q34253 wdt:P3144 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Linus Torvalds elFilm person ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "linus torvalds",
            "choppedEntity": "Q34253"
        }
    },
    {
        "chopped": {
            "question": "Which is Stereo Ve Mono artist ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3952 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Stereo Ve Mono artist ID ?ans1}"
        },
        "original": {
            "question": "Which is Stereo Ve Mono artist ID for Shoshana Damari",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q2360762 wdt:P3952 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Shoshana Damari Stereo Ve Mono artist ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Shoshana Damari",
            "choppedEntity": "Q2360762"
        }
    },
    {
        "chopped": {
            "question": "How many manufacturers are for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P176 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown manufacturer ?obj }"
        },
        "original": {
            "question": "How many manufacturers are for Concorde",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q6505 wdt:P176 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Concorde manufacturer ?obj }"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Concorde",
            "choppedEntity": "Q6505"
        }
    },
    {
        "chopped": {
            "question": "What is the number of manufacturers for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P176 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown manufacturer ?obj }"
        },
        "original": {
            "question": "What is the number of manufacturers for Concorde",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q6505 wdt:P176 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Concorde manufacturer ?obj }"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Concorde",
            "choppedEntity": "Q6505"
        }
    },
    {
        "chopped": {
            "question": "What are the top honors granted to ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P166 ?X . ?X wdt:P1346 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?X . ?X winner ?ans1}"
        },
        "original": {
            "question": "What are the top honors granted to Dick Van Dyke",
            "query": "SELECT ?answer WHERE { wd:Q310295 wdt:P166 ?X . ?X wdt:P1346 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Dick Van Dyke award received ?X . ?X winner ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Dick Van Dyke",
            "choppedEntity": "Q310295"
        }
    },
    {
        "chopped": {
            "question": "When did private not-for-profit educational institution for affiliation of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1416 ?unknown . ?sbj wdt:P31 wd:Q23002054 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj affiliation ?unknown . ?sbj instance of private not-for-profit educational institution } "
        },
        "original": {
            "question": "When did private not-for-profit educational institution for affiliation of University of Chicago",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1416 wd:Q131252 . ?sbj wdt:P31 wd:Q23002054 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj affiliation University of Chicago . ?sbj instance of private not-for-profit educational institution } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "University of Chicago",
            "choppedEntity": "Q131252"
        }
    },
    {
        "chopped": {
            "question": "When did Ren\u00e9 Clair receive ",
            "query": "SELECT ?ans1 WHERE { wd:Q55388 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ren\u00e9 Clair award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Ren\u00e9 Clair receive the Louis Delluc Prize",
            "query": "SELECT ?value WHERE { wd:Q55388 p:P166 ?s . ?s ps:P166 wd:Q734335 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ren\u00e9 Clair award received ?s . ?s award received Louis Delluc Prize . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Louis Delluc Prize",
            "choppedEntity": "Q734335"
        }
    },
    {
        "chopped": {
            "question": "Which star's moon is ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P397 ?X . ?X wdt:P398 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown parent astronomical body ?X . ?X child astronomical body ?ans1}"
        },
        "original": {
            "question": "Which star's moon is Omega Nebula",
            "query": "SELECT ?answer WHERE { wd:Q11357 wdt:P397 ?X . ?X wdt:P398 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Omega Nebula parent astronomical body ?X . ?X child astronomical body ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Omega Nebula",
            "choppedEntity": "Q11357"
        }
    },
    {
        "chopped": {
            "question": "Around which star would you find the moon ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P397 ?X . ?X wdt:P398 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown parent astronomical body ?X . ?X child astronomical body ?ans1}"
        },
        "original": {
            "question": "Around which star would you find the moon Omega Nebula",
            "query": "SELECT ?answer WHERE { wd:Q11357 wdt:P397 ?X . ?X wdt:P398 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Omega Nebula parent astronomical body ?X . ?X child astronomical body ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Omega Nebula",
            "choppedEntity": "Q11357"
        }
    },
    {
        "chopped": {
            "question": "Which is the statue that depicts ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P180 ?unknown . ?sbj wdt:P31 wd:Q179700 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj depicts ?unknown . ?sbj instance of statue } "
        },
        "original": {
            "question": "Which is the statue that depicts Isaac Newton",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P180 wd:Q935 . ?sbj wdt:P31 wd:Q179700 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj depicts Isaac Newton . ?sbj instance of statue } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Isaac Newton",
            "choppedEntity": "Q935"
        }
    },
    {
        "chopped": {
            "question": "Which is the number of excavation directors in ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P4345 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown director of archaeological fieldwork ?obj }"
        },
        "original": {
            "question": "Which is the number of excavation directors in Pompeii",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q43332 wdt:P4345 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Pompeii director of archaeological fieldwork ?obj }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Pompeii",
            "choppedEntity": "Q43332"
        }
    },
    {
        "chopped": {
            "question": "Which is the ancient civilization culture of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P2596 ?obj . ?obj wdt:P31 wd:Q28171280 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown culture ?obj . ?obj instance of ancient civilization } "
        },
        "original": {
            "question": "Which is the ancient civilization culture of Rome",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q220 wdt:P2596 ?obj . ?obj wdt:P31 wd:Q28171280 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Rome culture ?obj . ?obj instance of ancient civilization } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Rome",
            "choppedEntity": "Q220"
        }
    },
    {
        "chopped": {
            "question": "What is the set in location of Anabasis whose diplomatic relation is ",
            "query": "SELECT ?ans1 WHERE { wd:Q73112 wdt:P840 ?ans1 . ?ans1 wdt:P530 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Anabasis narrative location ?ans1 . ?ans1 diplomatic relation ?unknown}"
        },
        "original": {
            "question": "What is the set in location of Anabasis whose diplomatic relation is Portugal",
            "query": "SELECT ?answer WHERE { wd:Q73112 wdt:P840 ?answer . ?answer wdt:P530 wd:Q45}",
            "NLQuery": "SELECT ?answer WHERE { Anabasis narrative location ?answer . ?answer diplomatic relation Portugal}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Portugal",
            "choppedEntity": "Q45"
        }
    },
    {
        "chopped": {
            "question": "What is the set in vicinity of Anabasis whose diplomatic relation is ",
            "query": "SELECT ?ans1 WHERE { wd:Q73112 wdt:P840 ?ans1 . ?ans1 wdt:P530 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Anabasis narrative location ?ans1 . ?ans1 diplomatic relation ?unknown}"
        },
        "original": {
            "question": "What is the set in vicinity of Anabasis whose diplomatic relation is Portugal",
            "query": "SELECT ?answer WHERE { wd:Q73112 wdt:P840 ?answer . ?answer wdt:P530 wd:Q45}",
            "NLQuery": "SELECT ?answer WHERE { Anabasis narrative location ?answer . ?answer diplomatic relation Portugal}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Portugal",
            "choppedEntity": "Q45"
        }
    },
    {
        "chopped": {
            "question": "What is the place of death of Boris Pasternak in ",
            "query": "SELECT ?ans1 WHERE { wd:Q41223 p:P20 ?s . ?s ps:P20 ?ans1 . ?s pq:P17 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Boris Pasternak place of death ?s . ?s place of death ?ans1 . ?s country ?unknown }"
        },
        "original": {
            "question": "What is the place of death of Boris Pasternak in the Soviet Union",
            "query": "SELECT ?obj WHERE { wd:Q41223 p:P20 ?s . ?s ps:P20 ?obj . ?s pq:P17 wd:Q15180 }",
            "NLQuery": "SELECT ?obj WHERE { Boris Pasternak place of death ?s . ?s place of death ?obj . ?s country Soviet Union }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Soviet Union",
            "choppedEntity": "Q15180"
        }
    },
    {
        "chopped": {
            "question": "Where is Boris Pasternak buried in ",
            "query": "SELECT ?ans1 WHERE { wd:Q41223 p:P20 ?s . ?s ps:P20 ?ans1 . ?s pq:P17 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Boris Pasternak place of death ?s . ?s place of death ?ans1 . ?s country ?unknown }"
        },
        "original": {
            "question": "Where is Boris Pasternak buried in the Soviet Union",
            "query": "SELECT ?obj WHERE { wd:Q41223 p:P20 ?s . ?s ps:P20 ?obj . ?s pq:P17 wd:Q15180 }",
            "NLQuery": "SELECT ?obj WHERE { Boris Pasternak place of death ?s . ?s place of death ?obj . ?s country Soviet Union }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Soviet Union",
            "choppedEntity": "Q15180"
        }
    },
    {
        "chopped": {
            "question": "What child star appeared in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P161 ?X . ?X wdt:P25 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cast member ?X . ?X mother ?ans1}"
        },
        "original": {
            "question": "What child star appeared in Nico Icon",
            "query": "SELECT ?answer WHERE { wd:Q3339863 wdt:P161 ?X . ?X wdt:P25 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Nico Icon cast member ?X . ?X mother ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Nico Icon",
            "choppedEntity": "Q3339863"
        }
    },
    {
        "chopped": {
            "question": "Which child star appeared in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P161 ?X . ?X wdt:P25 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cast member ?X . ?X mother ?ans1}"
        },
        "original": {
            "question": "Which child star appeared in Nico Icon",
            "query": "SELECT ?answer WHERE { wd:Q3339863 wdt:P161 ?X . ?X wdt:P25 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Nico Icon cast member ?X . ?X mother ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Nico Icon",
            "choppedEntity": "Q3339863"
        }
    },
    {
        "chopped": {
            "question": "Which is the OpenDomesday settlement ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3118 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown OpenDomesday settlement ID ?ans1}"
        },
        "original": {
            "question": "Which is the OpenDomesday settlement ID of Brighton",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q131491 wdt:P3118 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Brighton OpenDomesday settlement ID ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Brighton",
            "choppedEntity": "Q131491"
        }
    },
    {
        "chopped": {
            "question": "who field of this work of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P106 ?X . ?X wdt:P425 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown occupation ?X . ?X field of this occupation ?ans1}"
        },
        "original": {
            "question": "who field of this work of anna orlova",
            "query": "SELECT ?answer WHERE { wd:Q433685 wdt:P106 ?X . ?X wdt:P425 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Anna Orlova occupation ?X . ?X field of this occupation ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "anna orlova",
            "choppedEntity": "Q433685"
        }
    },
    {
        "chopped": {
            "question": "What is the time in Dhaka Divison as located in the administrative territorial entity of ",
            "query": "SELECT ?ans1 WHERE { wd:Q330158 p:P131 ?s . ?s ps:P131 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Dhaka Division located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "What is the time in Dhaka Divison as located in the administrative territorial entity of the Dominion of Pakistan",
            "query": "SELECT ?value WHERE { wd:Q330158 p:P131 ?s . ?s ps:P131 wd:Q2006542 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Dhaka Division located in the administrative territorial entity ?s . ?s located in the administrative territorial entity Dominion of Pakistan . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Dominion of Pakistan",
            "choppedEntity": "Q2006542"
        }
    },
    {
        "chopped": {
            "question": "What is Nelson-Atkins Museum of Art person ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P5273 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Nelson-Atkins Museum of Art person ID ?ans1}"
        },
        "original": {
            "question": "What is Nelson-Atkins Museum of Art person ID for William Johnson",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1883000 wdt:P5273 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { William H. Johnson Nelson-Atkins Museum of Art person ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "William Johnson",
            "choppedEntity": "Q1883000"
        }
    },
    {
        "chopped": {
            "question": "What building contains the headquarters for ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P466 ?unknown . ?sbj wdt:P31 wd:Q1021645 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj occupant ?unknown . ?sbj instance of office building } "
        },
        "original": {
            "question": "What building contains the headquarters for the Social Democratic Party of Germany",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P466 wd:Q49768 . ?sbj wdt:P31 wd:Q1021645 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj occupant Social Democratic Party of Germany . ?sbj instance of office building } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Social Democratic Party of Germany",
            "choppedEntity": "Q49768"
        }
    },
    {
        "chopped": {
            "question": "Which member states have the highest PPPGDP per capita in ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q7275 . ?ans1 wdt:P2299 ?obj . ?ans1 wdt:P463 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of state . ?ans1 PPP GDP per capita ?obj . ?ans1 member of ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "Which member states have the highest PPPGDP per capita in the Multilateral Investment Guarantee Agency",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q7275 . ?ent wdt:P2299 ?obj . ?ent wdt:P463 wd:Q1043527 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of state . ?ent PPP GDP per capita ?obj . ?ent member of Multilateral Investment Guarantee Agency } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Multilateral Investment Guarantee Agency",
            "choppedEntity": "Q1043527"
        }
    },
    {
        "chopped": {
            "question": "Which character in Star Wars is killed by ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P157 ?obj . ?obj wdt:P31 wd:Q15773347 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown killed by ?obj . ?obj instance of film character } "
        },
        "original": {
            "question": "Which character in Star Wars is killed by Luke Skywalker",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q51746 wdt:P157 ?obj . ?obj wdt:P31 wd:Q15773347 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Luke Skywalker killed by ?obj . ?obj instance of film character } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Luke Skywalker",
            "choppedEntity": "Q51746"
        }
    },
    {
        "chopped": {
            "question": "Which character in Star Wars is murdered by ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P157 ?obj . ?obj wdt:P31 wd:Q15773347 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown killed by ?obj . ?obj instance of film character } "
        },
        "original": {
            "question": "Which character in Star Wars is murdered by Luke Skywalker",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q51746 wdt:P157 ?obj . ?obj wdt:P31 wd:Q15773347 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Luke Skywalker killed by ?obj . ?obj instance of film character } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Luke Skywalker",
            "choppedEntity": "Q51746"
        }
    },
    {
        "chopped": {
            "question": "In what year, and for what amount of prize money did Peter Debye receive ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q103835 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1 . ?s pq:P2121 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Peter Debye award received ?s . ?s award received ?unknown . ?s point in time ?ans1 . ?s prize money ?ans2 }"
        },
        "original": {
            "question": "In what year, and for what amount of prize money did Peter Debye receive the Nobel Prize in Chemistry",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q103835 p:P166 ?s . ?s ps:P166 wd:Q44585 . ?s pq:P585 ?value1 . ?s pq:P2121 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Peter Debye award received ?s . ?s award received Nobel Prize in Chemistry . ?s point in time ?value1 . ?s prize money ?value2 }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Nobel Prize in Chemistry",
            "choppedEntity": "Q44585"
        }
    },
    {
        "chopped": {
            "question": "Which is participating teams of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P1923 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 participating team ?unknown}"
        },
        "original": {
            "question": "Which is participating teams of FC Bayern Munich",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P1923 wd:Q15789}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer participating team FC Bayern Munich}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "FC Bayern Munich",
            "choppedEntity": "Q15789"
        }
    },
    {
        "chopped": {
            "question": "Which is a continent of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P30 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown continent ?ans1}"
        },
        "original": {
            "question": "Which is a continent of San Marino",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q238 wdt:P30 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { San Marino continent ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "San Marino",
            "choppedEntity": "Q238"
        }
    },
    {
        "chopped": {
            "question": "The smallest tier 1 capital ratio is possessed by which member of ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q13601825 . ?ans1 wdt:P2663 ?obj . ?ans1 wdt:P463 ?unknown} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of Sparkasse . ?ans1 common equity tier 1 capital ratio (CETI) ?obj . ?ans1 member of ?unknown} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "The smallest tier 1 capital ratio is possessed by which member of the Sparkassenverband Westfalen-Lippe",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q13601825 . ?ent wdt:P2663 ?obj . ?ent wdt:P463 wd:Q1360672} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of Sparkasse . ?ent common equity tier 1 capital ratio (CETI) ?obj . ?ent member of Sparkassenverband Westfalen-Lippe} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Sparkassenverband Westfalen-Lippe",
            "choppedEntity": "Q1360672"
        }
    },
    {
        "chopped": {
            "question": "When did Mahatma Gandhi leave his residence from ",
            "query": "SELECT ?ans1 WHERE { wd:Q1001 p:P551 ?s . ?s ps:P551 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Mahatma Gandhi residence ?s . ?s residence ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did Mahatma Gandhi leave his residence from South Africa",
            "query": "SELECT ?value WHERE { wd:Q1001 p:P551 ?s . ?s ps:P551 wd:Q258 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Mahatma Gandhi residence ?s . ?s residence South Africa . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "South Africa",
            "choppedEntity": "Q258"
        }
    },
    {
        "chopped": {
            "question": "On what date did Mahatma Gandhi leave his residence from ",
            "query": "SELECT ?ans1 WHERE { wd:Q1001 p:P551 ?s . ?s ps:P551 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Mahatma Gandhi residence ?s . ?s residence ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "On what date did Mahatma Gandhi leave his residence from South America",
            "query": "SELECT ?value WHERE { wd:Q1001 p:P551 ?s . ?s ps:P551 wd:Q258 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Mahatma Gandhi residence ?s . ?s residence South Africa . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "South America",
            "choppedEntity": "Q258"
        }
    },
    {
        "chopped": {
            "question": "What was the biological location and cause of death of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P509 ?X . ?X wdt:P927 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cause of death ?X . ?X anatomical location ?ans1}"
        },
        "original": {
            "question": "What was the biological location and cause of death of Ernst Bollden",
            "query": "SELECT ?answer WHERE { wd:Q1357615 wdt:P509 ?X . ?X wdt:P927 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Ernst Bolld\u00e9n cause of death ?X . ?X anatomical location ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ernst Bollden",
            "choppedEntity": "Q1357615"
        }
    },
    {
        "chopped": {
            "question": "What is the location and cause of death of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P509 ?X . ?X wdt:P927 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cause of death ?X . ?X anatomical location ?ans1}"
        },
        "original": {
            "question": "What is the location and cause of death of Ernst Bollden",
            "query": "SELECT ?answer WHERE { wd:Q1357615 wdt:P509 ?X . ?X wdt:P927 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Ernst Bolld\u00e9n cause of death ?X . ?X anatomical location ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ernst Bollden",
            "choppedEntity": "Q1357615"
        }
    },
    {
        "chopped": {
            "question": "Who is the organizer for the sport of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P664 ?ans1 . ?unknown wdt:P641 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown organizer ?ans1 . ?unknown sport ?ans2 }"
        },
        "original": {
            "question": "Who is the organizer for the sport of World Series",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q265538 wdt:P664 ?ans_1 . wd:Q265538 wdt:P641 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { World Series organizer ?ans_1 . World Series sport ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "World Series",
            "choppedEntity": "Q265538"
        }
    },
    {
        "chopped": {
            "question": "Which is the Irish Rugby Football Union men's player ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3848 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Irish Rugby Football Union men's player ID ?ans1}"
        },
        "original": {
            "question": "Which is the Irish Rugby Football Union men's player ID for Brian O'Driscoll",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q912889 wdt:P3848 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Brian O\u2019Driscoll Irish Rugby Football Union men's player ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Brian O'Driscoll",
            "choppedEntity": "Q912889"
        }
    },
    {
        "chopped": {
            "question": "Which is the net worth estimate for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2218 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown net worth ?ans1}"
        },
        "original": {
            "question": "Which is the net worth estimate for Elizabeth Holmes",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q17503525 wdt:P2218 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Elizabeth Holmes net worth ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Elizabeth Holmes",
            "choppedEntity": "Q17503525"
        }
    },
    {
        "chopped": {
            "question": "What weapon with the least field of view is used by ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q15142894 . ?ans1 wdt:P4036 ?obj . ?ans1 wdt:P1535 ?unknown} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of weapon model . ?ans1 field of view ?obj . ?ans1 used by ?unknown} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What weapon with the least field of view is used by People's Liberation",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q15142894 . ?ent wdt:P4036 ?obj . ?ent wdt:P1535 wd:Q200106} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of weapon model . ?ent field of view ?obj . ?ent used by People's Liberation Army} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "People's Liberation",
            "choppedEntity": "Q200106"
        }
    },
    {
        "chopped": {
            "question": "Which weapon with the smallest range of vision is used by ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q15142894 . ?ans1 wdt:P4036 ?obj . ?ans1 wdt:P1535 ?unknown} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of weapon model . ?ans1 field of view ?obj . ?ans1 used by ?unknown} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "Which weapon with the smallest range of vision is used by People's Liberation",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q15142894 . ?ent wdt:P4036 ?obj . ?ent wdt:P1535 wd:Q200106} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of weapon model . ?ent field of view ?obj . ?ent used by People's Liberation Army} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "People's Liberation",
            "choppedEntity": "Q200106"
        }
    },
    {
        "chopped": {
            "question": "What is FIS ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2777 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown FIS snowboarder ID ?ans1}"
        },
        "original": {
            "question": "What is FIS ID for Shaun White",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q288656 wdt:P2777 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Shaun White FIS snowboarder ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Shaun White",
            "choppedEntity": "Q288656"
        }
    },
    {
        "chopped": {
            "question": "Did Oliver Cromwell take part in the English Civil War and ",
            "query": "ASK WHERE { wd:Q44279 wdt:P607 wd:Q80330 . wd:Q44279 wdt:P607 ?unknown }",
            "NLQuery": "ASK WHERE { Oliver Cromwell conflict English Civil War . Oliver Cromwell conflict ?unknown }"
        },
        "original": {
            "question": "Did Oliver Cromwell take part in the English Civil War and the Siege of Oxford",
            "query": "ASK WHERE { wd:Q44279 wdt:P607 wd:Q80330 . wd:Q44279 wdt:P607 wd:Q7510289 }",
            "NLQuery": "ASK WHERE { Oliver Cromwell conflict English Civil War . Oliver Cromwell conflict Siege of Oxford }"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the Siege of Oxford",
            "choppedEntity": "Q7510289"
        }
    },
    {
        "chopped": {
            "question": "Was Oliver Cromwell involved in the English Civil War and ",
            "query": "ASK WHERE { wd:Q44279 wdt:P607 wd:Q80330 . wd:Q44279 wdt:P607 ?unknown }",
            "NLQuery": "ASK WHERE { Oliver Cromwell conflict English Civil War . Oliver Cromwell conflict ?unknown }"
        },
        "original": {
            "question": "Was Oliver Cromwell involved in the English Civil War and the Siege of Oxford",
            "query": "ASK WHERE { wd:Q44279 wdt:P607 wd:Q80330 . wd:Q44279 wdt:P607 wd:Q7510289 }",
            "NLQuery": "ASK WHERE { Oliver Cromwell conflict English Civil War . Oliver Cromwell conflict Siege of Oxford }"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the Siege of Oxford",
            "choppedEntity": "Q7510289"
        }
    },
    {
        "chopped": {
            "question": "What is the country of jurisdiction of ",
            "query": "SELECT ?ans1 WHERE { wd:Q705818 wdt:P92 ?ans1 . ?ans1 wdt:P1001 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { unfree labour main regulatory text ?ans1 . ?ans1 applies to jurisdiction ?unknown}"
        },
        "original": {
            "question": "What is the country of jurisdiction of Germany",
            "query": "SELECT ?answer WHERE { wd:Q705818 wdt:P92 ?answer . ?answer wdt:P1001 wd:Q183}",
            "NLQuery": "SELECT ?answer WHERE { unfree labour main regulatory text ?answer . ?answer applies to jurisdiction Germany}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Germany",
            "choppedEntity": "Q183"
        }
    },
    {
        "chopped": {
            "question": "What is the nation of ward of ",
            "query": "SELECT ?ans1 WHERE { wd:Q705818 wdt:P92 ?ans1 . ?ans1 wdt:P1001 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { unfree labour main regulatory text ?ans1 . ?ans1 applies to jurisdiction ?unknown}"
        },
        "original": {
            "question": "What is the nation of ward of Germany",
            "query": "SELECT ?answer WHERE { wd:Q705818 wdt:P92 ?answer . ?answer wdt:P1001 wd:Q183}",
            "NLQuery": "SELECT ?answer WHERE { unfree labour main regulatory text ?answer . ?answer applies to jurisdiction Germany}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Germany",
            "choppedEntity": "Q183"
        }
    },
    {
        "chopped": {
            "question": "What is the coordinate location of the mouth of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P625 ?s . ?s ps:P625 ?ans1 . ?s pq:P518 wd:Q1233637 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown coordinate location ?s . ?s coordinate location ?ans1 . ?s applies to part river mouth }"
        },
        "original": {
            "question": "What is the coordinate location of the mouth of the Orange River",
            "query": "SELECT ?obj WHERE { wd:Q181475 p:P625 ?s . ?s ps:P625 ?obj . ?s pq:P518 wd:Q1233637 }",
            "NLQuery": "SELECT ?obj WHERE { Orange River coordinate location ?s . ?s coordinate location ?obj . ?s applies to part river mouth }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Orange River",
            "choppedEntity": "Q181475"
        }
    },
    {
        "chopped": {
            "question": "What is the human being for the conflict in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P607 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj conflict ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "What is the human being for the conflict in the Battle of France",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P607 wd:Q151340 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj conflict Battle of France . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the Battle of France",
            "choppedEntity": "Q151340"
        }
    },
    {
        "chopped": {
            "question": "Who is the commander of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P598 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj commander of (DEPRECATED) ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who is the commander of Battle of Verdum",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P598 wd:Q130847 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj commander of (DEPRECATED) Battle of Verdun . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "Battle of Verdum",
            "choppedEntity": "Q130847"
        }
    },
    {
        "chopped": {
            "question": "What was Arthur Penn nominated for at the 12th Annual ",
            "query": "SELECT ?ans1 WHERE { wd:Q41136 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Arthur Penn nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "What was Arthur Penn nominated for at the 12th Annual Tony Awards",
            "query": "SELECT ?obj WHERE { wd:Q41136 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q4548936 }",
            "NLQuery": "SELECT ?obj WHERE { Arthur Penn nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 12th Tony Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Tony Awards",
            "choppedEntity": "Q4548936"
        }
    },
    {
        "chopped": {
            "question": "What position did Michael Poniatowksi hold when he replaced ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1366 wd:Q3310623 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown position held ?s . ?s position held ?ans1 . ?s replaced by Michel Poniatowski }"
        },
        "original": {
            "question": "What position did Michael Poniatowksi hold when he replaced Jacques Chirac",
            "query": "SELECT ?obj WHERE { wd:Q2105 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q3310623 }",
            "NLQuery": "SELECT ?obj WHERE { Jacques Chirac position held ?s . ?s position held ?obj . ?s replaced by Michel Poniatowski }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jacques Chirac",
            "choppedEntity": "Q2105"
        }
    },
    {
        "chopped": {
            "question": "What is the position of Benedict XVI that replaces ",
            "query": "SELECT ?ans1 WHERE { wd:Q2494 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1365 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Benedict XVI position held ?s . ?s position held ?ans1 . ?s replaces ?unknown }"
        },
        "original": {
            "question": "What is the position of Benedict XVI that replaces John Paul II",
            "query": "SELECT ?obj WHERE { wd:Q2494 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q989 }",
            "NLQuery": "SELECT ?obj WHERE { Benedict XVI position held ?s . ?s position held ?obj . ?s replaces John Paul II }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "John Paul II",
            "choppedEntity": "Q989"
        }
    },
    {
        "chopped": {
            "question": "Tell me about television program for director of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P57 ?unknown . ?sbj wdt:P31 wd:Q15416 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj director ?unknown . ?sbj instance of television program } "
        },
        "original": {
            "question": "Tell me about television program for director of Jim Henson",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P57 wd:Q191037 . ?sbj wdt:P31 wd:Q15416 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj director Jim Henson . ?sbj instance of television program } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jim Henson",
            "choppedEntity": "Q191037"
        }
    },
    {
        "chopped": {
            "question": "which is the literary works of doctoral supervisor of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P184 ?X . ?X wdt:P800 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown doctoral advisor ?X . ?X notable work ?ans1}"
        },
        "original": {
            "question": "which is the literary works of doctoral supervisor of finn e kydland",
            "query": "SELECT ?answer WHERE { wd:Q211097 wdt:P184 ?X . ?X wdt:P800 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Finn E. Kydland doctoral advisor ?X . ?X notable work ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "finn e kydland",
            "choppedEntity": "Q211097"
        }
    },
    {
        "chopped": {
            "question": "What are the literary works of the doctoral supervisor of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P184 ?X . ?X wdt:P800 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown doctoral advisor ?X . ?X notable work ?ans1}"
        },
        "original": {
            "question": "What are the literary works of the doctoral supervisor of Finn E Kydland",
            "query": "SELECT ?answer WHERE { wd:Q211097 wdt:P184 ?X . ?X wdt:P800 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Finn E. Kydland doctoral advisor ?X . ?X notable work ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Finn E Kydland",
            "choppedEntity": "Q211097"
        }
    },
    {
        "chopped": {
            "question": "What's the retirement age in ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P3001 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown retirement age ?obj }"
        },
        "original": {
            "question": "What's the retirement age in Australia",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q408 wdt:P3001 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Australia retirement age ?obj }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Australia",
            "choppedEntity": "Q408"
        }
    },
    {
        "chopped": {
            "question": "How old do you have to be to retire in ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P3001 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown retirement age ?obj }"
        },
        "original": {
            "question": "How old do you have to be to retire in Australia",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q408 wdt:P3001 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Australia retirement age ?obj }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Australia",
            "choppedEntity": "Q408"
        }
    },
    {
        "chopped": {
            "question": "What is the place of interment of Gregory Blaxland, which divides into ",
            "query": "SELECT ?ans1 WHERE { wd:Q962593 wdt:P119 ?ans1 . ?ans1 wdt:P150 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Gregory Blaxland place of burial ?ans1 . ?ans1 contains administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "What is the place of interment of Gregory Blaxland, which divides into Warringah Council",
            "query": "SELECT ?answer WHERE { wd:Q962593 wdt:P119 ?answer . ?answer wdt:P150 wd:Q377295}",
            "NLQuery": "SELECT ?answer WHERE { Gregory Blaxland place of burial ?answer . ?answer contains administrative territorial entity Warringah Council}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Warringah Council",
            "choppedEntity": "Q377295"
        }
    },
    {
        "chopped": {
            "question": "What is the region of interment of Gregory Blaxland, which divides into ",
            "query": "SELECT ?ans1 WHERE { wd:Q962593 wdt:P119 ?ans1 . ?ans1 wdt:P150 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Gregory Blaxland place of burial ?ans1 . ?ans1 contains administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "What is the region of interment of Gregory Blaxland, which divides into Warringah Council",
            "query": "SELECT ?answer WHERE { wd:Q962593 wdt:P119 ?answer . ?answer wdt:P150 wd:Q377295}",
            "NLQuery": "SELECT ?answer WHERE { Gregory Blaxland place of burial ?answer . ?answer contains administrative territorial entity Warringah Council}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Warringah Council",
            "choppedEntity": "Q377295"
        }
    },
    {
        "chopped": {
            "question": "What position did Ferdinand Marcos hold when he was replaced by ",
            "query": "SELECT ?ans1 WHERE { wd:Q1463 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1366 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Ferdinand Marcos position held ?s . ?s position held ?ans1 . ?s replaced by ?unknown }"
        },
        "original": {
            "question": "What position did Ferdinand Marcos hold when he was replaced by Corazon Aquino",
            "query": "SELECT ?obj WHERE { wd:Q1463 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q1480 }",
            "NLQuery": "SELECT ?obj WHERE { Ferdinand Marcos position held ?s . ?s position held ?obj . ?s replaced by Corazon Aquino }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Corazon Aquino",
            "choppedEntity": "Q1480"
        }
    },
    {
        "chopped": {
            "question": "Give me the post name held by Ferdinand Marcos at the time of his replacement with ",
            "query": "SELECT ?ans1 WHERE { wd:Q1463 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1366 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Ferdinand Marcos position held ?s . ?s position held ?ans1 . ?s replaced by ?unknown }"
        },
        "original": {
            "question": "Give me the post name held by Ferdinand Marcos at the time of his replacement with Corazon Aquino",
            "query": "SELECT ?obj WHERE { wd:Q1463 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q1480 }",
            "NLQuery": "SELECT ?obj WHERE { Ferdinand Marcos position held ?s . ?s position held ?obj . ?s replaced by Corazon Aquino }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Corazon Aquino",
            "choppedEntity": "Q1480"
        }
    },
    {
        "chopped": {
            "question": "What revolution caused the destruction of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P770 ?obj . ?obj wdt:P31 wd:Q10931 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown cause of destruction ?obj . ?obj instance of revolution } "
        },
        "original": {
            "question": "What revolution caused the destruction of the Russian Empire",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q34266 wdt:P770 ?obj . ?obj wdt:P31 wd:Q10931 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Russian Empire cause of destruction ?obj . ?obj instance of revolution } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Russian Empire",
            "choppedEntity": "Q34266"
        }
    },
    {
        "chopped": {
            "question": "Which revolution caused the destruction of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P770 ?obj . ?obj wdt:P31 wd:Q10931 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown cause of destruction ?obj . ?obj instance of revolution } "
        },
        "original": {
            "question": "Which revolution caused the destruction of the Russian Empire",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q34266 wdt:P770 ?obj . ?obj wdt:P31 wd:Q10931 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Russian Empire cause of destruction ?obj . ?obj instance of revolution } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Russian Empire",
            "choppedEntity": "Q34266"
        }
    },
    {
        "chopped": {
            "question": "Which is the authority for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P797 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown authority ?ans1}"
        },
        "original": {
            "question": "Which is the authority for Yale University",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q49112 wdt:P797 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Yale University authority ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Yale University",
            "choppedEntity": "Q49112"
        }
    },
    {
        "chopped": {
            "question": "What Genre of music of the Author of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P676 ?X . ?X wdt:P136 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown lyrics by ?X . ?X genre ?ans1}"
        },
        "original": {
            "question": "What Genre of music of the Author of In The Flesh",
            "query": "SELECT ?answer WHERE { wd:Q2557146 wdt:P676 ?X . ?X wdt:P136 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { In the Flesh lyrics by ?X . ?X genre ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "In The Flesh",
            "choppedEntity": "Q2557146"
        }
    },
    {
        "chopped": {
            "question": "Which is the category for alumni of educational institution of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3876 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown category for alumni of educational institution ?ans1}"
        },
        "original": {
            "question": "Which is the category for alumni of educational institution of Dartmouth College",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q49116 wdt:P3876 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Dartmouth College category for alumni of educational institution ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Dartmouth College",
            "choppedEntity": "Q49116"
        }
    },
    {
        "chopped": {
            "question": "What is the Unifrance company id for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3979 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Unifrance company ID ?ans1}"
        },
        "original": {
            "question": "What is the Unifrance company id for NHK",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q212128 wdt:P3979 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { NHK Unifrance company ID ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "NHK",
            "choppedEntity": "Q212128"
        }
    },
    {
        "chopped": {
            "question": "What is the diplomatic relationship between Saudi Arabia and ",
            "query": "SELECT ?ans1 WHERE { wd:Q851 p:P530 ?s . ?s ps:P530 ?unknown . ?s pq:P805 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Saudi Arabia diplomatic relation ?s . ?s diplomatic relation ?unknown . ?s statement is subject of ?ans1}"
        },
        "original": {
            "question": "What is the diplomatic relationship between Saudi Arabia and Kyrgyzstan",
            "query": "SELECT ?value WHERE { wd:Q851 p:P530 ?s . ?s ps:P530 wd:Q813 . ?s pq:P805 ?value}",
            "NLQuery": "SELECT ?value WHERE { Saudi Arabia diplomatic relation ?s . ?s diplomatic relation Kyrgyzstan . ?s statement is subject of ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Kyrgyzstan",
            "choppedEntity": "Q813"
        }
    },
    {
        "chopped": {
            "question": "When did James Heckman receive his doctorate at ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q312561 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P184 ?ans1 . ?s pq:P512 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { James Heckman educated at ?s . ?s educated at ?unknown . ?s doctoral advisor ?ans1 . ?s academic degree ?ans2 }"
        },
        "original": {
            "question": "When did James Heckman receive his doctorate at Princeton University",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q312561 p:P69 ?s . ?s ps:P69 wd:Q21578 . ?s pq:P184 ?value1 . ?s pq:P512 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { James Heckman educated at ?s . ?s educated at Princeton University . ?s doctoral advisor ?value1 . ?s academic degree ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Princeton University",
            "choppedEntity": "Q21578"
        }
    },
    {
        "chopped": {
            "question": "What Roman god was worshiped by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1049 ?unknown . ?sbj wdt:P31 wd:Q11688446 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj worshipped by ?unknown . ?sbj instance of Roman deity } "
        },
        "original": {
            "question": "What Roman god was worshiped by Christians",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1049 wd:Q5043 . ?sbj wdt:P31 wd:Q11688446 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj worshipped by Christianity . ?sbj instance of Roman deity } "
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Christians",
            "choppedEntity": "Q5043"
        }
    },
    {
        "chopped": {
            "question": "Which is the revolution that had it's location in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P276 ?unknown . ?sbj wdt:P31 wd:Q10931 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj location ?unknown . ?sbj instance of revolution } "
        },
        "original": {
            "question": "Which is the revolution that had it's location in the Russian Empire",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P276 wd:Q34266 . ?sbj wdt:P31 wd:Q10931 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj location Russian Empire . ?sbj instance of revolution } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Russian Empire",
            "choppedEntity": "Q34266"
        }
    },
    {
        "chopped": {
            "question": "Which was the target of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P533 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown target ?ans1}"
        },
        "original": {
            "question": "Which was the target of Battle of Stalingrad",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q38789 wdt:P533 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Battle of Stalingrad target ?answer}"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "Battle of Stalingrad",
            "choppedEntity": "Q38789"
        }
    },
    {
        "chopped": {
            "question": "What is the sporting even of the child of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P22 ?X . ?X wdt:P2416 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown father ?X . ?X sports discipline competed in ?ans1}"
        },
        "original": {
            "question": "What is the sporting even of the child of Gore Vidal",
            "query": "SELECT ?answer WHERE { wd:Q167821 wdt:P22 ?X . ?X wdt:P2416 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Gore Vidal father ?X . ?X sports discipline competed in ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Gore Vidal",
            "choppedEntity": "Q167821"
        }
    },
    {
        "chopped": {
            "question": "According to official records, what is the population of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P459 wd:Q745221 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown population ?s . ?s population ?ans1 . ?s determination method register office }"
        },
        "original": {
            "question": "According to official records, what is the population of Oviedo",
            "query": "SELECT ?obj WHERE { wd:Q14317 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q745221 }",
            "NLQuery": "SELECT ?obj WHERE { Oviedo population ?s . ?s population ?obj . ?s determination method register office }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Oviedo",
            "choppedEntity": "Q14317"
        }
    },
    {
        "chopped": {
            "question": "Is 245,000,000 the total equity of ",
            "query": "ASK WHERE { ?unknown wdt:P2137 ?obj FILTER(?obj = 245000000) } ",
            "NLQuery": "ASK WHERE { ?unknown total equity ?obj FILTER(?obj = 245000000) } "
        },
        "original": {
            "question": "Is 245,000,000 the total equity of Delta Air Lines",
            "query": "ASK WHERE { wd:Q188920 wdt:P2137 ?obj FILTER(?obj = 245000000) } ",
            "NLQuery": "ASK WHERE { Delta Air Lines total equity ?obj FILTER(?obj = 245000000) } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Delta Air Lines",
            "choppedEntity": "Q188920"
        }
    },
    {
        "chopped": {
            "question": "Which is the Wikimedia category for the associated category of people of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1792 ?obj . ?obj wdt:P31 wd:Q4167836 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown category of associated people ?obj . ?obj instance of Wikimedia category } "
        },
        "original": {
            "question": "Which is the Wikimedia category for the associated category of people of Istanbul",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q406 wdt:P1792 ?obj . ?obj wdt:P31 wd:Q4167836 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Istanbul category of associated people ?obj . ?obj instance of Wikimedia category } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Istanbul",
            "choppedEntity": "Q406"
        }
    },
    {
        "chopped": {
            "question": "Which Wikimedia category is associated with the people of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1792 ?obj . ?obj wdt:P31 wd:Q4167836 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown category of associated people ?obj . ?obj instance of Wikimedia category } "
        },
        "original": {
            "question": "Which Wikimedia category is associated with the people of Istanbul",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q406 wdt:P1792 ?obj . ?obj wdt:P31 wd:Q4167836 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Istanbul category of associated people ?obj . ?obj instance of Wikimedia category } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Istanbul",
            "choppedEntity": "Q406"
        }
    },
    {
        "chopped": {
            "question": "Is 7 the sports league level of ",
            "query": "ASK WHERE { ?unknown wdt:P3983 ?obj FILTER(?obj = 7) } ",
            "NLQuery": "ASK WHERE { ?unknown sports league level ?obj FILTER(?obj = 7) } "
        },
        "original": {
            "question": "Is 7 the sports league level of Kutonen",
            "query": "ASK WHERE { wd:Q1763335 wdt:P3983 ?obj FILTER(?obj = 7) } ",
            "NLQuery": "ASK WHERE { Kutonen sports league level ?obj FILTER(?obj = 7) } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Kutonen",
            "choppedEntity": "Q1763335"
        }
    },
    {
        "chopped": {
            "question": "What are the levels of league of ",
            "query": "ASK WHERE { ?unknown wdt:P3983 ?obj FILTER(?obj = 7) } ",
            "NLQuery": "ASK WHERE { ?unknown sports league level ?obj FILTER(?obj = 7) } "
        },
        "original": {
            "question": "What are the levels of league of Kutonen",
            "query": "ASK WHERE { wd:Q1763335 wdt:P3983 ?obj FILTER(?obj = 7) } ",
            "NLQuery": "ASK WHERE { Kutonen sports league level ?obj FILTER(?obj = 7) } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Kutonen",
            "choppedEntity": "Q1763335"
        }
    },
    {
        "chopped": {
            "question": "Who is the manufacturer and operator of the Boeing ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P137 ?ans1 . ?unknown wdt:P176 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown operator ?ans1 . ?unknown manufacturer ?ans2 }"
        },
        "original": {
            "question": "Who is the manufacturer and operator of the Boeing 787 Dreamliner",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q6428 wdt:P137 ?ans_1 . wd:Q6428 wdt:P176 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Boeing 787 Dreamliner operator ?ans_1 . Boeing 787 Dreamliner manufacturer ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "787 Dreamliner",
            "choppedEntity": "Q6428"
        }
    },
    {
        "chopped": {
            "question": "Who invent and operate the Boeing ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P137 ?ans1 . ?unknown wdt:P176 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown operator ?ans1 . ?unknown manufacturer ?ans2 }"
        },
        "original": {
            "question": "Who invent and operate the Boeing 787 Dreamliner",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q6428 wdt:P137 ?ans_1 . wd:Q6428 wdt:P176 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Boeing 787 Dreamliner operator ?ans_1 . Boeing 787 Dreamliner manufacturer ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "787 Dreamliner",
            "choppedEntity": "Q6428"
        }
    },
    {
        "chopped": {
            "question": "What is United States headquarters location for ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P159 ?s . ?s ps:P159 ?ans1 . ?s pq:P17 wd:Q30 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown headquarters location ?s . ?s headquarters location ?ans1 . ?s country United States of America }"
        },
        "original": {
            "question": "What is United States headquarters location for Kroger",
            "query": "SELECT ?obj WHERE { wd:Q153417 p:P159 ?s . ?s ps:P159 ?obj . ?s pq:P17 wd:Q30 }",
            "NLQuery": "SELECT ?obj WHERE { Kroger headquarters location ?s . ?s headquarters location ?obj . ?s country United States of America }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Kroger",
            "choppedEntity": "Q153417"
        }
    },
    {
        "chopped": {
            "question": "What is the capital and the place of the administrative territorial entity of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P1376 ?ans1 . ?unknown wdt:P131 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown capital of ?ans1 . ?unknown located in the administrative territorial entity ?ans2 }"
        },
        "original": {
            "question": "What is the capital and the place of the administrative territorial entity of Belfast",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q10686 wdt:P1376 ?ans_1 . wd:Q10686 wdt:P131 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Belfast capital of ?ans_1 . Belfast located in the administrative territorial entity ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Belfast",
            "choppedEntity": "Q10686"
        }
    },
    {
        "chopped": {
            "question": "Where is the capital and administrative centre of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P1376 ?ans1 . ?unknown wdt:P131 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown capital of ?ans1 . ?unknown located in the administrative territorial entity ?ans2 }"
        },
        "original": {
            "question": "Where is the capital and administrative centre of Belfast",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q10686 wdt:P1376 ?ans_1 . wd:Q10686 wdt:P131 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Belfast capital of ?ans_1 . Belfast located in the administrative territorial entity ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Belfast",
            "choppedEntity": "Q10686"
        }
    },
    {
        "chopped": {
            "question": "Which is the BVPB authority ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4802 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown BVPB authority ID ?ans1}"
        },
        "original": {
            "question": "Which is the BVPB authority ID for Asturias",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q3934 wdt:P4802 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Asturias BVPB authority ID ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Asturias",
            "choppedEntity": "Q3934"
        }
    },
    {
        "chopped": {
            "question": "In what field of profession is ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P106 ?X . ?X wdt:P425 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown occupation ?X . ?X field of this occupation ?ans1}"
        },
        "original": {
            "question": "In what field of profession is Daniel Kucan",
            "query": "SELECT ?answer WHERE { wd:Q5217835 wdt:P106 ?X . ?X wdt:P425 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Daniel Kucan occupation ?X . ?X field of this occupation ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Daniel Kucan",
            "choppedEntity": "Q5217835"
        }
    },
    {
        "chopped": {
            "question": "In what profession is ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P106 ?X . ?X wdt:P425 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown occupation ?X . ?X field of this occupation ?ans1}"
        },
        "original": {
            "question": "In what profession is Daniel Kucan",
            "query": "SELECT ?answer WHERE { wd:Q5217835 wdt:P106 ?X . ?X wdt:P425 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Daniel Kucan occupation ?X . ?X field of this occupation ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Daniel Kucan",
            "choppedEntity": "Q5217835"
        }
    },
    {
        "chopped": {
            "question": "What is the publication interval for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2896 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown publication interval ?ans1}"
        },
        "original": {
            "question": "What is the publication interval for The New York Times",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q9684 wdt:P2896 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { The New York Times publication interval ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "The New York Times",
            "choppedEntity": "Q9684"
        }
    },
    {
        "chopped": {
            "question": "Who wrote life stance of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P50 ?X . ?X wdt:P140 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown author ?X . ?X religion ?ans1}"
        },
        "original": {
            "question": "Who wrote life stance of Executive Order 6022",
            "query": "SELECT ?answer WHERE { wd:Q19107731 wdt:P50 ?X . ?X wdt:P140 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Executive Order 6022 author ?X . ?X religion ?answer}"
        },
        "meta": {
            "entityTagNER": "LAW",
            "choppedText": "Executive Order 6022",
            "choppedEntity": "Q19107731"
        }
    },
    {
        "chopped": {
            "question": "Which is the first appearance of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4584 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown first appearance ?ans1}"
        },
        "original": {
            "question": "Which is the first appearance of Mario",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q12379 wdt:P4584 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Mario first appearance ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mario",
            "choppedEntity": "Q12379"
        }
    },
    {
        "chopped": {
            "question": "What is the population of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P131 ?X . ?X wdt:P1082 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in the administrative territorial entity ?X . ?X population ?ans1}"
        },
        "original": {
            "question": "What is the population of the Anambra State",
            "query": "SELECT ?answer WHERE { wd:Q117714 wdt:P131 ?X . ?X wdt:P1082 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Anambra State located in the administrative territorial entity ?X . ?X population ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Anambra State",
            "choppedEntity": "Q117714"
        }
    },
    {
        "chopped": {
            "question": "What is the populace of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P131 ?X . ?X wdt:P1082 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in the administrative territorial entity ?X . ?X population ?ans1}"
        },
        "original": {
            "question": "What is the populace of the Anambra State",
            "query": "SELECT ?answer WHERE { wd:Q117714 wdt:P131 ?X . ?X wdt:P1082 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Anambra State located in the administrative territorial entity ?X . ?X population ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Anambra State",
            "choppedEntity": "Q117714"
        }
    },
    {
        "chopped": {
            "question": "Who is in charge of the Sheriff of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1308 ?X . ?X wdt:P1595 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown officeholder ?X . ?X charge ?ans1}"
        },
        "original": {
            "question": "Who is in charge of the Sheriff of Davidson County",
            "query": "SELECT ?answer WHERE { wd:Q23901172 wdt:P1308 ?X . ?X wdt:P1595 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Sheriff of Davidson County officeholder ?X . ?X charge ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Davidson County",
            "choppedEntity": "Q23901172"
        }
    },
    {
        "chopped": {
            "question": "Which is the seat of team ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P54 ?X . ?X wdt:P159 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown member of sports team ?X . ?X headquarters location ?ans1}"
        },
        "original": {
            "question": "Which is the seat of team Eddie Miller",
            "query": "SELECT ?answer WHERE { wd:Q5336310 wdt:P54 ?X . ?X wdt:P159 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Eddie Miller member of sports team ?X . ?X headquarters location ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Eddie Miller",
            "choppedEntity": "Q5336310"
        }
    },
    {
        "chopped": {
            "question": "Which is the situate of group ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P54 ?X . ?X wdt:P159 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown member of sports team ?X . ?X headquarters location ?ans1}"
        },
        "original": {
            "question": "Which is the situate of group Eddie Miller",
            "query": "SELECT ?answer WHERE { wd:Q5336310 wdt:P54 ?X . ?X wdt:P159 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Eddie Miller member of sports team ?X . ?X headquarters location ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Eddie Miller",
            "choppedEntity": "Q5336310"
        }
    },
    {
        "chopped": {
            "question": "How many producers are there for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P162 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown producer ?obj }"
        },
        "original": {
            "question": "How many producers are there for Blade Runner",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q184843 wdt:P162 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Blade Runner producer ?obj }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Blade Runner",
            "choppedEntity": "Q184843"
        }
    },
    {
        "chopped": {
            "question": "Which is the real gross domestic product growth rate for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2219 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown real gross domestic product growth rate ?ans1}"
        },
        "original": {
            "question": "Which is the real gross domestic product growth rate for Burkina Faso",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q965 wdt:P2219 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Burkina Faso real gross domestic product growth rate ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Burkina Faso",
            "choppedEntity": "Q965"
        }
    },
    {
        "chopped": {
            "question": "What is the stock exchange for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P414 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown stock exchange ?ans1}"
        },
        "original": {
            "question": "What is the stock exchange for PayPal",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q483959 wdt:P414 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { PayPal stock exchange ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "PayPal",
            "choppedEntity": "Q483959"
        }
    },
    {
        "chopped": {
            "question": "According to the census method, what is the population of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P459 wd:Q39825 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown population ?s . ?s population ?ans1 . ?s determination method census }"
        },
        "original": {
            "question": "According to the census method, what is the population of Aleppo",
            "query": "SELECT ?obj WHERE { wd:Q41183 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q39825 }",
            "NLQuery": "SELECT ?obj WHERE { Aleppo population ?s . ?s population ?obj . ?s determination method census }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Aleppo",
            "choppedEntity": "Q41183"
        }
    },
    {
        "chopped": {
            "question": "What is the timezone in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P159 ?X . ?X wdt:P421 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown headquarters location ?X . ?X located in time zone ?ans1}"
        },
        "original": {
            "question": "What is the timezone in Arab States Broadcasting Union",
            "query": "SELECT ?answer WHERE { wd:Q4783249 wdt:P159 ?X . ?X wdt:P421 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Arab States Broadcasting Union headquarters location ?X . ?X located in time zone ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Arab States Broadcasting Union",
            "choppedEntity": "Q4783249"
        }
    },
    {
        "chopped": {
            "question": "Who are the director and director of photography of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P344 ?ans1 . ?unknown wdt:P57 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown director of photography ?ans1 . ?unknown director ?ans2 }"
        },
        "original": {
            "question": "Who are the director and director of photography of Fight Club",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q190050 wdt:P344 ?ans_1 . wd:Q190050 wdt:P57 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Fight Club director of photography ?ans_1 . Fight Club director ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Fight Club",
            "choppedEntity": "Q190050"
        }
    },
    {
        "chopped": {
            "question": "Name someone involved in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P607 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj conflict ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Name someone involved in the October Revolution",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P607 wd:Q42976 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj conflict October Revolution . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the October Revolution",
            "choppedEntity": "Q42976"
        }
    },
    {
        "chopped": {
            "question": "Who participated in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P607 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj conflict ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who participated in the October Revolution",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P607 wd:Q42976 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj conflict October Revolution . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the October Revolution",
            "choppedEntity": "Q42976"
        }
    },
    {
        "chopped": {
            "question": "What is the position held by Warren G. Harding whose electoral district is ",
            "query": "SELECT ?ans1 WHERE { wd:Q35286 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P768 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Warren G. Harding position held ?s . ?s position held ?ans1 . ?s electoral district ?unknown }"
        },
        "original": {
            "question": "What is the position held by Warren G. Harding whose electoral district is Ohio",
            "query": "SELECT ?obj WHERE { wd:Q35286 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P768 wd:Q1397 }",
            "NLQuery": "SELECT ?obj WHERE { Warren G. Harding position held ?s . ?s position held ?obj . ?s electoral district Ohio }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Ohio",
            "choppedEntity": "Q1397"
        }
    },
    {
        "chopped": {
            "question": "Which is the supranational organization of the diplomatic relation of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P530 ?unknown . ?sbj wdt:P31 wd:Q1335818 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj diplomatic relation ?unknown . ?sbj instance of supranational union } "
        },
        "original": {
            "question": "Which is the supranational organization of the diplomatic relation of the Arab League",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P530 wd:Q7172 . ?sbj wdt:P31 wd:Q1335818 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj diplomatic relation Arab League . ?sbj instance of supranational union } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Arab League",
            "choppedEntity": "Q7172"
        }
    },
    {
        "chopped": {
            "question": "When did the country of India end from being part of ",
            "query": "SELECT ?ans1 WHERE { wd:Q323904 p:P17 ?s . ?s ps:P17 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Portuguese India country ?s . ?s country ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did the country of India end from being part of the Portuguese Empire",
            "query": "SELECT ?value WHERE { wd:Q323904 p:P17 ?s . ?s ps:P17 wd:Q200464 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Portuguese India country ?s . ?s country Portuguese Empire . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Portuguese Empire",
            "choppedEntity": "Q200464"
        }
    },
    {
        "chopped": {
            "question": "When did India stop being a part of ",
            "query": "SELECT ?ans1 WHERE { wd:Q323904 p:P17 ?s . ?s ps:P17 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Portuguese India country ?s . ?s country ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did India stop being a part of the Portuguese Empire",
            "query": "SELECT ?value WHERE { wd:Q323904 p:P17 ?s . ?s ps:P17 wd:Q200464 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Portuguese India country ?s . ?s country Portuguese Empire . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Portuguese Empire",
            "choppedEntity": "Q200464"
        }
    },
    {
        "chopped": {
            "question": "Which is the THW Kiel player ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4263 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown THW Kiel player ID ?ans1}"
        },
        "original": {
            "question": "Which is the THW Kiel player ID for Nikola Karabati\u0107",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q157809 wdt:P4263 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Nikola Karabati\u0107 THW Kiel player ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Nikola Karabati\u0107",
            "choppedEntity": "Q157809"
        }
    },
    {
        "chopped": {
            "question": "What is the history topic of history city of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P2184 ?obj . ?obj wdt:P31 wd:Q28747937 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown history of topic ?obj . ?obj instance of history of a city } "
        },
        "original": {
            "question": "What is the history topic of history city of Istanbul",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q406 wdt:P2184 ?obj . ?obj wdt:P31 wd:Q28747937 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Istanbul history of topic ?obj . ?obj instance of history of a city } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Istanbul",
            "choppedEntity": "Q406"
        }
    },
    {
        "chopped": {
            "question": "What is the history subject of history city of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P2184 ?obj . ?obj wdt:P31 wd:Q28747937 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown history of topic ?obj . ?obj instance of history of a city } "
        },
        "original": {
            "question": "What is the history subject of history city of Istanbul",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q406 wdt:P2184 ?obj . ?obj wdt:P31 wd:Q28747937 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Istanbul history of topic ?obj . ?obj instance of history of a city } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Istanbul",
            "choppedEntity": "Q406"
        }
    },
    {
        "chopped": {
            "question": "When did Lev Yashin leave ",
            "query": "SELECT ?ans1 WHERE { wd:Q167828 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Lev Yashin member of sports team ?s . ?s member of sports team ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did Lev Yashin leave FC Dinamo Moscow",
            "query": "SELECT ?value WHERE { wd:Q167828 p:P54 ?s . ?s ps:P54 wd:Q17497 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Lev Yashin member of sports team ?s . ?s member of sports team FC Dinamo Moscow . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "FC Dinamo Moscow",
            "choppedEntity": "Q17497"
        }
    },
    {
        "chopped": {
            "question": "What are the biopharmaceutical encodes for ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P688 ?obj . ?obj wdt:P31 wd:Q679692 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown encodes ?obj . ?obj instance of biopharmaceutical } "
        },
        "original": {
            "question": "What are the biopharmaceutical encodes for INS",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q21163221 wdt:P688 ?obj . ?obj wdt:P31 wd:Q679692 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { INS encodes ?obj . ?obj instance of biopharmaceutical } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "INS",
            "choppedEntity": "Q21163221"
        }
    },
    {
        "chopped": {
            "question": "Which is the citizenship of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P27 ?X . ?X wdt:P832 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country of citizenship ?X . ?X public holiday ?ans1}"
        },
        "original": {
            "question": "Which is the citizenship of Agnetha F\u00e4ltskog",
            "query": "SELECT ?answer WHERE { wd:Q173144 wdt:P27 ?X . ?X wdt:P832 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Agnetha F\u00e4ltskog country of citizenship ?X . ?X public holiday ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Agnetha F\u00e4ltskog",
            "choppedEntity": "Q173144"
        }
    },
    {
        "chopped": {
            "question": "What position did Anatole France hold prior to being replaced by ",
            "query": "SELECT ?ans1 WHERE { wd:Q42443 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1366 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Anatole France position held ?s . ?s position held ?ans1 . ?s replaced by ?unknown }"
        },
        "original": {
            "question": "What position did Anatole France hold prior to being replaced by Paul Val\u00e9ry",
            "query": "SELECT ?obj WHERE { wd:Q42443 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q200639 }",
            "NLQuery": "SELECT ?obj WHERE { Anatole France position held ?s . ?s position held ?obj . ?s replaced by Paul Val\u00e9ry }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Paul Val\u00e9ry",
            "choppedEntity": "Q200639"
        }
    },
    {
        "chopped": {
            "question": "What is in the category of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4716 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Acad\u00e9mie des Inscriptions et Belles-Lettres member ID ?ans1}"
        },
        "original": {
            "question": "What is in the category of Ernest Renan",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q157155 wdt:P4716 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Ernest Renan Acad\u00e9mie des Inscriptions et Belles-Lettres member ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ernest Renan",
            "choppedEntity": "Q157155"
        }
    },
    {
        "chopped": {
            "question": "Which is dissolved, abolished or demolished for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P576 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown dissolved, abolished or demolished date ?ans1}"
        },
        "original": {
            "question": "Which is dissolved, abolished or demolished for Delian League",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q193235 wdt:P576 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Delian League dissolved, abolished or demolished date ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Delian League",
            "choppedEntity": "Q193235"
        }
    },
    {
        "chopped": {
            "question": "Who is the empire heading the official spoken language of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P37 ?unknown . ?sbj wdt:P31 wd:Q48349 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj official language ?unknown . ?sbj instance of empire } "
        },
        "original": {
            "question": "Who is the empire heading the official spoken language of Latin",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P37 wd:Q397 . ?sbj wdt:P31 wd:Q48349 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj official language Latin . ?sbj instance of empire } "
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Latin",
            "choppedEntity": "Q397"
        }
    },
    {
        "chopped": {
            "question": "Was Warren_Beatty partner Diane Keaton and ",
            "query": "ASK WHERE { wd:Q95030 wdt:P451 wd:Q102642 . wd:Q95030 wdt:P451 ?unknown }",
            "NLQuery": "ASK WHERE { Warren Beatty unmarried partner Diane Keaton . Warren Beatty unmarried partner ?unknown }"
        },
        "original": {
            "question": "Was Warren_Beatty partner Diane Keaton and Isabelle Adjani",
            "query": "ASK WHERE { wd:Q95030 wdt:P451 wd:Q102642 . wd:Q95030 wdt:P451 wd:Q106383 }",
            "NLQuery": "ASK WHERE { Warren Beatty unmarried partner Diane Keaton . Warren Beatty unmarried partner Isabelle Adjani }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Isabelle Adjani",
            "choppedEntity": "Q106383"
        }
    },
    {
        "chopped": {
            "question": "Did Warren Beatty partner up wtih both ZDiane Keaton and ",
            "query": "ASK WHERE { wd:Q95030 wdt:P451 wd:Q102642 . wd:Q95030 wdt:P451 ?unknown }",
            "NLQuery": "ASK WHERE { Warren Beatty unmarried partner Diane Keaton . Warren Beatty unmarried partner ?unknown }"
        },
        "original": {
            "question": "Did Warren Beatty partner up wtih both ZDiane Keaton and Isabella Adjani",
            "query": "ASK WHERE { wd:Q95030 wdt:P451 wd:Q102642 . wd:Q95030 wdt:P451 wd:Q106383 }",
            "NLQuery": "ASK WHERE { Warren Beatty unmarried partner Diane Keaton . Warren Beatty unmarried partner Isabelle Adjani }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Isabella Adjani",
            "choppedEntity": "Q106383"
        }
    },
    {
        "chopped": {
            "question": "Mention the qualifying degree and the major specialization course in which Donald Knuth graduated from ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q17457 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P812 ?ans1 . ?s pq:P512 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Donald Knuth educated at ?s . ?s educated at ?unknown . ?s academic major ?ans1 . ?s academic degree ?ans2 }"
        },
        "original": {
            "question": "Mention the qualifying degree and the major specialization course in which Donald Knuth graduated from the Case Western Reserve University",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q17457 p:P69 ?s . ?s ps:P69 wd:Q1047060 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Donald Knuth educated at ?s . ?s educated at Case Western Reserve University . ?s academic major ?value1 . ?s academic degree ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Case Western Reserve University",
            "choppedEntity": "Q1047060"
        }
    },
    {
        "chopped": {
            "question": "What qualifying degree and major specialty did Donald Knuth obtain from ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q17457 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P812 ?ans1 . ?s pq:P512 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Donald Knuth educated at ?s . ?s educated at ?unknown . ?s academic major ?ans1 . ?s academic degree ?ans2 }"
        },
        "original": {
            "question": "What qualifying degree and major specialty did Donald Knuth obtain from Case Western University",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q17457 p:P69 ?s . ?s ps:P69 wd:Q1047060 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Donald Knuth educated at ?s . ?s educated at Case Western Reserve University . ?s academic major ?value1 . ?s academic degree ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Case Western University",
            "choppedEntity": "Q1047060"
        }
    },
    {
        "chopped": {
            "question": "What sport does Bernard Hinault play, whose governing body is ",
            "query": "SELECT ?ans1 WHERE { wd:Q109255 wdt:P641 ?ans1 . ?ans1 wdt:P797 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Bernard Hinault sport ?ans1 . ?ans1 authority ?unknown}"
        },
        "original": {
            "question": "What sport does Bernard Hinault play, whose governing body is the Union Cycliste Internationale",
            "query": "SELECT ?answer WHERE { wd:Q109255 wdt:P641 ?answer . ?answer wdt:P797 wd:Q48663}",
            "NLQuery": "SELECT ?answer WHERE { Bernard Hinault sport ?answer . ?answer authority Union Cycliste Internationale}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Union Cycliste Internationale",
            "choppedEntity": "Q48663"
        }
    },
    {
        "chopped": {
            "question": "What recreation does Bernard Hinault play, whose governing body is ",
            "query": "SELECT ?ans1 WHERE { wd:Q109255 wdt:P641 ?ans1 . ?ans1 wdt:P797 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Bernard Hinault sport ?ans1 . ?ans1 authority ?unknown}"
        },
        "original": {
            "question": "What recreation does Bernard Hinault play, whose governing body is the Union Cycliste Internationale",
            "query": "SELECT ?answer WHERE { wd:Q109255 wdt:P641 ?answer . ?answer wdt:P797 wd:Q48663}",
            "NLQuery": "SELECT ?answer WHERE { Bernard Hinault sport ?answer . ?answer authority Union Cycliste Internationale}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Union Cycliste Internationale",
            "choppedEntity": "Q48663"
        }
    },
    {
        "chopped": {
            "question": "What is the diplomatic relation of International Energy Agency member ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P530 ?ans1 . ?ans1 wdt:P463 wd:Q826700}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown diplomatic relation ?ans1 . ?ans1 member of International Energy Agency}"
        },
        "original": {
            "question": "What is the diplomatic relation of International Energy Agency member the Kingdom of Hawaii",
            "query": "SELECT ?answer WHERE { wd:Q156418 wdt:P530 ?answer . ?answer wdt:P463 wd:Q826700}",
            "NLQuery": "SELECT ?answer WHERE { Kingdom of Hawai\u02bbi diplomatic relation ?answer . ?answer member of International Energy Agency}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Kingdom of Hawaii",
            "choppedEntity": "Q156418"
        }
    },
    {
        "chopped": {
            "question": "Which is the website that is owned by ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1830 ?obj . ?obj wdt:P31 wd:Q35127 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown owner of ?obj . ?obj instance of website } "
        },
        "original": {
            "question": "Which is the website that is owned by Pinterest",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q255381 wdt:P1830 ?obj . ?obj wdt:P31 wd:Q35127 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Pinterest owner of ?obj . ?obj instance of website } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Pinterest",
            "choppedEntity": "Q255381"
        }
    },
    {
        "chopped": {
            "question": "Did Russell Crowe win both the Australian Sports Medal and ",
            "query": "ASK WHERE { wd:Q129817 wdt:P166 wd:Q1649458 . wd:Q129817 wdt:P166 ?unknown }",
            "NLQuery": "ASK WHERE { Russell Crowe award received Australian Sports Medal . Russell Crowe award received ?unknown }"
        },
        "original": {
            "question": "Did Russell Crowe win both the Australian Sports Medal and the Australian National Living award",
            "query": "ASK WHERE { wd:Q129817 wdt:P166 wd:Q1649458 . wd:Q129817 wdt:P166 wd:Q4824396 }",
            "NLQuery": "ASK WHERE { Russell Crowe award received Australian Sports Medal . Russell Crowe award received Australian National Living Treasure }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Australian National Living award",
            "choppedEntity": "Q4824396"
        }
    },
    {
        "chopped": {
            "question": "Was Russell Crowe awarded both the Australian Sports Medal and ",
            "query": "ASK WHERE { wd:Q129817 wdt:P166 wd:Q1649458 . wd:Q129817 wdt:P166 ?unknown }",
            "NLQuery": "ASK WHERE { Russell Crowe award received Australian Sports Medal . Russell Crowe award received ?unknown }"
        },
        "original": {
            "question": "Was Russell Crowe awarded both the Australian Sports Medal and the Australian National Living award",
            "query": "ASK WHERE { wd:Q129817 wdt:P166 wd:Q1649458 . wd:Q129817 wdt:P166 wd:Q4824396 }",
            "NLQuery": "ASK WHERE { Russell Crowe award received Australian Sports Medal . Russell Crowe award received Australian National Living Treasure }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Australian National Living award",
            "choppedEntity": "Q4824396"
        }
    },
    {
        "chopped": {
            "question": "Who played Naomi in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P161 ?s . ?s ps:P161 ?ans1 . ?s pq:P453 wd:Q50385706 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cast member ?s . ?s cast member ?ans1 . ?s character role Naomi }"
        },
        "original": {
            "question": "Who played Naomi in How I Met Your Mother",
            "query": "SELECT ?obj WHERE { wd:Q147235 p:P161 ?s . ?s ps:P161 ?obj . ?s pq:P453 wd:Q50385706 }",
            "NLQuery": "SELECT ?obj WHERE { How I Met Your Mother cast member ?s . ?s cast member ?obj . ?s character role Naomi }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "How I Met Your Mother",
            "choppedEntity": "Q147235"
        }
    },
    {
        "chopped": {
            "question": "In How I Met Your Mother, who was the actor that starred at ",
            "query": "SELECT ?ans1 WHERE { wd:Q147235 p:P161 ?s . ?s ps:P161 ?ans1 . ?s pq:P453 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { How I Met Your Mother cast member ?s . ?s cast member ?ans1 . ?s character role ?unknown }"
        },
        "original": {
            "question": "In How I Met Your Mother, who was the actor that starred at Naomi",
            "query": "SELECT ?obj WHERE { wd:Q147235 p:P161 ?s . ?s ps:P161 ?obj . ?s pq:P453 wd:Q50385706 }",
            "NLQuery": "SELECT ?obj WHERE { How I Met Your Mother cast member ?s . ?s cast member ?obj . ?s character role Naomi }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Naomi",
            "choppedEntity": "Q50385706"
        }
    },
    {
        "chopped": {
            "question": "What is the CPI inflation rate of the county seat of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1376 ?X . ?X wdt:P1279 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown capital of ?X . ?X inflation rate ?ans1}"
        },
        "original": {
            "question": "What is the CPI inflation rate of the county seat of Kingstown",
            "query": "SELECT ?answer WHERE { wd:Q41474 wdt:P1376 ?X . ?X wdt:P1279 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Kingstown capital of ?X . ?X inflation rate ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Kingstown",
            "choppedEntity": "Q41474"
        }
    },
    {
        "chopped": {
            "question": "What is the CPI expansion rate of the district situate of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1376 ?X . ?X wdt:P1279 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown capital of ?X . ?X inflation rate ?ans1}"
        },
        "original": {
            "question": "What is the CPI expansion rate of the district situate of Kingstown",
            "query": "SELECT ?answer WHERE { wd:Q41474 wdt:P1376 ?X . ?X wdt:P1279 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Kingstown capital of ?X . ?X inflation rate ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Kingstown",
            "choppedEntity": "Q41474"
        }
    },
    {
        "chopped": {
            "question": "What is the river at ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P206 ?X . ?X wdt:P974 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in or next to body of water ?X . ?X tributary ?ans1}"
        },
        "original": {
            "question": "What is the river at Cape Canaveral",
            "query": "SELECT ?answer WHERE { wd:Q193401 wdt:P206 ?X . ?X wdt:P974 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Cape Canaveral located in or next to body of water ?X . ?X tributary ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Cape Canaveral",
            "choppedEntity": "Q193401"
        }
    },
    {
        "chopped": {
            "question": "Name the river which is located at ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P206 ?X . ?X wdt:P974 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in or next to body of water ?X . ?X tributary ?ans1}"
        },
        "original": {
            "question": "Name the river which is located at Cape Canaveral",
            "query": "SELECT ?answer WHERE { wd:Q193401 wdt:P206 ?X . ?X wdt:P974 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Cape Canaveral located in or next to body of water ?X . ?X tributary ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Cape Canaveral",
            "choppedEntity": "Q193401"
        }
    },
    {
        "chopped": {
            "question": "How many are designed for the ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P287 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown designed by ?obj }"
        },
        "original": {
            "question": "How many are designed for the ENIAC",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q169399 wdt:P287 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { ENIAC designed by ?obj }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "ENIAC",
            "choppedEntity": "Q169399"
        }
    },
    {
        "chopped": {
            "question": "how many key roles played for designing ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P287 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown designed by ?obj }"
        },
        "original": {
            "question": "how many key roles played for designing ENIAC",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q169399 wdt:P287 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { ENIAC designed by ?obj }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "ENIAC",
            "choppedEntity": "Q169399"
        }
    },
    {
        "chopped": {
            "question": "Which is the diplomatic relation of the nationality of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P27 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country of citizenship ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "Which is the diplomatic relation of the nationality of Buck O'Neil",
            "query": "SELECT ?answer WHERE { wd:Q2398459 wdt:P27 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Buck O'Neil country of citizenship ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Buck O'Neil",
            "choppedEntity": "Q2398459"
        }
    },
    {
        "chopped": {
            "question": "Which is the political connection of the nationality of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P27 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country of citizenship ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "Which is the political connection of the nationality of Buck O'Neil",
            "query": "SELECT ?answer WHERE { wd:Q2398459 wdt:P27 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Buck O'Neil country of citizenship ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Buck O'Neil",
            "choppedEntity": "Q2398459"
        }
    },
    {
        "chopped": {
            "question": "Who is the painter of pendant to of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1639 ?X . ?X wdt:P170 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown pendant of ?X . ?X creator ?ans1}"
        },
        "original": {
            "question": "Who is the painter of pendant to of Vertumnus",
            "query": "SELECT ?answer WHERE { wd:Q16333797 wdt:P1639 ?X . ?X wdt:P170 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Vertumnus pendant of ?X . ?X creator ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Vertumnus",
            "choppedEntity": "Q16333797"
        }
    },
    {
        "chopped": {
            "question": "how much was solved by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P1136 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub solved by ?unknown }"
        },
        "original": {
            "question": "how much was solved by leonhard euler",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P1136 wd:Q7604 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub solved by Leonhard Euler }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "leonhard euler",
            "choppedEntity": "Q7604"
        }
    },
    {
        "chopped": {
            "question": "What coast is the resting place of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P119 ?X . ?X wdt:P206 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of burial ?X . ?X located in or next to body of water ?ans1}"
        },
        "original": {
            "question": "What coast is the resting place of W. Fox McKeithen",
            "query": "SELECT ?answer WHERE { wd:Q7945541 wdt:P119 ?X . ?X wdt:P206 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { W. Fox McKeithen place of burial ?X . ?X located in or next to body of water ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "W. Fox McKeithen",
            "choppedEntity": "Q7945541"
        }
    },
    {
        "chopped": {
            "question": "Which coast is the resting place of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P119 ?X . ?X wdt:P206 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of burial ?X . ?X located in or next to body of water ?ans1}"
        },
        "original": {
            "question": "Which coast is the resting place of W. Fox McKeithen",
            "query": "SELECT ?answer WHERE { wd:Q7945541 wdt:P119 ?X . ?X wdt:P206 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { W. Fox McKeithen place of burial ?X . ?X located in or next to body of water ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "W. Fox McKeithen",
            "choppedEntity": "Q7945541"
        }
    },
    {
        "chopped": {
            "question": "Which county seat of New York City has got diplomatic relation with ",
            "query": "SELECT ?ans1 WHERE { wd:Q60 wdt:P1376 ?ans1 . ?ans1 wdt:P530 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { New York City capital of ?ans1 . ?ans1 diplomatic relation ?unknown}"
        },
        "original": {
            "question": "Which county seat of New York City has got diplomatic relation with Georgia",
            "query": "SELECT ?answer WHERE { wd:Q60 wdt:P1376 ?answer . ?answer wdt:P530 wd:Q230}",
            "NLQuery": "SELECT ?answer WHERE { New York City capital of ?answer . ?answer diplomatic relation Georgia}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Georgia",
            "choppedEntity": "Q230"
        }
    },
    {
        "chopped": {
            "question": "Which county seat has a diplomatic relationship with Georgia in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1376 ?ans1 . ?ans1 wdt:P530 wd:Q230}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown capital of ?ans1 . ?ans1 diplomatic relation Georgia}"
        },
        "original": {
            "question": "Which county seat has a diplomatic relationship with Georgia in New York City",
            "query": "SELECT ?answer WHERE { wd:Q60 wdt:P1376 ?answer . ?answer wdt:P530 wd:Q230}",
            "NLQuery": "SELECT ?answer WHERE { New York City capital of ?answer . ?answer diplomatic relation Georgia}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "New York City",
            "choppedEntity": "Q60"
        }
    },
    {
        "chopped": {
            "question": "What is the home venue of ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P115 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown home venue ?obj }"
        },
        "original": {
            "question": "What is the home venue of the New York Yankees",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q213417 wdt:P115 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { New York Yankees home venue ?obj }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the New York Yankees",
            "choppedEntity": "Q213417"
        }
    },
    {
        "chopped": {
            "question": "who is the enclave within of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P501 ?unknown . ?sbj wdt:P31 wd:Q171441 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj enclave within ?unknown . ?sbj instance of enclave } "
        },
        "original": {
            "question": "who is the enclave within of Montreal",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P501 wd:Q340 . ?sbj wdt:P31 wd:Q171441 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj enclave within Montreal . ?sbj instance of enclave } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Montreal",
            "choppedEntity": "Q340"
        }
    },
    {
        "chopped": {
            "question": "What is the name of the enclave located in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P501 ?unknown . ?sbj wdt:P31 wd:Q171441 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj enclave within ?unknown . ?sbj instance of enclave } "
        },
        "original": {
            "question": "What is the name of the enclave located in Montreal",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P501 wd:Q340 . ?sbj wdt:P31 wd:Q171441 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj enclave within Montreal . ?sbj instance of enclave } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Montreal",
            "choppedEntity": "Q340"
        }
    },
    {
        "chopped": {
            "question": "Which is the Unifrance person ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3980 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Unifrance person ID ?ans1}"
        },
        "original": {
            "question": "Which is the Unifrance person ID for Patrick Dewaere",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q551439 wdt:P3980 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Patrick Dewaere Unifrance person ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Patrick Dewaere",
            "choppedEntity": "Q551439"
        }
    },
    {
        "chopped": {
            "question": "What Irish city is the sister city of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P190 ?unknown . ?sbj wdt:P31 wd:Q13455645 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj twinned administrative body ?unknown . ?sbj instance of administrative city in the Republic of Ireland } "
        },
        "original": {
            "question": "What Irish city is the sister city of Chicago",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P190 wd:Q1297 . ?sbj wdt:P31 wd:Q13455645 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj twinned administrative body Chicago . ?sbj instance of administrative city in the Republic of Ireland } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Chicago",
            "choppedEntity": "Q1297"
        }
    },
    {
        "chopped": {
            "question": "What is  the birthplace of Harald zur Hausen, that has a partner city which is in ",
            "query": "SELECT ?ans1 WHERE { wd:Q75847 wdt:P19 ?ans1 . ?ans1 wdt:P190 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Harald zur Hausen place of birth ?ans1 . ?ans1 place of birth0 ?unknown}"
        },
        "original": {
            "question": "What is  the birthplace of Harald zur Hausen, that has a partner city which is in Campo Grande",
            "query": "SELECT ?answer WHERE { wd:Q75847 wdt:P19 ?answer . ?answer wdt:P190 wd:Q168929}",
            "NLQuery": "SELECT ?answer WHERE { Harald zur Hausen place of birth ?answer . ?answer place of birth0 Campo Grande}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Campo Grande",
            "choppedEntity": "Q168929"
        }
    },
    {
        "chopped": {
            "question": "What is the birthplace of Harald zur Hausen, that has a companion town which is in ",
            "query": "SELECT ?ans1 WHERE { wd:Q75847 wdt:P19 ?ans1 . ?ans1 wdt:P190 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Harald zur Hausen place of birth ?ans1 . ?ans1 place of birth0 ?unknown}"
        },
        "original": {
            "question": "What is the birthplace of Harald zur Hausen, that has a companion town which is in Campo Grande",
            "query": "SELECT ?answer WHERE { wd:Q75847 wdt:P19 ?answer . ?answer wdt:P190 wd:Q168929}",
            "NLQuery": "SELECT ?answer WHERE { Harald zur Hausen place of birth ?answer . ?answer place of birth0 Campo Grande}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Campo Grande",
            "choppedEntity": "Q168929"
        }
    },
    {
        "chopped": {
            "question": "When was Irish an official language of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P37 ?s . ?s ps:P37 wd:Q9142 . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown official language ?s . ?s official language Irish . ?s start time ?ans1}"
        },
        "original": {
            "question": "When was Irish an official language of the European Union",
            "query": "SELECT ?value WHERE { wd:Q458 p:P37 ?s . ?s ps:P37 wd:Q9142 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { European Union official language ?s . ?s official language Irish . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the European Union",
            "choppedEntity": "Q458"
        }
    },
    {
        "chopped": {
            "question": "Which is the danskefilm animated film ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4021 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown danskefilm animated film ID ?ans1}"
        },
        "original": {
            "question": "Which is the danskefilm animated film ID for Toy Story",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q171048 wdt:P4021 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Toy Story danskefilm animated film ID ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Toy Story",
            "choppedEntity": "Q171048"
        }
    },
    {
        "chopped": {
            "question": "Does 0 mean the same as ",
            "query": "ASK WHERE { ?unknown wdt:P460 wd:Q217675 }",
            "NLQuery": "ASK WHERE { ?unknown said to be the same as signed zero }"
        },
        "original": {
            "question": "Does 0 mean the same as zero",
            "query": "ASK WHERE { wd:Q204 wdt:P460 wd:Q217675 }",
            "NLQuery": "ASK WHERE { zero said to be the same as signed zero }"
        },
        "meta": {
            "entityTagNER": "CARDINAL",
            "choppedText": "zero",
            "choppedEntity": "Q204"
        }
    },
    {
        "chopped": {
            "question": "Name the city extending over the same city of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P3403 ?unknown . ?sbj wdt:P31 wd:Q21583365 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj coextensive with ?unknown . ?sbj instance of city } "
        },
        "original": {
            "question": "Name the city extending over the same city of Tallinn",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P3403 wd:Q1770 . ?sbj wdt:P31 wd:Q21583365 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj coextensive with Tallinn . ?sbj instance of city } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Tallinn",
            "choppedEntity": "Q1770"
        }
    },
    {
        "chopped": {
            "question": "Title the city expanding over the same city of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P3403 ?unknown . ?sbj wdt:P31 wd:Q21583365 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj coextensive with ?unknown . ?sbj instance of city } "
        },
        "original": {
            "question": "Title the city expanding over the same city of Tallinn",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P3403 wd:Q1770 . ?sbj wdt:P31 wd:Q21583365 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj coextensive with Tallinn . ?sbj instance of city } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Tallinn",
            "choppedEntity": "Q1770"
        }
    },
    {
        "chopped": {
            "question": "Was Charles Dickens father ",
            "query": "ASK WHERE { wd:Q5686 wdt:P22 ?unknown }",
            "NLQuery": "ASK WHERE { Charles Dickens father ?unknown }"
        },
        "original": {
            "question": "Was Charles Dickens father John Dickens",
            "query": "ASK WHERE { wd:Q5686 wdt:P22 wd:Q4166950 }",
            "NLQuery": "ASK WHERE { Charles Dickens father John Dickens }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "John Dickens",
            "choppedEntity": "Q4166950"
        }
    },
    {
        "chopped": {
            "question": "Who influenced the author of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P50 ?X . ?X wdt:P737 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown author ?X . ?X influenced by ?ans1}"
        },
        "original": {
            "question": "Who influenced the author of Dancing Girls & Other Stories",
            "query": "SELECT ?answer WHERE { wd:Q5215475 wdt:P50 ?X . ?X wdt:P737 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Dancing Girls & Other Stories author ?X . ?X influenced by ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Dancing Girls & Other Stories",
            "choppedEntity": "Q5215475"
        }
    },
    {
        "chopped": {
            "question": "Which is replaced by ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P1366 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 replaced by ?unknown}"
        },
        "original": {
            "question": "Which is replaced by Shanxi",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P1366 wd:Q46913}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer replaced by Shanxi}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Shanxi",
            "choppedEntity": "Q46913"
        }
    },
    {
        "chopped": {
            "question": "Were there 4 victims killed during ",
            "query": "ASK WHERE { ?unknown wdt:P1345 ?obj FILTER(?obj = 4) } ",
            "NLQuery": "ASK WHERE { ?unknown number of victims of killer ?obj FILTER(?obj = 4) } "
        },
        "original": {
            "question": "Were there 4 victims killed during the Norio Nagayama",
            "query": "ASK WHERE { wd:Q1142305 wdt:P1345 ?obj FILTER(?obj = 4) } ",
            "NLQuery": "ASK WHERE { Norio Nagayama number of victims of killer ?obj FILTER(?obj = 4) } "
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the Norio Nagayama",
            "choppedEntity": "Q1142305"
        }
    },
    {
        "chopped": {
            "question": "Who is the manager/director of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P1037 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 director / manager ?unknown}"
        },
        "original": {
            "question": "Who is the manager/director of Heinrich Himmler",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P1037 wd:Q43067}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer director / manager Heinrich Himmler}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Heinrich Himmler",
            "choppedEntity": "Q43067"
        }
    },
    {
        "chopped": {
            "question": "What companies are stock companies with ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P355 ?obj . ?obj wdt:P31 wd:Q1480166 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown subsidiary ?obj . ?obj instance of kabushiki gaisha } "
        },
        "original": {
            "question": "What companies are stock companies with Nissan",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q20165 wdt:P355 ?obj . ?obj wdt:P31 wd:Q1480166 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Nissan subsidiary ?obj . ?obj instance of kabushiki gaisha } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Nissan",
            "choppedEntity": "Q20165"
        }
    },
    {
        "chopped": {
            "question": "What are the lyrics of the track ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P658 ?X . ?X wdt:P676 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown tracklist ?X . ?X lyrics by ?ans1}"
        },
        "original": {
            "question": "What are the lyrics of the track Le chant des sir\u00e8nes",
            "query": "SELECT ?answer WHERE { wd:Q3221012 wdt:P658 ?X . ?X wdt:P676 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Le chant des sir\u00e8nes tracklist ?X . ?X lyrics by ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Le chant des sir\u00e8nes",
            "choppedEntity": "Q3221012"
        }
    },
    {
        "chopped": {
            "question": "What are the verses of the track ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P658 ?X . ?X wdt:P676 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown tracklist ?X . ?X lyrics by ?ans1}"
        },
        "original": {
            "question": "What are the verses of the track Le chant des sir\u00e8nes",
            "query": "SELECT ?answer WHERE { wd:Q3221012 wdt:P658 ?X . ?X wdt:P676 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Le chant des sir\u00e8nes tracklist ?X . ?X lyrics by ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Le chant des sir\u00e8nes",
            "choppedEntity": "Q3221012"
        }
    },
    {
        "chopped": {
            "question": "Who are the crew member of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P156 ?X . ?X wdt:P1029 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown followed by ?X . ?X crew member ?ans1}"
        },
        "original": {
            "question": "Who are the crew member of Gemini 6A",
            "query": "SELECT ?answer WHERE { wd:Q378306 wdt:P156 ?X . ?X wdt:P1029 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Gemini 6A followed by ?X . ?X crew member ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Gemini 6A",
            "choppedEntity": "Q378306"
        }
    },
    {
        "chopped": {
            "question": "Name the crew member of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P156 ?X . ?X wdt:P1029 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown followed by ?X . ?X crew member ?ans1}"
        },
        "original": {
            "question": "Name the crew member of Gemini 6A",
            "query": "SELECT ?answer WHERE { wd:Q378306 wdt:P156 ?X . ?X wdt:P1029 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Gemini 6A followed by ?X . ?X crew member ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Gemini 6A",
            "choppedEntity": "Q378306"
        }
    },
    {
        "chopped": {
            "question": "Which is the military branch of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P241 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown military branch ?ans1}"
        },
        "original": {
            "question": "Which is the military branch of Roland Garros",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q207709 wdt:P241 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Roland Garros military branch ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Roland Garros",
            "choppedEntity": "Q207709"
        }
    },
    {
        "chopped": {
            "question": "Who is the leader of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P35 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown head of state ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who is the leader of Tenochtitlan",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q13695 wdt:P35 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Tenochtitlan head of state ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Tenochtitlan",
            "choppedEntity": "Q13695"
        }
    },
    {
        "chopped": {
            "question": "Who played Abraham Van Helsing in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1622359 p:P175 ?s . ?s ps:P175 ?ans1 . ?s pq:P642 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Abraham Van Helsing performer ?s . ?s performer ?ans1 . ?s of ?unknown }"
        },
        "original": {
            "question": "Who played Abraham Van Helsing in Dracula 3D",
            "query": "SELECT ?obj WHERE { wd:Q1622359 p:P175 ?s . ?s ps:P175 ?obj . ?s pq:P642 wd:Q2058835 }",
            "NLQuery": "SELECT ?obj WHERE { Abraham Van Helsing performer ?s . ?s performer ?obj . ?s of Dracula 3D }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Dracula 3D",
            "choppedEntity": "Q2058835"
        }
    },
    {
        "chopped": {
            "question": "Which actor played Abraham Van Helsing in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1622359 p:P175 ?s . ?s ps:P175 ?ans1 . ?s pq:P642 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Abraham Van Helsing performer ?s . ?s performer ?ans1 . ?s of ?unknown }"
        },
        "original": {
            "question": "Which actor played Abraham Van Helsing in Dracula 3D",
            "query": "SELECT ?obj WHERE { wd:Q1622359 p:P175 ?s . ?s ps:P175 ?obj . ?s pq:P642 wd:Q2058835 }",
            "NLQuery": "SELECT ?obj WHERE { Abraham Van Helsing performer ?s . ?s performer ?obj . ?s of Dracula 3D }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Dracula 3D",
            "choppedEntity": "Q2058835"
        }
    },
    {
        "chopped": {
            "question": "Is wales legislative body Parliament of ",
            "query": "ASK WHERE { wd:Q25 wdt:P194 ?unknown }",
            "NLQuery": "ASK WHERE { Wales legislative body ?unknown }"
        },
        "original": {
            "question": "Is wales legislative body Parliament of the United Kingdom",
            "query": "ASK WHERE { wd:Q25 wdt:P194 wd:Q11010 }",
            "NLQuery": "ASK WHERE { Wales legislative body Parliament of the United Kingdom }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the United Kingdom",
            "choppedEntity": "Q11010"
        }
    },
    {
        "chopped": {
            "question": "Does Wales belong to the legislative body of ",
            "query": "ASK WHERE { wd:Q25 wdt:P194 ?unknown }",
            "NLQuery": "ASK WHERE { Wales legislative body ?unknown }"
        },
        "original": {
            "question": "Does Wales belong to the legislative body of the Parliament of the United Kingdom",
            "query": "ASK WHERE { wd:Q25 wdt:P194 wd:Q11010 }",
            "NLQuery": "ASK WHERE { Wales legislative body Parliament of the United Kingdom }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Parliament of the United Kingdom",
            "choppedEntity": "Q11010"
        }
    },
    {
        "chopped": {
            "question": "which  candidate of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P726 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 candidate ?unknown}"
        },
        "original": {
            "question": "which  candidate of John Howard",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P726 wd:Q51330}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer candidate John Howard}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "John Howard",
            "choppedEntity": "Q51330"
        }
    },
    {
        "chopped": {
            "question": "What celebrity has a star beside William Hanna's on ",
            "query": "SELECT ?ans1 WHERE { wd:Q263324 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P1706 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { William Hanna award received ?s . ?s award received ?unknown . ?s together with ?ans1}"
        },
        "original": {
            "question": "What celebrity has a star beside William Hanna's on the Hollywood Walk of Fame",
            "query": "SELECT ?value WHERE { wd:Q263324 p:P166 ?s . ?s ps:P166 wd:Q17985761 . ?s pq:P1706 ?value}",
            "NLQuery": "SELECT ?value WHERE { William Hanna award received ?s . ?s award received star on Hollywood Walk of Fame . ?s together with ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Hollywood Walk of Fame",
            "choppedEntity": "Q17985761"
        }
    },
    {
        "chopped": {
            "question": "Walk of fame star next to ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 wd:Q17985761 . ?s pq:P1706 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received star on Hollywood Walk of Fame . ?s together with ?ans1}"
        },
        "original": {
            "question": "Walk of fame star next to William Hanna",
            "query": "SELECT ?value WHERE { wd:Q263324 p:P166 ?s . ?s ps:P166 wd:Q17985761 . ?s pq:P1706 ?value}",
            "NLQuery": "SELECT ?value WHERE { William Hanna award received ?s . ?s award received star on Hollywood Walk of Fame . ?s together with ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "William Hanna",
            "choppedEntity": "Q263324"
        }
    },
    {
        "chopped": {
            "question": "Where was Sergei Rachmaninoff born in ",
            "query": "SELECT ?ans1 WHERE { wd:Q131861 p:P19 ?s . ?s ps:P19 ?ans1 . ?s pq:P17 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Sergei Rachmaninoff place of birth ?s . ?s place of birth ?ans1 . ?s country ?unknown }"
        },
        "original": {
            "question": "Where was Sergei Rachmaninoff born in the Russian Empire",
            "query": "SELECT ?obj WHERE { wd:Q131861 p:P19 ?s . ?s ps:P19 ?obj . ?s pq:P17 wd:Q34266 }",
            "NLQuery": "SELECT ?obj WHERE { Sergei Rachmaninoff place of birth ?s . ?s place of birth ?obj . ?s country Russian Empire }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Russian Empire",
            "choppedEntity": "Q34266"
        }
    },
    {
        "chopped": {
            "question": "Which is the distributor for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P750 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown distributed by ?ans1}"
        },
        "original": {
            "question": "Which is the distributor for The Gold Rush",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q214723 wdt:P750 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { The Gold Rush distributed by ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Gold Rush",
            "choppedEntity": "Q214723"
        }
    },
    {
        "chopped": {
            "question": "When and when did Chrissie Hynde marry ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q239202 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P580 ?ans1 . ?s pq:P582 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Chrissie Hynde spouse ?s . ?s spouse ?unknown . ?s start time ?ans1 . ?s end time ?ans2 }"
        },
        "original": {
            "question": "When and when did Chrissie Hynde marry Jim Kerr",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q239202 p:P26 ?s . ?s ps:P26 wd:Q115049 . ?s pq:P580 ?value1 . ?s pq:P582 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Chrissie Hynde spouse ?s . ?s spouse Jim Kerr . ?s start time ?value1 . ?s end time ?value2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jim Kerr",
            "choppedEntity": "Q115049"
        }
    },
    {
        "chopped": {
            "question": "Which is educated at ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P69 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 educated at ?unknown}"
        },
        "original": {
            "question": "Which is educated at the University of Stuttgart",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P69 wd:Q122453}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer educated at University of Stuttgart}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the University of Stuttgart",
            "choppedEntity": "Q122453"
        }
    },
    {
        "chopped": {
            "question": "What is Beyonc\u00e9 awarded for her work ",
            "query": "SELECT ?ans1 WHERE { wd:Q36153 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Beyonc\u00e9 award received ?s . ?s award received ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "What is Beyonc\u00e9 awarded for her work Obsessed",
            "query": "SELECT ?obj WHERE { wd:Q36153 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q149358 }",
            "NLQuery": "SELECT ?obj WHERE { Beyonc\u00e9 award received ?s . ?s award received ?obj . ?s for work Obsessed }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Obsessed",
            "choppedEntity": "Q149358"
        }
    },
    {
        "chopped": {
            "question": "When did Landon Donovan start playing for ",
            "query": "SELECT ?ans1 WHERE { wd:Q202237 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Landon Donovan member of sports team ?s . ?s member of sports team ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Landon Donovan start playing for the Everton F.C.",
            "query": "SELECT ?value WHERE { wd:Q202237 p:P54 ?s . ?s ps:P54 wd:Q5794 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Landon Donovan member of sports team ?s . ?s member of sports team Everton F.C. . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Everton F.C.",
            "choppedEntity": "Q5794"
        }
    },
    {
        "chopped": {
            "question": "In what year did Landon Donovan join ",
            "query": "SELECT ?ans1 WHERE { wd:Q202237 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Landon Donovan member of sports team ?s . ?s member of sports team ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "In what year did Landon Donovan join the Everton F.C.",
            "query": "SELECT ?value WHERE { wd:Q202237 p:P54 ?s . ?s ps:P54 wd:Q5794 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Landon Donovan member of sports team ?s . ?s member of sports team Everton F.C. . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Everton F.C.",
            "choppedEntity": "Q5794"
        }
    },
    {
        "chopped": {
            "question": "How many artists made the storyboards for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P3275 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown storyboard artist ?obj }"
        },
        "original": {
            "question": "How many artists made the storyboards for The Lion King",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q36479 wdt:P3275 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { The Lion King storyboard artist ?obj }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Lion King",
            "choppedEntity": "Q36479"
        }
    },
    {
        "chopped": {
            "question": "How many artists contributed to the creation of the storyboards for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P3275 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown storyboard artist ?obj }"
        },
        "original": {
            "question": "How many artists contributed to the creation of the storyboards for The Lion King",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q36479 wdt:P3275 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { The Lion King storyboard artist ?obj }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Lion King",
            "choppedEntity": "Q36479"
        }
    },
    {
        "chopped": {
            "question": "Who was the member of Royal Astronomical Society at the time of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P463 ?s . ?s ps:P463 wd:Q753299 . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown member of ?s . ?s member of Royal Astronomical Society . ?s start time ?ans1}"
        },
        "original": {
            "question": "Who was the member of Royal Astronomical Society at the time of Arthur Cayley",
            "query": "SELECT ?value WHERE { wd:Q159430 p:P463 ?s . ?s ps:P463 wd:Q753299 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Arthur Cayley member of ?s . ?s member of Royal Astronomical Society . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Arthur Cayley",
            "choppedEntity": "Q159430"
        }
    },
    {
        "chopped": {
            "question": "When did Willy Brandt become a citizen of ",
            "query": "SELECT ?ans1 WHERE { wd:Q2514 p:P27 ?s . ?s ps:P27 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Willy Brandt country of citizenship ?s . ?s country of citizenship ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Willy Brandt become a citizen of Norway",
            "query": "SELECT ?value WHERE { wd:Q2514 p:P27 ?s . ?s ps:P27 wd:Q20 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Willy Brandt country of citizenship ?s . ?s country of citizenship Norway . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Norway",
            "choppedEntity": "Q20"
        }
    },
    {
        "chopped": {
            "question": "who peace prize for award received of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P166 ?obj . ?obj wdt:P31 wd:Q15383394 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown award received ?obj . ?obj instance of peace prize } "
        },
        "original": {
            "question": "who peace prize for award received of Linus Pauling",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q48983 wdt:P166 ?obj . ?obj wdt:P31 wd:Q15383394 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Linus Pauling award received ?obj . ?obj instance of peace prize } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Linus Pauling",
            "choppedEntity": "Q48983"
        }
    },
    {
        "chopped": {
            "question": "Which is the prize money of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2121 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown prize money ?ans1}"
        },
        "original": {
            "question": "Which is the prize money of Venus Williams",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q11578 wdt:P2121 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Venus Williams prize money ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Venus Williams",
            "choppedEntity": "Q11578"
        }
    },
    {
        "chopped": {
            "question": "What is the Tennis Australia ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3698 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Tennis Australia player ID ?ans1}"
        },
        "original": {
            "question": "What is the Tennis Australia ID for Evonne Goolagong Cawley",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q228559 wdt:P3698 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Evonne Goolagong Cawley Tennis Australia player ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Evonne Goolagong Cawley",
            "choppedEntity": "Q228559"
        }
    },
    {
        "chopped": {
            "question": "Who are the followers of Hu Yaobang the chairperson of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P488 ?s . ?s ps:P488 wd:Q99850 . ?s pq:P155 ?ans1 . ?s pq:P156 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown chairperson ?s . ?s chairperson Hu Yaobang . ?s follows ?ans1 . ?s followed by ?ans2 }"
        },
        "original": {
            "question": "Who are the followers of Hu Yaobang the chairperson of the Communist Party of China",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q17427 p:P488 ?s . ?s ps:P488 wd:Q99850 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Communist Party of China chairperson ?s . ?s chairperson Hu Yaobang . ?s follows ?value1 . ?s followed by ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Communist Party of China",
            "choppedEntity": "Q17427"
        }
    },
    {
        "chopped": {
            "question": "Who are the followers of Hu Yaobang of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P488 ?s . ?s ps:P488 wd:Q99850 . ?s pq:P155 ?ans1 . ?s pq:P156 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown chairperson ?s . ?s chairperson Hu Yaobang . ?s follows ?ans1 . ?s followed by ?ans2 }"
        },
        "original": {
            "question": "Who are the followers of Hu Yaobang of the Communist Party of China",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q17427 p:P488 ?s . ?s ps:P488 wd:Q99850 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Communist Party of China chairperson ?s . ?s chairperson Hu Yaobang . ?s follows ?value1 . ?s followed by ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Communist Party of China",
            "choppedEntity": "Q17427"
        }
    },
    {
        "chopped": {
            "question": "Which is the bus station for the place served by transport hub of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P931 ?unknown . ?sbj wdt:P31 wd:Q494829 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj place served by transport hub ?unknown . ?sbj instance of bus station } "
        },
        "original": {
            "question": "Which is the bus station for the place served by transport hub of Belgrade",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P931 wd:Q3711 . ?sbj wdt:P31 wd:Q494829 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj place served by transport hub Belgrade . ?sbj instance of bus station } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Belgrade",
            "choppedEntity": "Q3711"
        }
    },
    {
        "chopped": {
            "question": "Which is the transport station for the put served by transport center of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P931 ?unknown . ?sbj wdt:P31 wd:Q494829 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj place served by transport hub ?unknown . ?sbj instance of bus station } "
        },
        "original": {
            "question": "Which is the transport station for the put served by transport center of Belgrade",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P931 wd:Q3711 . ?sbj wdt:P31 wd:Q494829 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj place served by transport hub Belgrade . ?sbj instance of bus station } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Belgrade",
            "choppedEntity": "Q3711"
        }
    },
    {
        "chopped": {
            "question": "When was Giosu\u00e8 Carducci nominated for ",
            "query": "SELECT ?ans1 WHERE { wd:Q43440 p:P1411 ?s . ?s ps:P1411 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Giosu\u00e8 Carducci nominated for ?s . ?s nominated for ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was Giosu\u00e8 Carducci nominated for the Nobel Prize in Literature",
            "query": "SELECT ?value WHERE { wd:Q43440 p:P1411 ?s . ?s ps:P1411 wd:Q37922 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Giosu\u00e8 Carducci nominated for ?s . ?s nominated for Nobel Prize in Literature . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Nobel Prize in Literature",
            "choppedEntity": "Q37922"
        }
    },
    {
        "chopped": {
            "question": "What political party has the emblem of an elephant, and has ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P102 ?ans1 . ?ans1 wdt:P2238 wd:Q7378}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown member of political party ?ans1 . ?ans1 official symbol elephant}"
        },
        "original": {
            "question": "What political party has the emblem of an elephant, and has Jeff Foxworthy",
            "query": "SELECT ?answer WHERE { wd:Q2449557 wdt:P102 ?answer . ?answer wdt:P2238 wd:Q7378}",
            "NLQuery": "SELECT ?answer WHERE { Jeff Foxworthy member of political party ?answer . ?answer official symbol elephant}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jeff Foxworthy",
            "choppedEntity": "Q2449557"
        }
    },
    {
        "chopped": {
            "question": "In what year was Henri Becquerel nominated for ",
            "query": "SELECT ?ans1 WHERE { wd:Q41269 p:P1411 ?s . ?s ps:P1411 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Henri Becquerel nominated for ?s . ?s nominated for ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "In what year was Henri Becquerel nominated for a Nobel Prize in Physics",
            "query": "SELECT ?value WHERE { wd:Q41269 p:P1411 ?s . ?s ps:P1411 wd:Q38104 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Henri Becquerel nominated for ?s . ?s nominated for Nobel Prize in Physics . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "a Nobel Prize in Physics",
            "choppedEntity": "Q38104"
        }
    },
    {
        "chopped": {
            "question": "When did Jules Verne attend lycee ",
            "query": "SELECT ?ans1 WHERE { wd:Q33977 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Jules Verne educated at ?s . ?s educated at ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Jules Verne attend lycee Georges-Clemenceau",
            "query": "SELECT ?value WHERE { wd:Q33977 p:P69 ?s . ?s ps:P69 wd:Q3268696 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Jules Verne educated at ?s . ?s educated at lyc\u00e9e Georges-Clemenceau . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Georges-Clemenceau",
            "choppedEntity": "Q3268696"
        }
    },
    {
        "chopped": {
            "question": "At what point in time did Jules Verne attend lycee ",
            "query": "SELECT ?ans1 WHERE { wd:Q33977 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Jules Verne educated at ?s . ?s educated at ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "At what point in time did Jules Verne attend lycee Georges-Clemenceau",
            "query": "SELECT ?value WHERE { wd:Q33977 p:P69 ?s . ?s ps:P69 wd:Q3268696 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Jules Verne educated at ?s . ?s educated at lyc\u00e9e Georges-Clemenceau . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Georges-Clemenceau",
            "choppedEntity": "Q3268696"
        }
    },
    {
        "chopped": {
            "question": "Which is the Bloomberg person ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3052 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Bloomberg person ID ?ans1}"
        },
        "original": {
            "question": "Which is the Bloomberg person ID for Gwyneth Paltrow",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q34460 wdt:P3052 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Gwyneth Paltrow Bloomberg person ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Gwyneth Paltrow",
            "choppedEntity": "Q34460"
        }
    },
    {
        "chopped": {
            "question": "What is the OKATO id for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P721 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown OKATO ID ?ans1}"
        },
        "original": {
            "question": "What is the OKATO id for Kaliningrad",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1829 wdt:P721 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Kaliningrad OKATO ID ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Kaliningrad",
            "choppedEntity": "Q1829"
        }
    },
    {
        "chopped": {
            "question": "What governments operated the ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P137 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown operator ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "What governments operated the II-76",
            "query": "SELECT ?answer WHERE { wd:Q142549 wdt:P137 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Il-76 operator ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "II-76",
            "choppedEntity": "Q142549"
        }
    },
    {
        "chopped": {
            "question": "Is it factual that the amount of matches played/races/starts equals to 2 of ",
            "query": "ASK WHERE { ?unknown wdt:P1350 ?obj FILTER(?obj = 2) } ",
            "NLQuery": "ASK WHERE { ?unknown number of matches played/races/starts ?obj FILTER(?obj = 2) } "
        },
        "original": {
            "question": "Is it factual that the amount of matches played/races/starts equals to 2 of Jesse Schultz",
            "query": "ASK WHERE { wd:Q464917 wdt:P1350 ?obj FILTER(?obj = 2) } ",
            "NLQuery": "ASK WHERE { Jesse Schultz number of matches played/races/starts ?obj FILTER(?obj = 2) } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jesse Schultz",
            "choppedEntity": "Q464917"
        }
    },
    {
        "chopped": {
            "question": "When did Ossie Davis graduate from ",
            "query": "SELECT ?ans1 WHERE { wd:Q515632 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ossie Davis educated at ?s . ?s educated at ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did Ossie Davis graduate from Howard University",
            "query": "SELECT ?value WHERE { wd:Q515632 p:P69 ?s . ?s ps:P69 wd:Q1068752 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ossie Davis educated at ?s . ?s educated at Howard University . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Howard University",
            "choppedEntity": "Q1068752"
        }
    },
    {
        "chopped": {
            "question": "On what date did Ossie Davis graduate from ",
            "query": "SELECT ?ans1 WHERE { wd:Q515632 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ossie Davis educated at ?s . ?s educated at ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "On what date did Ossie Davis graduate from Howard University",
            "query": "SELECT ?value WHERE { wd:Q515632 p:P69 ?s . ?s ps:P69 wd:Q1068752 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ossie Davis educated at ?s . ?s educated at Howard University . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Howard University",
            "choppedEntity": "Q1068752"
        }
    },
    {
        "chopped": {
            "question": "Did Bitcoin come from ",
            "query": "ASK WHERE { wd:Q131723 wdt:P407 ?unknown }",
            "NLQuery": "ASK WHERE { bitcoin language of work or name ?unknown }"
        },
        "original": {
            "question": "Did Bitcoin come from Sardinia",
            "query": "ASK WHERE { wd:Q131723 wdt:P407 wd:Q33976 }",
            "NLQuery": "ASK WHERE { bitcoin language of work or name Sardinian }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Sardinia",
            "choppedEntity": "Q33976"
        }
    },
    {
        "chopped": {
            "question": "Did Bitcoin originate in ",
            "query": "ASK WHERE { wd:Q131723 wdt:P407 ?unknown }",
            "NLQuery": "ASK WHERE { bitcoin language of work or name ?unknown }"
        },
        "original": {
            "question": "Did Bitcoin originate in Sardinia",
            "query": "ASK WHERE { wd:Q131723 wdt:P407 wd:Q33976 }",
            "NLQuery": "ASK WHERE { bitcoin language of work or name Sardinian }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Sardinia",
            "choppedEntity": "Q33976"
        }
    },
    {
        "chopped": {
            "question": "With a top dog of Juan Manual Santos, who is the nominee for ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1411 ?ans1 . ?ans1 wdt:P1346 wd:Q57311}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown nominated for ?ans1 . ?ans1 winner Juan Manuel Santos}"
        },
        "original": {
            "question": "With a top dog of Juan Manual Santos, who is the nominee for Urho Kekkonen",
            "query": "SELECT ?answer WHERE { wd:Q179858 wdt:P1411 ?answer . ?answer wdt:P1346 wd:Q57311}",
            "NLQuery": "SELECT ?answer WHERE { Urho Kekkonen nominated for ?answer . ?answer winner Juan Manuel Santos}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Urho Kekkonen",
            "choppedEntity": "Q179858"
        }
    },
    {
        "chopped": {
            "question": "With a beat canine of Juan Manual Santos, who is the candidate for ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1411 ?ans1 . ?ans1 wdt:P1346 wd:Q57311}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown nominated for ?ans1 . ?ans1 winner Juan Manuel Santos}"
        },
        "original": {
            "question": "With a beat canine of Juan Manual Santos, who is the candidate for Urho Kekkonen",
            "query": "SELECT ?answer WHERE { wd:Q179858 wdt:P1411 ?answer . ?answer wdt:P1346 wd:Q57311}",
            "NLQuery": "SELECT ?answer WHERE { Urho Kekkonen nominated for ?answer . ?answer winner Juan Manuel Santos}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Urho Kekkonen",
            "choppedEntity": "Q179858"
        }
    },
    {
        "chopped": {
            "question": "Who is in the family of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P53 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj family ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who is in the family of the Mauraya Empire",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P53 wd:Q62943 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj family Maurya Empire . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Mauraya Empire",
            "choppedEntity": "Q62943"
        }
    },
    {
        "chopped": {
            "question": "Which monetary prize amount was received by ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P166 ?s . ?s ps:P166 ?ans2 . ?s pq:P2121 ?ans1 . }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown award received ?s . ?s award received ?ans2 . ?s prize money ?ans1 . }"
        },
        "original": {
            "question": "Which monetary prize amount was received by Theodor Mommsen",
            "query": "SELECT ?value1 ?obj WHERE { wd:Q25351 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?value1 . }",
            "NLQuery": "SELECT ?value1 ?obj WHERE { Theodor Mommsen award received ?s . ?s award received ?obj . ?s prize money ?value1 . }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Theodor Mommsen",
            "choppedEntity": "Q25351"
        }
    },
    {
        "chopped": {
            "question": "Which money related prize sum was gotten by ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P166 ?s . ?s ps:P166 ?ans2 . ?s pq:P2121 ?ans1 . }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown award received ?s . ?s award received ?ans2 . ?s prize money ?ans1 . }"
        },
        "original": {
            "question": "Which money related prize sum was gotten by Theodor Mommsen",
            "query": "SELECT ?value1 ?obj WHERE { wd:Q25351 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?value1 . }",
            "NLQuery": "SELECT ?value1 ?obj WHERE { Theodor Mommsen award received ?s . ?s award received ?obj . ?s prize money ?value1 . }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Theodor Mommsen",
            "choppedEntity": "Q25351"
        }
    },
    {
        "chopped": {
            "question": "What city of the United States is the twinned administrative body of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P190 ?unknown . ?sbj wdt:P31 wd:Q1093829 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj twinned administrative body ?unknown . ?sbj instance of city of the United States } "
        },
        "original": {
            "question": "What city of the United States is the twinned administrative body of Tessaloniki",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P190 wd:Q17151 . ?sbj wdt:P31 wd:Q1093829 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj twinned administrative body Thessaloniki . ?sbj instance of city of the United States } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Tessaloniki",
            "choppedEntity": "Q17151"
        }
    },
    {
        "chopped": {
            "question": "Who replaced Javier Maroto as mayor of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P6 ?s . ?s ps:P6 wd:Q636917 . ?s pq:P1365 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown head of government ?s . ?s head of government Javier Maroto . ?s replaces ?ans1}"
        },
        "original": {
            "question": "Who replaced Javier Maroto as mayor of Vitoria-Gasteiz",
            "query": "SELECT ?value WHERE { wd:Q14318 p:P6 ?s . ?s ps:P6 wd:Q636917 . ?s pq:P1365 ?value}",
            "NLQuery": "SELECT ?value WHERE { Vitoria-Gasteiz head of government ?s . ?s head of government Javier Maroto . ?s replaces ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Vitoria-Gasteiz",
            "choppedEntity": "Q14318"
        }
    },
    {
        "chopped": {
            "question": "Who succeeded Javier Maroto as the mayor of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P6 ?s . ?s ps:P6 wd:Q636917 . ?s pq:P1365 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown head of government ?s . ?s head of government Javier Maroto . ?s replaces ?ans1}"
        },
        "original": {
            "question": "Who succeeded Javier Maroto as the mayor of Vitoria-Gasteiz",
            "query": "SELECT ?value WHERE { wd:Q14318 p:P6 ?s . ?s ps:P6 wd:Q636917 . ?s pq:P1365 ?value}",
            "NLQuery": "SELECT ?value WHERE { Vitoria-Gasteiz head of government ?s . ?s head of government Javier Maroto . ?s replaces ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Vitoria-Gasteiz",
            "choppedEntity": "Q14318"
        }
    },
    {
        "chopped": {
            "question": "What was presented at Gerard Schroder that was attended for ",
            "query": "SELECT ?ans1 WHERE { wd:Q2530 wdt:P1344 ?ans1 . ?ans1 wdt:P710 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Gerhard Schr\u00f6der participant in ?ans1 . ?ans1 participant ?unknown}"
        },
        "original": {
            "question": "What was presented at Gerard Schroder that was attended for the Horst Seehofer",
            "query": "SELECT ?answer WHERE { wd:Q2530 wdt:P1344 ?answer . ?answer wdt:P710 wd:Q44612}",
            "NLQuery": "SELECT ?answer WHERE { Gerhard Schr\u00f6der participant in ?answer . ?answer participant Horst Seehofer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "the Horst Seehofer",
            "choppedEntity": "Q44612"
        }
    },
    {
        "chopped": {
            "question": "What was displayed at Gerard Schroder that was gone to for ",
            "query": "SELECT ?ans1 WHERE { wd:Q2530 wdt:P1344 ?ans1 . ?ans1 wdt:P710 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Gerhard Schr\u00f6der participant in ?ans1 . ?ans1 participant ?unknown}"
        },
        "original": {
            "question": "What was displayed at Gerard Schroder that was gone to for the Horst Seehofer",
            "query": "SELECT ?answer WHERE { wd:Q2530 wdt:P1344 ?answer . ?answer wdt:P710 wd:Q44612}",
            "NLQuery": "SELECT ?answer WHERE { Gerhard Schr\u00f6der participant in ?answer . ?answer participant Horst Seehofer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "the Horst Seehofer",
            "choppedEntity": "Q44612"
        }
    },
    {
        "chopped": {
            "question": "What was the role of Dragon Ball Z as the voice actor for ",
            "query": "SELECT ?ans1 WHERE { wd:Q477916 p:P725 ?s . ?s ps:P725 ?unknown . ?s pq:P453 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Dragon Ball Z voice actor ?s . ?s voice actor ?unknown . ?s character role ?ans1}"
        },
        "original": {
            "question": "What was the role of Dragon Ball Z as the voice actor for Masako Nozawa",
            "query": "SELECT ?value WHERE { wd:Q477916 p:P725 ?s . ?s ps:P725 wd:Q259422 . ?s pq:P453 ?value}",
            "NLQuery": "SELECT ?value WHERE { Dragon Ball Z voice actor ?s . ?s voice actor Masako Nozawa . ?s character role ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Masako Nozawa",
            "choppedEntity": "Q259422"
        }
    },
    {
        "chopped": {
            "question": "Voice actor Masako Nozawa voiced which role in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P725 ?s . ?s ps:P725 wd:Q259422 . ?s pq:P453 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown voice actor ?s . ?s voice actor Masako Nozawa . ?s character role ?ans1}"
        },
        "original": {
            "question": "Voice actor Masako Nozawa voiced which role in Dragon Ball Z",
            "query": "SELECT ?value WHERE { wd:Q477916 p:P725 ?s . ?s ps:P725 wd:Q259422 . ?s pq:P453 ?value}",
            "NLQuery": "SELECT ?value WHERE { Dragon Ball Z voice actor ?s . ?s voice actor Masako Nozawa . ?s character role ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Dragon Ball Z",
            "choppedEntity": "Q477916"
        }
    },
    {
        "chopped": {
            "question": "Which is the Microsoft Store artist ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4497 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown none ?ans1}"
        },
        "original": {
            "question": "Which is the Microsoft Store artist ID for Madonna",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1744 wdt:P4497 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Madonna none ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Madonna",
            "choppedEntity": "Q1744"
        }
    },
    {
        "chopped": {
            "question": "Was Christopher Plummer's given name ",
            "query": "ASK WHERE { wd:Q190523 wdt:P735 wd:Q1084472 . wd:Q190523 wdt:P735 ?unknown }",
            "NLQuery": "ASK WHERE { Christopher Plummer given name Christopher . Christopher Plummer given name ?unknown }"
        },
        "original": {
            "question": "Was Christopher Plummer's given name Robert",
            "query": "ASK WHERE { wd:Q190523 wdt:P735 wd:Q1084472 . wd:Q190523 wdt:P735 wd:Q4927937 }",
            "NLQuery": "ASK WHERE { Christopher Plummer given name Christopher . Christopher Plummer given name Robert }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Robert",
            "choppedEntity": "Q4927937"
        }
    },
    {
        "chopped": {
            "question": "Was Christopher Plummer's given title ",
            "query": "ASK WHERE { wd:Q190523 wdt:P735 wd:Q1084472 . wd:Q190523 wdt:P735 ?unknown }",
            "NLQuery": "ASK WHERE { Christopher Plummer given name Christopher . Christopher Plummer given name ?unknown }"
        },
        "original": {
            "question": "Was Christopher Plummer's given title Robert",
            "query": "ASK WHERE { wd:Q190523 wdt:P735 wd:Q1084472 . wd:Q190523 wdt:P735 wd:Q4927937 }",
            "NLQuery": "ASK WHERE { Christopher Plummer given name Christopher . Christopher Plummer given name Robert }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Robert",
            "choppedEntity": "Q4927937"
        }
    },
    {
        "chopped": {
            "question": "In what year did Guiding Light earn the Daytime Emmy Award for ",
            "query": "SELECT ?ans1 WHERE { wd:Q1145764 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Guiding Light award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "In what year did Guiding Light earn the Daytime Emmy Award for Outstanding Drama Series Writing Team",
            "query": "SELECT ?value WHERE { wd:Q1145764 p:P166 ?s . ?s ps:P166 wd:Q5243445 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Guiding Light award received ?s . ?s award received Daytime Emmy Award for Outstanding Drama Series Writing Team . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Outstanding Drama Series Writing Team",
            "choppedEntity": "Q5243445"
        }
    },
    {
        "chopped": {
            "question": "Can you tell me which earthquake had the lowest number of aftershocks in ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q7944 . ?ans1 wdt:P2320 ?obj . ?ans1 wdt:P17 ?unknown} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of earthquake . ?ans1 aftershocks ?obj . ?ans1 country ?unknown} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "Can you tell me which earthquake had the lowest number of aftershocks in Bangladesh",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q7944 . ?ent wdt:P2320 ?obj . ?ent wdt:P17 wd:Q902} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of earthquake . ?ent aftershocks ?obj . ?ent country Bangladesh} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Bangladesh",
            "choppedEntity": "Q902"
        }
    },
    {
        "chopped": {
            "question": "When did Monica Seles receive the award for ",
            "query": "SELECT ?ans1 WHERE { wd:Q173633 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Monica Seles award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Monica Seles receive the award for International Tennis Hall of Fame",
            "query": "SELECT ?value WHERE { wd:Q173633 p:P166 ?s . ?s ps:P166 wd:Q52454 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Monica Seles award received ?s . ?s award received International Tennis Hall of Fame . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "International Tennis Hall of Fame",
            "choppedEntity": "Q52454"
        }
    },
    {
        "chopped": {
            "question": "When was the International Tennis Hall of Fame awarded to ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 wd:Q52454 . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received International Tennis Hall of Fame . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was the International Tennis Hall of Fame awarded to Monica Seles",
            "query": "SELECT ?value WHERE { wd:Q173633 p:P166 ?s . ?s ps:P166 wd:Q52454 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Monica Seles award received ?s . ?s award received International Tennis Hall of Fame . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Monica Seles",
            "choppedEntity": "Q173633"
        }
    },
    {
        "chopped": {
            "question": "On November 11, 1939, who married ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1939')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),'1939')) }"
        },
        "original": {
            "question": "On November 11, 1939, who married Frida Kahlo",
            "query": "SELECT ?obj WHERE { wd:Q5588 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1939')) }",
            "NLQuery": "SELECT ?obj WHERE { Frida Kahlo spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1939')) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Frida Kahlo",
            "choppedEntity": "Q5588"
        }
    },
    {
        "chopped": {
            "question": "What is the film genre of the songwriter of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P86 ?X . ?X wdt:P136 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown composer ?X . ?X genre ?ans1}"
        },
        "original": {
            "question": "What is the film genre of the songwriter of Tu Vuo Fa L'Americano",
            "query": "SELECT ?answer WHERE { wd:Q1973871 wdt:P86 ?X . ?X wdt:P136 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Tu vu\u00f2 f\u00e0 l'americano composer ?X . ?X genre ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Tu Vuo Fa L'Americano",
            "choppedEntity": "Q1973871"
        }
    },
    {
        "chopped": {
            "question": "Was frederick_douglass is a child of ",
            "query": "ASK WHERE { wd:Q215562 wdt:P40 ?unknown }",
            "NLQuery": "ASK WHERE { Frederick Douglass child ?unknown }"
        },
        "original": {
            "question": "Was frederick_douglass is a child of charles remond douglass",
            "query": "ASK WHERE { wd:Q215562 wdt:P40 wd:Q16043502 }",
            "NLQuery": "ASK WHERE { Frederick Douglass child Charles Remond Douglass }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "charles remond douglass",
            "choppedEntity": "Q16043502"
        }
    },
    {
        "chopped": {
            "question": "Did charles remond douglass have a kid named ",
            "query": "ASK WHERE { ?unknown wdt:P40 wd:Q16043502 }",
            "NLQuery": "ASK WHERE { ?unknown child Charles Remond Douglass }"
        },
        "original": {
            "question": "Did charles remond douglass have a kid named frederick douglass",
            "query": "ASK WHERE { wd:Q215562 wdt:P40 wd:Q16043502 }",
            "NLQuery": "ASK WHERE { Frederick Douglass child Charles Remond Douglass }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "frederick douglass",
            "choppedEntity": "Q215562"
        }
    },
    {
        "chopped": {
            "question": "What award did Johnny Weissmuller receive in the 1928 ",
            "query": "SELECT ?ans1 WHERE { wd:Q151284 p:P1344 ?s . ?s ps:P1344 ?unknown . ?s pq:P166 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Johnny Weissmuller participant in ?s . ?s participant in ?unknown . ?s award received ?ans1}"
        },
        "original": {
            "question": "What award did Johnny Weissmuller receive in the 1928 Summer Olympics",
            "query": "SELECT ?value WHERE { wd:Q151284 p:P1344 ?s . ?s ps:P1344 wd:Q8138 . ?s pq:P166 ?value}",
            "NLQuery": "SELECT ?value WHERE { Johnny Weissmuller participant in ?s . ?s participant in 1928 Summer Olympics . ?s award received ?value}"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "Summer Olympics",
            "choppedEntity": "Q8138"
        }
    },
    {
        "chopped": {
            "question": "Which is the scanned file on WIkimedia Commons for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P996 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown document file on Wikimedia Commons ?ans1}"
        },
        "original": {
            "question": "Which is the scanned file on WIkimedia Commons for The Jungle Book",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q189509 wdt:P996 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { The Jungle Book document file on Wikimedia Commons ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Jungle Book",
            "choppedEntity": "Q189509"
        }
    },
    {
        "chopped": {
            "question": "Which is the Yle Areena ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3414 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Yle Areena item ID ?ans1}"
        },
        "original": {
            "question": "Which is the Yle Areena ID of Doctor Who",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q34316 wdt:P3414 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Doctor Who Yle Areena item ID ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Doctor Who",
            "choppedEntity": "Q34316"
        }
    },
    {
        "chopped": {
            "question": "What's Dallas Cowboys ' ",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q204862 wdt:P115 ?obj . ?obj wdt:P31 ?unknown } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Dallas Cowboys home venue ?obj . ?obj instance of ?unknown } "
        },
        "original": {
            "question": "What's Dallas Cowboys ' American Football Stadium",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q204862 wdt:P115 ?obj . ?obj wdt:P31 wd:Q37985280 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Dallas Cowboys home venue ?obj . ?obj instance of American football stadium } "
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "American Football Stadium",
            "choppedEntity": "Q37985280"
        }
    },
    {
        "chopped": {
            "question": "What's Dallas Cattle rustlers ' ",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q204862 wdt:P115 ?obj . ?obj wdt:P31 ?unknown } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Dallas Cowboys home venue ?obj . ?obj instance of ?unknown } "
        },
        "original": {
            "question": "What's Dallas Cattle rustlers ' American Football Stadium",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q204862 wdt:P115 ?obj . ?obj wdt:P31 wd:Q37985280 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Dallas Cowboys home venue ?obj . ?obj instance of American football stadium } "
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "American Football Stadium",
            "choppedEntity": "Q37985280"
        }
    },
    {
        "chopped": {
            "question": "Which is the apparent magnitude of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1215 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown apparent magnitude ?ans1}"
        },
        "original": {
            "question": "Which is the apparent magnitude of Antares",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q12166 wdt:P1215 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Antares apparent magnitude ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Antares",
            "choppedEntity": "Q12166"
        }
    },
    {
        "chopped": {
            "question": "What are the coordinates of the source of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P625 ?s . ?s ps:P625 ?ans1 . ?s pq:P518 wd:Q7376362 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown coordinate location ?s . ?s coordinate location ?ans1 . ?s applies to part river source }"
        },
        "original": {
            "question": "What are the coordinates of the source of the Kasai River",
            "query": "SELECT ?obj WHERE { wd:Q186541 p:P625 ?s . ?s ps:P625 ?obj . ?s pq:P518 wd:Q7376362 }",
            "NLQuery": "SELECT ?obj WHERE { Kasai River coordinate location ?s . ?s coordinate location ?obj . ?s applies to part river source }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Kasai River",
            "choppedEntity": "Q186541"
        }
    },
    {
        "chopped": {
            "question": "Tell me the coordinates of the source of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P625 ?s . ?s ps:P625 ?ans1 . ?s pq:P518 wd:Q7376362 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown coordinate location ?s . ?s coordinate location ?ans1 . ?s applies to part river source }"
        },
        "original": {
            "question": "Tell me the coordinates of the source of the Kasai River",
            "query": "SELECT ?obj WHERE { wd:Q186541 p:P625 ?s . ?s ps:P625 ?obj . ?s pq:P518 wd:Q7376362 }",
            "NLQuery": "SELECT ?obj WHERE { Kasai River coordinate location ?s . ?s coordinate location ?obj . ?s applies to part river source }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Kasai River",
            "choppedEntity": "Q186541"
        }
    },
    {
        "chopped": {
            "question": "How many people occupy ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P466 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown occupant ?obj }"
        },
        "original": {
            "question": "How many people occupy Windsor Castle",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q42646 wdt:P466 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Windsor Castle occupant ?obj }"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Windsor Castle",
            "choppedEntity": "Q42646"
        }
    },
    {
        "chopped": {
            "question": "What is the number of people who occupy ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P466 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown occupant ?obj }"
        },
        "original": {
            "question": "What is the number of people who occupy Windsor Castle",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q42646 wdt:P466 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Windsor Castle occupant ?obj }"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Windsor Castle",
            "choppedEntity": "Q42646"
        }
    },
    {
        "chopped": {
            "question": "When is the endtime of trend of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P135 ?X . ?X wdt:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown movement ?X . ?X end time ?ans1}"
        },
        "original": {
            "question": "When is the endtime of trend of Miserere",
            "query": "SELECT ?answer WHERE { wd:Q1576091 wdt:P135 ?X . ?X wdt:P582 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Miserere movement ?X . ?X end time ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Miserere",
            "choppedEntity": "Q1576091"
        }
    },
    {
        "chopped": {
            "question": "When is the endtime of slant of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P135 ?X . ?X wdt:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown movement ?X . ?X end time ?ans1}"
        },
        "original": {
            "question": "When is the endtime of slant of Miserere",
            "query": "SELECT ?answer WHERE { wd:Q1576091 wdt:P135 ?X . ?X wdt:P582 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Miserere movement ?X . ?X end time ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Miserere",
            "choppedEntity": "Q1576091"
        }
    },
    {
        "chopped": {
            "question": "Which is the Flora of Australia ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3100 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Flora of Australia ID (old) ?ans1}"
        },
        "original": {
            "question": "Which is the Flora of Australia ID for Banksia",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q131258 wdt:P3100 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Banksia Flora of Australia ID (old) ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Banksia",
            "choppedEntity": "Q131258"
        }
    },
    {
        "chopped": {
            "question": "Which is the SRCBB coach ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4751 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Sports-Reference.com college basketball coach ID ?ans1}"
        },
        "original": {
            "question": "Which is the SRCBB coach ID of Mike Krzyzewski",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q434909 wdt:P4751 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Mike Krzyzewski Sports-Reference.com college basketball coach ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mike Krzyzewski",
            "choppedEntity": "Q434909"
        }
    },
    {
        "chopped": {
            "question": "What award did Roman Polanski receive for playing ",
            "query": "SELECT ?ans1 WHERE { wd:Q51552 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P155 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Roman Polanski award received ?s . ?s award received ?ans1 . ?s follows ?unknown }"
        },
        "original": {
            "question": "What award did Roman Polanski receive for playing Michael Haneke",
            "query": "SELECT ?obj WHERE { wd:Q51552 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P155 wd:Q84199 }",
            "NLQuery": "SELECT ?obj WHERE { Roman Polanski award received ?s . ?s award received ?obj . ?s follows Michael Haneke }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Michael Haneke",
            "choppedEntity": "Q84199"
        }
    },
    {
        "chopped": {
            "question": "The award Roman Polanski received for playing ",
            "query": "SELECT ?ans1 WHERE { wd:Q51552 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P155 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Roman Polanski award received ?s . ?s award received ?ans1 . ?s follows ?unknown }"
        },
        "original": {
            "question": "The award Roman Polanski received for playing Michael Haneke",
            "query": "SELECT ?obj WHERE { wd:Q51552 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P155 wd:Q84199 }",
            "NLQuery": "SELECT ?obj WHERE { Roman Polanski award received ?s . ?s award received ?obj . ?s follows Michael Haneke }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Michael Haneke",
            "choppedEntity": "Q84199"
        }
    },
    {
        "chopped": {
            "question": "Which was the sovereign state of the country of citizenship of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P27 ?obj . ?obj wdt:P31 wd:Q3624078 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown country of citizenship ?obj . ?obj instance of sovereign state } "
        },
        "original": {
            "question": "Which was the sovereign state of the country of citizenship of Josip Broz Tito",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q9161 wdt:P27 ?obj . ?obj wdt:P31 wd:Q3624078 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Josip Broz Tito country of citizenship ?obj . ?obj instance of sovereign state } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Josip Broz Tito",
            "choppedEntity": "Q9161"
        }
    },
    {
        "chopped": {
            "question": "Which is the InPhO ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P863 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown InPhO ID ?ans1}"
        },
        "original": {
            "question": "Which is the InPhO ID of Giambattista Vico",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q178709 wdt:P863 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Giambattista Vico InPhO ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Giambattista Vico",
            "choppedEntity": "Q178709"
        }
    },
    {
        "chopped": {
            "question": "Where did Julianne Moore receive her academic degree for ",
            "query": "SELECT ?ans1 WHERE { wd:Q80405 p:P69 ?s . ?s ps:P69 ?ans1 . ?s pq:P512 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Julianne Moore educated at ?s . ?s educated at ?ans1 . ?s academic degree ?unknown }"
        },
        "original": {
            "question": "Where did Julianne Moore receive her academic degree for Bachelor of Fine Arts",
            "query": "SELECT ?obj WHERE { wd:Q80405 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 wd:Q2878277 }",
            "NLQuery": "SELECT ?obj WHERE { Julianne Moore educated at ?s . ?s educated at ?obj . ?s academic degree Bachelor of Fine Arts }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Bachelor of Fine Arts",
            "choppedEntity": "Q2878277"
        }
    },
    {
        "chopped": {
            "question": "From which Institution did Julianne Moore get her academic degree for ",
            "query": "SELECT ?ans1 WHERE { wd:Q80405 p:P69 ?s . ?s ps:P69 ?ans1 . ?s pq:P512 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Julianne Moore educated at ?s . ?s educated at ?ans1 . ?s academic degree ?unknown }"
        },
        "original": {
            "question": "From which Institution did Julianne Moore get her academic degree for Bachelor of Fine Arts",
            "query": "SELECT ?obj WHERE { wd:Q80405 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 wd:Q2878277 }",
            "NLQuery": "SELECT ?obj WHERE { Julianne Moore educated at ?s . ?s educated at ?obj . ?s academic degree Bachelor of Fine Arts }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Bachelor of Fine Arts",
            "choppedEntity": "Q2878277"
        }
    },
    {
        "chopped": {
            "question": "How many fastest lap times are held by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P5053 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub fastest lap ?unknown }"
        },
        "original": {
            "question": "How many fastest lap times are held by Lewis Hamilton",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P5053 wd:Q9673 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub fastest lap Lewis Hamilton }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Lewis Hamilton",
            "choppedEntity": "Q9673"
        }
    },
    {
        "chopped": {
            "question": "Which is the number of participants for UEFA ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1132 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown number of participants ?ans1}"
        },
        "original": {
            "question": "Which is the number of participants for UEFA European Football Championship",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q260858 wdt:P1132 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { UEFA European Championship number of participants ?answer}"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "European Football Championship",
            "choppedEntity": "Q260858"
        }
    },
    {
        "chopped": {
            "question": "What is the introduction period of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P2348 ?X . ?X wdt:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown time period ?X . ?X start time ?ans1}"
        },
        "original": {
            "question": "What is the introduction period of Siege of Leningrad",
            "query": "SELECT ?answer WHERE { wd:Q151860 wdt:P2348 ?X . ?X wdt:P580 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Siege of Leningrad time period ?X . ?X start time ?answer}"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "Siege of Leningrad",
            "choppedEntity": "Q151860"
        }
    },
    {
        "chopped": {
            "question": "What is the name of the satellite highest on the semi-major axis whose inventor was ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q2537 . ?ans1 wdt:P2233 ?obj . ?ans1 wdt:P61 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of natural satellite . ?ans1 semi-major axis of an orbit ?obj . ?ans1 discoverer or inventor ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the name of the satellite highest on the semi-major axis whose inventor was Scott S. Sheppard",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q2537 . ?ent wdt:P2233 ?obj . ?ent wdt:P61 wd:Q310490 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of natural satellite . ?ent semi-major axis of an orbit ?obj . ?ent discoverer or inventor Scott S. Sheppard } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Scott S. Sheppard",
            "choppedEntity": "Q310490"
        }
    },
    {
        "chopped": {
            "question": "What is the title of the disciple most elevated on the semi-major hub whose innovator was ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q2537 . ?ans1 wdt:P2233 ?obj . ?ans1 wdt:P61 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of natural satellite . ?ans1 semi-major axis of an orbit ?obj . ?ans1 discoverer or inventor ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the title of the disciple most elevated on the semi-major hub whose innovator was Scott S. Sheppard",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q2537 . ?ent wdt:P2233 ?obj . ?ent wdt:P61 wd:Q310490 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of natural satellite . ?ent semi-major axis of an orbit ?obj . ?ent discoverer or inventor Scott S. Sheppard } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Scott S. Sheppard",
            "choppedEntity": "Q310490"
        }
    },
    {
        "chopped": {
            "question": "Is Ardolph L. Kline the director or founder of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P937 ?ans1 . ?ans1 wdt:P6 wd:Q4121154}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown work location ?ans1 . ?ans1 head of government Ardolph L. Kline}"
        },
        "original": {
            "question": "Is Ardolph L. Kline the director or founder of Stella Adler",
            "query": "SELECT ?answer WHERE { wd:Q32788 wdt:P937 ?answer . ?answer wdt:P6 wd:Q4121154}",
            "NLQuery": "SELECT ?answer WHERE { Stella Adler work location ?answer . ?answer head of government Ardolph L. Kline}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Stella Adler",
            "choppedEntity": "Q32788"
        }
    },
    {
        "chopped": {
            "question": "When did Georg Simon Ohm become a member of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1585 p:P463 ?s . ?s ps:P463 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Georg Simon Ohm member of ?s . ?s member of ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Georg Simon Ohm become a member of the Royal Society",
            "query": "SELECT ?value WHERE { wd:Q1585 p:P463 ?s . ?s ps:P463 wd:Q123885 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Georg Simon Ohm member of ?s . ?s member of Royal Society . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Royal Society",
            "choppedEntity": "Q123885"
        }
    },
    {
        "chopped": {
            "question": "What is the date that Georg Simon Ohm began his membership in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1585 p:P463 ?s . ?s ps:P463 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Georg Simon Ohm member of ?s . ?s member of ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "What is the date that Georg Simon Ohm began his membership in the Royal Society",
            "query": "SELECT ?value WHERE { wd:Q1585 p:P463 ?s . ?s ps:P463 wd:Q123885 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Georg Simon Ohm member of ?s . ?s member of Royal Society . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Royal Society",
            "choppedEntity": "Q123885"
        }
    },
    {
        "chopped": {
            "question": "What characters are in ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P674 ?obj . ?obj wdt:P31 wd:Q3658341 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown characters ?obj . ?obj instance of literary character } "
        },
        "original": {
            "question": "What characters are in Nineteen Eighty-Four",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q208460 wdt:P674 ?obj . ?obj wdt:P31 wd:Q3658341 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Nineteen Eighty-Four characters ?obj . ?obj instance of literary character } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Nineteen Eighty-Four",
            "choppedEntity": "Q208460"
        }
    },
    {
        "chopped": {
            "question": "Who are the characters in ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P674 ?obj . ?obj wdt:P31 wd:Q3658341 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown characters ?obj . ?obj instance of literary character } "
        },
        "original": {
            "question": "Who are the characters in Nineteen Eighty-Four",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q208460 wdt:P674 ?obj . ?obj wdt:P31 wd:Q3658341 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Nineteen Eighty-Four characters ?obj . ?obj instance of literary character } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Nineteen Eighty-Four",
            "choppedEntity": "Q208460"
        }
    },
    {
        "chopped": {
            "question": "Having a ward of Armidale Dumaresq Shire, in what district is ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P131 ?ans1 . ?ans1 wdt:P150 wd:Q686866}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in the administrative territorial entity ?ans1 . ?ans1 contains administrative territorial entity Armidale Dumaresq Shire}"
        },
        "original": {
            "question": "Having a ward of Armidale Dumaresq Shire, in what district is the Rugby League International Federation",
            "query": "SELECT ?answer WHERE { wd:Q2308450 wdt:P131 ?answer . ?answer wdt:P150 wd:Q686866}",
            "NLQuery": "SELECT ?answer WHERE { Rugby League International Federation located in the administrative territorial entity ?answer . ?answer contains administrative territorial entity Armidale Dumaresq Shire}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Rugby League International Federation",
            "choppedEntity": "Q2308450"
        }
    },
    {
        "chopped": {
            "question": "In which district is the Rugby League International Federation which has a ward of ",
            "query": "SELECT ?ans1 WHERE { wd:Q2308450 wdt:P131 ?ans1 . ?ans1 wdt:P150 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Rugby League International Federation located in the administrative territorial entity ?ans1 . ?ans1 contains administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "In which district is the Rugby League International Federation which has a ward of Armidale Dumaresq Shire",
            "query": "SELECT ?answer WHERE { wd:Q2308450 wdt:P131 ?answer . ?answer wdt:P150 wd:Q686866}",
            "NLQuery": "SELECT ?answer WHERE { Rugby League International Federation located in the administrative territorial entity ?answer . ?answer contains administrative territorial entity Armidale Dumaresq Shire}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Armidale Dumaresq Shire",
            "choppedEntity": "Q686866"
        }
    },
    {
        "chopped": {
            "question": "What familial relationship does Magneto share with ",
            "query": "SELECT ?ans1 WHERE { wd:Q840291 p:P1038 ?s . ?s ps:P1038 ?unknown . ?s pq:P1039 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Magneto relative ?s . ?s relative ?unknown . ?s type of kinship ?ans1}"
        },
        "original": {
            "question": "What familial relationship does Magneto share with Joseph",
            "query": "SELECT ?value WHERE { wd:Q840291 p:P1038 ?s . ?s ps:P1038 wd:Q1771401 . ?s pq:P1039 ?value}",
            "NLQuery": "SELECT ?value WHERE { Magneto relative ?s . ?s relative Joseph . ?s type of kinship ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Joseph",
            "choppedEntity": "Q1771401"
        }
    },
    {
        "chopped": {
            "question": "What is the location of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P2633 ?obj . ?obj wdt:P31 wd:Q46865913 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown geography of topic ?obj . ?obj instance of geography of geographic location } "
        },
        "original": {
            "question": "What is the location of Korea",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q18097 wdt:P2633 ?obj . ?obj wdt:P31 wd:Q46865913 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Korea geography of topic ?obj . ?obj instance of geography of geographic location } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Korea",
            "choppedEntity": "Q18097"
        }
    },
    {
        "chopped": {
            "question": "What is the area of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P2633 ?obj . ?obj wdt:P31 wd:Q46865913 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown geography of topic ?obj . ?obj instance of geography of geographic location } "
        },
        "original": {
            "question": "What is the area of Korea",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q18097 wdt:P2633 ?obj . ?obj wdt:P31 wd:Q46865913 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Korea geography of topic ?obj . ?obj instance of geography of geographic location } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Korea",
            "choppedEntity": "Q18097"
        }
    },
    {
        "chopped": {
            "question": "Who was was starrign the prequel of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P155 ?X . ?X wdt:P161 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown follows ?X . ?X cast member ?ans1}"
        },
        "original": {
            "question": "Who was was starrign the prequel of X-Men: The Last Stand",
            "query": "SELECT ?answer WHERE { wd:Q221168 wdt:P155 ?X . ?X wdt:P161 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { X-Men: The Last Stand follows ?X . ?X cast member ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "X-Men: The Last Stand",
            "choppedEntity": "Q221168"
        }
    },
    {
        "chopped": {
            "question": "Who was was starrign the prequel of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P155 ?X . ?X wdt:P161 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown follows ?X . ?X cast member ?ans1}"
        },
        "original": {
            "question": "Who was was starrign the prequel of X-Men: The Final Stand",
            "query": "SELECT ?answer WHERE { wd:Q221168 wdt:P155 ?X . ?X wdt:P161 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { X-Men: The Last Stand follows ?X . ?X cast member ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "X-Men: The Final Stand",
            "choppedEntity": "Q221168"
        }
    },
    {
        "chopped": {
            "question": "Is it true that Robert de Niro was born in ",
            "query": "ASK WHERE { wd:Q36949 wdt:P19 ?unknown }",
            "NLQuery": "ASK WHERE { Robert De Niro place of birth ?unknown }"
        },
        "original": {
            "question": "Is it true that Robert de Niro was born in Greenwich Village",
            "query": "ASK WHERE { wd:Q36949 wdt:P19 wd:Q205380 }",
            "NLQuery": "ASK WHERE { Robert De Niro place of birth Greenwich Village }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Greenwich Village",
            "choppedEntity": "Q205380"
        }
    },
    {
        "chopped": {
            "question": "Was Robert de Niro born in ",
            "query": "ASK WHERE { wd:Q36949 wdt:P19 ?unknown }",
            "NLQuery": "ASK WHERE { Robert De Niro place of birth ?unknown }"
        },
        "original": {
            "question": "Was Robert de Niro born in Greenwich Village",
            "query": "ASK WHERE { wd:Q36949 wdt:P19 wd:Q205380 }",
            "NLQuery": "ASK WHERE { Robert De Niro place of birth Greenwich Village }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Greenwich Village",
            "choppedEntity": "Q205380"
        }
    },
    {
        "chopped": {
            "question": "How many composer are by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P86 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub composer ?unknown }"
        },
        "original": {
            "question": "How many composer are by Paco de Lucia",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P86 wd:Q153300 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub composer Paco de Luc\u00eda }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Paco de Lucia",
            "choppedEntity": "Q153300"
        }
    },
    {
        "chopped": {
            "question": "What is the manufacturing of the field of action of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P452 ?X . ?X wdt:P1056 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown industry ?X . ?X product or material produced ?ans1}"
        },
        "original": {
            "question": "What is the manufacturing of the field of action of Ekstra M",
            "query": "SELECT ?answer WHERE { wd:Q20643977 wdt:P452 ?X . ?X wdt:P1056 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Ekstra M industry ?X . ?X product or material produced ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Ekstra M",
            "choppedEntity": "Q20643977"
        }
    },
    {
        "chopped": {
            "question": "Which company developed ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P178 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown developer ?obj . ?obj instance of business } "
        },
        "original": {
            "question": "Which company developed Skype",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q40984 wdt:P178 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Skype developer ?obj . ?obj instance of business } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Skype",
            "choppedEntity": "Q40984"
        }
    },
    {
        "chopped": {
            "question": "What associations use ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1018 ?obj . ?obj wdt:P31 wd:Q29300714 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown language regulatory body ?obj . ?obj instance of international association } "
        },
        "original": {
            "question": "What associations use Latin",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q397 wdt:P1018 ?obj . ?obj wdt:P31 wd:Q29300714 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Latin language regulatory body ?obj . ?obj instance of international association } "
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Latin",
            "choppedEntity": "Q397"
        }
    },
    {
        "chopped": {
            "question": "What affiliations utilize ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1018 ?obj . ?obj wdt:P31 wd:Q29300714 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown language regulatory body ?obj . ?obj instance of international association } "
        },
        "original": {
            "question": "What affiliations utilize Latin",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q397 wdt:P1018 ?obj . ?obj wdt:P31 wd:Q29300714 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Latin language regulatory body ?obj . ?obj instance of international association } "
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Latin",
            "choppedEntity": "Q397"
        }
    },
    {
        "chopped": {
            "question": "Who is the marriage partner starring ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P161 ?X . ?X wdt:P26 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cast member ?X . ?X spouse ?ans1}"
        },
        "original": {
            "question": "Who is the marriage partner starring The Girl Can't Help It",
            "query": "SELECT ?answer WHERE { wd:Q1506824 wdt:P161 ?X . ?X wdt:P26 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Girl Can't Help It cast member ?X . ?X spouse ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Girl Can't Help It",
            "choppedEntity": "Q1506824"
        }
    },
    {
        "chopped": {
            "question": "Name the intergovernmental authority for language body of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1018 ?obj . ?obj wdt:P31 wd:Q245065 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown language regulatory body ?obj . ?obj instance of intergovernmental organization } "
        },
        "original": {
            "question": "Name the intergovernmental authority for language body of Dutch",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q7411 wdt:P1018 ?obj . ?obj wdt:P31 wd:Q245065 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Dutch language regulatory body ?obj . ?obj instance of intergovernmental organization } "
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Dutch",
            "choppedEntity": "Q7411"
        }
    },
    {
        "chopped": {
            "question": "What is the intergovernmental authority for the language body of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1018 ?obj . ?obj wdt:P31 wd:Q245065 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown language regulatory body ?obj . ?obj instance of intergovernmental organization } "
        },
        "original": {
            "question": "What is the intergovernmental authority for the language body of Dutch",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q7411 wdt:P1018 ?obj . ?obj wdt:P31 wd:Q245065 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Dutch language regulatory body ?obj . ?obj instance of intergovernmental organization } "
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Dutch",
            "choppedEntity": "Q7411"
        }
    },
    {
        "chopped": {
            "question": "Which is the number of mountains that there are for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P3091 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown mount ?obj }"
        },
        "original": {
            "question": "Which is the number of mountains that there are for Lester Piggott",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q377345 wdt:P3091 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Lester Piggott mount ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Lester Piggott",
            "choppedEntity": "Q377345"
        }
    },
    {
        "chopped": {
            "question": "Did Johan Cruyff die in ",
            "query": "SELECT ?ans1 WHERE { wd:Q17163 p:P20 ?s . ?s ps:P20 ?unknown . ?s pq:P17 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Johan Cruyff place of death ?s . ?s place of death ?unknown . ?s country ?ans1}"
        },
        "original": {
            "question": "Did Johan Cruyff die in Barcelona",
            "query": "SELECT ?value WHERE { wd:Q17163 p:P20 ?s . ?s ps:P20 wd:Q1492 . ?s pq:P17 ?value}",
            "NLQuery": "SELECT ?value WHERE { Johan Cruyff place of death ?s . ?s place of death Barcelona . ?s country ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Barcelona",
            "choppedEntity": "Q1492"
        }
    },
    {
        "chopped": {
            "question": "What was Edith Evans nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q236718 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Edith Evans nominated for ?s . ?s nominated for ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "What was Edith Evans nominated for in The Chalk Garden",
            "query": "SELECT ?obj WHERE { wd:Q236718 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q1168870 }",
            "NLQuery": "SELECT ?obj WHERE { Edith Evans nominated for ?s . ?s nominated for ?obj . ?s for work The Chalk Garden }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Chalk Garden",
            "choppedEntity": "Q1168870"
        }
    },
    {
        "chopped": {
            "question": "What genre film was the prequel to ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P156 ?X . ?X wdt:P136 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown followed by ?X . ?X genre ?ans1}"
        },
        "original": {
            "question": "What genre film was the prequel to Zork II",
            "query": "SELECT ?answer WHERE { wd:Q511974 wdt:P156 ?X . ?X wdt:P136 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Zork II followed by ?X . ?X genre ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Zork II",
            "choppedEntity": "Q511974"
        }
    },
    {
        "chopped": {
            "question": "What kind of film is the prequel to ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P156 ?X . ?X wdt:P136 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown followed by ?X . ?X genre ?ans1}"
        },
        "original": {
            "question": "What kind of film is the prequel to Zork II",
            "query": "SELECT ?answer WHERE { wd:Q511974 wdt:P156 ?X . ?X wdt:P136 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Zork II followed by ?X . ?X genre ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Zork II",
            "choppedEntity": "Q511974"
        }
    },
    {
        "chopped": {
            "question": "What is the mascot for ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P822 ?obj . ?obj wdt:P31 wd:Q28020127 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown mascot ?obj . ?obj instance of fictional humanoid } "
        },
        "original": {
            "question": "What is the mascot for Iron Maiden",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q42482 wdt:P822 ?obj . ?obj wdt:P31 wd:Q28020127 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Iron Maiden mascot ?obj . ?obj instance of fictional humanoid } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Iron Maiden",
            "choppedEntity": "Q42482"
        }
    },
    {
        "chopped": {
            "question": "What are the payment types accepted for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P2851 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 payment types accepted ?unknown}"
        },
        "original": {
            "question": "What are the payment types accepted for PayPal",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P2851 wd:Q483959}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer payment types accepted PayPal}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "PayPal",
            "choppedEntity": "Q483959"
        }
    },
    {
        "chopped": {
            "question": "When did Southampton cease being a country of ",
            "query": "SELECT ?ans1 WHERE { wd:Q79848 p:P17 ?s . ?s ps:P17 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Southampton country ?s . ?s country ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did Southampton cease being a country of the Kingdom of England",
            "query": "SELECT ?value WHERE { wd:Q79848 p:P17 ?s . ?s ps:P17 wd:Q179876 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Southampton country ?s . ?s country Kingdom of England . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Kingdom of England",
            "choppedEntity": "Q179876"
        }
    },
    {
        "chopped": {
            "question": "When did Southampton stop being a country of ",
            "query": "SELECT ?ans1 WHERE { wd:Q79848 p:P17 ?s . ?s ps:P17 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Southampton country ?s . ?s country ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did Southampton stop being a country of the Kingdom of England",
            "query": "SELECT ?value WHERE { wd:Q79848 p:P17 ?s . ?s ps:P17 wd:Q179876 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Southampton country ?s . ?s country Kingdom of England . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Kingdom of England",
            "choppedEntity": "Q179876"
        }
    },
    {
        "chopped": {
            "question": "Which is broadcasted by ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P3301 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 broadcast by ?unknown}"
        },
        "original": {
            "question": "Which is broadcasted by NTV",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P3301 wd:Q574625}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer broadcast by NTV}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "NTV",
            "choppedEntity": "Q574625"
        }
    },
    {
        "chopped": {
            "question": "What is in the category of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P5108 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown HanCinema film ID ?ans1}"
        },
        "original": {
            "question": "What is in the category of Oldboy",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q475693 wdt:P5108 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Oldboy HanCinema film ID ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Oldboy",
            "choppedEntity": "Q475693"
        }
    },
    {
        "chopped": {
            "question": "Which is the tracklist for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P658 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 tracklist ?unknown}"
        },
        "original": {
            "question": "Which is the tracklist for A Day in the Life",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P658 wd:Q300385}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer tracklist A Day in the Life}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "A Day in the Life",
            "choppedEntity": "Q300385"
        }
    },
    {
        "chopped": {
            "question": "Which is the age of majority for the ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2997 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown age of majority ?ans1}"
        },
        "original": {
            "question": "Which is the age of majority for the Philippines",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q928 wdt:P2997 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Philippines age of majority ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Philippines",
            "choppedEntity": "Q928"
        }
    },
    {
        "chopped": {
            "question": "Who is Thomas Eakins, whose students is ",
            "query": "SELECT ?ans1 WHERE { wd:Q214905 wdt:P1066 ?ans1 . ?ans1 wdt:P802 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Thomas Eakins student of ?ans1 . ?ans1 student ?unknown}"
        },
        "original": {
            "question": "Who is Thomas Eakins, whose students is Auguste Alleaume",
            "query": "SELECT ?answer WHERE { wd:Q214905 wdt:P1066 ?answer . ?answer wdt:P802 wd:Q17621651}",
            "NLQuery": "SELECT ?answer WHERE { Thomas Eakins student of ?answer . ?answer student Auguste Alleaume}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Auguste Alleaume",
            "choppedEntity": "Q17621651"
        }
    },
    {
        "chopped": {
            "question": "Who is Thomas Eakins, whose understudies is ",
            "query": "SELECT ?ans1 WHERE { wd:Q214905 wdt:P1066 ?ans1 . ?ans1 wdt:P802 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Thomas Eakins student of ?ans1 . ?ans1 student ?unknown}"
        },
        "original": {
            "question": "Who is Thomas Eakins, whose understudies is Auguste Alleaume",
            "query": "SELECT ?answer WHERE { wd:Q214905 wdt:P1066 ?answer . ?answer wdt:P802 wd:Q17621651}",
            "NLQuery": "SELECT ?answer WHERE { Thomas Eakins student of ?answer . ?answer student Auguste Alleaume}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Auguste Alleaume",
            "choppedEntity": "Q17621651"
        }
    },
    {
        "chopped": {
            "question": "What is the Youtube Tag of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1651 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown YouTube video ID ?ans1}"
        },
        "original": {
            "question": "What is the Youtube Tag of Zaha Hadid",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q47780 wdt:P1651 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Zaha Hadid YouTube video ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Zaha Hadid",
            "choppedEntity": "Q47780"
        }
    },
    {
        "chopped": {
            "question": "For what did Steve Buscemi get nominated for for his work on ",
            "query": "SELECT ?ans1 WHERE { wd:Q104061 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Steve Buscemi nominated for ?s . ?s nominated for ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "For what did Steve Buscemi get nominated for for his work on Boardwalk Empire",
            "query": "SELECT ?obj WHERE { wd:Q104061 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q585758 }",
            "NLQuery": "SELECT ?obj WHERE { Steve Buscemi nominated for ?s . ?s nominated for ?obj . ?s for work Boardwalk Empire }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Boardwalk Empire",
            "choppedEntity": "Q585758"
        }
    },
    {
        "chopped": {
            "question": "When did Andrew Johns play for ",
            "query": "SELECT ?ans1 WHERE { wd:Q2846645 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Andrew Johns member of sports team ?s . ?s member of sports team ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did Andrew Johns play for the Newcastle Knights",
            "query": "SELECT ?value WHERE { wd:Q2846645 p:P54 ?s . ?s ps:P54 wd:Q3339101 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Andrew Johns member of sports team ?s . ?s member of sports team Newcastle Knights . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Newcastle Knights",
            "choppedEntity": "Q3339101"
        }
    },
    {
        "chopped": {
            "question": "On which day Andrew Johns play for ",
            "query": "SELECT ?ans1 WHERE { wd:Q2846645 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Andrew Johns member of sports team ?s . ?s member of sports team ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "On which day Andrew Johns play for the Newcastle Knights",
            "query": "SELECT ?value WHERE { wd:Q2846645 p:P54 ?s . ?s ps:P54 wd:Q3339101 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Andrew Johns member of sports team ?s . ?s member of sports team Newcastle Knights . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Newcastle Knights",
            "choppedEntity": "Q3339101"
        }
    },
    {
        "chopped": {
            "question": "What was the name of the position held by Fran\u00e7ois Mitterrand as member of ",
            "query": "SELECT ?ans1 WHERE { wd:Q2038 p:P39 ?s . ?s ps:P39 ?unknown . ?s pq:P2937 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Fran\u00e7ois Mitterrand position held ?s . ?s position held ?unknown . ?s parliamentary term ?ans1}"
        },
        "original": {
            "question": "What was the name of the position held by Fran\u00e7ois Mitterrand as member of the French National Assembly",
            "query": "SELECT ?value WHERE { wd:Q2038 p:P39 ?s . ?s ps:P39 wd:Q3044918 . ?s pq:P2937 ?value}",
            "NLQuery": "SELECT ?value WHERE { Fran\u00e7ois Mitterrand position held ?s . ?s position held member of the French National Assembly . ?s parliamentary term ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the French National Assembly",
            "choppedEntity": "Q3044918"
        }
    },
    {
        "chopped": {
            "question": "What Minecraft software version applies to ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P348 ?s . ?s ps:P348 ?ans1 . ?s pq:P518 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown software version identifier ?s . ?s software version identifier ?ans1 . ?s applies to part ?unknown }"
        },
        "original": {
            "question": "What Minecraft software version applies to Minecraft",
            "query": "SELECT ?obj WHERE { wd:Q49740 p:P348 ?s . ?s ps:P348 ?obj . ?s pq:P518 wd:Q49740 }",
            "NLQuery": "SELECT ?obj WHERE { Minecraft software version identifier ?s . ?s software version identifier ?obj . ?s applies to part Minecraft }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Minecraft",
            "choppedEntity": "Q49740"
        }
    },
    {
        "chopped": {
            "question": "What software version of Minecraft applies to ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P348 ?s . ?s ps:P348 ?ans1 . ?s pq:P518 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown software version identifier ?s . ?s software version identifier ?ans1 . ?s applies to part ?unknown }"
        },
        "original": {
            "question": "What software version of Minecraft applies to Minecraft",
            "query": "SELECT ?obj WHERE { wd:Q49740 p:P348 ?s . ?s ps:P348 ?obj . ?s pq:P518 wd:Q49740 }",
            "NLQuery": "SELECT ?obj WHERE { Minecraft software version identifier ?s . ?s software version identifier ?obj . ?s applies to part Minecraft }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Minecraft",
            "choppedEntity": "Q49740"
        }
    },
    {
        "chopped": {
            "question": "Which is the Soccerbase manager ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2195 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Soccerbase manager ID ?ans1}"
        },
        "original": {
            "question": "Which is the Soccerbase manager ID of Jos\u00e9 Mourinho",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q79983 wdt:P2195 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Jos\u00e9 Mourinho Soccerbase manager ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jos\u00e9 Mourinho",
            "choppedEntity": "Q79983"
        }
    },
    {
        "chopped": {
            "question": "What is the number of nominations received by ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P1411 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown nominated for ?obj }"
        },
        "original": {
            "question": "What is the number of nominations received by Lewis Hamilton",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q9673 wdt:P1411 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Lewis Hamilton nominated for ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Lewis Hamilton",
            "choppedEntity": "Q9673"
        }
    },
    {
        "chopped": {
            "question": "who state of austria for twinned administrative body of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P190 ?unknown . ?sbj wdt:P31 wd:Q261543 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj twinned administrative body ?unknown . ?sbj instance of state of Austria } "
        },
        "original": {
            "question": "who state of austria for twinned administrative body of bern",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P190 wd:Q70 . ?sbj wdt:P31 wd:Q261543 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj twinned administrative body Bern . ?sbj instance of state of Austria } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "bern",
            "choppedEntity": "Q70"
        }
    },
    {
        "chopped": {
            "question": "who state of austria for twinned authoritative body of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P190 ?unknown . ?sbj wdt:P31 wd:Q261543 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj twinned administrative body ?unknown . ?sbj instance of state of Austria } "
        },
        "original": {
            "question": "who state of austria for twinned authoritative body of bern",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P190 wd:Q70 . ?sbj wdt:P31 wd:Q261543 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj twinned administrative body Bern . ?sbj instance of state of Austria } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "bern",
            "choppedEntity": "Q70"
        }
    },
    {
        "chopped": {
            "question": "Which is All-Russian Mathematical Portal ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4252 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown All-Russian Mathematical Portal ID ?ans1}"
        },
        "original": {
            "question": "Which is All-Russian Mathematical Portal ID of Peter Scholze",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q98034 wdt:P4252 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Peter Scholze All-Russian Mathematical Portal ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Peter Scholze",
            "choppedEntity": "Q98034"
        }
    },
    {
        "chopped": {
            "question": "When was the end of the partnership between Geeta Dutt and ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q470416 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P582 ?ans1 . ?s pq:P580 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Geeta Dutt spouse ?s . ?s spouse ?unknown . ?s end time ?ans1 . ?s start time ?ans2 }"
        },
        "original": {
            "question": "When was the end of the partnership between Geeta Dutt and Guru Dutt",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q470416 p:P26 ?s . ?s ps:P26 wd:Q149136 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Geeta Dutt spouse ?s . ?s spouse Guru Dutt . ?s end time ?value1 . ?s start time ?value2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Guru Dutt",
            "choppedEntity": "Q149136"
        }
    },
    {
        "chopped": {
            "question": "When did John Searle receive ",
            "query": "SELECT ?ans1 WHERE { wd:Q295012 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { John Searle award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did John Searle receive the National Humanities Medal",
            "query": "SELECT ?value WHERE { wd:Q295012 p:P166 ?s . ?s ps:P166 wd:Q1571938 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { John Searle award received ?s . ?s award received National Humanities Medal . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the National Humanities Medal",
            "choppedEntity": "Q1571938"
        }
    },
    {
        "chopped": {
            "question": "Donkey Kong is a character from what notable work by ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P800 ?obj . ?obj wdt:P31 wd:Q17564712 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown notable work ?obj . ?obj instance of Donkey Kong character } "
        },
        "original": {
            "question": "Donkey Kong is a character from what notable work by Shigeru Miyamoto",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q12382 wdt:P800 ?obj . ?obj wdt:P31 wd:Q17564712 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Shigeru Miyamoto notable work ?obj . ?obj instance of Donkey Kong character } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Shigeru Miyamoto",
            "choppedEntity": "Q12382"
        }
    },
    {
        "chopped": {
            "question": "Who co-founded ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P137 ?X . ?X wdt:P112 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown operator ?X . ?X founded by ?ans1}"
        },
        "original": {
            "question": "Who co-founded Jack Daniel's Distillery",
            "query": "SELECT ?answer WHERE { wd:Q47536037 wdt:P137 ?X . ?X wdt:P112 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Jack Daniel's Distillery operator ?X . ?X founded by ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Jack Daniel's Distillery",
            "choppedEntity": "Q47536037"
        }
    },
    {
        "chopped": {
            "question": "Did Patty Hearst teach at the University of California, Berkeley and ",
            "query": "ASK WHERE { wd:Q229556 wdt:P69 wd:Q168756 . wd:Q229556 wdt:P69 ?unknown }",
            "NLQuery": "ASK WHERE { Patty Hearst educated at University of California, Berkeley . Patty Hearst educated at ?unknown }"
        },
        "original": {
            "question": "Did Patty Hearst teach at the University of California, Berkeley and the San Domenico School",
            "query": "ASK WHERE { wd:Q229556 wdt:P69 wd:Q168756 . wd:Q229556 wdt:P69 wd:Q7413784 }",
            "NLQuery": "ASK WHERE { Patty Hearst educated at University of California, Berkeley . Patty Hearst educated at San Domenico School }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the San Domenico School",
            "choppedEntity": "Q7413784"
        }
    },
    {
        "chopped": {
            "question": "Was Patty Hearst an educator at the University of California, Berkeley, and ",
            "query": "ASK WHERE { wd:Q229556 wdt:P69 wd:Q168756 . wd:Q229556 wdt:P69 ?unknown }",
            "NLQuery": "ASK WHERE { Patty Hearst educated at University of California, Berkeley . Patty Hearst educated at ?unknown }"
        },
        "original": {
            "question": "Was Patty Hearst an educator at the University of California, Berkeley, and the San Domenico School",
            "query": "ASK WHERE { wd:Q229556 wdt:P69 wd:Q168756 . wd:Q229556 wdt:P69 wd:Q7413784 }",
            "NLQuery": "ASK WHERE { Patty Hearst educated at University of California, Berkeley . Patty Hearst educated at San Domenico School }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the San Domenico School",
            "choppedEntity": "Q7413784"
        }
    },
    {
        "chopped": {
            "question": "what is the market capitalization of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2226 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown market capitalisation ?ans1}"
        },
        "original": {
            "question": "what is the market capitalization of the Alibaba Group",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1359568 wdt:P2226 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Alibaba Group market capitalisation ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Alibaba Group",
            "choppedEntity": "Q1359568"
        }
    },
    {
        "chopped": {
            "question": "Which bay whose tributary is the Kamo River is near ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P206 ?ans1 . ?ans1 wdt:P974 wd:Q11398846}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in or next to body of water ?ans1 . ?ans1 tributary Kamo River}"
        },
        "original": {
            "question": "Which bay whose tributary is the Kamo River is near the Mariana Trench",
            "query": "SELECT ?answer WHERE { wd:Q510 wdt:P206 ?answer . ?answer wdt:P974 wd:Q11398846}",
            "NLQuery": "SELECT ?answer WHERE { Mariana Trench located in or next to body of water ?answer . ?answer tributary Kamo River}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Mariana Trench",
            "choppedEntity": "Q510"
        }
    },
    {
        "chopped": {
            "question": "Which bay whose tributary is the Kamo River is close to ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P206 ?ans1 . ?ans1 wdt:P974 wd:Q11398846}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in or next to body of water ?ans1 . ?ans1 tributary Kamo River}"
        },
        "original": {
            "question": "Which bay whose tributary is the Kamo River is close to the Mariana Trench",
            "query": "SELECT ?answer WHERE { wd:Q510 wdt:P206 ?answer . ?answer wdt:P974 wd:Q11398846}",
            "NLQuery": "SELECT ?answer WHERE { Mariana Trench located in or next to body of water ?answer . ?answer tributary Kamo River}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Mariana Trench",
            "choppedEntity": "Q510"
        }
    },
    {
        "chopped": {
            "question": "What is the Christian identify of King Arthur, which capability the identical as ",
            "query": "SELECT ?ans1 WHERE { wd:Q45792 wdt:P735 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { King Arthur given name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "What is the Christian identify of King Arthur, which capability the identical as Artur",
            "query": "SELECT ?answer WHERE { wd:Q45792 wdt:P735 ?answer . ?answer wdt:P460 wd:Q4801582}",
            "NLQuery": "SELECT ?answer WHERE { King Arthur given name ?answer . ?answer said to be the same as Artur}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Artur",
            "choppedEntity": "Q4801582"
        }
    },
    {
        "chopped": {
            "question": "Was Boeing 777 operated by ",
            "query": "ASK WHERE { wd:Q6425 wdt:P137 ?unknown }",
            "NLQuery": "ASK WHERE { Boeing 777 operator ?unknown }"
        },
        "original": {
            "question": "Was Boeing 777 operated by Lufthansa",
            "query": "ASK WHERE { wd:Q6425 wdt:P137 wd:Q9325 }",
            "NLQuery": "ASK WHERE { Boeing 777 operator Lufthansa }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Lufthansa",
            "choppedEntity": "Q9325"
        }
    },
    {
        "chopped": {
            "question": "Has Busan and Rishon LeZion ever been the twinned administrative body of ",
            "query": "ASK WHERE { ?unknown wdt:P190 wd:Q16520 . ?unknown wdt:P190 wd:Q201051 }",
            "NLQuery": "ASK WHERE { ?unknown twinned administrative body Busan . ?unknown twinned administrative body Rishon LeZion }"
        },
        "original": {
            "question": "Has Busan and Rishon LeZion ever been the twinned administrative body of Saint Petersburg",
            "query": "ASK WHERE { wd:Q656 wdt:P190 wd:Q16520 . wd:Q656 wdt:P190 wd:Q201051 }",
            "NLQuery": "ASK WHERE { Saint Petersburg twinned administrative body Busan . Saint Petersburg twinned administrative body Rishon LeZion }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Saint Petersburg",
            "choppedEntity": "Q656"
        }
    },
    {
        "chopped": {
            "question": "What is the name of sideburns that is a part of ",
            "query": "SELECT ?ans1 WHERE { wd:Q890356 wdt:P138 ?ans1 . ?ans1 wdt:P241 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { sideburns named after ?ans1 . ?ans1 military branch ?unknown}"
        },
        "original": {
            "question": "What is the name of sideburns that is a part of the United States Army",
            "query": "SELECT ?answer WHERE { wd:Q890356 wdt:P138 ?answer . ?answer wdt:P241 wd:Q9212}",
            "NLQuery": "SELECT ?answer WHERE { sideburns named after ?answer . ?answer military branch United States Army}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the United States Army",
            "choppedEntity": "Q9212"
        }
    },
    {
        "chopped": {
            "question": "What is the public library of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P276 ?unknown . ?sbj wdt:P31 wd:Q28564 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj location ?unknown . ?sbj instance of public library } "
        },
        "original": {
            "question": "What is the public library of Nagasaki",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P276 wd:Q38234 . ?sbj wdt:P31 wd:Q28564 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj location Nagasaki . ?sbj instance of public library } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Nagasaki",
            "choppedEntity": "Q38234"
        }
    },
    {
        "chopped": {
            "question": "What is the open library of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P276 ?unknown . ?sbj wdt:P31 wd:Q28564 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj location ?unknown . ?sbj instance of public library } "
        },
        "original": {
            "question": "What is the open library of Nagasaki",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P276 wd:Q38234 . ?sbj wdt:P31 wd:Q28564 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj location Nagasaki . ?sbj instance of public library } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Nagasaki",
            "choppedEntity": "Q38234"
        }
    },
    {
        "chopped": {
            "question": "What is the Iran statistics ID number of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1010 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Iran statistics ID ?ans1}"
        },
        "original": {
            "question": "What is the Iran statistics ID number of Fars Province",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1004666 wdt:P1010 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Fars Province Iran statistics ID ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Fars Province",
            "choppedEntity": "Q1004666"
        }
    },
    {
        "chopped": {
            "question": "What is the product brand for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P1716 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 brand ?unknown}"
        },
        "original": {
            "question": "What is the product brand for iPhone",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P1716 wd:Q2766}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer brand iPhone}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "iPhone",
            "choppedEntity": "Q2766"
        }
    },
    {
        "chopped": {
            "question": "Does Snoop Dogg speaks, writes  or signs in ",
            "query": "ASK WHERE { wd:Q6096 wdt:P1412 ?unknown }",
            "NLQuery": "ASK WHERE { Snoop Dogg languages spoken, written or signed ?unknown }"
        },
        "original": {
            "question": "Does Snoop Dogg speaks, writes  or signs in Old English",
            "query": "ASK WHERE { wd:Q6096 wdt:P1412 wd:Q42365 }",
            "NLQuery": "ASK WHERE { Snoop Dogg languages spoken, written or signed Old English }"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Old English",
            "choppedEntity": "Q42365"
        }
    },
    {
        "chopped": {
            "question": "Is it true that Snoop Dogg speaks, writes or sings in ",
            "query": "ASK WHERE { wd:Q6096 wdt:P1412 ?unknown }",
            "NLQuery": "ASK WHERE { Snoop Dogg languages spoken, written or signed ?unknown }"
        },
        "original": {
            "question": "Is it true that Snoop Dogg speaks, writes or sings in Old English",
            "query": "ASK WHERE { wd:Q6096 wdt:P1412 wd:Q42365 }",
            "NLQuery": "ASK WHERE { Snoop Dogg languages spoken, written or signed Old English }"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Old English",
            "choppedEntity": "Q42365"
        }
    },
    {
        "chopped": {
            "question": "What is the street number of Musee D'Orsay has located on street as ",
            "query": "SELECT ?ans1 WHERE { wd:Q23402 p:P669 ?s . ?s ps:P669 ?unknown . ?s pq:P670 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Mus\u00e9e d'Orsay located on street ?s . ?s located on street ?unknown . ?s street number ?ans1}"
        },
        "original": {
            "question": "What is the street number of Musee D'Orsay has located on street as Rue De Bellechasse",
            "query": "SELECT ?value WHERE { wd:Q23402 p:P669 ?s . ?s ps:P669 wd:Q3450565 . ?s pq:P670 ?value}",
            "NLQuery": "SELECT ?value WHERE { Mus\u00e9e d'Orsay located on street ?s . ?s located on street rue de Bellechasse . ?s street number ?value}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Rue De Bellechasse",
            "choppedEntity": "Q3450565"
        }
    },
    {
        "chopped": {
            "question": "What is the address for the Musee D'Orsay on the same street as ",
            "query": "SELECT ?ans1 WHERE { wd:Q23402 p:P669 ?s . ?s ps:P669 ?unknown . ?s pq:P670 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Mus\u00e9e d'Orsay located on street ?s . ?s located on street ?unknown . ?s street number ?ans1}"
        },
        "original": {
            "question": "What is the address for the Musee D'Orsay on the same street as Rue De Bellachasse",
            "query": "SELECT ?value WHERE { wd:Q23402 p:P669 ?s . ?s ps:P669 wd:Q3450565 . ?s pq:P670 ?value}",
            "NLQuery": "SELECT ?value WHERE { Mus\u00e9e d'Orsay located on street ?s . ?s located on street rue de Bellechasse . ?s street number ?value}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Rue De Bellachasse",
            "choppedEntity": "Q3450565"
        }
    },
    {
        "chopped": {
            "question": "What is Kenny Dalglish's given name as the series ordinal for ",
            "query": "SELECT ?ans1 WHERE { wd:Q187198 p:P735 ?s . ?s ps:P735 ?unknown . ?s pq:P1545 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Kenny Dalglish given name ?s . ?s given name ?unknown . ?s series ordinal ?ans1}"
        },
        "original": {
            "question": "What is Kenny Dalglish's given name as the series ordinal for Mathieson",
            "query": "SELECT ?value WHERE { wd:Q187198 p:P735 ?s . ?s ps:P735 wd:Q6787177 . ?s pq:P1545 ?value}",
            "NLQuery": "SELECT ?value WHERE { Kenny Dalglish given name ?s . ?s given name Mathieson . ?s series ordinal ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mathieson",
            "choppedEntity": "Q6787177"
        }
    },
    {
        "chopped": {
            "question": "What is the given name of Kenny Dalglish as the series ordinal for ",
            "query": "SELECT ?ans1 WHERE { wd:Q187198 p:P735 ?s . ?s ps:P735 ?unknown . ?s pq:P1545 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Kenny Dalglish given name ?s . ?s given name ?unknown . ?s series ordinal ?ans1}"
        },
        "original": {
            "question": "What is the given name of Kenny Dalglish as the series ordinal for Mathieson",
            "query": "SELECT ?value WHERE { wd:Q187198 p:P735 ?s . ?s ps:P735 wd:Q6787177 . ?s pq:P1545 ?value}",
            "NLQuery": "SELECT ?value WHERE { Kenny Dalglish given name ?s . ?s given name Mathieson . ?s series ordinal ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mathieson",
            "choppedEntity": "Q6787177"
        }
    },
    {
        "chopped": {
            "question": "Which talent agency is represented by ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1875 ?obj . ?obj wdt:P31 wd:Q5354754 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown represented by ?obj . ?obj instance of talent agency } "
        },
        "original": {
            "question": "Which talent agency is represented by James Stewart",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q102462 wdt:P1875 ?obj . ?obj wdt:P31 wd:Q5354754 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { James Stewart represented by ?obj . ?obj instance of talent agency } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "James Stewart",
            "choppedEntity": "Q102462"
        }
    },
    {
        "chopped": {
            "question": "Who leads ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P611 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj religious order ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who leads the Society of Jesus",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P611 wd:Q36380 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj religious order Society of Jesus . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Society of Jesus",
            "choppedEntity": "Q36380"
        }
    },
    {
        "chopped": {
            "question": "Who is the producer of the software publisher ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P123 ?X . ?X wdt:P1056 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown publisher ?X . ?X product or material produced ?ans1}"
        },
        "original": {
            "question": "Who is the producer of the software publisher Martial Champion",
            "query": "SELECT ?answer WHERE { wd:Q1079957 wdt:P123 ?X . ?X wdt:P1056 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Martial Champion publisher ?X . ?X product or material produced ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Martial Champion",
            "choppedEntity": "Q1079957"
        }
    },
    {
        "chopped": {
            "question": "Who is the producer of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P123 ?X . ?X wdt:P1056 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown publisher ?X . ?X product or material produced ?ans1}"
        },
        "original": {
            "question": "Who is the producer of Martial Champion",
            "query": "SELECT ?answer WHERE { wd:Q1079957 wdt:P123 ?X . ?X wdt:P1056 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Martial Champion publisher ?X . ?X product or material produced ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Martial Champion",
            "choppedEntity": "Q1079957"
        }
    },
    {
        "chopped": {
            "question": "What is the sister city of the birth place of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P19 ?X . ?X wdt:P190 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of birth ?X . ?X place of birth0 ?ans1}"
        },
        "original": {
            "question": "What is the sister city of the birth place of Giancarlo Canetti",
            "query": "SELECT ?answer WHERE { wd:Q3105170 wdt:P19 ?X . ?X wdt:P190 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Giancarlo Canetti place of birth ?X . ?X place of birth0 ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Giancarlo Canetti",
            "choppedEntity": "Q3105170"
        }
    },
    {
        "chopped": {
            "question": "What is the sister city of the birth put of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P19 ?X . ?X wdt:P190 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of birth ?X . ?X place of birth0 ?ans1}"
        },
        "original": {
            "question": "What is the sister city of the birth put of Giancarlo Canetti",
            "query": "SELECT ?answer WHERE { wd:Q3105170 wdt:P19 ?X . ?X wdt:P190 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Giancarlo Canetti place of birth ?X . ?X place of birth0 ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Giancarlo Canetti",
            "choppedEntity": "Q3105170"
        }
    },
    {
        "chopped": {
            "question": "What is the position held for the general secretary of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P39 ?obj . ?obj wdt:P31 wd:Q6501749 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown position held ?obj . ?obj instance of general secretary } "
        },
        "original": {
            "question": "What is the position held for the general secretary of Xi Jinping",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q15031 wdt:P39 ?obj . ?obj wdt:P31 wd:Q6501749 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Xi Jinping position held ?obj . ?obj instance of general secretary } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Xi Jinping",
            "choppedEntity": "Q15031"
        }
    },
    {
        "chopped": {
            "question": "What is the population of ",
            "query": "ASK WHERE { ?unknown wdt:P1082 ?obj FILTER(?obj = 0) } ",
            "NLQuery": "ASK WHERE { ?unknown population ?obj FILTER(?obj = 0) } "
        },
        "original": {
            "question": "What is the population of Liebitz",
            "query": "ASK WHERE { wd:Q315869 wdt:P1082 ?obj FILTER(?obj = 0) } ",
            "NLQuery": "ASK WHERE { Liebitz population ?obj FILTER(?obj = 0) } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Liebitz",
            "choppedEntity": "Q315869"
        }
    },
    {
        "chopped": {
            "question": "On what river in Tobago is the tributary, ",
            "query": "SELECT ?ans1 WHERE { wd:Q185111 wdt:P206 ?ans1 . ?ans1 wdt:P974 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Tobago located in or next to body of water ?ans1 . ?ans1 tributary ?unknown}"
        },
        "original": {
            "question": "On what river in Tobago is the tributary, Riviere des Cotes de Fer",
            "query": "SELECT ?answer WHERE { wd:Q185111 wdt:P206 ?answer . ?answer wdt:P974 wd:Q7338939}",
            "NLQuery": "SELECT ?answer WHERE { Tobago located in or next to body of water ?answer . ?answer tributary Rivi\u00e8re des C\u00f4tes de Fer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Riviere des Cotes de Fer",
            "choppedEntity": "Q7338939"
        }
    },
    {
        "chopped": {
            "question": "in what country is Wuppertail located,place of death of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P20 ?s . ?s ps:P20 wd:Q2107 . ?s pq:P17 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of death ?s . ?s place of death Wuppertal . ?s country ?ans1}"
        },
        "original": {
            "question": "in what country is Wuppertail located,place of death of Richard Neutra",
            "query": "SELECT ?value WHERE { wd:Q84312 p:P20 ?s . ?s ps:P20 wd:Q2107 . ?s pq:P17 ?value}",
            "NLQuery": "SELECT ?value WHERE { Richard Neutra place of death ?s . ?s place of death Wuppertal . ?s country ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Richard Neutra",
            "choppedEntity": "Q84312"
        }
    },
    {
        "chopped": {
            "question": "Who are the winners of the 1928 ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P156 ?X . ?X wdt:P1346 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown followed by ?X . ?X winner ?ans1}"
        },
        "original": {
            "question": "Who are the winners of the 1928 World Snooker Championship",
            "query": "SELECT ?answer WHERE { wd:Q639942 wdt:P156 ?X . ?X wdt:P1346 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { 1928 World Snooker Championship followed by ?X . ?X winner ?answer}"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "World Snooker Championship",
            "choppedEntity": "Q639942"
        }
    },
    {
        "chopped": {
            "question": "When did Andrei Sakharov receive ",
            "query": "SELECT ?ans1 WHERE { wd:Q997 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Andrei Sakharov award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Andrei Sakharov receive the Order of Lenin",
            "query": "SELECT ?value WHERE { wd:Q997 p:P166 ?s . ?s ps:P166 wd:Q185493 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Andrei Sakharov award received ?s . ?s award received Order of Lenin . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Order of Lenin",
            "choppedEntity": "Q185493"
        }
    },
    {
        "chopped": {
            "question": "On what date did Andrei Sakharov recieve ",
            "query": "SELECT ?ans1 WHERE { wd:Q997 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Andrei Sakharov award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "On what date did Andrei Sakharov recieve the Order of Lenin",
            "query": "SELECT ?value WHERE { wd:Q997 p:P166 ?s . ?s ps:P166 wd:Q185493 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Andrei Sakharov award received ?s . ?s award received Order of Lenin . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Order of Lenin",
            "choppedEntity": "Q185493"
        }
    },
    {
        "chopped": {
            "question": "At what time did Al-Shafi'i die in ",
            "query": "SELECT ?ans1 WHERE { wd:Q294281 p:P20 ?s . ?s ps:P20 ?ans1 . ?s pq:P131 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Al-Shafi\u2018i place of death ?s . ?s place of death ?ans1 . ?s located in the administrative territorial entity ?unknown }"
        },
        "original": {
            "question": "At what time did Al-Shafi'i die in Egypt",
            "query": "SELECT ?obj WHERE { wd:Q294281 p:P20 ?s . ?s ps:P20 ?obj . ?s pq:P131 wd:Q79 }",
            "NLQuery": "SELECT ?obj WHERE { Al-Shafi\u2018i place of death ?s . ?s place of death ?obj . ?s located in the administrative territorial entity Egypt }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Egypt",
            "choppedEntity": "Q79"
        }
    },
    {
        "chopped": {
            "question": "What is the wikipedia article for ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1308 ?unknown . ?sbj wdt:P31 wd:Q13406463 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj officeholder ?unknown . ?sbj instance of Wikimedia list article } "
        },
        "original": {
            "question": "What is the wikipedia article for Mauricio Macri",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1308 wd:Q561837 . ?sbj wdt:P31 wd:Q13406463 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj officeholder Mauricio Macri . ?sbj instance of Wikimedia list article } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mauricio Macri",
            "choppedEntity": "Q561837"
        }
    },
    {
        "chopped": {
            "question": "Who designed ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P287 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown designed by ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who designed Space Invaders",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q220665 wdt:P287 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Space Invaders designed by ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Space Invaders",
            "choppedEntity": "Q220665"
        }
    },
    {
        "chopped": {
            "question": "When was Nicholas Roerich nominated for ",
            "query": "SELECT ?ans1 WHERE { wd:Q208993 p:P1411 ?s . ?s ps:P1411 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Nicholas Roerich nominated for ?s . ?s nominated for ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was Nicholas Roerich nominated for the Nobel Peace Prize",
            "query": "SELECT ?value WHERE { wd:Q208993 p:P1411 ?s . ?s ps:P1411 wd:Q35637 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Nicholas Roerich nominated for ?s . ?s nominated for Nobel Peace Prize . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Nobel Peace Prize",
            "choppedEntity": "Q35637"
        }
    },
    {
        "chopped": {
            "question": "When did Porfirio Rubirosa divorce ",
            "query": "SELECT ?ans1 WHERE { wd:Q1349488 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Porfirio Rubirosa spouse ?s . ?s spouse ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did Porfirio Rubirosa divorce Barbara Hutton",
            "query": "SELECT ?value WHERE { wd:Q1349488 p:P26 ?s . ?s ps:P26 wd:Q255620 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Porfirio Rubirosa spouse ?s . ?s spouse Barbara Hutton . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Barbara Hutton",
            "choppedEntity": "Q255620"
        }
    },
    {
        "chopped": {
            "question": "At what time did Porfirio Rubirosa divorce ",
            "query": "SELECT ?ans1 WHERE { wd:Q1349488 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Porfirio Rubirosa spouse ?s . ?s spouse ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "At what time did Porfirio Rubirosa divorce Barbara Hutton",
            "query": "SELECT ?value WHERE { wd:Q1349488 p:P26 ?s . ?s ps:P26 wd:Q255620 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Porfirio Rubirosa spouse ?s . ?s spouse Barbara Hutton . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Barbara Hutton",
            "choppedEntity": "Q255620"
        }
    },
    {
        "chopped": {
            "question": "How many production companies are by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P272 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub production company ?unknown }"
        },
        "original": {
            "question": "How many production companies are by HBO",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P272 wd:Q23633 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub production company HBO }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "HBO",
            "choppedEntity": "Q23633"
        }
    },
    {
        "chopped": {
            "question": "Is 97000 equal to the payload mass of ",
            "query": "ASK WHERE { ?unknown wdt:P4519 ?obj FILTER(?obj = 97000) } ",
            "NLQuery": "ASK WHERE { ?unknown payload mass ?obj FILTER(?obj = 97000) } "
        },
        "original": {
            "question": "Is 97000 equal to the payload mass of the USS Kobayashi Maru",
            "query": "ASK WHERE { wd:Q47459827 wdt:P4519 ?obj FILTER(?obj = 97000) } ",
            "NLQuery": "ASK WHERE { USS Kobayashi Maru payload mass ?obj FILTER(?obj = 97000) } "
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "the USS Kobayashi Maru",
            "choppedEntity": "Q47459827"
        }
    },
    {
        "chopped": {
            "question": "What is the patent for the products produced by ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1056 ?obj . ?obj wdt:P31 wd:Q3480271 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown product or material produced ?obj . ?obj instance of patent medicine } "
        },
        "original": {
            "question": "What is the patent for the products produced by the Coca-Cola Company",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q3295867 wdt:P1056 ?obj . ?obj wdt:P31 wd:Q3480271 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { The Coca-Cola Company product or material produced ?obj . ?obj instance of patent medicine } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Coca-Cola Company",
            "choppedEntity": "Q3295867"
        }
    },
    {
        "chopped": {
            "question": "When did Bertha Knight Landes take over, and leave as mayor of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P6 ?s . ?s ps:P6 wd:Q2899248 . ?s pq:P2032 ?ans1 . ?s pq:P2031 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown head of government ?s . ?s head of government Bertha Knight Landes . ?s work period (end) ?ans1 . ?s work period (start) ?ans2 }"
        },
        "original": {
            "question": "When did Bertha Knight Landes take over, and leave as mayor of Seattle",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q5083 p:P6 ?s . ?s ps:P6 wd:Q2899248 . ?s pq:P2032 ?value1 . ?s pq:P2031 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Seattle head of government ?s . ?s head of government Bertha Knight Landes . ?s work period (end) ?value1 . ?s work period (start) ?value2 }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Seattle",
            "choppedEntity": "Q5083"
        }
    },
    {
        "chopped": {
            "question": "When did Bertha Knight Landes take over, and take off as chairman of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P6 ?s . ?s ps:P6 wd:Q2899248 . ?s pq:P2032 ?ans1 . ?s pq:P2031 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown head of government ?s . ?s head of government Bertha Knight Landes . ?s work period (end) ?ans1 . ?s work period (start) ?ans2 }"
        },
        "original": {
            "question": "When did Bertha Knight Landes take over, and take off as chairman of Seattle",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q5083 p:P6 ?s . ?s ps:P6 wd:Q2899248 . ?s pq:P2032 ?value1 . ?s pq:P2031 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Seattle head of government ?s . ?s head of government Bertha Knight Landes . ?s work period (end) ?value1 . ?s work period (start) ?value2 }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Seattle",
            "choppedEntity": "Q5083"
        }
    },
    {
        "chopped": {
            "question": "How many administrative territorial entities are located by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P131 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub located in the administrative territorial entity ?unknown }"
        },
        "original": {
            "question": "How many administrative territorial entities are located by Los Lagos Region",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P131 wd:Q2178 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub located in the administrative territorial entity Los Lagos Region }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Los Lagos Region",
            "choppedEntity": "Q2178"
        }
    },
    {
        "chopped": {
            "question": "Name the publisher of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P98 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown editor ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Name the publisher of Playboy",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q150820 wdt:P98 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Playboy editor ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Playboy",
            "choppedEntity": "Q150820"
        }
    },
    {
        "chopped": {
            "question": "Title the distributer of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P98 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown editor ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Title the distributer of Playboy",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q150820 wdt:P98 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Playboy editor ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Playboy",
            "choppedEntity": "Q150820"
        }
    },
    {
        "chopped": {
            "question": "In what country is ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P17 ?s . ?s ps:P17 ?ans1 . ?s pq:P518 wd:Q126125 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country ?s . ?s country ?ans1 . ?s applies to part Saint Martin (French part) }"
        },
        "original": {
            "question": "In what country is Saint Martin",
            "query": "SELECT ?obj WHERE { wd:Q25596 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P518 wd:Q126125 }",
            "NLQuery": "SELECT ?obj WHERE { Saint Martin country ?s . ?s country ?obj . ?s applies to part Saint Martin (French part) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Saint Martin",
            "choppedEntity": "Q25596"
        }
    },
    {
        "chopped": {
            "question": "What is the name of the capital city of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P36 ?obj . ?obj wdt:P31 wd:Q515 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown capital ?obj . ?obj instance of city } "
        },
        "original": {
            "question": "What is the name of the capital city of South Australia",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q35715 wdt:P36 ?obj . ?obj wdt:P31 wd:Q515 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { South Australia capital ?obj . ?obj instance of city } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "South Australia",
            "choppedEntity": "Q35715"
        }
    },
    {
        "chopped": {
            "question": "What is the title of the capital city of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P36 ?obj . ?obj wdt:P31 wd:Q515 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown capital ?obj . ?obj instance of city } "
        },
        "original": {
            "question": "What is the title of the capital city of South Australia",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q35715 wdt:P36 ?obj . ?obj wdt:P31 wd:Q515 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { South Australia capital ?obj . ?obj instance of city } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "South Australia",
            "choppedEntity": "Q35715"
        }
    },
    {
        "chopped": {
            "question": "Which is the FISA rower ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2091 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown World Rowing ID (numeric format) ?ans1}"
        },
        "original": {
            "question": "Which is the FISA rower ID for Steve Redgrave",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q52679 wdt:P2091 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Steve Redgrave World Rowing ID (numeric format) ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Steve Redgrave",
            "choppedEntity": "Q52679"
        }
    },
    {
        "chopped": {
            "question": "Was Roman Empire followed by ",
            "query": "ASK WHERE { ?unknown wdt:P156 wd:Q42834 }",
            "NLQuery": "ASK WHERE { ?unknown followed by Western Roman Empire (395-476 AD) }"
        },
        "original": {
            "question": "Was Roman Empire followed by Western Roman Empire",
            "query": "ASK WHERE { wd:Q2277 wdt:P156 wd:Q42834 }",
            "NLQuery": "ASK WHERE { Roman Empire followed by Western Roman Empire (395-476 AD) }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Western Roman Empire",
            "choppedEntity": "Q2277"
        }
    },
    {
        "chopped": {
            "question": "Was Roman Empire followed by ",
            "query": "ASK WHERE { wd:Q2277 wdt:P156 ?unknown }",
            "NLQuery": "ASK WHERE { Roman Empire followed by ?unknown }"
        },
        "original": {
            "question": "Was Roman Empire followed by Western Roman Empire",
            "query": "ASK WHERE { wd:Q2277 wdt:P156 wd:Q42834 }",
            "NLQuery": "ASK WHERE { Roman Empire followed by Western Roman Empire (395-476 AD) }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Western Roman Empire",
            "choppedEntity": "Q42834"
        }
    },
    {
        "chopped": {
            "question": "Is it a fact that the Roman Empire was followed by ",
            "query": "ASK WHERE { ?unknown wdt:P156 wd:Q42834 }",
            "NLQuery": "ASK WHERE { ?unknown followed by Western Roman Empire (395-476 AD) }"
        },
        "original": {
            "question": "Is it a fact that the Roman Empire was followed by Western Roman Empire",
            "query": "ASK WHERE { wd:Q2277 wdt:P156 wd:Q42834 }",
            "NLQuery": "ASK WHERE { Roman Empire followed by Western Roman Empire (395-476 AD) }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Western Roman Empire",
            "choppedEntity": "Q2277"
        }
    },
    {
        "chopped": {
            "question": "Is it a fact that the Roman Empire was followed by ",
            "query": "ASK WHERE { wd:Q2277 wdt:P156 ?unknown }",
            "NLQuery": "ASK WHERE { Roman Empire followed by ?unknown }"
        },
        "original": {
            "question": "Is it a fact that the Roman Empire was followed by Western Roman Empire",
            "query": "ASK WHERE { wd:Q2277 wdt:P156 wd:Q42834 }",
            "NLQuery": "ASK WHERE { Roman Empire followed by Western Roman Empire (395-476 AD) }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Western Roman Empire",
            "choppedEntity": "Q42834"
        }
    },
    {
        "chopped": {
            "question": "Who is the spouse of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1945')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),'1945')) }"
        },
        "original": {
            "question": "Who is the spouse of Cary Grant",
            "query": "SELECT ?obj WHERE { wd:Q83410 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1945')) }",
            "NLQuery": "SELECT ?obj WHERE { Cary Grant spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1945')) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Cary Grant",
            "choppedEntity": "Q83410"
        }
    },
    {
        "chopped": {
            "question": "Is the first name of Katrina Kaif similar to ",
            "query": "SELECT ?ans1 WHERE { wd:Q9550 wdt:P735 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Katrina Kaif given name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "Is the first name of Katrina Kaif similar to Kathrine",
            "query": "SELECT ?answer WHERE { wd:Q9550 wdt:P735 ?answer . ?answer wdt:P460 wd:Q27229814}",
            "NLQuery": "SELECT ?answer WHERE { Katrina Kaif given name ?answer . ?answer said to be the same as Kathrine}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Kathrine",
            "choppedEntity": "Q27229814"
        }
    },
    {
        "chopped": {
            "question": "What is the location of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P276 ?unknown . ?sbj wdt:P31 wd:Q44539 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj location ?unknown . ?sbj instance of temple } "
        },
        "original": {
            "question": "What is the location of the Acropolis of Athens",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P276 wd:Q131013 . ?sbj wdt:P31 wd:Q44539 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj location Acropolis of Athens . ?sbj instance of temple } "
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Acropolis of Athens",
            "choppedEntity": "Q131013"
        }
    },
    {
        "chopped": {
            "question": "Is 58 the total beats per minute of the ",
            "query": "ASK WHERE { ?unknown wdt:P1725 ?obj FILTER(?obj = 58) } ",
            "NLQuery": "ASK WHERE { ?unknown beats per minute ?obj FILTER(?obj = 58) } "
        },
        "original": {
            "question": "Is 58 the total beats per minute of the Calmant",
            "query": "ASK WHERE { wd:Q54878648 wdt:P1725 ?obj FILTER(?obj = 58) } ",
            "NLQuery": "ASK WHERE { Calmant beats per minute ?obj FILTER(?obj = 58) } "
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Calmant",
            "choppedEntity": "Q54878648"
        }
    },
    {
        "chopped": {
            "question": "When did R. T. Rybak stop being the head of government for ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P6 ?s . ?s ps:P6 wd:Q665300 . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown head of government ?s . ?s head of government R. T. Rybak . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did R. T. Rybak stop being the head of government for Minneapolis",
            "query": "SELECT ?value WHERE { wd:Q36091 p:P6 ?s . ?s ps:P6 wd:Q665300 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Minneapolis head of government ?s . ?s head of government R. T. Rybak . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Minneapolis",
            "choppedEntity": "Q36091"
        }
    },
    {
        "chopped": {
            "question": "Who are the diplomats of the region of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P131 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in the administrative territorial entity ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "Who are the diplomats of the region of Michoacan",
            "query": "SELECT ?answer WHERE { wd:Q79861 wdt:P131 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Michoac\u00e1n located in the administrative territorial entity ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Michoacan",
            "choppedEntity": "Q79861"
        }
    },
    {
        "chopped": {
            "question": "Who are the official diplomats of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P131 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in the administrative territorial entity ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "Who are the official diplomats of Michoacan",
            "query": "SELECT ?answer WHERE { wd:Q79861 wdt:P131 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Michoac\u00e1n located in the administrative territorial entity ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Michoacan",
            "choppedEntity": "Q79861"
        }
    },
    {
        "chopped": {
            "question": "What is the index of ",
            "query": "ASK WHERE { ?unknown wdt:P1081 ?obj FILTER(?obj < 0.404) } ",
            "NLQuery": "ASK WHERE { ?unknown Human Development Index ?obj FILTER(?obj < 0.404) } "
        },
        "original": {
            "question": "What is the index of the Solomon Islands",
            "query": "ASK WHERE { wd:Q685 wdt:P1081 ?obj FILTER(?obj < 0.404) } ",
            "NLQuery": "ASK WHERE { Solomon Islands Human Development Index ?obj FILTER(?obj < 0.404) } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Solomon Islands",
            "choppedEntity": "Q685"
        }
    },
    {
        "chopped": {
            "question": "What's the SecondHandSongs song ID of the song ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2908 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown SecondHandSongs work ID ?ans1}"
        },
        "original": {
            "question": "What's the SecondHandSongs song ID of the song Johnny B. Goode",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q931481 wdt:P2908 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Johnny B. Goode SecondHandSongs work ID ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Johnny B. Goode",
            "choppedEntity": "Q931481"
        }
    },
    {
        "chopped": {
            "question": "What is the Scottish charity number at ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3163 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Scottish Charity number ?ans1}"
        },
        "original": {
            "question": "What is the Scottish charity number at the University of Edinburgh",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q160302 wdt:P3163 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { University of Edinburgh Scottish Charity number ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the University of Edinburgh",
            "choppedEntity": "Q160302"
        }
    },
    {
        "chopped": {
            "question": "Which is the mouth of the watercourse of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P403 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 mouth of the watercourse ?unknown}"
        },
        "original": {
            "question": "Which is the mouth of the watercourse of Lake Superior",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P403 wd:Q1066}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer mouth of the watercourse Lake Superior}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Lake Superior",
            "choppedEntity": "Q1066"
        }
    },
    {
        "chopped": {
            "question": "What position did Theodore Roosevelt hold after ",
            "query": "SELECT ?ans1 WHERE { wd:Q33866 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1365 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Theodore Roosevelt position held ?s . ?s position held ?ans1 . ?s replaces ?unknown }"
        },
        "original": {
            "question": "What position did Theodore Roosevelt hold after William McKinley",
            "query": "SELECT ?obj WHERE { wd:Q33866 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q35041 }",
            "NLQuery": "SELECT ?obj WHERE { Theodore Roosevelt position held ?s . ?s position held ?obj . ?s replaces William McKinley }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "William McKinley",
            "choppedEntity": "Q35041"
        }
    },
    {
        "chopped": {
            "question": "What role did Theodore Roosevelt occupy after ",
            "query": "SELECT ?ans1 WHERE { wd:Q33866 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1365 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Theodore Roosevelt position held ?s . ?s position held ?ans1 . ?s replaces ?unknown }"
        },
        "original": {
            "question": "What role did Theodore Roosevelt occupy after William McKinley",
            "query": "SELECT ?obj WHERE { wd:Q33866 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q35041 }",
            "NLQuery": "SELECT ?obj WHERE { Theodore Roosevelt position held ?s . ?s position held ?obj . ?s replaces William McKinley }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "William McKinley",
            "choppedEntity": "Q35041"
        }
    },
    {
        "chopped": {
            "question": "With an abbreviation of \u0410\u044f\u043b, what is the biological sex of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P21 ?ans1 . ?ans1 wdt:P1813 ?x FILTER(contains(?x,'\u0410\u044f\u043b'))}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown sex or gender ?ans1 . ?ans1 short name ?x FILTER(contains(?x,'\u0410\u044f\u043b'))}"
        },
        "original": {
            "question": "With an abbreviation of \u0410\u044f\u043b, what is the biological sex of Sally Field",
            "query": "SELECT ?answer WHERE { wd:Q187033 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'\u0410\u044f\u043b'))}",
            "NLQuery": "SELECT ?answer WHERE { Sally Field sex or gender ?answer . ?answer short name ?x FILTER(contains(?x,'\u0410\u044f\u043b'))}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Sally Field",
            "choppedEntity": "Q187033"
        }
    },
    {
        "chopped": {
            "question": "For what position was Elihu Root replaced by ",
            "query": "SELECT ?ans1 WHERE { wd:Q220619 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1365 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Elihu Root position held ?s . ?s position held ?ans1 . ?s replaces ?unknown }"
        },
        "original": {
            "question": "For what position was Elihu Root replaced by Russell Alexander Alger",
            "query": "SELECT ?obj WHERE { wd:Q220619 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q880655 }",
            "NLQuery": "SELECT ?obj WHERE { Elihu Root position held ?s . ?s position held ?obj . ?s replaces Russell Alexander Alger }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Russell Alexander Alger",
            "choppedEntity": "Q880655"
        }
    },
    {
        "chopped": {
            "question": "What is the GenBank Assembly accession of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4333 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown GenBank Assembly accession ?ans1}"
        },
        "original": {
            "question": "What is the GenBank Assembly accession of the Peregrine Falcon",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q30535 wdt:P4333 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Peregrine Falcon GenBank Assembly accession ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "the Peregrine Falcon",
            "choppedEntity": "Q30535"
        }
    },
    {
        "chopped": {
            "question": "What is the Parliamentary record identifier of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2172 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Parliamentary record identifier ?ans1}"
        },
        "original": {
            "question": "What is the Parliamentary record identifier of Glenda Jackson",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q182408 wdt:P2172 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Glenda Jackson Parliamentary record identifier ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Glenda Jackson",
            "choppedEntity": "Q182408"
        }
    },
    {
        "chopped": {
            "question": "What colours are of the head office location of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P159 ?X . ?X wdt:P462 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown headquarters location ?X . ?X color ?ans1}"
        },
        "original": {
            "question": "What colours are of the head office location of BBC World News",
            "query": "SELECT ?answer WHERE { wd:Q208491 wdt:P159 ?X . ?X wdt:P462 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { BBC World News headquarters location ?X . ?X color ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "BBC World News",
            "choppedEntity": "Q208491"
        }
    },
    {
        "chopped": {
            "question": "What colours are of the head office area of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P159 ?X . ?X wdt:P462 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown headquarters location ?X . ?X color ?ans1}"
        },
        "original": {
            "question": "What colours are of the head office area of BBC World News",
            "query": "SELECT ?answer WHERE { wd:Q208491 wdt:P159 ?X . ?X wdt:P462 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { BBC World News headquarters location ?X . ?X color ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "BBC World News",
            "choppedEntity": "Q208491"
        }
    },
    {
        "chopped": {
            "question": "What is Hokkaido University's series ordinal under chairperson ",
            "query": "SELECT ?ans1 WHERE { wd:Q1057199 p:P488 ?s . ?s ps:P488 ?unknown . ?s pq:P1545 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Hokkaido University chairperson ?s . ?s chairperson ?unknown . ?s series ordinal ?ans1}"
        },
        "original": {
            "question": "What is Hokkaido University's series ordinal under chairperson Toyoharu Nawa",
            "query": "SELECT ?value WHERE { wd:Q1057199 p:P488 ?s . ?s ps:P488 wd:Q47536230 . ?s pq:P1545 ?value}",
            "NLQuery": "SELECT ?value WHERE { Hokkaido University chairperson ?s . ?s chairperson Toyoharu Nawa . ?s series ordinal ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Toyoharu Nawa",
            "choppedEntity": "Q47536230"
        }
    },
    {
        "chopped": {
            "question": "What is the ordinal of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P488 ?s . ?s ps:P488 wd:Q47536230 . ?s pq:P1545 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown chairperson ?s . ?s chairperson Toyoharu Nawa . ?s series ordinal ?ans1}"
        },
        "original": {
            "question": "What is the ordinal of Hokkaido University",
            "query": "SELECT ?value WHERE { wd:Q1057199 p:P488 ?s . ?s ps:P488 wd:Q47536230 . ?s pq:P1545 ?value}",
            "NLQuery": "SELECT ?value WHERE { Hokkaido University chairperson ?s . ?s chairperson Toyoharu Nawa . ?s series ordinal ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Hokkaido University",
            "choppedEntity": "Q1057199"
        }
    },
    {
        "chopped": {
            "question": "Which is the translation for illustrator ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P110 ?unknown . ?sbj wdt:P31 wd:Q3331189 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj illustrator ?unknown . ?sbj instance of version, edition, or translation } "
        },
        "original": {
            "question": "Which is the translation for illustrator Beatrix Potter",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P110 wd:Q214565 . ?sbj wdt:P31 wd:Q3331189 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj illustrator Beatrix Potter . ?sbj instance of version, edition, or translation } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Beatrix Potter",
            "choppedEntity": "Q214565"
        }
    },
    {
        "chopped": {
            "question": "How many space experts support ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P463 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown member of ?obj }"
        },
        "original": {
            "question": "How many space experts support Neil Armstrong",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q1615 wdt:P463 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Neil Armstrong member of ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Neil Armstrong",
            "choppedEntity": "Q1615"
        }
    },
    {
        "chopped": {
            "question": "What degree did Denzel Washington get at ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q42101 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P812 ?ans1 . ?s pq:P512 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Denzel Washington educated at ?s . ?s educated at ?unknown . ?s academic major ?ans1 . ?s academic degree ?ans2 }"
        },
        "original": {
            "question": "What degree did Denzel Washington get at Fordham University",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q42101 p:P69 ?s . ?s ps:P69 wd:Q130965 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Denzel Washington educated at ?s . ?s educated at Fordham University . ?s academic major ?value1 . ?s academic degree ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Fordham University",
            "choppedEntity": "Q130965"
        }
    },
    {
        "chopped": {
            "question": "Whose incarnation was Voltaire according to ",
            "query": "SELECT ?ans1 WHERE { wd:Q9068 p:P3701 ?s . ?s ps:P3701 ?ans1 . ?s pq:P3680 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Voltaire incarnation of ?s . ?s incarnation of ?ans1 . ?s statement supported by ?unknown }"
        },
        "original": {
            "question": "Whose incarnation was Voltaire according to Jean-Baptiste Fiard",
            "query": "SELECT ?obj WHERE { wd:Q9068 p:P3701 ?s . ?s ps:P3701 ?obj . ?s pq:P3680 wd:Q29886576 }",
            "NLQuery": "SELECT ?obj WHERE { Voltaire incarnation of ?s . ?s incarnation of ?obj . ?s statement supported by Jean-Baptiste Fiard }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jean-Baptiste Fiard",
            "choppedEntity": "Q29886576"
        }
    },
    {
        "chopped": {
            "question": "whom did Voltaire incarnate according to ",
            "query": "SELECT ?ans1 WHERE { wd:Q9068 p:P3701 ?s . ?s ps:P3701 ?ans1 . ?s pq:P3680 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Voltaire incarnation of ?s . ?s incarnation of ?ans1 . ?s statement supported by ?unknown }"
        },
        "original": {
            "question": "whom did Voltaire incarnate according to Jean-Baptiste Fiard",
            "query": "SELECT ?obj WHERE { wd:Q9068 p:P3701 ?s . ?s ps:P3701 ?obj . ?s pq:P3680 wd:Q29886576 }",
            "NLQuery": "SELECT ?obj WHERE { Voltaire incarnation of ?s . ?s incarnation of ?obj . ?s statement supported by Jean-Baptiste Fiard }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jean-Baptiste Fiard",
            "choppedEntity": "Q29886576"
        }
    },
    {
        "chopped": {
            "question": "Which is the Y-DNA Haplogroup of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4426 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Y-DNA Haplogroup ?ans1}"
        },
        "original": {
            "question": "Which is the Y-DNA Haplogroup of Emmanuel Swedenborg",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q185832 wdt:P4426 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Emmanuel Swedenborg Y-DNA Haplogroup ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Emmanuel Swedenborg",
            "choppedEntity": "Q185832"
        }
    },
    {
        "chopped": {
            "question": "Was ABKCO Records the record label for ",
            "query": "ASK WHERE { ?unknown wdt:P264 wd:Q2819021 }",
            "NLQuery": "ASK WHERE { ?unknown record label ABKCO Records }"
        },
        "original": {
            "question": "Was ABKCO Records the record label for Mick Jagger",
            "query": "ASK WHERE { wd:Q128121 wdt:P264 wd:Q2819021 }",
            "NLQuery": "ASK WHERE { Mick Jagger record label ABKCO Records }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mick Jagger",
            "choppedEntity": "Q128121"
        }
    },
    {
        "chopped": {
            "question": "Was Mick Jagger on the record label ",
            "query": "ASK WHERE { wd:Q128121 wdt:P264 ?unknown }",
            "NLQuery": "ASK WHERE { Mick Jagger record label ?unknown }"
        },
        "original": {
            "question": "Was Mick Jagger on the record label ABKCO Records",
            "query": "ASK WHERE { wd:Q128121 wdt:P264 wd:Q2819021 }",
            "NLQuery": "ASK WHERE { Mick Jagger record label ABKCO Records }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "ABKCO Records",
            "choppedEntity": "Q2819021"
        }
    },
    {
        "chopped": {
            "question": "What is the parent organization of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P749 ?unknown . ?sbj wdt:P31 wd:Q210167 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj parent organization ?unknown . ?sbj instance of video game developer } "
        },
        "original": {
            "question": "What is the parent organization of Nintendo",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P749 wd:Q8093 . ?sbj wdt:P31 wd:Q210167 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj parent organization Nintendo . ?sbj instance of video game developer } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Nintendo",
            "choppedEntity": "Q8093"
        }
    },
    {
        "chopped": {
            "question": "Name the city in Netherlands twinned with ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q2039348 . ?ans1 wdt:P2297 ?obj . ?ans1 wdt:P190 ?unknown. } ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of municipality of the Netherlands . ?ans1 employment by economic sector ?obj . ?ans1 twinned administrative body ?unknown. } ORDER BY ASC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "Name the city in Netherlands twinned with Prague",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q2039348 . ?ent wdt:P2297 ?obj . ?ent wdt:P190 wd:Q1085. } ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of municipality of the Netherlands . ?ent employment by economic sector ?obj . ?ent twinned administrative body Prague. } ORDER BY ASC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Prague",
            "choppedEntity": "Q1085"
        }
    },
    {
        "chopped": {
            "question": "What is the name of the city in the Netherlands that is next to ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q2039348 . ?ans1 wdt:P2297 ?obj . ?ans1 wdt:P190 ?unknown. } ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of municipality of the Netherlands . ?ans1 employment by economic sector ?obj . ?ans1 twinned administrative body ?unknown. } ORDER BY ASC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the name of the city in the Netherlands that is next to Prague",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q2039348 . ?ent wdt:P2297 ?obj . ?ent wdt:P190 wd:Q1085. } ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of municipality of the Netherlands . ?ent employment by economic sector ?obj . ?ent twinned administrative body Prague. } ORDER BY ASC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Prague",
            "choppedEntity": "Q1085"
        }
    },
    {
        "chopped": {
            "question": "Who produced goods from ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P144 ?X . ?X wdt:P1056 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown based on ?X . ?X product or material produced ?ans1}"
        },
        "original": {
            "question": "Who produced goods from Ostankino",
            "query": "SELECT ?answer WHERE { wd:Q20643978 wdt:P144 ?X . ?X wdt:P1056 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Ostankino based on ?X . ?X product or material produced ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Ostankino",
            "choppedEntity": "Q20643978"
        }
    },
    {
        "chopped": {
            "question": "Which is the prerequisite of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4967 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown prerequisite ?ans1}"
        },
        "original": {
            "question": "Which is the prerequisite of a master's degree",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q183816 wdt:P4967 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { master's degree prerequisite ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "a master's degree",
            "choppedEntity": "Q183816"
        }
    },
    {
        "chopped": {
            "question": "What is the key event of the sovereign state of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P17 ?X . ?X wdt:P793 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country ?X . ?X significant event ?ans1}"
        },
        "original": {
            "question": "What is the key event of the sovereign state of C\u00e2lnic",
            "query": "SELECT ?answer WHERE { wd:Q510532 wdt:P17 ?X . ?X wdt:P793 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { C\u00e2lnic country ?X . ?X significant event ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "C\u00e2lnic",
            "choppedEntity": "Q510532"
        }
    },
    {
        "chopped": {
            "question": "What is the key occasion of the majestic state of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P17 ?X . ?X wdt:P793 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country ?X . ?X significant event ?ans1}"
        },
        "original": {
            "question": "What is the key occasion of the majestic state of C\u00e2lnic",
            "query": "SELECT ?answer WHERE { wd:Q510532 wdt:P17 ?X . ?X wdt:P793 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { C\u00e2lnic country ?X . ?X significant event ?answer}"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "C\u00e2lnic",
            "choppedEntity": "Q510532"
        }
    },
    {
        "chopped": {
            "question": "Which is MyAnimeList manga ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4087 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown MyAnimeList manga ID ?ans1}"
        },
        "original": {
            "question": "Which is MyAnimeList manga ID for Death Note",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1834 wdt:P4087 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Death Note MyAnimeList manga ID ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Death Note",
            "choppedEntity": "Q1834"
        }
    },
    {
        "chopped": {
            "question": "Did Led Zeppelin record with ",
            "query": "ASK WHERE { wd:Q2331 wdt:P264 ?unknown }",
            "NLQuery": "ASK WHERE { Led Zeppelin record label ?unknown }"
        },
        "original": {
            "question": "Did Led Zeppelin record with Stax",
            "query": "ASK WHERE { wd:Q2331 wdt:P264 wd:Q1546001 }",
            "NLQuery": "ASK WHERE { Led Zeppelin record label Stax }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Stax",
            "choppedEntity": "Q1546001"
        }
    },
    {
        "chopped": {
            "question": "Is it true that Did Led Zeppelin recorded with ",
            "query": "ASK WHERE { wd:Q2331 wdt:P264 ?unknown }",
            "NLQuery": "ASK WHERE { Led Zeppelin record label ?unknown }"
        },
        "original": {
            "question": "Is it true that Did Led Zeppelin recorded with Stax",
            "query": "ASK WHERE { wd:Q2331 wdt:P264 wd:Q1546001 }",
            "NLQuery": "ASK WHERE { Led Zeppelin record label Stax }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Stax",
            "choppedEntity": "Q1546001"
        }
    },
    {
        "chopped": {
            "question": "When did film for country of origin of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P495 ?unknown . ?sbj wdt:P31 wd:Q11424 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country of origin ?unknown . ?sbj instance of film } "
        },
        "original": {
            "question": "When did film for country of origin of Soviet Union",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P495 wd:Q15180 . ?sbj wdt:P31 wd:Q11424 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country of origin Soviet Union . ?sbj instance of film } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Soviet Union",
            "choppedEntity": "Q15180"
        }
    },
    {
        "chopped": {
            "question": "For what piece of work was Willie Nelson nominated to receive a Grammy Award for ",
            "query": "SELECT ?ans1 WHERE { wd:Q206112 p:P1411 ?s . ?s ps:P1411 ?unknown . ?s pq:P1686 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Willie Nelson nominated for ?s . ?s nominated for ?unknown . ?s for work ?ans1}"
        },
        "original": {
            "question": "For what piece of work was Willie Nelson nominated to receive a Grammy Award for Best Country Performance by a Duo or Group with Vocal",
            "query": "SELECT ?value WHERE { wd:Q206112 p:P1411 ?s . ?s ps:P1411 wd:Q5593784 . ?s pq:P1686 ?value}",
            "NLQuery": "SELECT ?value WHERE { Willie Nelson nominated for ?s . ?s nominated for Grammy Award for Best Country Performance by a Duo or Group with Vocal . ?s for work ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Best Country Performance by a Duo or Group with Vocal",
            "choppedEntity": "Q5593784"
        }
    },
    {
        "chopped": {
            "question": "What Willie Nelson song was nominated to win a Grammy Award for ",
            "query": "SELECT ?ans1 WHERE { wd:Q206112 p:P1411 ?s . ?s ps:P1411 ?unknown . ?s pq:P1686 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Willie Nelson nominated for ?s . ?s nominated for ?unknown . ?s for work ?ans1}"
        },
        "original": {
            "question": "What Willie Nelson song was nominated to win a Grammy Award for Best Country Performance by a Duo or Group with Vocal",
            "query": "SELECT ?value WHERE { wd:Q206112 p:P1411 ?s . ?s ps:P1411 wd:Q5593784 . ?s pq:P1686 ?value}",
            "NLQuery": "SELECT ?value WHERE { Willie Nelson nominated for ?s . ?s nominated for Grammy Award for Best Country Performance by a Duo or Group with Vocal . ?s for work ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Best Country Performance by a Duo or Group with Vocal",
            "choppedEntity": "Q5593784"
        }
    },
    {
        "chopped": {
            "question": "Who is the governor of the basin countries by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P205 ?X . ?X wdt:P6 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown basin country ?X . ?X head of government ?ans1}"
        },
        "original": {
            "question": "Who is the governor of the basin countries by Lake Tahoe",
            "query": "SELECT ?answer WHERE { wd:Q169962 wdt:P205 ?X . ?X wdt:P6 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Lake Tahoe basin country ?X . ?X head of government ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Lake Tahoe",
            "choppedEntity": "Q169962"
        }
    },
    {
        "chopped": {
            "question": "Who is the representative of the bowl nations by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P205 ?X . ?X wdt:P6 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown basin country ?X . ?X head of government ?ans1}"
        },
        "original": {
            "question": "Who is the representative of the bowl nations by Lake Tahoe",
            "query": "SELECT ?answer WHERE { wd:Q169962 wdt:P205 ?X . ?X wdt:P6 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Lake Tahoe basin country ?X . ?X head of government ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Lake Tahoe",
            "choppedEntity": "Q169962"
        }
    },
    {
        "chopped": {
            "question": "When was Nancy located in the time zone ",
            "query": "SELECT ?ans1 WHERE { wd:Q40898 p:P421 ?s . ?s ps:P421 ?unknown . ?s pq:P1264 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Nancy located in time zone ?s . ?s located in time zone ?unknown . ?s valid in period ?ans1}"
        },
        "original": {
            "question": "When was Nancy located in the time zone UTC+02:00",
            "query": "SELECT ?value WHERE { wd:Q40898 p:P421 ?s . ?s ps:P421 wd:Q6723 . ?s pq:P1264 ?value}",
            "NLQuery": "SELECT ?value WHERE { Nancy located in time zone ?s . ?s located in time zone UTC+02:00 . ?s valid in period ?value}"
        },
        "meta": {
            "entityTagNER": "TIME",
            "choppedText": "UTC+02:00",
            "choppedEntity": "Q6723"
        }
    },
    {
        "chopped": {
            "question": "Who was the previous first place at the 1991 ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P155 ?X . ?X wdt:P1346 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown follows ?X . ?X winner ?ans1}"
        },
        "original": {
            "question": "Who was the previous first place at the 1991 Mr. Olympia",
            "query": "SELECT ?answer WHERE { wd:Q15286320 wdt:P155 ?X . ?X wdt:P1346 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { 1991 Mr. Olympia follows ?X . ?X winner ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Mr. Olympia",
            "choppedEntity": "Q15286320"
        }
    },
    {
        "chopped": {
            "question": "What was Gregory Peck nominated for at the 18th ",
            "query": "SELECT ?ans1 WHERE { wd:Q108366 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Gregory Peck nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "What was Gregory Peck nominated for at the 18th Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q108366 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q917178 }",
            "NLQuery": "SELECT ?obj WHERE { Gregory Peck nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 18th Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q917178"
        }
    },
    {
        "chopped": {
            "question": "Which was the nomination that Gregory Peck got at the 18th ",
            "query": "SELECT ?ans1 WHERE { wd:Q108366 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Gregory Peck nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "Which was the nomination that Gregory Peck got at the 18th Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q108366 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q917178 }",
            "NLQuery": "SELECT ?obj WHERE { Gregory Peck nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 18th Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q917178"
        }
    },
    {
        "chopped": {
            "question": "What award was Philip Seymour Hoffman nominated for at the 80th ",
            "query": "SELECT ?ans1 WHERE { wd:Q180560 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Philip Seymour Hoffman nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "What award was Philip Seymour Hoffman nominated for at the 80th Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q180560 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q215132 }",
            "NLQuery": "SELECT ?obj WHERE { Philip Seymour Hoffman nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 80th Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q215132"
        }
    },
    {
        "chopped": {
            "question": "Is Anne Boleyn place of burial in ",
            "query": "ASK WHERE { wd:Q80823 wdt:P119 ?unknown }",
            "NLQuery": "ASK WHERE { Anne Boleyn place of burial ?unknown }"
        },
        "original": {
            "question": "Is Anne Boleyn place of burial in London",
            "query": "ASK WHERE { wd:Q80823 wdt:P119 wd:Q84 }",
            "NLQuery": "ASK WHERE { Anne Boleyn place of burial London }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "London",
            "choppedEntity": "Q84"
        }
    },
    {
        "chopped": {
            "question": "Is Anne Bolelyn buried in ",
            "query": "ASK WHERE { wd:Q80823 wdt:P119 ?unknown }",
            "NLQuery": "ASK WHERE { Anne Boleyn place of burial ?unknown }"
        },
        "original": {
            "question": "Is Anne Bolelyn buried in London",
            "query": "ASK WHERE { wd:Q80823 wdt:P119 wd:Q84 }",
            "NLQuery": "ASK WHERE { Anne Boleyn place of burial London }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "London",
            "choppedEntity": "Q84"
        }
    },
    {
        "chopped": {
            "question": "What is the child body of the star of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P397 ?X . ?X wdt:P398 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown parent astronomical body ?X . ?X child astronomical body ?ans1}"
        },
        "original": {
            "question": "What is the child body of the star of Sagittarius Dwarf Elliptical Galaxy",
            "query": "SELECT ?answer WHERE { wd:Q32885 wdt:P397 ?X . ?X wdt:P398 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Sagittarius Dwarf Elliptical Galaxy parent astronomical body ?X . ?X child astronomical body ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Sagittarius Dwarf Elliptical Galaxy",
            "choppedEntity": "Q32885"
        }
    },
    {
        "chopped": {
            "question": "How many leagues are there for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P118 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown league ?obj }"
        },
        "original": {
            "question": "How many leagues are there for Chelsea F.C.",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q9616 wdt:P118 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Chelsea F.C. league ?obj }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Chelsea F.C.",
            "choppedEntity": "Q9616"
        }
    },
    {
        "chopped": {
            "question": "What is the number of leagues for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P118 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown league ?obj }"
        },
        "original": {
            "question": "What is the number of leagues for Chelsea F.C.",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q9616 wdt:P118 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Chelsea F.C. league ?obj }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Chelsea F.C.",
            "choppedEntity": "Q9616"
        }
    },
    {
        "chopped": {
            "question": "Which is the biblical episode for the significant ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P3342 ?unknown . ?sbj wdt:P31 wd:Q22704077 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj significant person ?unknown . ?sbj instance of biblical episode } "
        },
        "original": {
            "question": "Which is the biblical episode for the significant Noah",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P3342 wd:Q81422 . ?sbj wdt:P31 wd:Q22704077 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj significant person Noah . ?sbj instance of biblical episode } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Noah",
            "choppedEntity": "Q81422"
        }
    },
    {
        "chopped": {
            "question": "What is a list of written works by ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1455 ?obj . ?obj wdt:P31 wd:Q1631107 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown list of works ?obj . ?obj instance of bibliography } "
        },
        "original": {
            "question": "What is a list of written works by Ray Bradbury",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q40640 wdt:P1455 ?obj . ?obj wdt:P31 wd:Q1631107 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Ray Bradbury list of works ?obj . ?obj instance of bibliography } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ray Bradbury",
            "choppedEntity": "Q40640"
        }
    },
    {
        "chopped": {
            "question": "Norbert Wiener died in which location in ",
            "query": "SELECT ?ans1 WHERE { wd:Q178577 p:P20 ?s . ?s ps:P20 ?ans1 . ?s pq:P17 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Norbert Wiener place of death ?s . ?s place of death ?ans1 . ?s country ?unknown }"
        },
        "original": {
            "question": "Norbert Wiener died in which location in Sweden",
            "query": "SELECT ?obj WHERE { wd:Q178577 p:P20 ?s . ?s ps:P20 ?obj . ?s pq:P17 wd:Q34 }",
            "NLQuery": "SELECT ?obj WHERE { Norbert Wiener place of death ?s . ?s place of death ?obj . ?s country Sweden }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Sweden",
            "choppedEntity": "Q34"
        }
    },
    {
        "chopped": {
            "question": "Who is the person which is the employer of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P108 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj employer ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who is the person which is the employer of CBS",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P108 wd:Q43380 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj employer CBS . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "CBS",
            "choppedEntity": "Q43380"
        }
    },
    {
        "chopped": {
            "question": "Who is the individual which is the boss of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P108 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj employer ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who is the individual which is the boss of CBS",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P108 wd:Q43380 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj employer CBS . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "CBS",
            "choppedEntity": "Q43380"
        }
    },
    {
        "chopped": {
            "question": "Which year did Richard Dawkins receive ",
            "query": "SELECT ?ans1 WHERE { wd:Q44461 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Richard Dawkins award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "Which year did Richard Dawkins receive the Silver Medal of the Zoological Society of London",
            "query": "SELECT ?value WHERE { wd:Q44461 p:P166 ?s . ?s ps:P166 wd:Q7516191 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Richard Dawkins award received ?s . ?s award received Silver Medal of the Zoological Society of London . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Silver Medal of the Zoological Society of London",
            "choppedEntity": "Q7516191"
        }
    },
    {
        "chopped": {
            "question": "Who is the most important character and who are the other characters of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P3342 ?ans1 . ?unknown wdt:P674 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown significant person ?ans1 . ?unknown characters ?ans2 }"
        },
        "original": {
            "question": "Who is the most important character and who are the other characters of Crucifixion of Jesus",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q51636 wdt:P3342 ?ans_1 . wd:Q51636 wdt:P674 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Crucifixion of Jesus significant person ?ans_1 . Crucifixion of Jesus characters ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Crucifixion of Jesus",
            "choppedEntity": "Q51636"
        }
    },
    {
        "chopped": {
            "question": "What is the ITA Women's Collegiate Tennis Hall of Fame identification of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4402 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Women's Collegiate Tennis Hall of Fame ID ?ans1}"
        },
        "original": {
            "question": "What is the ITA Women's Collegiate Tennis Hall of Fame identification of Billie Jean King",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q54527 wdt:P4402 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Billie Jean King Women's Collegiate Tennis Hall of Fame ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Billie Jean King",
            "choppedEntity": "Q54527"
        }
    },
    {
        "chopped": {
            "question": "What is the hereditary title of Salman from ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P97 ?obj . ?obj wdt:P31 wd:Q5737899 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown noble title ?obj . ?obj instance of hereditary title } "
        },
        "original": {
            "question": "What is the hereditary title of Salman from Saudi Arabia",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q367825 wdt:P97 ?obj . ?obj wdt:P31 wd:Q5737899 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Salman of Saudi Arabia noble title ?obj . ?obj instance of hereditary title } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Saudi Arabia",
            "choppedEntity": "Q367825"
        }
    },
    {
        "chopped": {
            "question": "When was the Eisenmann Medal received by ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 wd:Q5349948 . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received Eisenmann Medal . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was the Eisenmann Medal received by Ernst Mayr",
            "query": "SELECT ?value WHERE { wd:Q5354 p:P166 ?s . ?s ps:P166 wd:Q5349948 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ernst Mayr award received ?s . ?s award received Eisenmann Medal . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ernst Mayr",
            "choppedEntity": "Q5354"
        }
    },
    {
        "chopped": {
            "question": "Which award was Jay Blackton short-listed for in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P2453 wd:Q3807499 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown nominated for ?s . ?s nominated for ?ans1 . ?s nominee Jay Blackton }"
        },
        "original": {
            "question": "Which award was Jay Blackton short-listed for in Oklahoma",
            "query": "SELECT ?obj WHERE { wd:Q2017333 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P2453 wd:Q3807499 }",
            "NLQuery": "SELECT ?obj WHERE { Oklahoma! nominated for ?s . ?s nominated for ?obj . ?s nominee Jay Blackton }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Oklahoma",
            "choppedEntity": "Q2017333"
        }
    },
    {
        "chopped": {
            "question": "Who is the actress in the narrative of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1441 ?X . ?X wdt:P161 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown present in work ?X . ?X cast member ?ans1}"
        },
        "original": {
            "question": "Who is the actress in the narrative of Moses",
            "query": "SELECT ?answer WHERE { wd:Q9077 wdt:P1441 ?X . ?X wdt:P161 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Moses present in work ?X . ?X cast member ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Moses",
            "choppedEntity": "Q9077"
        }
    },
    {
        "chopped": {
            "question": "Who is the on-screen character within the account of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1441 ?X . ?X wdt:P161 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown present in work ?X . ?X cast member ?ans1}"
        },
        "original": {
            "question": "Who is the on-screen character within the account of Moses",
            "query": "SELECT ?answer WHERE { wd:Q9077 wdt:P1441 ?X . ?X wdt:P161 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Moses present in work ?X . ?X cast member ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Moses",
            "choppedEntity": "Q9077"
        }
    },
    {
        "chopped": {
            "question": "Tell me the lethal dose of ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q221696 . ?ans1 wdt:P2240 ?obj . ?ans1 wdt:P31 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of mutagen . ?ans1 median lethal dose (LD50) ?obj . ?ans1 instance of ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "Tell me the lethal dose of Ketone",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q221696 . ?ent wdt:P2240 ?obj . ?ent wdt:P31 wd:Q170744 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of mutagen . ?ent median lethal dose (LD50) ?obj . ?ent instance of ketone } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Ketone",
            "choppedEntity": "Q170744"
        }
    },
    {
        "chopped": {
            "question": "How many director are for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P57 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown director ?obj }"
        },
        "original": {
            "question": "How many director are for The Wizard of Oz",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q193695 wdt:P57 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { The Wizard of Oz director ?obj }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Wizard of Oz",
            "choppedEntity": "Q193695"
        }
    },
    {
        "chopped": {
            "question": "How many people directed ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P57 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown director ?obj }"
        },
        "original": {
            "question": "How many people directed The Wizard of Oz",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q193695 wdt:P57 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { The Wizard of Oz director ?obj }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Wizard of Oz",
            "choppedEntity": "Q193695"
        }
    },
    {
        "chopped": {
            "question": "What is the manner and place of death of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P1196 ?ans1 . ?unknown wdt:P20 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown manner of death ?ans1 . ?unknown place of death ?ans2 }"
        },
        "original": {
            "question": "What is the manner and place of death of Dave Mirra",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q3017223 wdt:P1196 ?ans_1 . wd:Q3017223 wdt:P20 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Dave Mirra manner of death ?ans_1 . Dave Mirra place of death ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Dave Mirra",
            "choppedEntity": "Q3017223"
        }
    },
    {
        "chopped": {
            "question": "What is the tournament with the highest number of matches played whose participant is ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q500834 . ?ans1 wdt:P1350 ?obj . ?ans1 wdt:P710 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of tournament . ?ans1 number of matches played/races/starts ?obj . ?ans1 participant ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the tournament with the highest number of matches played whose participant is Hawthorn Football Club",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q500834 . ?ent wdt:P1350 ?obj . ?ent wdt:P710 wd:Q1034556 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of tournament . ?ent number of matches played/races/starts ?obj . ?ent participant Hawthorn Football Club } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Hawthorn Football Club",
            "choppedEntity": "Q1034556"
        }
    },
    {
        "chopped": {
            "question": "How many writing systems are there for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P282 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown writing system ?obj }"
        },
        "original": {
            "question": "How many writing systems are there for Tagalog",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q34057 wdt:P282 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Tagalog writing system ?obj }"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Tagalog",
            "choppedEntity": "Q34057"
        }
    },
    {
        "chopped": {
            "question": "Which is the epic poem that is present in the work of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1441 ?obj . ?obj wdt:P31 wd:Q37484 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown present in work ?obj . ?obj instance of epic poem } "
        },
        "original": {
            "question": "Which is the epic poem that is present in the work of Hermes",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q41484 wdt:P1441 ?obj . ?obj wdt:P31 wd:Q37484 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Hermes present in work ?obj . ?obj instance of epic poem } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Hermes",
            "choppedEntity": "Q41484"
        }
    },
    {
        "chopped": {
            "question": "Which epic poem is present in the work of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1441 ?obj . ?obj wdt:P31 wd:Q37484 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown present in work ?obj . ?obj instance of epic poem } "
        },
        "original": {
            "question": "Which epic poem is present in the work of Hermes",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q41484 wdt:P1441 ?obj . ?obj wdt:P31 wd:Q37484 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Hermes present in work ?obj . ?obj instance of epic poem } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Hermes",
            "choppedEntity": "Q41484"
        }
    },
    {
        "chopped": {
            "question": "Who is on the committee of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3320 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown board member ?ans1}"
        },
        "original": {
            "question": "Who is on the committee of the Free Software Foundation",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q48413 wdt:P3320 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Free Software Foundation board member ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Free Software Foundation",
            "choppedEntity": "Q48413"
        }
    },
    {
        "chopped": {
            "question": "What is the start time of Pete Maravich educated at ",
            "query": "SELECT ?ans1 WHERE { wd:Q316183 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Pete Maravich educated at ?s . ?s educated at ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "What is the start time of Pete Maravich educated at Louisiana State University",
            "query": "SELECT ?value WHERE { wd:Q316183 p:P69 ?s . ?s ps:P69 wd:Q1521725 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Pete Maravich educated at ?s . ?s educated at Louisiana State University . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Louisiana State University",
            "choppedEntity": "Q1521725"
        }
    },
    {
        "chopped": {
            "question": "When did Pete Maravich study at ",
            "query": "SELECT ?ans1 WHERE { wd:Q316183 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Pete Maravich educated at ?s . ?s educated at ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Pete Maravich study at Louisiana State University",
            "query": "SELECT ?value WHERE { wd:Q316183 p:P69 ?s . ?s ps:P69 wd:Q1521725 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Pete Maravich educated at ?s . ?s educated at Louisiana State University . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Louisiana State University",
            "choppedEntity": "Q1521725"
        }
    },
    {
        "chopped": {
            "question": "What is the Brazilian municipality code for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1585 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Brazilian municipality code ?ans1}"
        },
        "original": {
            "question": "What is the Brazilian municipality code for Rio Branco",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q171612 wdt:P1585 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Rio Branco Brazilian municipality code ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Rio Branco",
            "choppedEntity": "Q171612"
        }
    },
    {
        "chopped": {
            "question": "Which business has its headquarters located in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P159 ?unknown . ?sbj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj headquarters location ?unknown . ?sbj instance of business } "
        },
        "original": {
            "question": "Which business has its headquarters located in Aachen",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P159 wd:Q1017 . ?sbj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj headquarters location Aachen . ?sbj instance of business } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Aachen",
            "choppedEntity": "Q1017"
        }
    },
    {
        "chopped": {
            "question": "Which is the cadastre commissioned by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P88 ?unknown . ?sbj wdt:P31 wd:Q191072 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj commissioned by ?unknown . ?sbj instance of cadastre } "
        },
        "original": {
            "question": "Which is the cadastre commissioned by William the Conqueror",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P88 wd:Q37594 . ?sbj wdt:P31 wd:Q191072 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj commissioned by William the Conqueror . ?sbj instance of cadastre } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "William the Conqueror",
            "choppedEntity": "Q37594"
        }
    },
    {
        "chopped": {
            "question": "How many were founded by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P112 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub founded by ?unknown }"
        },
        "original": {
            "question": "How many were founded by the Soviet Union",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P112 wd:Q15180 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub founded by Soviet Union }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Soviet Union",
            "choppedEntity": "Q15180"
        }
    },
    {
        "chopped": {
            "question": "Which aerial bomb was produced by ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1056 ?obj . ?obj wdt:P31 wd:Q1137468 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown product or material produced ?obj . ?obj instance of aerial bomb } "
        },
        "original": {
            "question": "Which aerial bomb was produced by the Manhattan Project",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q127050 wdt:P1056 ?obj . ?obj wdt:P31 wd:Q1137468 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Manhattan Project product or material produced ?obj . ?obj instance of aerial bomb } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Manhattan Project",
            "choppedEntity": "Q127050"
        }
    },
    {
        "chopped": {
            "question": "What is the publication date for ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P577 ?s . ?s ps:P577 ?ans1 . ?s pq:P518 wd:Q8274 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown date of publication ?s . ?s date of publication ?ans1 . ?s applies to part manga }"
        },
        "original": {
            "question": "What is the publication date for Cowboy Bebop",
            "query": "SELECT ?obj WHERE { wd:Q232246 p:P577 ?s . ?s ps:P577 ?obj . ?s pq:P518 wd:Q8274 }",
            "NLQuery": "SELECT ?obj WHERE { Cowboy Bebop date of publication ?s . ?s date of publication ?obj . ?s applies to part manga }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Cowboy Bebop",
            "choppedEntity": "Q232246"
        }
    },
    {
        "chopped": {
            "question": "What is nominated for Roberto Benigni at 71st ",
            "query": "SELECT ?ans1 WHERE { wd:Q23301 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Roberto Benigni nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "What is nominated for Roberto Benigni at 71st Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q23301 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q263239 }",
            "NLQuery": "SELECT ?obj WHERE { Roberto Benigni nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 71st Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q263239"
        }
    },
    {
        "chopped": {
            "question": "What was Roberto Benigni nominated for at the 71st ",
            "query": "SELECT ?ans1 WHERE { wd:Q23301 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Roberto Benigni nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "What was Roberto Benigni nominated for at the 71st Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q23301 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q263239 }",
            "NLQuery": "SELECT ?obj WHERE { Roberto Benigni nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 71st Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q263239"
        }
    },
    {
        "chopped": {
            "question": "which is the start time for malcolm marshall has member of sports team as ",
            "query": "SELECT ?ans1 WHERE { wd:Q743209 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Malcolm Marshall member of sports team ?s . ?s member of sports team ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "which is the start time for malcolm marshall has member of sports team as marylebone cricket club",
            "query": "SELECT ?value WHERE { wd:Q743209 p:P54 ?s . ?s ps:P54 wd:Q585149 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Malcolm Marshall member of sports team ?s . ?s member of sports team Marylebone Cricket Club . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "marylebone cricket club",
            "choppedEntity": "Q585149"
        }
    },
    {
        "chopped": {
            "question": "When did Malcolm Marshall join ",
            "query": "SELECT ?ans1 WHERE { wd:Q743209 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Malcolm Marshall member of sports team ?s . ?s member of sports team ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Malcolm Marshall join Marylebone Cricket Club",
            "query": "SELECT ?value WHERE { wd:Q743209 p:P54 ?s . ?s ps:P54 wd:Q585149 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Malcolm Marshall member of sports team ?s . ?s member of sports team Marylebone Cricket Club . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Marylebone Cricket Club",
            "choppedEntity": "Q585149"
        }
    },
    {
        "chopped": {
            "question": "Which is the AllMovie artist ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2019 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown AllMovie person ID ?ans1}"
        },
        "original": {
            "question": "Which is the AllMovie artist ID for Claudio Arrau",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q160223 wdt:P2019 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Claudio Arrau AllMovie person ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Claudio Arrau",
            "choppedEntity": "Q160223"
        }
    },
    {
        "chopped": {
            "question": "Is there one Strahler number of ",
            "query": "ASK WHERE { ?unknown wdt:P1548 ?obj FILTER(?obj = 1) } ",
            "NLQuery": "ASK WHERE { ?unknown maximum Strahler number ?obj FILTER(?obj = 1) } "
        },
        "original": {
            "question": "Is there one Strahler number of the Stony Run",
            "query": "ASK WHERE { wd:Q18180791 wdt:P1548 ?obj FILTER(?obj = 1) } ",
            "NLQuery": "ASK WHERE { Stony Run maximum Strahler number ?obj FILTER(?obj = 1) } "
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "the Stony Run",
            "choppedEntity": "Q18180791"
        }
    },
    {
        "chopped": {
            "question": "What is the timezone of the citizen of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P27 ?X . ?X wdt:P421 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country of citizenship ?X . ?X located in time zone ?ans1}"
        },
        "original": {
            "question": "What is the timezone of the citizen of Erskine Caldwell",
            "query": "SELECT ?answer WHERE { wd:Q310464 wdt:P27 ?X . ?X wdt:P421 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Erskine Caldwell country of citizenship ?X . ?X located in time zone ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Erskine Caldwell",
            "choppedEntity": "Q310464"
        }
    },
    {
        "chopped": {
            "question": "was Priyanka chopra's relative ",
            "query": "ASK WHERE { wd:Q158957 wdt:P1038 ?unknown }",
            "NLQuery": "ASK WHERE { Priyanka Chopra relative ?unknown }"
        },
        "original": {
            "question": "was Priyanka chopra's relative kevin Jonas",
            "query": "ASK WHERE { wd:Q158957 wdt:P1038 wd:Q210172 }",
            "NLQuery": "ASK WHERE { Priyanka Chopra relative Kevin Jonas }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "kevin Jonas",
            "choppedEntity": "Q210172"
        }
    },
    {
        "chopped": {
            "question": "When did Arthur Beetson become a member of the sports team ",
            "query": "SELECT ?ans1 WHERE { wd:Q2864988 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Arthur Beetson member of sports team ?s . ?s member of sports team ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Arthur Beetson become a member of the sports team the Sydney Roosters",
            "query": "SELECT ?value WHERE { wd:Q2864988 p:P54 ?s . ?s ps:P54 wd:Q2573367 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Arthur Beetson member of sports team ?s . ?s member of sports team Sydney Roosters . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Sydney Roosters",
            "choppedEntity": "Q2573367"
        }
    },
    {
        "chopped": {
            "question": "When did Arthur Beetson join ",
            "query": "SELECT ?ans1 WHERE { wd:Q2864988 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Arthur Beetson member of sports team ?s . ?s member of sports team ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Arthur Beetson join the Sydney Roosters",
            "query": "SELECT ?value WHERE { wd:Q2864988 p:P54 ?s . ?s ps:P54 wd:Q2573367 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Arthur Beetson member of sports team ?s . ?s member of sports team Sydney Roosters . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Sydney Roosters",
            "choppedEntity": "Q2573367"
        }
    },
    {
        "chopped": {
            "question": "Which is the specialty that is studied by ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P2579 ?obj . ?obj wdt:P31 wd:Q1047113 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown studied by ?obj . ?obj instance of specialty } "
        },
        "original": {
            "question": "Which is the specialty that is studied by Nubia",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q135028 wdt:P2579 ?obj . ?obj wdt:P31 wd:Q1047113 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Nubia studied by ?obj . ?obj instance of specialty } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Nubia",
            "choppedEntity": "Q135028"
        }
    },
    {
        "chopped": {
            "question": "Which is the strength that's considered by ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P2579 ?obj . ?obj wdt:P31 wd:Q1047113 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown studied by ?obj . ?obj instance of specialty } "
        },
        "original": {
            "question": "Which is the strength that's considered by Nubia",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q135028 wdt:P2579 ?obj . ?obj wdt:P31 wd:Q1047113 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Nubia studied by ?obj . ?obj instance of specialty } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Nubia",
            "choppedEntity": "Q135028"
        }
    },
    {
        "chopped": {
            "question": "In which diocese is ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P708 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown diocese ?ans1}"
        },
        "original": {
            "question": "In which diocese is the Alexander Nevsky Cathedral",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q43282 wdt:P708 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Alexander Nevsky Cathedral diocese ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "the Alexander Nevsky Cathedral",
            "choppedEntity": "Q43282"
        }
    },
    {
        "chopped": {
            "question": "What is the field of profession for ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P106 ?X . ?X wdt:P425 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown occupation ?X . ?X field of this occupation ?ans1}"
        },
        "original": {
            "question": "What is the field of profession for Robert A. Heinlein",
            "query": "SELECT ?answer WHERE { wd:Q123078 wdt:P106 ?X . ?X wdt:P425 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Robert A. Heinlein occupation ?X . ?X field of this occupation ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Robert A. Heinlein",
            "choppedEntity": "Q123078"
        }
    },
    {
        "chopped": {
            "question": "In which country was Ahmad ibn Hanbal born in the city of ",
            "query": "SELECT ?ans1 WHERE { wd:Q194442 p:P19 ?s . ?s ps:P19 ?unknown . ?s pq:P17 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ahmad ibn Hanbal place of birth ?s . ?s place of birth ?unknown . ?s country ?ans1}"
        },
        "original": {
            "question": "In which country was Ahmad ibn Hanbal born in the city of Baghdad",
            "query": "SELECT ?value WHERE { wd:Q194442 p:P19 ?s . ?s ps:P19 wd:Q1530 . ?s pq:P17 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ahmad ibn Hanbal place of birth ?s . ?s place of birth Baghdad . ?s country ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Baghdad",
            "choppedEntity": "Q1530"
        }
    },
    {
        "chopped": {
            "question": "In which nation was Ahmad ibn Hanbal conceived in the city of ",
            "query": "SELECT ?ans1 WHERE { wd:Q194442 p:P19 ?s . ?s ps:P19 ?unknown . ?s pq:P17 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ahmad ibn Hanbal place of birth ?s . ?s place of birth ?unknown . ?s country ?ans1}"
        },
        "original": {
            "question": "In which nation was Ahmad ibn Hanbal conceived in the city of Baghdad",
            "query": "SELECT ?value WHERE { wd:Q194442 p:P19 ?s . ?s ps:P19 wd:Q1530 . ?s pq:P17 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ahmad ibn Hanbal place of birth ?s . ?s place of birth Baghdad . ?s country ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Baghdad",
            "choppedEntity": "Q1530"
        }
    },
    {
        "chopped": {
            "question": "What is the stadium of owner of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1830 ?obj . ?obj wdt:P31 wd:Q483110 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown owner of ?obj . ?obj instance of stadium } "
        },
        "original": {
            "question": "What is the stadium of owner of Durban",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q5468 wdt:P1830 ?obj . ?obj wdt:P31 wd:Q483110 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Durban owner of ?obj . ?obj instance of stadium } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Durban",
            "choppedEntity": "Q5468"
        }
    },
    {
        "chopped": {
            "question": "When was Glen McGrath a member of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q1392178 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P580 ?ans1 . ?s pq:P582 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Glenn McGrath member of sports team ?s . ?s member of sports team ?unknown . ?s start time ?ans1 . ?s end time ?ans2 }"
        },
        "original": {
            "question": "When was Glen McGrath a member of the Worcestershire County Cricket Club",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q1392178 p:P54 ?s . ?s ps:P54 wd:Q2725667 . ?s pq:P580 ?value1 . ?s pq:P582 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Glenn McGrath member of sports team ?s . ?s member of sports team Worcestershire County Cricket Club . ?s start time ?value1 . ?s end time ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Worcestershire County Cricket Club",
            "choppedEntity": "Q2725667"
        }
    },
    {
        "chopped": {
            "question": "What is the genre of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P170 ?X . ?X wdt:P136 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown creator ?X . ?X genre ?ans1}"
        },
        "original": {
            "question": "What is the genre of Le Pont de Passy et la tour Eiffel",
            "query": "SELECT ?answer WHERE { wd:Q20182314 wdt:P170 ?X . ?X wdt:P136 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Le Pont de Passy et la Tour Eiffel creator ?X . ?X genre ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Le Pont de Passy et la tour Eiffel",
            "choppedEntity": "Q20182314"
        }
    },
    {
        "chopped": {
            "question": "How many voice actors are credited for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P725 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown voice actor ?obj }"
        },
        "original": {
            "question": "How many voice actors are credited for Ghost in the Shell",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q1066948 wdt:P725 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Ghost in the Shell voice actor ?obj }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Ghost in the Shell",
            "choppedEntity": "Q1066948"
        }
    },
    {
        "chopped": {
            "question": "Which is the number of the voice actors that are credited for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P725 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown voice actor ?obj }"
        },
        "original": {
            "question": "Which is the number of the voice actors that are credited for Ghost in the Shell",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q1066948 wdt:P725 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Ghost in the Shell voice actor ?obj }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Ghost in the Shell",
            "choppedEntity": "Q1066948"
        }
    },
    {
        "chopped": {
            "question": "Which is the Carnegie Hall agent ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4104 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Carnegie Hall agent ID ?ans1}"
        },
        "original": {
            "question": "Which is the Carnegie Hall agent ID for David Ben-Gurion",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q37610 wdt:P4104 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { David Ben-Gurion Carnegie Hall agent ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "David Ben-Gurion",
            "choppedEntity": "Q37610"
        }
    },
    {
        "chopped": {
            "question": "Which was the person as doctoral student of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P185 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj doctoral student ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Which was the person as doctoral student of Galileo Galilei",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P185 wd:Q307 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj doctoral student Galileo Galilei . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Galileo Galilei",
            "choppedEntity": "Q307"
        }
    },
    {
        "chopped": {
            "question": "Which was the individual as doctoral understudy of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P185 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj doctoral student ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Which was the individual as doctoral understudy of Galileo Galilei",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P185 wd:Q307 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj doctoral student Galileo Galilei . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Galileo Galilei",
            "choppedEntity": "Q307"
        }
    },
    {
        "chopped": {
            "question": "What is the brother of the sons of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P40 ?X . ?X wdt:P3373 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown child ?X . ?X sibling ?ans1}"
        },
        "original": {
            "question": "What is the brother of the sons of Johann Sebastian Bach",
            "query": "SELECT ?answer WHERE { wd:Q1339 wdt:P40 ?X . ?X wdt:P3373 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Johann Sebastian Bach child ?X . ?X sibling ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Johann Sebastian Bach",
            "choppedEntity": "Q1339"
        }
    },
    {
        "chopped": {
            "question": "When was Nice had twinned administrative body of ",
            "query": "SELECT ?ans1 WHERE { wd:Q33959 p:P190 ?s . ?s ps:P190 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Nice twinned administrative body ?s . ?s twinned administrative body ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When was Nice had twinned administrative body of Edinburgh",
            "query": "SELECT ?value WHERE { wd:Q33959 p:P190 ?s . ?s ps:P190 wd:Q23436 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Nice twinned administrative body ?s . ?s twinned administrative body Edinburgh . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Edinburgh",
            "choppedEntity": "Q23436"
        }
    },
    {
        "chopped": {
            "question": "When was Decent had twinned authoritative body of ",
            "query": "SELECT ?ans1 WHERE { wd:Q33959 p:P190 ?s . ?s ps:P190 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Nice twinned administrative body ?s . ?s twinned administrative body ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When was Decent had twinned authoritative body of Edinburgh",
            "query": "SELECT ?value WHERE { wd:Q33959 p:P190 ?s . ?s ps:P190 wd:Q23436 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Nice twinned administrative body ?s . ?s twinned administrative body Edinburgh . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Edinburgh",
            "choppedEntity": "Q23436"
        }
    },
    {
        "chopped": {
            "question": "In what year did The Apartment win at the 33rd ",
            "query": "SELECT ?ans1 WHERE { wd:Q270510 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { The Apartment award received ?s . ?s award received ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "In what year did The Apartment win at the 33rd Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q270510 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q917071 }",
            "NLQuery": "SELECT ?obj WHERE { The Apartment award received ?s . ?s award received ?obj . ?s statement is subject of 33rd Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q917071"
        }
    },
    {
        "chopped": {
            "question": "How many matches were played, and points scored for ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P54 ?s . ?s ps:P54 wd:Q102720 . ?s pq:P1350 ?ans1 . ?s pq:P1351 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown member of sports team ?s . ?s member of sports team Hertha BSC . ?s number of matches played/races/starts ?ans1 . ?s number of points/goals/set scored ?ans2 }"
        },
        "original": {
            "question": "How many matches were played, and points scored for Ali Daei",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q159622 p:P54 ?s . ?s ps:P54 wd:Q102720 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Ali Daei member of sports team ?s . ?s member of sports team Hertha BSC . ?s number of matches played/races/starts ?value1 . ?s number of points/goals/set scored ?value2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ali Daei",
            "choppedEntity": "Q159622"
        }
    },
    {
        "chopped": {
            "question": "How numerous matches were played, and focuses scored for ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P54 ?s . ?s ps:P54 wd:Q102720 . ?s pq:P1350 ?ans1 . ?s pq:P1351 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown member of sports team ?s . ?s member of sports team Hertha BSC . ?s number of matches played/races/starts ?ans1 . ?s number of points/goals/set scored ?ans2 }"
        },
        "original": {
            "question": "How numerous matches were played, and focuses scored for Ali Daei",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q159622 p:P54 ?s . ?s ps:P54 wd:Q102720 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Ali Daei member of sports team ?s . ?s member of sports team Hertha BSC . ?s number of matches played/races/starts ?value1 . ?s number of points/goals/set scored ?value2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ali Daei",
            "choppedEntity": "Q159622"
        }
    },
    {
        "chopped": {
            "question": "For what award was Jessica Lange nominated for her work in the movie ",
            "query": "SELECT ?ans1 WHERE { wd:Q173585 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Jessica Lange nominated for ?s . ?s nominated for ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "For what award was Jessica Lange nominated for her work in the movie Country",
            "query": "SELECT ?obj WHERE { wd:Q173585 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q1754454 }",
            "NLQuery": "SELECT ?obj WHERE { Jessica Lange nominated for ?s . ?s nominated for ?obj . ?s for work Country }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Country",
            "choppedEntity": "Q1754454"
        }
    },
    {
        "chopped": {
            "question": "Which was the award that Jessica Lange got nominated for in her work in the movie ",
            "query": "SELECT ?ans1 WHERE { wd:Q173585 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Jessica Lange nominated for ?s . ?s nominated for ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "Which was the award that Jessica Lange got nominated for in her work in the movie Country",
            "query": "SELECT ?obj WHERE { wd:Q173585 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q1754454 }",
            "NLQuery": "SELECT ?obj WHERE { Jessica Lange nominated for ?s . ?s nominated for ?obj . ?s for work Country }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Country",
            "choppedEntity": "Q1754454"
        }
    },
    {
        "chopped": {
            "question": "When did Petah Tikva become the twinned administrative body of ",
            "query": "SELECT ?ans1 WHERE { wd:Q190828 p:P190 ?s . ?s ps:P190 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Petah Tikva twinned administrative body ?s . ?s twinned administrative body ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Petah Tikva become the twinned administrative body of Gabrovo",
            "query": "SELECT ?value WHERE { wd:Q190828 p:P190 ?s . ?s ps:P190 wd:Q180131 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Petah Tikva twinned administrative body ?s . ?s twinned administrative body Gabrovo . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Gabrovo",
            "choppedEntity": "Q180131"
        }
    },
    {
        "chopped": {
            "question": "on what date did Petah Tikva become the twinned administrative body of ",
            "query": "SELECT ?ans1 WHERE { wd:Q190828 p:P190 ?s . ?s ps:P190 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Petah Tikva twinned administrative body ?s . ?s twinned administrative body ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "on what date did Petah Tikva become the twinned administrative body of Gabrovo",
            "query": "SELECT ?value WHERE { wd:Q190828 p:P190 ?s . ?s ps:P190 wd:Q180131 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Petah Tikva twinned administrative body ?s . ?s twinned administrative body Gabrovo . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Gabrovo",
            "choppedEntity": "Q180131"
        }
    },
    {
        "chopped": {
            "question": "When did Mobutu Sese Seko become the chairperson of ",
            "query": "SELECT ?ans1 WHERE { wd:Q164535 p:P39 ?s . ?s ps:P39 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Mobutu Sese Seko position held ?s . ?s position held ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Mobutu Sese Seko become the chairperson of the Organisation of African Unity",
            "query": "SELECT ?value WHERE { wd:Q164535 p:P39 ?s . ?s ps:P39 wd:Q19161632 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Mobutu Sese Seko position held ?s . ?s position held chairperson of the Organisation of African Unity . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Organisation of African Unity",
            "choppedEntity": "Q19161632"
        }
    },
    {
        "chopped": {
            "question": "In the administrative region of Vancouver, what is present at this location done by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1344 ?ans1 . ?ans1 wdt:P131 wd:Q24639}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown participant in ?ans1 . ?ans1 located in the administrative territorial entity Vancouver}"
        },
        "original": {
            "question": "In the administrative region of Vancouver, what is present at this location done by Nicklas Lidstrom",
            "query": "SELECT ?answer WHERE { wd:Q434200 wdt:P1344 ?answer . ?answer wdt:P131 wd:Q24639}",
            "NLQuery": "SELECT ?answer WHERE { Nicklas Lidstr\u00f6m participant in ?answer . ?answer located in the administrative territorial entity Vancouver}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Nicklas Lidstrom",
            "choppedEntity": "Q434200"
        }
    },
    {
        "chopped": {
            "question": "Is it true that Demi Moore knows ",
            "query": "ASK WHERE { wd:Q43044 wdt:P1412 ?unknown }",
            "NLQuery": "ASK WHERE { Demi Moore languages spoken, written or signed ?unknown }"
        },
        "original": {
            "question": "Is it true that Demi Moore knows Old English",
            "query": "ASK WHERE { wd:Q43044 wdt:P1412 wd:Q42365 }",
            "NLQuery": "ASK WHERE { Demi Moore languages spoken, written or signed Old English }"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Old English",
            "choppedEntity": "Q42365"
        }
    },
    {
        "chopped": {
            "question": "Does Demi Moore really know ",
            "query": "ASK WHERE { wd:Q43044 wdt:P1412 ?unknown }",
            "NLQuery": "ASK WHERE { Demi Moore languages spoken, written or signed ?unknown }"
        },
        "original": {
            "question": "Does Demi Moore really know Old English",
            "query": "ASK WHERE { wd:Q43044 wdt:P1412 wd:Q42365 }",
            "NLQuery": "ASK WHERE { Demi Moore languages spoken, written or signed Old English }"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Old English",
            "choppedEntity": "Q42365"
        }
    },
    {
        "chopped": {
            "question": "What is the life stance of alumni ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P69 ?X . ?X wdt:P140 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown educated at ?X . ?X religion ?ans1}"
        },
        "original": {
            "question": "What is the life stance of alumni Bonnie L Oscarson",
            "query": "SELECT ?answer WHERE { wd:Q16145612 wdt:P69 ?X . ?X wdt:P140 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Bonnie L. Oscarson educated at ?X . ?X religion ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Bonnie L Oscarson",
            "choppedEntity": "Q16145612"
        }
    },
    {
        "chopped": {
            "question": "What is the diplomacy of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P530 ?s . ?s ps:P530 ?ans1 . ?s pq:P805 wd:Q6741521 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown diplomatic relation ?s . ?s diplomatic relation ?ans1 . ?s statement is subject of Malawi\u2013Zambia relations }"
        },
        "original": {
            "question": "What is the diplomacy of Malawi",
            "query": "SELECT ?obj WHERE { wd:Q1020 p:P530 ?s . ?s ps:P530 ?obj . ?s pq:P805 wd:Q6741521 }",
            "NLQuery": "SELECT ?obj WHERE { Malawi diplomatic relation ?s . ?s diplomatic relation ?obj . ?s statement is subject of Malawi\u2013Zambia relations }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Malawi",
            "choppedEntity": "Q1020"
        }
    },
    {
        "chopped": {
            "question": "How many networks air ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P449 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown original broadcaster ?obj }"
        },
        "original": {
            "question": "How many networks air All My Children",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q205474 wdt:P449 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { All My Children original broadcaster ?obj }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "All My Children",
            "choppedEntity": "Q205474"
        }
    },
    {
        "chopped": {
            "question": "Who fought for formation of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P241 ?X . ?X wdt:P607 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown military branch ?X . ?X conflict ?ans1}"
        },
        "original": {
            "question": "Who fought for formation of Ted Lyons",
            "query": "SELECT ?answer WHERE { wd:Q328603 wdt:P241 ?X . ?X wdt:P607 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Ted Lyons military branch ?X . ?X conflict ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Ted Lyons",
            "choppedEntity": "Q328603"
        }
    },
    {
        "chopped": {
            "question": "Who battled for arrangement of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P241 ?X . ?X wdt:P607 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown military branch ?X . ?X conflict ?ans1}"
        },
        "original": {
            "question": "Who battled for arrangement of Ted Lyons",
            "query": "SELECT ?answer WHERE { wd:Q328603 wdt:P241 ?X . ?X wdt:P607 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Ted Lyons military branch ?X . ?X conflict ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ted Lyons",
            "choppedEntity": "Q328603"
        }
    },
    {
        "chopped": {
            "question": "Who replaced Pius XII as the Camerlengo of ",
            "query": "SELECT ?ans1 WHERE { wd:Q2604 p:P39 ?s . ?s ps:P39 ?unknown . ?s pq:P1365 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Pius XII position held ?s . ?s position held ?unknown . ?s replaces ?ans1}"
        },
        "original": {
            "question": "Who replaced Pius XII as the Camerlengo of the Sacred College of Cardinals",
            "query": "SELECT ?value WHERE { wd:Q2604 p:P39 ?s . ?s ps:P39 wd:Q1813197 . ?s pq:P1365 ?value}",
            "NLQuery": "SELECT ?value WHERE { Pius XII position held ?s . ?s position held Camerlengo of the Sacred College of Cardinals . ?s replaces ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Sacred College of Cardinals",
            "choppedEntity": "Q1813197"
        }
    },
    {
        "chopped": {
            "question": "What is the literary genre composed by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P86 ?X . ?X wdt:P136 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown composer ?X . ?X genre ?ans1}"
        },
        "original": {
            "question": "What is the literary genre composed by Suite No. 2",
            "query": "SELECT ?answer WHERE { wd:Q1966218 wdt:P86 ?X . ?X wdt:P136 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Suite No. 2 composer ?X . ?X genre ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Suite No. 2",
            "choppedEntity": "Q1966218"
        }
    },
    {
        "chopped": {
            "question": "What is the regional government of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P797 ?obj . ?obj wdt:P31 wd:Q1802419 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown authority ?obj . ?obj instance of state government } "
        },
        "original": {
            "question": "What is the regional government of Tasmania",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q34366 wdt:P797 ?obj . ?obj wdt:P31 wd:Q1802419 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Tasmania authority ?obj . ?obj instance of state government } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Tasmania",
            "choppedEntity": "Q34366"
        }
    },
    {
        "chopped": {
            "question": "What is RERO's ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3065 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown RERO ID ?ans1}"
        },
        "original": {
            "question": "What is RERO's ID of Trukmenistan",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q874 wdt:P3065 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Turkmenistan RERO ID ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Trukmenistan",
            "choppedEntity": "Q874"
        }
    },
    {
        "chopped": {
            "question": "Which is the historical country that replaces ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1365 ?unknown . ?sbj wdt:P31 wd:Q3024240 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj replaces ?unknown . ?sbj instance of historical country } "
        },
        "original": {
            "question": "Which is the historical country that replaces the Maurya Empire",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1365 wd:Q62943 . ?sbj wdt:P31 wd:Q3024240 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj replaces Maurya Empire . ?sbj instance of historical country } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Maurya Empire",
            "choppedEntity": "Q62943"
        }
    },
    {
        "chopped": {
            "question": "Which is the country of history replacing ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1365 ?unknown . ?sbj wdt:P31 wd:Q3024240 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj replaces ?unknown . ?sbj instance of historical country } "
        },
        "original": {
            "question": "Which is the country of history replacing the Maurya Empire",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1365 wd:Q62943 . ?sbj wdt:P31 wd:Q3024240 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj replaces Maurya Empire . ?sbj instance of historical country } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Maurya Empire",
            "choppedEntity": "Q62943"
        }
    },
    {
        "chopped": {
            "question": "There are how many religious orders in ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P611 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub religious order ?unknown }"
        },
        "original": {
            "question": "There are how many religious orders in The Knights Templar",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P611 wd:Q41300 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub religious order Knights Templar }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "The Knights Templar",
            "choppedEntity": "Q41300"
        }
    },
    {
        "chopped": {
            "question": "What is the Paris Faculty of Science ID for Professor ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P5541 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Paris Faculty of Science professor ID ?ans1}"
        },
        "original": {
            "question": "What is the Paris Faculty of Science ID for Professor Henri Poincare",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q81082 wdt:P5541 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Henri Poincar\u00e9 Paris Faculty of Science professor ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Henri Poincare",
            "choppedEntity": "Q81082"
        }
    },
    {
        "chopped": {
            "question": "Name the highest snowfall total from a blizzard located in the administrative territorial entity of ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q205418 . ?ans1 wdt:P3036 ?obj . ?ans1 wdt:P131 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of blizzard . ?ans1 precipitation height ?obj . ?ans1 located in the administrative territorial entity ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "Name the highest snowfall total from a blizzard located in the administrative territorial entity of Wisconsin",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q205418 . ?ent wdt:P3036 ?obj . ?ent wdt:P131 wd:Q1537 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of blizzard . ?ent precipitation height ?obj . ?ent located in the administrative territorial entity Wisconsin } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Wisconsin",
            "choppedEntity": "Q1537"
        }
    },
    {
        "chopped": {
            "question": "How much snow fell from the blizzard in ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q205418 . ?ans1 wdt:P3036 ?obj . ?ans1 wdt:P131 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of blizzard . ?ans1 precipitation height ?obj . ?ans1 located in the administrative territorial entity ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "How much snow fell from the blizzard in Wisconsin",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q205418 . ?ent wdt:P3036 ?obj . ?ent wdt:P131 wd:Q1537 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of blizzard . ?ent precipitation height ?obj . ?ent located in the administrative territorial entity Wisconsin } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Wisconsin",
            "choppedEntity": "Q1537"
        }
    },
    {
        "chopped": {
            "question": "What is the award and prize money received by ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P166 ?s . ?s ps:P166 ?ans2 . ?s pq:P2121 ?ans1 . }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown award received ?s . ?s award received ?ans2 . ?s prize money ?ans1 . }"
        },
        "original": {
            "question": "What is the award and prize money received by Claude Simon",
            "query": "SELECT ?value1 ?obj WHERE { wd:Q131549 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?value1 . }",
            "NLQuery": "SELECT ?value1 ?obj WHERE { Claude Simon award received ?s . ?s award received ?obj . ?s prize money ?value1 . }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Claude Simon",
            "choppedEntity": "Q131549"
        }
    },
    {
        "chopped": {
            "question": "Which is the temporal range end for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P524 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown temporal range end ?ans1}"
        },
        "original": {
            "question": "Which is the temporal range end for Triceratops",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q14384 wdt:P524 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Triceratops temporal range end ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Triceratops",
            "choppedEntity": "Q14384"
        }
    },
    {
        "chopped": {
            "question": "In the year 1896, what was first instructed at ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P69 ?s . ?s ps:P69 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1896')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown educated at ?s . ?s educated at ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),'1896')) }"
        },
        "original": {
            "question": "In the year 1896, what was first instructed at Vsevolod Meyerhold",
            "query": "SELECT ?obj WHERE { wd:Q165721 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1896')) }",
            "NLQuery": "SELECT ?obj WHERE { Vsevolod Meyerhold educated at ?s . ?s educated at ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1896')) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Vsevolod Meyerhold",
            "choppedEntity": "Q165721"
        }
    },
    {
        "chopped": {
            "question": "Which is the Latvian Address register ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2497 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Latvian National Address Register ID ?ans1}"
        },
        "original": {
            "question": "Which is the Latvian Address register ID of Riga",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1773 wdt:P2497 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Riga Latvian National Address Register ID ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Riga",
            "choppedEntity": "Q1773"
        }
    },
    {
        "chopped": {
            "question": "Name a movie directed by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P57 ?unknown . ?sbj wdt:P31 wd:Q11424 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj director ?unknown . ?sbj instance of film } "
        },
        "original": {
            "question": "Name a movie directed by Francis Ford Coppola",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P57 wd:Q56094 . ?sbj wdt:P31 wd:Q11424 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj director Francis Ford Coppola . ?sbj instance of film } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Francis Ford Coppola",
            "choppedEntity": "Q56094"
        }
    },
    {
        "chopped": {
            "question": "Title a motion picture coordinated by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P57 ?unknown . ?sbj wdt:P31 wd:Q11424 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj director ?unknown . ?sbj instance of film } "
        },
        "original": {
            "question": "Title a motion picture coordinated by Francis Passage Coppola",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P57 wd:Q56094 . ?sbj wdt:P31 wd:Q11424 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj director Francis Ford Coppola . ?sbj instance of film } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Francis Passage Coppola",
            "choppedEntity": "Q56094"
        }
    },
    {
        "chopped": {
            "question": "When did Prince William become ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P97 ?s . ?s ps:P97 wd:Q836810 . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown noble title ?s . ?s noble title Duke of Cambridge . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Prince William become a Duke of Cambridge",
            "query": "SELECT ?value WHERE { wd:Q36812 p:P97 ?s . ?s ps:P97 wd:Q836810 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Prince William, Duke of Cambridge noble title ?s . ?s noble title Duke of Cambridge . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "a Duke of Cambridge",
            "choppedEntity": "Q36812"
        }
    },
    {
        "chopped": {
            "question": "When did Prince William become ",
            "query": "SELECT ?ans1 WHERE { wd:Q36812 p:P97 ?s . ?s ps:P97 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Prince William, Duke of Cambridge noble title ?s . ?s noble title ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Prince William become a Duke of Cambridge",
            "query": "SELECT ?value WHERE { wd:Q36812 p:P97 ?s . ?s ps:P97 wd:Q836810 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Prince William, Duke of Cambridge noble title ?s . ?s noble title Duke of Cambridge . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "a Duke of Cambridge",
            "choppedEntity": "Q836810"
        }
    },
    {
        "chopped": {
            "question": "who is is indian reservation of indiana that have his disticts or ",
            "query": "SELECT ?ans1 WHERE { wd:Q1415 wdt:P131 ?ans1 . ?ans1 wdt:P150 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Indiana located in the administrative territorial entity ?ans1 . ?ans1 contains administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "who is is indian reservation of indiana that have his disticts or oklahoma",
            "query": "SELECT ?answer WHERE { wd:Q1415 wdt:P131 ?answer . ?answer wdt:P150 wd:Q1649}",
            "NLQuery": "SELECT ?answer WHERE { Indiana located in the administrative territorial entity ?answer . ?answer contains administrative territorial entity Oklahoma}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "oklahoma",
            "choppedEntity": "Q1649"
        }
    },
    {
        "chopped": {
            "question": "Which is the archaeological site that is located in the administrative territorial entity of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P131 ?unknown . ?sbj wdt:P31 wd:Q839954 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj located in the administrative territorial entity ?unknown . ?sbj instance of archaeological site } "
        },
        "original": {
            "question": "Which is the archaeological site that is located in the administrative territorial entity of Roman Empire",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P131 wd:Q2277 . ?sbj wdt:P31 wd:Q839954 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj located in the administrative territorial entity Roman Empire . ?sbj instance of archaeological site } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Roman Empire",
            "choppedEntity": "Q2277"
        }
    },
    {
        "chopped": {
            "question": "In 1996, what award was given to ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1996')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),'1996')) }"
        },
        "original": {
            "question": "In 1996, what award was given to Lars von Trier",
            "query": "SELECT ?obj WHERE { wd:Q133730 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1996')) }",
            "NLQuery": "SELECT ?obj WHERE { Lars von Trier award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1996')) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Lars von Trier",
            "choppedEntity": "Q133730"
        }
    },
    {
        "chopped": {
            "question": "What award was Mahershalalhashbaz Ali nominated for at the 89th ",
            "query": "SELECT ?ans1 WHERE { wd:Q360531 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Mahershala Ali nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "What award was Mahershalalhashbaz Ali nominated for at the 89th Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q360531 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q22076019 }",
            "NLQuery": "SELECT ?obj WHERE { Mahershala Ali nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 89th Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q22076019"
        }
    },
    {
        "chopped": {
            "question": "How many names are there for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P1787 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown art-name ?obj }"
        },
        "original": {
            "question": "How many names are there for Kang Youwei",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q360135 wdt:P1787 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Kang Youwei art-name ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Kang Youwei",
            "choppedEntity": "Q360135"
        }
    },
    {
        "chopped": {
            "question": "Who was the sports team member with the same number of matches played by ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P54 ?s . ?s ps:P54 ?ans2 . ?s pq:P1350 ?ans1 . }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown member of sports team ?s . ?s member of sports team ?ans2 . ?s number of matches played/races/starts ?ans1 . }"
        },
        "original": {
            "question": "Who was the sports team member with the same number of matches played by Birgit Prinz",
            "query": "SELECT ?value1 ?obj WHERE { wd:Q109868 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }",
            "NLQuery": "SELECT ?value1 ?obj WHERE { Birgit Prinz member of sports team ?s . ?s member of sports team ?obj . ?s number of matches played/races/starts ?value1 . }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Birgit Prinz",
            "choppedEntity": "Q109868"
        }
    },
    {
        "chopped": {
            "question": "Who are the inhabitants of the land of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P17 ?X . ?X wdt:P1082 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country ?X . ?X population ?ans1}"
        },
        "original": {
            "question": "Who are the inhabitants of the land of Molise",
            "query": "SELECT ?answer WHERE { wd:Q1443 wdt:P17 ?X . ?X wdt:P1082 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Molise country ?X . ?X population ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Molise",
            "choppedEntity": "Q1443"
        }
    },
    {
        "chopped": {
            "question": "Who are the occupants of the arrive of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P17 ?X . ?X wdt:P1082 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country ?X . ?X population ?ans1}"
        },
        "original": {
            "question": "Who are the occupants of the arrive of Molise",
            "query": "SELECT ?answer WHERE { wd:Q1443 wdt:P17 ?X . ?X wdt:P1082 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Molise country ?X . ?X population ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Molise",
            "choppedEntity": "Q1443"
        }
    },
    {
        "chopped": {
            "question": "When did Rowan Atkinson attend ",
            "query": "SELECT ?ans1 WHERE { wd:Q23760 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Rowan Atkinson educated at ?s . ?s educated at ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Rowan Atkinson attend the Queen's College",
            "query": "SELECT ?value WHERE { wd:Q23760 p:P69 ?s . ?s ps:P69 wd:Q73094 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Rowan Atkinson educated at ?s . ?s educated at The Queen's College . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Queen's College",
            "choppedEntity": "Q73094"
        }
    },
    {
        "chopped": {
            "question": "What dates did actor Rowan Atkinson go to ",
            "query": "SELECT ?ans1 WHERE { wd:Q23760 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Rowan Atkinson educated at ?s . ?s educated at ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "What dates did actor Rowan Atkinson go to the Queen's College",
            "query": "SELECT ?value WHERE { wd:Q23760 p:P69 ?s . ?s ps:P69 wd:Q73094 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Rowan Atkinson educated at ?s . ?s educated at The Queen's College . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Queen's College",
            "choppedEntity": "Q73094"
        }
    },
    {
        "chopped": {
            "question": "How many languages are spoken by the ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P2936 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub language used ?unknown }"
        },
        "original": {
            "question": "How many languages are spoken by the Chinese",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P2936 wd:Q7850 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub language used Chinese }"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Chinese",
            "choppedEntity": "Q7850"
        }
    },
    {
        "chopped": {
            "question": "when was John marshall succeeded by ",
            "query": "SELECT ?ans1 WHERE { wd:Q310829 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1366 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { John Marshall position held ?s . ?s position held ?ans1 . ?s replaced by ?unknown }"
        },
        "original": {
            "question": "when was John marshall succeeded by James Madison",
            "query": "SELECT ?obj WHERE { wd:Q310829 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q11813 }",
            "NLQuery": "SELECT ?obj WHERE { John Marshall position held ?s . ?s position held ?obj . ?s replaced by James Madison }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "James Madison",
            "choppedEntity": "Q11813"
        }
    },
    {
        "chopped": {
            "question": "When was John Marshall replaced by ",
            "query": "SELECT ?ans1 WHERE { wd:Q310829 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1366 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { John Marshall position held ?s . ?s position held ?ans1 . ?s replaced by ?unknown }"
        },
        "original": {
            "question": "When was John Marshall replaced by James Madison",
            "query": "SELECT ?obj WHERE { wd:Q310829 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q11813 }",
            "NLQuery": "SELECT ?obj WHERE { John Marshall position held ?s . ?s position held ?obj . ?s replaced by James Madison }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "James Madison",
            "choppedEntity": "Q11813"
        }
    },
    {
        "chopped": {
            "question": "Who is the songwriter of Rule Britannia, whise son is ",
            "query": "SELECT ?ans1 WHERE { wd:Q215729 wdt:P86 ?ans1 . ?ans1 wdt:P40 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Rule, Britannia! composer ?ans1 . ?ans1 child ?unknown}"
        },
        "original": {
            "question": "Who is the songwriter of Rule Britannia, whise son is Michael Arne",
            "query": "SELECT ?answer WHERE { wd:Q215729 wdt:P86 ?answer . ?answer wdt:P40 wd:Q2059553}",
            "NLQuery": "SELECT ?answer WHERE { Rule, Britannia! composer ?answer . ?answer child Michael Arne}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Michael Arne",
            "choppedEntity": "Q2059553"
        }
    },
    {
        "chopped": {
            "question": "Who is the lyricist of Run the show Britannia, whise child is ",
            "query": "SELECT ?ans1 WHERE { wd:Q215729 wdt:P86 ?ans1 . ?ans1 wdt:P40 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Rule, Britannia! composer ?ans1 . ?ans1 child ?unknown}"
        },
        "original": {
            "question": "Who is the lyricist of Run the show Britannia, whise child is Michael Arne",
            "query": "SELECT ?answer WHERE { wd:Q215729 wdt:P86 ?answer . ?answer wdt:P40 wd:Q2059553}",
            "NLQuery": "SELECT ?answer WHERE { Rule, Britannia! composer ?answer . ?answer child Michael Arne}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Michael Arne",
            "choppedEntity": "Q2059553"
        }
    },
    {
        "chopped": {
            "question": "which is island of location of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P5130 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown none ?ans1}"
        },
        "original": {
            "question": "which is island of location of cibaprefecture",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q80011 wdt:P5130 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Chiba Prefecture none ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "cibaprefecture",
            "choppedEntity": "Q80011"
        }
    },
    {
        "chopped": {
            "question": "Who replaced Eduard Shevardnadze as First Secretary of ",
            "query": "SELECT ?ans1 WHERE { wd:Q151929 p:P39 ?s . ?s ps:P39 ?unknown . ?s pq:P1365 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Eduard Shevardnadze position held ?s . ?s position held ?unknown . ?s replaces ?ans1}"
        },
        "original": {
            "question": "Who replaced Eduard Shevardnadze as First Secretary of the Georgian Communist Party",
            "query": "SELECT ?value WHERE { wd:Q151929 p:P39 ?s . ?s ps:P39 wd:Q1645889 . ?s pq:P1365 ?value}",
            "NLQuery": "SELECT ?value WHERE { Eduard Shevardnadze position held ?s . ?s position held First Secretary of the Georgian Communist Party . ?s replaces ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Georgian Communist Party",
            "choppedEntity": "Q1645889"
        }
    },
    {
        "chopped": {
            "question": "Which person took over First Secretary of the Georgian Communist Party from ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P39 ?s . ?s ps:P39 wd:Q1645889 . ?s pq:P1365 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown position held ?s . ?s position held First Secretary of the Georgian Communist Party . ?s replaces ?ans1}"
        },
        "original": {
            "question": "Which person took over First Secretary of the Georgian Communist Party from Eduard Shevardnadze",
            "query": "SELECT ?value WHERE { wd:Q151929 p:P39 ?s . ?s ps:P39 wd:Q1645889 . ?s pq:P1365 ?value}",
            "NLQuery": "SELECT ?value WHERE { Eduard Shevardnadze position held ?s . ?s position held First Secretary of the Georgian Communist Party . ?s replaces ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Eduard Shevardnadze",
            "choppedEntity": "Q151929"
        }
    },
    {
        "chopped": {
            "question": "When did Louis Kahn receive ",
            "query": "SELECT ?ans1 WHERE { wd:Q210134 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Louis Kahn award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Louis Kahn receive the Royal Gold Medal",
            "query": "SELECT ?value WHERE { wd:Q210134 p:P166 ?s . ?s ps:P166 wd:Q920783 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Louis Kahn award received ?s . ?s award received Royal Gold Medal . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Royal Gold Medal",
            "choppedEntity": "Q920783"
        }
    },
    {
        "chopped": {
            "question": "What was the date that Louis Kahn received ",
            "query": "SELECT ?ans1 WHERE { wd:Q210134 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Louis Kahn award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "What was the date that Louis Kahn received the Royal Gold Medal",
            "query": "SELECT ?value WHERE { wd:Q210134 p:P166 ?s . ?s ps:P166 wd:Q920783 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Louis Kahn award received ?s . ?s award received Royal Gold Medal . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Royal Gold Medal",
            "choppedEntity": "Q920783"
        }
    },
    {
        "chopped": {
            "question": "What is in the shire of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P131 ?ans1 . ?ans1 wdt:P1448 ?x FILTER(contains(?x,'\u041a\u044b\u0437\u044b\u043b\u043e\u0440\u0434\u0438\u043d\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c'))}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in the administrative territorial entity ?ans1 . ?ans1 official name ?x FILTER(contains(?x,'\u041a\u044b\u0437\u044b\u043b\u043e\u0440\u0434\u0438\u043d\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c'))}"
        },
        "original": {
            "question": "What is in the shire of Baikonur Cosmodrome",
            "query": "SELECT ?answer WHERE { wd:Q177477 wdt:P131 ?answer . ?answer wdt:P1448 ?x FILTER(contains(?x,'\u041a\u044b\u0437\u044b\u043b\u043e\u0440\u0434\u0438\u043d\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c'))}",
            "NLQuery": "SELECT ?answer WHERE { Baikonur Cosmodrome located in the administrative territorial entity ?answer . ?answer official name ?x FILTER(contains(?x,'\u041a\u044b\u0437\u044b\u043b\u043e\u0440\u0434\u0438\u043d\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c'))}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Baikonur Cosmodrome",
            "choppedEntity": "Q177477"
        }
    },
    {
        "chopped": {
            "question": "What is the number commissioned by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P88 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub commissioned by ?unknown }"
        },
        "original": {
            "question": "What is the number commissioned by William the Conqueror",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P88 wd:Q37594 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub commissioned by William the Conqueror }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "William the Conqueror",
            "choppedEntity": "Q37594"
        }
    },
    {
        "chopped": {
            "question": "Which is the SIMBAD ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3083 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown SIMBAD ID ?ans1}"
        },
        "original": {
            "question": "Which is the SIMBAD ID of Horsehead Nebula",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q14271 wdt:P3083 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Horsehead Nebula SIMBAD ID ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Horsehead Nebula",
            "choppedEntity": "Q14271"
        }
    },
    {
        "chopped": {
            "question": "What is the equivalent and opposite of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P460 ?ans1 . ?unknown wdt:P461 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown said to be the same as ?ans1 . ?unknown opposite of ?ans2 }"
        },
        "original": {
            "question": "What is the equivalent and opposite of Slavery",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q8463 wdt:P460 ?ans_1 . wd:Q8463 wdt:P461 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { slavery said to be the same as ?ans_1 . slavery opposite of ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "Slavery",
            "choppedEntity": "Q8463"
        }
    },
    {
        "chopped": {
            "question": "When did Vanessa Paradis receive and an award for ",
            "query": "SELECT ?ans1 WHERE { wd:Q51023 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Vanessa Paradis award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Vanessa Paradis receive and an award for Prix Romy Schneider",
            "query": "SELECT ?value WHERE { wd:Q51023 p:P166 ?s . ?s ps:P166 wd:Q1615857 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Vanessa Paradis award received ?s . ?s award received Prix Romy Schneider . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Prix Romy Schneider",
            "choppedEntity": "Q1615857"
        }
    },
    {
        "chopped": {
            "question": "When was it that Vanessa Paradis was given an award for ",
            "query": "SELECT ?ans1 WHERE { wd:Q51023 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Vanessa Paradis award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was it that Vanessa Paradis was given an award for Prix Romy Schneider",
            "query": "SELECT ?value WHERE { wd:Q51023 p:P166 ?s . ?s ps:P166 wd:Q1615857 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Vanessa Paradis award received ?s . ?s award received Prix Romy Schneider . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Prix Romy Schneider",
            "choppedEntity": "Q1615857"
        }
    },
    {
        "chopped": {
            "question": "What is the description of the national seal of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P418 ?obj . ?obj wdt:P31 wd:Q12056846 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown seal description ?obj . ?obj instance of national seal } "
        },
        "original": {
            "question": "What is the description of the national seal of Sikkim",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q1505 wdt:P418 ?obj . ?obj wdt:P31 wd:Q12056846 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Sikkim seal description ?obj . ?obj instance of national seal } "
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Sikkim",
            "choppedEntity": "Q1505"
        }
    },
    {
        "chopped": {
            "question": "What is the portrayal of the national seal of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P418 ?obj . ?obj wdt:P31 wd:Q12056846 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown seal description ?obj . ?obj instance of national seal } "
        },
        "original": {
            "question": "What is the portrayal of the national seal of Sikkim",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q1505 wdt:P418 ?obj . ?obj wdt:P31 wd:Q12056846 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Sikkim seal description ?obj . ?obj instance of national seal } "
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Sikkim",
            "choppedEntity": "Q1505"
        }
    },
    {
        "chopped": {
            "question": "What date did the Trizone terriotry lose ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P131 ?s . ?s ps:P131 wd:Q569998 . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in the administrative territorial entity ?s . ?s located in the administrative territorial entity Trizone . ?s end time ?ans1}"
        },
        "original": {
            "question": "What date did the Trizone terriotry lose Hamburg",
            "query": "SELECT ?value WHERE { wd:Q1055 p:P131 ?s . ?s ps:P131 wd:Q569998 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Hamburg located in the administrative territorial entity ?s . ?s located in the administrative territorial entity Trizone . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Hamburg",
            "choppedEntity": "Q1055"
        }
    },
    {
        "chopped": {
            "question": "What is Iditarod musher ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3760 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Iditarod musher ID ?ans1}"
        },
        "original": {
            "question": "What is Iditarod musher ID for Steve Fossett",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q311786 wdt:P3760 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Steve Fossett Iditarod musher ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Steve Fossett",
            "choppedEntity": "Q311786"
        }
    },
    {
        "chopped": {
            "question": "Which is the Executive Order number for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1555 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Executive Order number ?ans1}"
        },
        "original": {
            "question": "Which is the Executive Order number for Emancipation Proclamation",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q391358 wdt:P1555 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Emancipation Proclamation Executive Order number ?answer}"
        },
        "meta": {
            "entityTagNER": "LAW",
            "choppedText": "Emancipation Proclamation",
            "choppedEntity": "Q391358"
        }
    },
    {
        "chopped": {
            "question": "What is exclave of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P500 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 exclave of ?unknown}"
        },
        "original": {
            "question": "What is exclave of Sharjah Emirate",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P500 wd:Q188810}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer exclave of Sharjah Emirate}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Sharjah Emirate",
            "choppedEntity": "Q188810"
        }
    },
    {
        "chopped": {
            "question": "When is Hu Shuli's graduation date at ",
            "query": "SELECT ?ans1 WHERE { wd:Q1092391 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Hu Shuli educated at ?s . ?s educated at ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When is Hu Shuli's graduation date at Renmin University of China",
            "query": "SELECT ?value WHERE { wd:Q1092391 p:P69 ?s . ?s ps:P69 wd:Q1074117 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Hu Shuli educated at ?s . ?s educated at Renmin University of China . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Renmin University of China",
            "choppedEntity": "Q1074117"
        }
    },
    {
        "chopped": {
            "question": "On what date did Hu Shuli graduate from ",
            "query": "SELECT ?ans1 WHERE { wd:Q1092391 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Hu Shuli educated at ?s . ?s educated at ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "On what date did Hu Shuli graduate from the Renmin University of China",
            "query": "SELECT ?value WHERE { wd:Q1092391 p:P69 ?s . ?s ps:P69 wd:Q1074117 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Hu Shuli educated at ?s . ?s educated at Renmin University of China . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Renmin University of China",
            "choppedEntity": "Q1074117"
        }
    },
    {
        "chopped": {
            "question": "What type of film is significant for ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P800 ?X . ?X wdt:P136 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown notable work ?X . ?X genre ?ans1}"
        },
        "original": {
            "question": "What type of film is significant for William McDonough",
            "query": "SELECT ?answer WHERE { wd:Q1662745 wdt:P800 ?X . ?X wdt:P136 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { William McDonough notable work ?X . ?X genre ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "William McDonough",
            "choppedEntity": "Q1662745"
        }
    },
    {
        "chopped": {
            "question": "What sort of film is critical for ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P800 ?X . ?X wdt:P136 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown notable work ?X . ?X genre ?ans1}"
        },
        "original": {
            "question": "What sort of film is critical for William McDonough",
            "query": "SELECT ?answer WHERE { wd:Q1662745 wdt:P800 ?X . ?X wdt:P136 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { William McDonough notable work ?X . ?X genre ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "William McDonough",
            "choppedEntity": "Q1662745"
        }
    },
    {
        "chopped": {
            "question": "Number of Instruments used in ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P870 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown instrumentation ?obj }"
        },
        "original": {
            "question": "Number of Instruments used in Turandot",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q207990 wdt:P870 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Turandot instrumentation ?obj }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Turandot",
            "choppedEntity": "Q207990"
        }
    },
    {
        "chopped": {
            "question": "What was the name of Neil Young's album that won him a Grammy Award for ",
            "query": "SELECT ?ans1 WHERE { wd:Q633 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P1686 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Neil Young award received ?s . ?s award received ?unknown . ?s for work ?ans1}"
        },
        "original": {
            "question": "What was the name of Neil Young's album that won him a Grammy Award for Best Boxed or Special Limited Edition Package",
            "query": "SELECT ?value WHERE { wd:Q633 p:P166 ?s . ?s ps:P166 wd:Q5593754 . ?s pq:P1686 ?value}",
            "NLQuery": "SELECT ?value WHERE { Neil Young award received ?s . ?s award received Grammy Award for Best Boxed or Special Limited Edition Package . ?s for work ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Best Boxed or Special Limited Edition Package",
            "choppedEntity": "Q5593754"
        }
    },
    {
        "chopped": {
            "question": "What New Jersey county crosses over to ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P47 ?obj . ?obj wdt:P31 wd:Q7830213 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown shares border with ?obj . ?obj instance of township of New Jersey } "
        },
        "original": {
            "question": "What New Jersey county crosses over to Manhattan",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q11299 wdt:P47 ?obj . ?obj wdt:P31 wd:Q7830213 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Manhattan shares border with ?obj . ?obj instance of township of New Jersey } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Manhattan",
            "choppedEntity": "Q11299"
        }
    },
    {
        "chopped": {
            "question": "Which is Justia Patents company ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3875 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Justia Patents company ID ?ans1}"
        },
        "original": {
            "question": "Which is Justia Patents company ID for Yahoo",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q37093 wdt:P3875 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Yahoo Justia Patents company ID ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Yahoo",
            "choppedEntity": "Q37093"
        }
    },
    {
        "chopped": {
            "question": "What is the parent organization of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P749 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown parent organization ?obj . ?obj instance of business } "
        },
        "original": {
            "question": "What is the parent organization of Uber",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q780442 wdt:P749 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Uber parent organization ?obj . ?obj instance of business } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Uber",
            "choppedEntity": "Q780442"
        }
    },
    {
        "chopped": {
            "question": "What is Role of Carl Ritter in ",
            "query": "SELECT ?ans1 WHERE { wd:Q29297 p:P463 ?s . ?s ps:P463 ?unknown . ?s pq:P2868 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Carl Ritter member of ?s . ?s member of ?unknown . ?s subject has role ?ans1}"
        },
        "original": {
            "question": "What is Role of Carl Ritter in Royal Swedish Academy of Letters, History and Antiques",
            "query": "SELECT ?value WHERE { wd:Q29297 p:P463 ?s . ?s ps:P463 wd:Q1792159 . ?s pq:P2868 ?value}",
            "NLQuery": "SELECT ?value WHERE { Carl Ritter member of ?s . ?s member of Royal Swedish Academy of Letters, History and Antiquities . ?s subject has role ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Royal Swedish Academy of Letters, History and Antiques",
            "choppedEntity": "Q1792159"
        }
    },
    {
        "chopped": {
            "question": "What role did Carl Ritter played in ",
            "query": "SELECT ?ans1 WHERE { wd:Q29297 p:P463 ?s . ?s ps:P463 ?unknown . ?s pq:P2868 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Carl Ritter member of ?s . ?s member of ?unknown . ?s subject has role ?ans1}"
        },
        "original": {
            "question": "What role did Carl Ritter played in Royal Swedish Academy of Letters, History and Antiques",
            "query": "SELECT ?value WHERE { wd:Q29297 p:P463 ?s . ?s ps:P463 wd:Q1792159 . ?s pq:P2868 ?value}",
            "NLQuery": "SELECT ?value WHERE { Carl Ritter member of ?s . ?s member of Royal Swedish Academy of Letters, History and Antiquities . ?s subject has role ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Royal Swedish Academy of Letters, History and Antiques",
            "choppedEntity": "Q1792159"
        }
    },
    {
        "chopped": {
            "question": "Which is Christie's creator ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4200 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Christie's creator ID ?ans1}"
        },
        "original": {
            "question": "Which is Christie's creator ID for Lewis Hine",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q347194 wdt:P4200 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Lewis Hine Christie's creator ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Lewis Hine",
            "choppedEntity": "Q347194"
        }
    },
    {
        "chopped": {
            "question": "Where does Shirley Chisholm work that is bordered by ",
            "query": "SELECT ?ans1 WHERE { wd:Q239657 wdt:P937 ?ans1 . ?ans1 wdt:P47 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Shirley Chisholm work location ?ans1 . ?ans1 shares border with ?unknown}"
        },
        "original": {
            "question": "Where does Shirley Chisholm work that is bordered by Arlington County",
            "query": "SELECT ?answer WHERE { wd:Q239657 wdt:P937 ?answer . ?answer wdt:P47 wd:Q107126}",
            "NLQuery": "SELECT ?answer WHERE { Shirley Chisholm work location ?answer . ?answer shares border with Arlington County}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Arlington County",
            "choppedEntity": "Q107126"
        }
    },
    {
        "chopped": {
            "question": "Where does Shirley Chisholm work that is bordered by using ",
            "query": "SELECT ?ans1 WHERE { wd:Q239657 wdt:P937 ?ans1 . ?ans1 wdt:P47 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Shirley Chisholm work location ?ans1 . ?ans1 shares border with ?unknown}"
        },
        "original": {
            "question": "Where does Shirley Chisholm work that is bordered by using Arlington County",
            "query": "SELECT ?answer WHERE { wd:Q239657 wdt:P937 ?answer . ?answer wdt:P47 wd:Q107126}",
            "NLQuery": "SELECT ?answer WHERE { Shirley Chisholm work location ?answer . ?answer shares border with Arlington County}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Arlington County",
            "choppedEntity": "Q107126"
        }
    },
    {
        "chopped": {
            "question": "What officially opened by ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P542 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 officially opened by ?unknown}"
        },
        "original": {
            "question": "What officially opened by Franz Beckenbauer",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P542 wd:Q4457}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer officially opened by Franz Beckenbauer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Franz Beckenbauer",
            "choppedEntity": "Q4457"
        }
    },
    {
        "chopped": {
            "question": "Which is the Inventory of French sanctuaries ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P5449 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Inventory of French sanctuaries ID ?ans1}"
        },
        "original": {
            "question": "Which is the Inventory of French sanctuaries ID for Notre-Dame de Chartres",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q180274 wdt:P5449 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Notre-Dame de Chartres Inventory of French sanctuaries ID ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Notre-Dame de Chartres",
            "choppedEntity": "Q180274"
        }
    },
    {
        "chopped": {
            "question": "How many students are taught by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P1066 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub student of ?unknown }"
        },
        "original": {
            "question": "How many students are taught by Charles Gounod",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P1066 wd:Q180278 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub student of Charles Gounod }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Charles Gounod",
            "choppedEntity": "Q180278"
        }
    },
    {
        "chopped": {
            "question": "Is Batman present in work ",
            "query": "ASK WHERE { wd:Q2695156 wdt:P1441 ?unknown }",
            "NLQuery": "ASK WHERE { Batman present in work ?unknown }"
        },
        "original": {
            "question": "Is Batman present in work Batman: Arkham Knight",
            "query": "ASK WHERE { wd:Q2695156 wdt:P1441 wd:Q15891648 }",
            "NLQuery": "ASK WHERE { Batman present in work Batman: Arkham Knight }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Batman: Arkham Knight",
            "choppedEntity": "Q15891648"
        }
    },
    {
        "chopped": {
            "question": "Is Batman a character in the movie ",
            "query": "ASK WHERE { wd:Q2695156 wdt:P1441 ?unknown }",
            "NLQuery": "ASK WHERE { Batman present in work ?unknown }"
        },
        "original": {
            "question": "Is Batman a character in the movie Batman: Arkham Knight",
            "query": "ASK WHERE { wd:Q2695156 wdt:P1441 wd:Q15891648 }",
            "NLQuery": "ASK WHERE { Batman present in work Batman: Arkham Knight }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Batman: Arkham Knight",
            "choppedEntity": "Q15891648"
        }
    },
    {
        "chopped": {
            "question": "What is CNC film rating (Romania) for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3402 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown CNC film rating (Romania) ?ans1}"
        },
        "original": {
            "question": "What is CNC film rating (Romania) for The Terminator",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q162255 wdt:P3402 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { The Terminator CNC film rating (Romania) ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Terminator",
            "choppedEntity": "Q162255"
        }
    },
    {
        "chopped": {
            "question": "Did Steve Wozniak go to college and the University of California, Berkeley and ",
            "query": "ASK WHERE { wd:Q483382 wdt:P69 wd:Q168756 . wd:Q483382 wdt:P69 ?unknown }",
            "NLQuery": "ASK WHERE { Steve Wozniak educated at University of California, Berkeley . Steve Wozniak educated at ?unknown }"
        },
        "original": {
            "question": "Did Steve Wozniak go to college and the University of California, Berkeley and Foothill College",
            "query": "ASK WHERE { wd:Q483382 wdt:P69 wd:Q168756 . wd:Q483382 wdt:P69 wd:Q5466480 }",
            "NLQuery": "ASK WHERE { Steve Wozniak educated at University of California, Berkeley . Steve Wozniak educated at Foothill College }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Foothill College",
            "choppedEntity": "Q5466480"
        }
    },
    {
        "chopped": {
            "question": "Did Steve Wozniak go to U. of California, Berkeley and ",
            "query": "ASK WHERE { wd:Q483382 wdt:P69 wd:Q168756 . wd:Q483382 wdt:P69 ?unknown }",
            "NLQuery": "ASK WHERE { Steve Wozniak educated at University of California, Berkeley . Steve Wozniak educated at ?unknown }"
        },
        "original": {
            "question": "Did Steve Wozniak go to U. of California, Berkeley and Foothill College",
            "query": "ASK WHERE { wd:Q483382 wdt:P69 wd:Q168756 . wd:Q483382 wdt:P69 wd:Q5466480 }",
            "NLQuery": "ASK WHERE { Steve Wozniak educated at University of California, Berkeley . Steve Wozniak educated at Foothill College }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Foothill College",
            "choppedEntity": "Q5466480"
        }
    },
    {
        "chopped": {
            "question": "How big is ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P398 ?obj . ?obj wdt:P31 wd:Q184348 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown child astronomical body ?obj . ?obj instance of elliptical galaxy } "
        },
        "original": {
            "question": "How big is the Andromeda Galax",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q2469 wdt:P398 ?obj . ?obj wdt:P31 wd:Q184348 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Andromeda Galaxy child astronomical body ?obj . ?obj instance of elliptical galaxy } "
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "the Andromeda Galax",
            "choppedEntity": "Q2469"
        }
    },
    {
        "chopped": {
            "question": "How many subsidiary are done by ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P355 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown subsidiary ?obj }"
        },
        "original": {
            "question": "How many subsidiary are done by Johns Hopkins University",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q193727 wdt:P355 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Johns Hopkins University subsidiary ?obj }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Johns Hopkins University",
            "choppedEntity": "Q193727"
        }
    },
    {
        "chopped": {
            "question": "Who follows the member of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P463 ?s . ?s ps:P463 ?ans2 . ?s pq:P155 ?ans1 . }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown member of ?s . ?s member of ?ans2 . ?s follows ?ans1 . }"
        },
        "original": {
            "question": "Who follows the member of Victor Hugo",
            "query": "SELECT ?value1 ?obj WHERE { wd:Q535 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P155 ?value1 . }",
            "NLQuery": "SELECT ?value1 ?obj WHERE { Victor Hugo member of ?s . ?s member of ?obj . ?s follows ?value1 . }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Victor Hugo",
            "choppedEntity": "Q535"
        }
    },
    {
        "chopped": {
            "question": "Who takes after the part of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P463 ?s . ?s ps:P463 ?ans2 . ?s pq:P155 ?ans1 . }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown member of ?s . ?s member of ?ans2 . ?s follows ?ans1 . }"
        },
        "original": {
            "question": "Who takes after the part of Victor Hugo",
            "query": "SELECT ?value1 ?obj WHERE { wd:Q535 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P155 ?value1 . }",
            "NLQuery": "SELECT ?value1 ?obj WHERE { Victor Hugo member of ?s . ?s member of ?obj . ?s follows ?value1 . }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Victor Hugo",
            "choppedEntity": "Q535"
        }
    },
    {
        "chopped": {
            "question": "What award was Alfred Hitchcock nominated for because of his work on ",
            "query": "SELECT ?ans1 WHERE { wd:Q7374 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Alfred Hitchcock nominated for ?s . ?s nominated for ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "What award was Alfred Hitchcock nominated for because of his work on Rebecca",
            "query": "SELECT ?obj WHERE { wd:Q7374 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q204212 }",
            "NLQuery": "SELECT ?obj WHERE { Alfred Hitchcock nominated for ?s . ?s nominated for ?obj . ?s for work Rebecca }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Rebecca",
            "choppedEntity": "Q204212"
        }
    },
    {
        "chopped": {
            "question": "In which award category was Alfred Hitchcock nominated for his work on ",
            "query": "SELECT ?ans1 WHERE { wd:Q7374 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Alfred Hitchcock nominated for ?s . ?s nominated for ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "In which award category was Alfred Hitchcock nominated for his work on Rebecca",
            "query": "SELECT ?obj WHERE { wd:Q7374 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q204212 }",
            "NLQuery": "SELECT ?obj WHERE { Alfred Hitchcock nominated for ?s . ?s nominated for ?obj . ?s for work Rebecca }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Rebecca",
            "choppedEntity": "Q204212"
        }
    },
    {
        "chopped": {
            "question": "Who competed in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1344 ?X . ?X wdt:P710 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown participant in ?X . ?X participant ?ans1}"
        },
        "original": {
            "question": "Who competed in Doc Holliday",
            "query": "SELECT ?answer WHERE { wd:Q44987 wdt:P1344 ?X . ?X wdt:P710 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Doc Holliday participant in ?X . ?X participant ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Doc Holliday",
            "choppedEntity": "Q44987"
        }
    },
    {
        "chopped": {
            "question": "Who were the competitors in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1344 ?X . ?X wdt:P710 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown participant in ?X . ?X participant ?ans1}"
        },
        "original": {
            "question": "Who were the competitors in Doc Holiday",
            "query": "SELECT ?answer WHERE { wd:Q44987 wdt:P1344 ?X . ?X wdt:P710 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Doc Holliday participant in ?X . ?X participant ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Doc Holiday",
            "choppedEntity": "Q44987"
        }
    },
    {
        "chopped": {
            "question": "When did Georgy Zhukov receive an award from ",
            "query": "SELECT ?ans1 WHERE { wd:Q124617 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Georgy Zhukov award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Georgy Zhukov receive an award from the Order of Sukhbaatar",
            "query": "SELECT ?value WHERE { wd:Q124617 p:P166 ?s . ?s ps:P166 wd:Q530008 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Georgy Zhukov award received ?s . ?s award received Order of Sukhbaatar . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Order of Sukhbaatar",
            "choppedEntity": "Q530008"
        }
    },
    {
        "chopped": {
            "question": "When will Oral stop being a member of ",
            "query": "SELECT ?ans1 WHERE { wd:Q487439 p:P17 ?s . ?s ps:P17 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Oral country ?s . ?s country ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When will Oral stop being a member of the Russian Soviet Federative Socialist Republic",
            "query": "SELECT ?value WHERE { wd:Q487439 p:P17 ?s . ?s ps:P17 wd:Q2184 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Oral country ?s . ?s country Russian Soviet Federative Socialist Republic . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Russian Soviet Federative Socialist Republic",
            "choppedEntity": "Q2184"
        }
    },
    {
        "chopped": {
            "question": "When will Oral quit being an individual from ",
            "query": "SELECT ?ans1 WHERE { wd:Q487439 p:P17 ?s . ?s ps:P17 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Oral country ?s . ?s country ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When will Oral quit being an individual from the Russian Soviet Federative Socialist Republic",
            "query": "SELECT ?value WHERE { wd:Q487439 p:P17 ?s . ?s ps:P17 wd:Q2184 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Oral country ?s . ?s country Russian Soviet Federative Socialist Republic . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Russian Soviet Federative Socialist Republic",
            "choppedEntity": "Q2184"
        }
    },
    {
        "chopped": {
            "question": "At the end of 1993, who held the position of chairperson of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P488 ?s . ?s ps:P488 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1993')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown chairperson ?s . ?s chairperson ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),'1993')) }"
        },
        "original": {
            "question": "At the end of 1993, who held the position of chairperson of the Asian Development Bank",
            "query": "SELECT ?obj WHERE { wd:Q188822 p:P488 ?s . ?s ps:P488 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1993')) }",
            "NLQuery": "SELECT ?obj WHERE { Asian Development Bank chairperson ?s . ?s chairperson ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1993')) }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Asian Development Bank",
            "choppedEntity": "Q188822"
        }
    },
    {
        "chopped": {
            "question": "What is the slope of ",
            "query": "ASK WHERE { ?unknown wdt:P4184 ?obj FILTER(?obj > 0.0) } ",
            "NLQuery": "ASK WHERE { ?unknown slope ?obj FILTER(?obj > 0.0) } "
        },
        "original": {
            "question": "What is the slope of the Indiananpolis Motor Speedway",
            "query": "ASK WHERE { wd:Q172732 wdt:P4184 ?obj FILTER(?obj > 0.0) } ",
            "NLQuery": "ASK WHERE { Indianapolis Motor Speedway slope ?obj FILTER(?obj > 0.0) } "
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "the Indiananpolis Motor Speedway",
            "choppedEntity": "Q172732"
        }
    },
    {
        "chopped": {
            "question": "Which is the official religion for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P3075 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 official religion ?unknown}"
        },
        "original": {
            "question": "Which is the official religion for Zoroastrianism",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P3075 wd:Q9601}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer official religion Zoroastrianism}"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Zoroastrianism",
            "choppedEntity": "Q9601"
        }
    },
    {
        "chopped": {
            "question": "What precedes and follows Jeremiah in the ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q131590 p:P179 ?s . ?s ps:P179 ?unknown . ?s pq:P155 ?ans1 . ?s pq:P156 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Jeremiah part of the series ?s . ?s part of the series ?unknown . ?s follows ?ans1 . ?s followed by ?ans2 }"
        },
        "original": {
            "question": "What precedes and follows Jeremiah in the Nevi'im",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q131590 p:P179 ?s . ?s ps:P179 wd:Q216383 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Jeremiah part of the series ?s . ?s part of the series Nevi'im . ?s follows ?value1 . ?s followed by ?value2 }"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Nevi'im",
            "choppedEntity": "Q216383"
        }
    },
    {
        "chopped": {
            "question": "who  is the mausoleum for place of burial of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P119 ?obj . ?obj wdt:P31 wd:Q162875 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown place of burial ?obj . ?obj instance of mausoleum } "
        },
        "original": {
            "question": "who  is the mausoleum for place of burial of Qin Shi Huang",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q7192 wdt:P119 ?obj . ?obj wdt:P31 wd:Q162875 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Qin Shi Huang place of burial ?obj . ?obj instance of mausoleum } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Qin Shi Huang",
            "choppedEntity": "Q7192"
        }
    },
    {
        "chopped": {
            "question": "Who is known for mausoleum place of burial of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P119 ?obj . ?obj wdt:P31 wd:Q162875 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown place of burial ?obj . ?obj instance of mausoleum } "
        },
        "original": {
            "question": "Who is known for mausoleum place of burial of Qin Shi Huang",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q7192 wdt:P119 ?obj . ?obj wdt:P31 wd:Q162875 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Qin Shi Huang place of burial ?obj . ?obj instance of mausoleum } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Qin Shi Huang",
            "choppedEntity": "Q7192"
        }
    },
    {
        "chopped": {
            "question": "How many instruments are played by ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P1303 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown instrument ?obj }"
        },
        "original": {
            "question": "How many instruments are played by Toto Cutugno",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q487473 wdt:P1303 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Toto Cutugno instrument ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Toto Cutugno",
            "choppedEntity": "Q487473"
        }
    },
    {
        "chopped": {
            "question": "Which is the number of instruments that are played by ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P1303 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown instrument ?obj }"
        },
        "original": {
            "question": "Which is the number of instruments that are played by Toto Cutugno",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q487473 wdt:P1303 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Toto Cutugno instrument ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Toto Cutugno",
            "choppedEntity": "Q487473"
        }
    },
    {
        "chopped": {
            "question": "Is the pitting resistance of ",
            "query": "ASK WHERE { ?unknown wdt:P5624 ?obj FILTER(?obj = 18) } ",
            "NLQuery": "ASK WHERE { ?unknown pitting resistance equivalent number ?obj FILTER(?obj = 18) } "
        },
        "original": {
            "question": "Is the pitting resistance of SAE 301 stainless steel 18",
            "query": "ASK WHERE { wd:Q56508859 wdt:P5624 ?obj FILTER(?obj = 18) } ",
            "NLQuery": "ASK WHERE { SAE 301 stainless steel pitting resistance equivalent number ?obj FILTER(?obj = 18) } "
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "SAE 301 stainless steel 18",
            "choppedEntity": "Q56508859"
        }
    },
    {
        "chopped": {
            "question": "What is the number of out of school children in ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2573 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown number of out-of-school children ?ans1}"
        },
        "original": {
            "question": "What is the number of out of school children in Pakistan",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q843 wdt:P2573 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Pakistan number of out-of-school children ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Pakistan",
            "choppedEntity": "Q843"
        }
    },
    {
        "chopped": {
            "question": "Did Gotthold Ephrain Lessing obtain ",
            "query": "SELECT ?ans1 WHERE { wd:Q34628 p:P69 ?s . ?s ps:P69 ?ans1 . ?s pq:P512 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Gotthold Ephraim Lessing educated at ?s . ?s educated at ?ans1 . ?s academic degree ?unknown }"
        },
        "original": {
            "question": "Did Gotthold Ephrain Lessing obtain the Master's degree",
            "query": "SELECT ?obj WHERE { wd:Q34628 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 wd:Q183816 }",
            "NLQuery": "SELECT ?obj WHERE { Gotthold Ephraim Lessing educated at ?s . ?s educated at ?obj . ?s academic degree master's degree }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Master's degree",
            "choppedEntity": "Q183816"
        }
    },
    {
        "chopped": {
            "question": "Does Gotthold Ephrain Lessing have ",
            "query": "SELECT ?ans1 WHERE { wd:Q34628 p:P69 ?s . ?s ps:P69 ?ans1 . ?s pq:P512 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Gotthold Ephraim Lessing educated at ?s . ?s educated at ?ans1 . ?s academic degree ?unknown }"
        },
        "original": {
            "question": "Does Gotthold Ephrain Lessing have a Master's degree",
            "query": "SELECT ?obj WHERE { wd:Q34628 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 wd:Q183816 }",
            "NLQuery": "SELECT ?obj WHERE { Gotthold Ephraim Lessing educated at ?s . ?s educated at ?obj . ?s academic degree master's degree }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "a Master's degree",
            "choppedEntity": "Q183816"
        }
    },
    {
        "chopped": {
            "question": "What is Jammu and Kashmir's commune in their diplomatic relationship with ",
            "query": "SELECT ?ans1 WHERE { wd:Q1180 wdt:P131 ?ans1 . ?ans1 wdt:P530 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Jammu and Kashmir located in the administrative territorial entity ?ans1 . ?ans1 diplomatic relation ?unknown}"
        },
        "original": {
            "question": "What is Jammu and Kashmir's commune in their diplomatic relationship with Iceland",
            "query": "SELECT ?answer WHERE { wd:Q1180 wdt:P131 ?answer . ?answer wdt:P530 wd:Q189}",
            "NLQuery": "SELECT ?answer WHERE { Jammu and Kashmir located in the administrative territorial entity ?answer . ?answer diplomatic relation Iceland}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Iceland",
            "choppedEntity": "Q189"
        }
    },
    {
        "chopped": {
            "question": "Which is connected with ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2789 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown connects with ?ans1}"
        },
        "original": {
            "question": "Which is connected with the Iberian Peninsula",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q12837 wdt:P2789 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Iberian Peninsula connects with ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Iberian Peninsula",
            "choppedEntity": "Q12837"
        }
    },
    {
        "chopped": {
            "question": "What railway company operates ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P137 ?obj . ?obj wdt:P31 wd:Q249556 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown operator ?obj . ?obj instance of railway company } "
        },
        "original": {
            "question": "What railway company operates the Gotthard Base Tunnel",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q193002 wdt:P137 ?obj . ?obj wdt:P31 wd:Q249556 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Gotthard Base Tunnel operator ?obj . ?obj instance of railway company } "
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "the Gotthard Base Tunnel",
            "choppedEntity": "Q193002"
        }
    },
    {
        "chopped": {
            "question": "What railroad company works ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P137 ?obj . ?obj wdt:P31 wd:Q249556 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown operator ?obj . ?obj instance of railway company } "
        },
        "original": {
            "question": "What railroad company works the Gotthard Base Tunnel",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q193002 wdt:P137 ?obj . ?obj wdt:P31 wd:Q249556 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Gotthard Base Tunnel operator ?obj . ?obj instance of railway company } "
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "the Gotthard Base Tunnel",
            "choppedEntity": "Q193002"
        }
    },
    {
        "chopped": {
            "question": "What is the Open Media Database ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P5534 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Open Media Database person ID ?ans1}"
        },
        "original": {
            "question": "What is the Open Media Database ID for Joss Whedon",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q298025 wdt:P5534 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Joss Whedon Open Media Database person ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Joss Whedon",
            "choppedEntity": "Q298025"
        }
    },
    {
        "chopped": {
            "question": "What is the Sport Australia Hall of Fame ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4415 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Sport Australia Hall of Fame inductee ID ?ans1}"
        },
        "original": {
            "question": "What is the Sport Australia Hall of Fame ID for Margaret Court",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q202342 wdt:P4415 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Margaret Court Sport Australia Hall of Fame inductee ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Margaret Court",
            "choppedEntity": "Q202342"
        }
    },
    {
        "chopped": {
            "question": "Name a movie character performed by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P175 ?unknown . ?sbj wdt:P31 wd:Q15773347 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj performer ?unknown . ?sbj instance of film character } "
        },
        "original": {
            "question": "Name a movie character performed by Al Pacino",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P175 wd:Q41163 . ?sbj wdt:P31 wd:Q15773347 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj performer Al Pacino . ?sbj instance of film character } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Al Pacino",
            "choppedEntity": "Q41163"
        }
    },
    {
        "chopped": {
            "question": "Title a motion picture character performed by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P175 ?unknown . ?sbj wdt:P31 wd:Q15773347 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj performer ?unknown . ?sbj instance of film character } "
        },
        "original": {
            "question": "Title a motion picture character performed by Al Pacino",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P175 wd:Q41163 . ?sbj wdt:P31 wd:Q15773347 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj performer Al Pacino . ?sbj instance of film character } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Al Pacino",
            "choppedEntity": "Q41163"
        }
    },
    {
        "chopped": {
            "question": "When was Ethel Merman nominated for the Tony Award for ",
            "query": "SELECT ?ans1 WHERE { wd:Q129087 p:P1411 ?s . ?s ps:P1411 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ethel Merman nominated for ?s . ?s nominated for ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was Ethel Merman nominated for the Tony Award for Best Actress in a Musical",
            "query": "SELECT ?value WHERE { wd:Q129087 p:P1411 ?s . ?s ps:P1411 wd:Q1537996 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ethel Merman nominated for ?s . ?s nominated for Tony Award for Best Actress in a Musical . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Best Actress in a Musical",
            "choppedEntity": "Q1537996"
        }
    },
    {
        "chopped": {
            "question": "In which year was Ethel Merman nominated for the Tony Award for ",
            "query": "SELECT ?ans1 WHERE { wd:Q129087 p:P1411 ?s . ?s ps:P1411 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ethel Merman nominated for ?s . ?s nominated for ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "In which year was Ethel Merman nominated for the Tony Award for Best Actress in a Musical",
            "query": "SELECT ?value WHERE { wd:Q129087 p:P1411 ?s . ?s ps:P1411 wd:Q1537996 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ethel Merman nominated for ?s . ?s nominated for Tony Award for Best Actress in a Musical . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Best Actress in a Musical",
            "choppedEntity": "Q1537996"
        }
    },
    {
        "chopped": {
            "question": "What are the protests of the war  that uses the ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P607 ?X . ?X wdt:P710 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown conflict ?X . ?X participant ?ans1}"
        },
        "original": {
            "question": "What are the protests of the war  that uses the M-84",
            "query": "SELECT ?answer WHERE { wd:Q746774 wdt:P607 ?X . ?X wdt:P710 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { M-84 conflict ?X . ?X participant ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "M-84",
            "choppedEntity": "Q746774"
        }
    },
    {
        "chopped": {
            "question": "What are the challenges of the war that employments the ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P607 ?X . ?X wdt:P710 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown conflict ?X . ?X participant ?ans1}"
        },
        "original": {
            "question": "What are the challenges of the war that employments the M-84",
            "query": "SELECT ?answer WHERE { wd:Q746774 wdt:P607 ?X . ?X wdt:P710 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { M-84 conflict ?X . ?X participant ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "M-84",
            "choppedEntity": "Q746774"
        }
    },
    {
        "chopped": {
            "question": "Which is the literary theme of the characters of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P674 ?unknown . ?sbj wdt:P31 wd:Q42109240 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj characters ?unknown . ?sbj instance of literary theme } "
        },
        "original": {
            "question": "Which is the literary theme of the characters of Robin Hood",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P674 wd:Q122634 . ?sbj wdt:P31 wd:Q42109240 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj characters Robin Hood . ?sbj instance of literary theme } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Robin Hood",
            "choppedEntity": "Q122634"
        }
    },
    {
        "chopped": {
            "question": "Which is the scholarly topic of the characters of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P674 ?unknown . ?sbj wdt:P31 wd:Q42109240 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj characters ?unknown . ?sbj instance of literary theme } "
        },
        "original": {
            "question": "Which is the scholarly topic of the characters of Robin Hood",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P674 wd:Q122634 . ?sbj wdt:P31 wd:Q42109240 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj characters Robin Hood . ?sbj instance of literary theme } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Robin Hood",
            "choppedEntity": "Q122634"
        }
    },
    {
        "chopped": {
            "question": "How much money did George Marshall receive with his ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q151414 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P2121 ?ans1 . ?s pq:P585 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { George Marshall award received ?s . ?s award received ?unknown . ?s prize money ?ans1 . ?s point in time ?ans2 }"
        },
        "original": {
            "question": "How much money did George Marshall receive with his Nobel Peace Prize",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q151414 p:P166 ?s . ?s ps:P166 wd:Q35637 . ?s pq:P2121 ?value1 . ?s pq:P585 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { George Marshall award received ?s . ?s award received Nobel Peace Prize . ?s prize money ?value1 . ?s point in time ?value2 }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Nobel Peace Prize",
            "choppedEntity": "Q35637"
        }
    },
    {
        "chopped": {
            "question": "What street in Palacio dos Grilos Rua da IIha located the headquarters of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P159 ?s . ?s ps:P159 ?ans1 . ?s pq:P969 ?x FILTER(contains(?x,'Pal\u00e1cio dos Grilos Rua da Ilha')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown headquarters location ?s . ?s headquarters location ?ans1 . ?s none ?x FILTER(contains(?x,'Pal\u00e1cio dos Grilos Rua da Ilha')) }"
        },
        "original": {
            "question": "What street in Palacio dos Grilos Rua da IIha located the headquarters of the University of Coimbra",
            "query": "SELECT ?obj WHERE { wd:Q368643 p:P159 ?s . ?s ps:P159 ?obj . ?s pq:P969 ?x FILTER(contains(?x,'Pal\u00e1cio dos Grilos Rua da Ilha')) }",
            "NLQuery": "SELECT ?obj WHERE { University of Coimbra headquarters location ?s . ?s headquarters location ?obj . ?s none ?x FILTER(contains(?x,'Pal\u00e1cio dos Grilos Rua da Ilha')) }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the University of Coimbra",
            "choppedEntity": "Q368643"
        }
    },
    {
        "chopped": {
            "question": "Which is IFSC climber ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3690 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown IFSC climber ID ?ans1}"
        },
        "original": {
            "question": "Which is IFSC climber ID of Chris Sharma",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q722754 wdt:P3690 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Chris Sharma IFSC climber ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Chris Sharma",
            "choppedEntity": "Q722754"
        }
    },
    {
        "chopped": {
            "question": "For what work did Ernest Borgnine receive a nomination for Primetime Emmy Award for ",
            "query": "SELECT ?ans1 WHERE { wd:Q102551 p:P1411 ?s . ?s ps:P1411 ?unknown . ?s pq:P1686 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ernest Borgnine nominated for ?s . ?s nominated for ?unknown . ?s for work ?ans1}"
        },
        "original": {
            "question": "For what work did Ernest Borgnine receive a nomination for Primetime Emmy Award for Outstanding Supporting Actor in a Miniseries or a Movie",
            "query": "SELECT ?value WHERE { wd:Q102551 p:P1411 ?s . ?s ps:P1411 wd:Q945887 . ?s pq:P1686 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ernest Borgnine nominated for ?s . ?s nominated for Primetime Emmy Award for Outstanding Supporting Actor in a Miniseries or a Movie . ?s for work ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Outstanding Supporting Actor in a Miniseries or a Movie",
            "choppedEntity": "Q945887"
        }
    },
    {
        "chopped": {
            "question": "What school was created by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P170 ?X . ?X wdt:P135 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown creator ?X . ?X movement ?ans1}"
        },
        "original": {
            "question": "What school was created by Gregor Samsa",
            "query": "SELECT ?answer WHERE { wd:Q3566632 wdt:P170 ?X . ?X wdt:P135 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Gregor Samsa creator ?X . ?X movement ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Gregor Samsa",
            "choppedEntity": "Q3566632"
        }
    },
    {
        "chopped": {
            "question": "Name the school that was created by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P170 ?X . ?X wdt:P135 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown creator ?X . ?X movement ?ans1}"
        },
        "original": {
            "question": "Name the school that was created by Gregor Samsa",
            "query": "SELECT ?answer WHERE { wd:Q3566632 wdt:P170 ?X . ?X wdt:P135 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Gregor Samsa creator ?X . ?X movement ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Gregor Samsa",
            "choppedEntity": "Q3566632"
        }
    },
    {
        "chopped": {
            "question": "When was Grand Theft Auto III released for ",
            "query": "SELECT ?ans1 WHERE { wd:Q149106 p:P400 ?s . ?s ps:P400 ?unknown . ?s pq:P577 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Grand Theft Auto III platform ?s . ?s platform ?unknown . ?s date of publication ?ans1}"
        },
        "original": {
            "question": "When was Grand Theft Auto III released for Xbox",
            "query": "SELECT ?value WHERE { wd:Q149106 p:P400 ?s . ?s ps:P400 wd:Q132020 . ?s pq:P577 ?value}",
            "NLQuery": "SELECT ?value WHERE { Grand Theft Auto III platform ?s . ?s platform Xbox . ?s date of publication ?value}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Xbox",
            "choppedEntity": "Q132020"
        }
    },
    {
        "chopped": {
            "question": "Who is the producer and executive producer of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P162 ?ans1 . ?unknown wdt:P1431 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown producer ?ans1 . ?unknown executive producer ?ans2 }"
        },
        "original": {
            "question": "Who is the producer and executive producer of Full Metal Jacket",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q243439 wdt:P162 ?ans_1 . wd:Q243439 wdt:P1431 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Full Metal Jacket producer ?ans_1 . Full Metal Jacket executive producer ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Full Metal Jacket",
            "choppedEntity": "Q243439"
        }
    },
    {
        "chopped": {
            "question": "What are the producers of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P162 ?ans1 . ?unknown wdt:P1431 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown producer ?ans1 . ?unknown executive producer ?ans2 }"
        },
        "original": {
            "question": "What are the producers of Full Metal Jacket",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q243439 wdt:P162 ?ans_1 . wd:Q243439 wdt:P1431 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Full Metal Jacket producer ?ans_1 . Full Metal Jacket executive producer ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Full Metal Jacket",
            "choppedEntity": "Q243439"
        }
    },
    {
        "chopped": {
            "question": "What is the prescribed drug of the murder method of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P509 ?X . ?X wdt:P2176 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cause of death ?X . ?X drug used for treatment ?ans1}"
        },
        "original": {
            "question": "What is the prescribed drug of the murder method of Tiny Tim",
            "query": "SELECT ?answer WHERE { wd:Q979347 wdt:P509 ?X . ?X wdt:P2176 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Tiny Tim cause of death ?X . ?X drug used for treatment ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Tiny Tim",
            "choppedEntity": "Q979347"
        }
    },
    {
        "chopped": {
            "question": "According to the All India Trinamool Congress, what political party serves as the head of government for ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P6 ?s . ?s ps:P6 ?ans1 . ?s pq:P102 wd:Q912899 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown head of government ?s . ?s head of government ?ans1 . ?s member of political party All India Trinamool Congress }"
        },
        "original": {
            "question": "According to the All India Trinamool Congress, what political party serves as the head of government for West Bengal",
            "query": "SELECT ?obj WHERE { wd:Q1356 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P102 wd:Q912899 }",
            "NLQuery": "SELECT ?obj WHERE { West Bengal head of government ?s . ?s head of government ?obj . ?s member of political party All India Trinamool Congress }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "West Bengal",
            "choppedEntity": "Q1356"
        }
    },
    {
        "chopped": {
            "question": "What political party serves as the head of government for West Bengal according to ",
            "query": "SELECT ?ans1 WHERE { wd:Q1356 p:P6 ?s . ?s ps:P6 ?ans1 . ?s pq:P102 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { West Bengal head of government ?s . ?s head of government ?ans1 . ?s member of political party ?unknown }"
        },
        "original": {
            "question": "What political party serves as the head of government for West Bengal according to the All India Trinamool Congress",
            "query": "SELECT ?obj WHERE { wd:Q1356 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P102 wd:Q912899 }",
            "NLQuery": "SELECT ?obj WHERE { West Bengal head of government ?s . ?s head of government ?obj . ?s member of political party All India Trinamool Congress }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the All India Trinamool Congress",
            "choppedEntity": "Q912899"
        }
    },
    {
        "chopped": {
            "question": "What is the language of work or name for The Divine Comedy whose edition is ",
            "query": "SELECT ?ans1 WHERE { wd:Q40185 p:P747 ?s . ?s ps:P747 ?unknown . ?s pq:P407 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { The Divine Comedy edition ?s . ?s edition ?unknown . ?s language of work or name ?ans1}"
        },
        "original": {
            "question": "What is the language of work or name for The Divine Comedy whose edition is La Divine Com\u00e9die",
            "query": "SELECT ?value WHERE { wd:Q40185 p:P747 ?s . ?s ps:P747 wd:Q21191003 . ?s pq:P407 ?value}",
            "NLQuery": "SELECT ?value WHERE { The Divine Comedy edition ?s . ?s edition La Divine Com\u00e9die . ?s language of work or name ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "La Divine Com\u00e9die",
            "choppedEntity": "Q21191003"
        }
    },
    {
        "chopped": {
            "question": "What is the language of work or name for The Divine Comedy whose edition is ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P747 ?s . ?s ps:P747 wd:Q21191003 . ?s pq:P407 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown edition ?s . ?s edition La Divine Com\u00e9die . ?s language of work or name ?ans1}"
        },
        "original": {
            "question": "What is the language of work or name for The Divine Comedy whose edition is La Divine Com\u00e9die",
            "query": "SELECT ?value WHERE { wd:Q40185 p:P747 ?s . ?s ps:P747 wd:Q21191003 . ?s pq:P407 ?value}",
            "NLQuery": "SELECT ?value WHERE { The Divine Comedy edition ?s . ?s edition La Divine Com\u00e9die . ?s language of work or name ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "La Divine Com\u00e9die",
            "choppedEntity": "Q40185"
        }
    },
    {
        "chopped": {
            "question": "What is the language of work or title for The Divine Comedy whose version is ",
            "query": "SELECT ?ans1 WHERE { wd:Q40185 p:P747 ?s . ?s ps:P747 ?unknown . ?s pq:P407 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { The Divine Comedy edition ?s . ?s edition ?unknown . ?s language of work or name ?ans1}"
        },
        "original": {
            "question": "What is the language of work or title for The Divine Comedy whose version is La Divine Comedie",
            "query": "SELECT ?value WHERE { wd:Q40185 p:P747 ?s . ?s ps:P747 wd:Q21191003 . ?s pq:P407 ?value}",
            "NLQuery": "SELECT ?value WHERE { The Divine Comedy edition ?s . ?s edition La Divine Com\u00e9die . ?s language of work or name ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "La Divine Comedie",
            "choppedEntity": "Q21191003"
        }
    },
    {
        "chopped": {
            "question": "What is the language of work or title for The Divine Comedy whose version is ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P747 ?s . ?s ps:P747 wd:Q21191003 . ?s pq:P407 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown edition ?s . ?s edition La Divine Com\u00e9die . ?s language of work or name ?ans1}"
        },
        "original": {
            "question": "What is the language of work or title for The Divine Comedy whose version is La Divine Comedie",
            "query": "SELECT ?value WHERE { wd:Q40185 p:P747 ?s . ?s ps:P747 wd:Q21191003 . ?s pq:P407 ?value}",
            "NLQuery": "SELECT ?value WHERE { The Divine Comedy edition ?s . ?s edition La Divine Com\u00e9die . ?s language of work or name ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "La Divine Comedie",
            "choppedEntity": "Q40185"
        }
    },
    {
        "chopped": {
            "question": "What is  Canadian Register of Historic Places ID  for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P477 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Canadian Register of Historic Places ID ?ans1}"
        },
        "original": {
            "question": "What is  Canadian Register of Historic Places ID  for Chambly Canal",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q2935991 wdt:P477 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Chambly Canal Canadian Register of Historic Places ID ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Chambly Canal",
            "choppedEntity": "Q2935991"
        }
    },
    {
        "chopped": {
            "question": "Which is the Twitter username for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2002 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Twitter username ?ans1}"
        },
        "original": {
            "question": "Which is the Twitter username for Snapchat",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q333618 wdt:P2002 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Snapchat Twitter username ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Snapchat",
            "choppedEntity": "Q333618"
        }
    },
    {
        "chopped": {
            "question": "What is the ethnicity depicted in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P175 ?X . ?X wdt:P172 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown performer ?X . ?X ethnic group ?ans1}"
        },
        "original": {
            "question": "What is the ethnicity depicted in Rebel of the Underground",
            "query": "SELECT ?answer WHERE { wd:Q55266138 wdt:P175 ?X . ?X wdt:P172 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Rebel of the Underground performer ?X . ?X ethnic group ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Rebel of the Underground",
            "choppedEntity": "Q55266138"
        }
    },
    {
        "chopped": {
            "question": "What is the ethnicity portrayed in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P175 ?X . ?X wdt:P172 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown performer ?X . ?X ethnic group ?ans1}"
        },
        "original": {
            "question": "What is the ethnicity portrayed in Revolt of the Underground",
            "query": "SELECT ?answer WHERE { wd:Q55266138 wdt:P175 ?X . ?X wdt:P172 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Rebel of the Underground performer ?X . ?X ethnic group ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Revolt of the Underground",
            "choppedEntity": "Q55266138"
        }
    },
    {
        "chopped": {
            "question": "What was the cause and manner of death of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P509 ?ans1 . ?unknown wdt:P1196 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown cause of death ?ans1 . ?unknown manner of death ?ans2 }"
        },
        "original": {
            "question": "What was the cause and manner of death of Anne Bancroft",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q183532 wdt:P509 ?ans_1 . wd:Q183532 wdt:P1196 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Anne Bancroft cause of death ?ans_1 . Anne Bancroft manner of death ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Anne Bancroft",
            "choppedEntity": "Q183532"
        }
    },
    {
        "chopped": {
            "question": "Which literary genre was derived from ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P144 ?X . ?X wdt:P136 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown based on ?X . ?X genre ?ans1}"
        },
        "original": {
            "question": "Which literary genre was derived from \u00datlaginn",
            "query": "SELECT ?answer WHERE { wd:Q1767048 wdt:P144 ?X . ?X wdt:P136 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { \u00datlaginn based on ?X . ?X genre ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "\u00datlaginn",
            "choppedEntity": "Q1767048"
        }
    },
    {
        "chopped": {
            "question": "Which scholarly sort was determined from ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P144 ?X . ?X wdt:P136 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown based on ?X . ?X genre ?ans1}"
        },
        "original": {
            "question": "Which scholarly sort was determined from \u00datlaginn",
            "query": "SELECT ?answer WHERE { wd:Q1767048 wdt:P144 ?X . ?X wdt:P136 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { \u00datlaginn based on ?X . ?X genre ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "\u00datlaginn",
            "choppedEntity": "Q1767048"
        }
    },
    {
        "chopped": {
            "question": "Which city with 131429.0 inhabitants was also the death location of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P20 ?ans1 . ?ans1 wdt:P1082 ?x FILTER(contains(?x,'131429.0'))}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of death ?ans1 . ?ans1 population ?x FILTER(contains(?x,'131429.0'))}"
        },
        "original": {
            "question": "Which city with 131429.0 inhabitants was also the death location of Karl L\u00f6with",
            "query": "SELECT ?answer WHERE { wd:Q75790 wdt:P20 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'131429.0'))}",
            "NLQuery": "SELECT ?answer WHERE { Karl L\u00f6with place of death ?answer . ?answer population ?x FILTER(contains(?x,'131429.0'))}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Karl L\u00f6with",
            "choppedEntity": "Q75790"
        }
    },
    {
        "chopped": {
            "question": "Which city with 131429.0 occupants was too the passing area of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P20 ?ans1 . ?ans1 wdt:P1082 ?x FILTER(contains(?x,'131429.0'))}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of death ?ans1 . ?ans1 population ?x FILTER(contains(?x,'131429.0'))}"
        },
        "original": {
            "question": "Which city with 131429.0 occupants was too the passing area of Karl L\u00f6with",
            "query": "SELECT ?answer WHERE { wd:Q75790 wdt:P20 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'131429.0'))}",
            "NLQuery": "SELECT ?answer WHERE { Karl L\u00f6with place of death ?answer . ?answer population ?x FILTER(contains(?x,'131429.0'))}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Karl L\u00f6with",
            "choppedEntity": "Q75790"
        }
    },
    {
        "chopped": {
            "question": "What is the series ordinal award as NPR Top 100 Science Fiction and Fantasy Books has received for ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 wd:Q20899118 . ?s pq:P1545 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received NPR Top 100 Science Fiction and Fantasy Books . ?s series ordinal ?ans1}"
        },
        "original": {
            "question": "What is the series ordinal award as NPR Top 100 Science Fiction and Fantasy Books has received for Watership Down",
            "query": "SELECT ?value WHERE { wd:Q936801 p:P166 ?s . ?s ps:P166 wd:Q20899118 . ?s pq:P1545 ?value}",
            "NLQuery": "SELECT ?value WHERE { Watership Down award received ?s . ?s award received NPR Top 100 Science Fiction and Fantasy Books . ?s series ordinal ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Watership Down",
            "choppedEntity": "Q936801"
        }
    },
    {
        "chopped": {
            "question": "Which is the authority of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P797 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 authority ?unknown}"
        },
        "original": {
            "question": "Which is the authority of FINA",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P797 wd:Q189289}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer authority FINA}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "FINA",
            "choppedEntity": "Q189289"
        }
    },
    {
        "chopped": {
            "question": "Who is the champion of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P166 ?X . ?X wdt:P1346 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?X . ?X winner ?ans1}"
        },
        "original": {
            "question": "Who is the champion of Frederick Sumner McKay",
            "query": "SELECT ?answer WHERE { wd:Q24275198 wdt:P166 ?X . ?X wdt:P1346 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Frederick Sumner McKay award received ?X . ?X winner ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Frederick Sumner McKay",
            "choppedEntity": "Q24275198"
        }
    },
    {
        "chopped": {
            "question": "Who is the winner of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P166 ?X . ?X wdt:P1346 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?X . ?X winner ?ans1}"
        },
        "original": {
            "question": "Who is the winner of Frederick Sumner McKay",
            "query": "SELECT ?answer WHERE { wd:Q24275198 wdt:P166 ?X . ?X wdt:P1346 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Frederick Sumner McKay award received ?X . ?X winner ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Frederick Sumner McKay",
            "choppedEntity": "Q24275198"
        }
    },
    {
        "chopped": {
            "question": "What is the FIPS 6-4 code in the city of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P882 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown FIPS 6-4 (US counties) ?ans1}"
        },
        "original": {
            "question": "What is the FIPS 6-4 code in the city of Richmond",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q43421 wdt:P882 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Richmond FIPS 6-4 (US counties) ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Richmond",
            "choppedEntity": "Q43421"
        }
    },
    {
        "chopped": {
            "question": "What is attributed to ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P1773 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 none ?unknown}"
        },
        "original": {
            "question": "What is attributed to Chazal",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P1773 wd:Q2915314}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer none Chazal}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Chazal",
            "choppedEntity": "Q2915314"
        }
    },
    {
        "chopped": {
            "question": "What are the greatest accomplishments of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P166 ?X . ?X wdt:P1346 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?X . ?X winner ?ans1}"
        },
        "original": {
            "question": "What are the greatest accomplishments of William Henry Bragg",
            "query": "SELECT ?answer WHERE { wd:Q133747 wdt:P166 ?X . ?X wdt:P1346 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { William Henry Bragg award received ?X . ?X winner ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "William Henry Bragg",
            "choppedEntity": "Q133747"
        }
    },
    {
        "chopped": {
            "question": "Who is the mother of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P25 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj mother ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who is the mother of Kathie Lee Gifford",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P25 wd:Q465695 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj mother Kathie Lee Gifford . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Kathie Lee Gifford",
            "choppedEntity": "Q465695"
        }
    },
    {
        "chopped": {
            "question": "What player's points/goals/set scored is 16.0 on the same team as ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P54 ?s . ?s ps:P54 ?ans1 . ?s pq:P1351 ?x FILTER(contains(?x,'16.0')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown member of sports team ?s . ?s member of sports team ?ans1 . ?s number of points/goals/set scored ?x FILTER(contains(?x,'16.0')) }"
        },
        "original": {
            "question": "What player's points/goals/set scored is 16.0 on the same team as Allan Simonsen",
            "query": "SELECT ?obj WHERE { wd:Q153463 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1351 ?x FILTER(contains(?x,'16.0')) }",
            "NLQuery": "SELECT ?obj WHERE { Allan Simonsen member of sports team ?s . ?s member of sports team ?obj . ?s number of points/goals/set scored ?x FILTER(contains(?x,'16.0')) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Allan Simonsen",
            "choppedEntity": "Q153463"
        }
    },
    {
        "chopped": {
            "question": "Who is the player whose points/goals/set scored is 16.0 on the same team as ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P54 ?s . ?s ps:P54 ?ans1 . ?s pq:P1351 ?x FILTER(contains(?x,'16.0')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown member of sports team ?s . ?s member of sports team ?ans1 . ?s number of points/goals/set scored ?x FILTER(contains(?x,'16.0')) }"
        },
        "original": {
            "question": "Who is the player whose points/goals/set scored is 16.0 on the same team as Allan Simonsen",
            "query": "SELECT ?obj WHERE { wd:Q153463 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1351 ?x FILTER(contains(?x,'16.0')) }",
            "NLQuery": "SELECT ?obj WHERE { Allan Simonsen member of sports team ?s . ?s member of sports team ?obj . ?s number of points/goals/set scored ?x FILTER(contains(?x,'16.0')) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Allan Simonsen",
            "choppedEntity": "Q153463"
        }
    },
    {
        "chopped": {
            "question": "Which  is terminus of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P559 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown terminus ?ans1}"
        },
        "original": {
            "question": "Which  is terminus of Channel Tunnel",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q10257 wdt:P559 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Channel Tunnel terminus ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Channel Tunnel",
            "choppedEntity": "Q10257"
        }
    },
    {
        "chopped": {
            "question": "Which student was ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1066 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj student of ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Which student was Carl Gustav Jung's",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1066 wd:Q41532 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj student of Carl Gustav Jung . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Carl Gustav Jung's",
            "choppedEntity": "Q41532"
        }
    },
    {
        "chopped": {
            "question": "In what year was Hamad bin Jassim bin Jaber Al Thani appointed Prime Minister of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P6 ?s . ?s ps:P6 wd:Q57734 . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown head of government ?s . ?s head of government Hamad bin Jassim bin Jaber Al Thani . ?s start time ?ans1}"
        },
        "original": {
            "question": "In what year was Hamad bin Jassim bin Jaber Al Thani appointed Prime Minister of Qatar",
            "query": "SELECT ?value WHERE { wd:Q846 p:P6 ?s . ?s ps:P6 wd:Q57734 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Qatar head of government ?s . ?s head of government Hamad bin Jassim bin Jaber Al Thani . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Qatar",
            "choppedEntity": "Q846"
        }
    },
    {
        "chopped": {
            "question": "When was Hamad bin Jassim bin Jaber Al Thani appointed Prime Minister of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P6 ?s . ?s ps:P6 wd:Q57734 . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown head of government ?s . ?s head of government Hamad bin Jassim bin Jaber Al Thani . ?s start time ?ans1}"
        },
        "original": {
            "question": "When was Hamad bin Jassim bin Jaber Al Thani appointed Prime Minister of Qatar",
            "query": "SELECT ?value WHERE { wd:Q846 p:P6 ?s . ?s ps:P6 wd:Q57734 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Qatar head of government ?s . ?s head of government Hamad bin Jassim bin Jaber Al Thani . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Qatar",
            "choppedEntity": "Q846"
        }
    },
    {
        "chopped": {
            "question": "When did Jim Lovell marry ",
            "query": "SELECT ?ans1 WHERE { wd:Q111240 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Jim Lovell spouse ?s . ?s spouse ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Jim Lovell marry Marilyn Lovell",
            "query": "SELECT ?value WHERE { wd:Q111240 p:P26 ?s . ?s ps:P26 wd:Q21727535 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Jim Lovell spouse ?s . ?s spouse Marilyn Lovell . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Marilyn Lovell",
            "choppedEntity": "Q21727535"
        }
    },
    {
        "chopped": {
            "question": "When did Vladimir Lenin stop living in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1394 p:P551 ?s . ?s ps:P551 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Vladimir Lenin residence ?s . ?s residence ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did Vladimir Lenin stop living in Podolsk",
            "query": "SELECT ?value WHERE { wd:Q1394 p:P551 ?s . ?s ps:P551 wd:Q19520 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Vladimir Lenin residence ?s . ?s residence Podolsk . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Podolsk",
            "choppedEntity": "Q19520"
        }
    },
    {
        "chopped": {
            "question": "What year did Vladimir Lenin leave ",
            "query": "SELECT ?ans1 WHERE { wd:Q1394 p:P551 ?s . ?s ps:P551 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Vladimir Lenin residence ?s . ?s residence ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "What year did Vladimir Lenin leave Podolsk",
            "query": "SELECT ?value WHERE { wd:Q1394 p:P551 ?s . ?s ps:P551 wd:Q19520 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Vladimir Lenin residence ?s . ?s residence Podolsk . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Podolsk",
            "choppedEntity": "Q19520"
        }
    },
    {
        "chopped": {
            "question": "What was the manner of death of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1196 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown manner of death ?ans1}"
        },
        "original": {
            "question": "What was the manner of death of Mstislav Rostropovich",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q152043 wdt:P1196 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Mstislav Rostropovich manner of death ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mstislav Rostropovich",
            "choppedEntity": "Q152043"
        }
    },
    {
        "chopped": {
            "question": "Which Dilwale Dulhania Le Jayenge was won by ",
            "query": "SELECT ?ans1 WHERE { wd:Q849343 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P1346 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Dilwale Dulhania Le Jayenge award received ?s . ?s award received ?ans1 . ?s winner ?unknown }"
        },
        "original": {
            "question": "Which Dilwale Dulhania Le Jayenge was won by Kajol",
            "query": "SELECT ?obj WHERE { wd:Q849343 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1346 wd:Q147395 }",
            "NLQuery": "SELECT ?obj WHERE { Dilwale Dulhania Le Jayenge award received ?s . ?s award received ?obj . ?s winner Kajol }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Kajol",
            "choppedEntity": "Q147395"
        }
    },
    {
        "chopped": {
            "question": "What is the time of the continent of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P30 ?X . ?X wdt:P421 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown continent ?X . ?X located in time zone ?ans1}"
        },
        "original": {
            "question": "What is the time of the continent of the Timurid Empire",
            "query": "SELECT ?answer WHERE { wd:Q484195 wdt:P30 ?X . ?X wdt:P421 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Timurid Empire continent ?X . ?X located in time zone ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Timurid Empire",
            "choppedEntity": "Q484195"
        }
    },
    {
        "chopped": {
            "question": "What is the time of the landmass of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P30 ?X . ?X wdt:P421 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown continent ?X . ?X located in time zone ?ans1}"
        },
        "original": {
            "question": "What is the time of the landmass of the Timurid Empire",
            "query": "SELECT ?answer WHERE { wd:Q484195 wdt:P30 ?X . ?X wdt:P421 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Timurid Empire continent ?X . ?X located in time zone ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Timurid Empire",
            "choppedEntity": "Q484195"
        }
    },
    {
        "chopped": {
            "question": "What award was received by Igor Tamm together with ",
            "query": "SELECT ?ans1 WHERE { wd:Q155759 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P1706 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Igor Tamm award received ?s . ?s award received ?ans1 . ?s together with ?unknown }"
        },
        "original": {
            "question": "What award was received by Igor Tamm together with Pavel Cherenkov",
            "query": "SELECT ?obj WHERE { wd:Q155759 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1706 wd:Q76970 }",
            "NLQuery": "SELECT ?obj WHERE { Igor Tamm award received ?s . ?s award received ?obj . ?s together with Pavel Cherenkov }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Pavel Cherenkov",
            "choppedEntity": "Q76970"
        }
    },
    {
        "chopped": {
            "question": "What is CNC film rating France for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2758 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown CNC film rating (France) ?ans1}"
        },
        "original": {
            "question": "What is CNC film rating France for Fight Club",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q190050 wdt:P2758 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Fight Club CNC film rating (France) ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Fight Club",
            "choppedEntity": "Q190050"
        }
    },
    {
        "chopped": {
            "question": "How many citizens are in ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P27 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub country of citizenship ?unknown }"
        },
        "original": {
            "question": "How many citizens are in Finland",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P27 wd:Q33 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub country of citizenship Finland }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Finland",
            "choppedEntity": "Q33"
        }
    },
    {
        "chopped": {
            "question": "What is the number of citizens in ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P27 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub country of citizenship ?unknown }"
        },
        "original": {
            "question": "What is the number of citizens in Finland",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P27 wd:Q33 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub country of citizenship Finland }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Finland",
            "choppedEntity": "Q33"
        }
    },
    {
        "chopped": {
            "question": "In what date Barbara Hutton divorced ",
            "query": "SELECT ?ans1 WHERE { wd:Q255620 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Barbara Hutton spouse ?s . ?s spouse ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "In what date Barbara Hutton divorced Cary Grant",
            "query": "SELECT ?value WHERE { wd:Q255620 p:P26 ?s . ?s ps:P26 wd:Q83410 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Barbara Hutton spouse ?s . ?s spouse Cary Grant . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Cary Grant",
            "choppedEntity": "Q83410"
        }
    },
    {
        "chopped": {
            "question": "Where is the event location in the Pacific Ring of Fire which tributary is ",
            "query": "SELECT ?ans1 WHERE { wd:Q18783 wdt:P276 ?ans1 . ?ans1 wdt:P974 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Pacific Ring of Fire location ?ans1 . ?ans1 tributary ?unknown}"
        },
        "original": {
            "question": "Where is the event location in the Pacific Ring of Fire which tributary is Ozette River",
            "query": "SELECT ?answer WHERE { wd:Q18783 wdt:P276 ?answer . ?answer wdt:P974 wd:Q3359216}",
            "NLQuery": "SELECT ?answer WHERE { Pacific Ring of Fire location ?answer . ?answer tributary Ozette River}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Ozette River",
            "choppedEntity": "Q3359216"
        }
    },
    {
        "chopped": {
            "question": "Where is the occasion area within the Pacific Ring of Fire which tributary is ",
            "query": "SELECT ?ans1 WHERE { wd:Q18783 wdt:P276 ?ans1 . ?ans1 wdt:P974 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Pacific Ring of Fire location ?ans1 . ?ans1 tributary ?unknown}"
        },
        "original": {
            "question": "Where is the occasion area within the Pacific Ring of Fire which tributary is Ozette River",
            "query": "SELECT ?answer WHERE { wd:Q18783 wdt:P276 ?answer . ?answer wdt:P974 wd:Q3359216}",
            "NLQuery": "SELECT ?answer WHERE { Pacific Ring of Fire location ?answer . ?answer tributary Ozette River}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Ozette River",
            "choppedEntity": "Q3359216"
        }
    },
    {
        "chopped": {
            "question": "What is studied at the parent company of Harvard Business School, ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P69 ?ans1 . ?ans1 wdt:P355 wd:Q49126}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown educated at ?ans1 . ?ans1 subsidiary Harvard Business School}"
        },
        "original": {
            "question": "What is studied at the parent company of Harvard Business School, G. Stanley Hall",
            "query": "SELECT ?answer WHERE { wd:Q309675 wdt:P69 ?answer . ?answer wdt:P355 wd:Q49126}",
            "NLQuery": "SELECT ?answer WHERE { G. Stanley Hall educated at ?answer . ?answer subsidiary Harvard Business School}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "G. Stanley Hall",
            "choppedEntity": "Q309675"
        }
    },
    {
        "chopped": {
            "question": "What is studied at the guardian company of Harvard Business School, ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P69 ?ans1 . ?ans1 wdt:P355 wd:Q49126}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown educated at ?ans1 . ?ans1 subsidiary Harvard Business School}"
        },
        "original": {
            "question": "What is studied at the guardian company of Harvard Business School, G. Stanley Hall",
            "query": "SELECT ?answer WHERE { wd:Q309675 wdt:P69 ?answer . ?answer wdt:P355 wd:Q49126}",
            "NLQuery": "SELECT ?answer WHERE { G. Stanley Hall educated at ?answer . ?answer subsidiary Harvard Business School}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "G. Stanley Hall",
            "choppedEntity": "Q309675"
        }
    },
    {
        "chopped": {
            "question": "Is Manchester's twinned administrative body consist of Faisalabad and ",
            "query": "ASK WHERE { wd:Q18125 wdt:P190 wd:Q173985 . wd:Q18125 wdt:P190 ?unknown }",
            "NLQuery": "ASK WHERE { Manchester twinned administrative body Faisalabad . Manchester twinned administrative body ?unknown }"
        },
        "original": {
            "question": "Is Manchester's twinned administrative body consist of Faisalabad and Palembang",
            "query": "ASK WHERE { wd:Q18125 wdt:P190 wd:Q173985 . wd:Q18125 wdt:P190 wd:Q8131 }",
            "NLQuery": "ASK WHERE { Manchester twinned administrative body Faisalabad . Manchester twinned administrative body Palembang }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Palembang",
            "choppedEntity": "Q8131"
        }
    },
    {
        "chopped": {
            "question": "What is the award of Seiji Ozawa, that was won by ",
            "query": "SELECT ?ans1 WHERE { wd:Q313649 wdt:P166 ?ans1 . ?ans1 wdt:P1346 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Seiji Ozawa award received ?ans1 . ?ans1 winner ?unknown}"
        },
        "original": {
            "question": "What is the award of Seiji Ozawa, that was won by Johnny Carson",
            "query": "SELECT ?answer WHERE { wd:Q313649 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q310819}",
            "NLQuery": "SELECT ?answer WHERE { Seiji Ozawa award received ?answer . ?answer winner Johnny Carson}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Johnny Carson",
            "choppedEntity": "Q310819"
        }
    },
    {
        "chopped": {
            "question": "What is the award of Seiji Ozawa, that was once won by using ",
            "query": "SELECT ?ans1 WHERE { wd:Q313649 wdt:P166 ?ans1 . ?ans1 wdt:P1346 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Seiji Ozawa award received ?ans1 . ?ans1 winner ?unknown}"
        },
        "original": {
            "question": "What is the award of Seiji Ozawa, that was once won by using Johnny Carson",
            "query": "SELECT ?answer WHERE { wd:Q313649 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q310819}",
            "NLQuery": "SELECT ?answer WHERE { Seiji Ozawa award received ?answer . ?answer winner Johnny Carson}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Johnny Carson",
            "choppedEntity": "Q310819"
        }
    },
    {
        "chopped": {
            "question": "Which is The Peerage person ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4638 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown The Peerage person ID ?ans1}"
        },
        "original": {
            "question": "Which is The Peerage person ID for Coco Chanel",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q45661 wdt:P4638 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Coco Chanel The Peerage person ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Coco Chanel",
            "choppedEntity": "Q45661"
        }
    },
    {
        "chopped": {
            "question": "Which is the location of the final assembly of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1071 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown location of creation ?ans1}"
        },
        "original": {
            "question": "Which is the location of the final assembly of mozzarella",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q14088 wdt:P1071 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { mozzarella location of creation ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "mozzarella",
            "choppedEntity": "Q14088"
        }
    },
    {
        "chopped": {
            "question": "What nomination was received by Kurt Weill, but won by ",
            "query": "SELECT ?ans1 WHERE { wd:Q55004 wdt:P1411 ?ans1 . ?ans1 wdt:P1346 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Kurt Weill nominated for ?ans1 . ?ans1 winner ?unknown}"
        },
        "original": {
            "question": "What nomination was received by Kurt Weill, but won by Ray Heindorf",
            "query": "SELECT ?answer WHERE { wd:Q55004 wdt:P1411 ?answer . ?answer wdt:P1346 wd:Q713301}",
            "NLQuery": "SELECT ?answer WHERE { Kurt Weill nominated for ?answer . ?answer winner Ray Heindorf}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ray Heindorf",
            "choppedEntity": "Q713301"
        }
    },
    {
        "chopped": {
            "question": "What assignment was gotten by Kurt Weill, but won by ",
            "query": "SELECT ?ans1 WHERE { wd:Q55004 wdt:P1411 ?ans1 . ?ans1 wdt:P1346 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Kurt Weill nominated for ?ans1 . ?ans1 winner ?unknown}"
        },
        "original": {
            "question": "What assignment was gotten by Kurt Weill, but won by Beam Heindorf",
            "query": "SELECT ?answer WHERE { wd:Q55004 wdt:P1411 ?answer . ?answer wdt:P1346 wd:Q713301}",
            "NLQuery": "SELECT ?answer WHERE { Kurt Weill nominated for ?answer . ?answer winner Ray Heindorf}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Beam Heindorf",
            "choppedEntity": "Q713301"
        }
    },
    {
        "chopped": {
            "question": "At coordinate location 40.765-111.85, what is the start time for ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P625 ?s . ?s ps:P625 ?x FILTER(contains(?x,'40.765 -111.85')) . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown coordinate location ?s . ?s coordinate location ?x FILTER(contains(?x,'40.765 -111.85')) . ?s start time ?ans1}"
        },
        "original": {
            "question": "At coordinate location 40.765-111.85, what is the start time for the University of Utah",
            "query": "SELECT ?value WHERE { wd:Q168515 p:P625 ?s . ?s ps:P625 ?x FILTER(contains(?x,'40.765 -111.85')) . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { University of Utah coordinate location ?s . ?s coordinate location ?x FILTER(contains(?x,'40.765 -111.85')) . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the University of Utah",
            "choppedEntity": "Q168515"
        }
    },
    {
        "chopped": {
            "question": "Is FIFA the organizer of ",
            "query": "ASK WHERE { ?unknown wdt:P664 wd:Q253414 }",
            "NLQuery": "ASK WHERE { ?unknown organizer FIFA }"
        },
        "original": {
            "question": "Is FIFA the organizer of FIFA World Cup",
            "query": "ASK WHERE { wd:Q19317 wdt:P664 wd:Q253414 }",
            "NLQuery": "ASK WHERE { FIFA World Cup organizer FIFA }"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "FIFA World Cup",
            "choppedEntity": "Q19317"
        }
    },
    {
        "chopped": {
            "question": "Who is the operator and powerplant of Rockwell ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P137 ?ans1 . ?unknown wdt:P516 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown operator ?ans1 . ?unknown power source ?ans2 }"
        },
        "original": {
            "question": "Who is the operator and powerplant of Rockwell B-1 Lancer",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q218636 wdt:P137 ?ans_1 . wd:Q218636 wdt:P516 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { B-1 Lancer operator ?ans_1 . B-1 Lancer power source ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "B-1 Lancer",
            "choppedEntity": "Q218636"
        }
    },
    {
        "chopped": {
            "question": "Who is in control of the energy plant, Rockwell ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P137 ?ans1 . ?unknown wdt:P516 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown operator ?ans1 . ?unknown power source ?ans2 }"
        },
        "original": {
            "question": "Who is in control of the energy plant, Rockwell B-1 Lancer",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q218636 wdt:P137 ?ans_1 . wd:Q218636 wdt:P516 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { B-1 Lancer operator ?ans_1 . B-1 Lancer power source ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "B-1 Lancer",
            "choppedEntity": "Q218636"
        }
    },
    {
        "chopped": {
            "question": "When did Muhammad Yunus receive ",
            "query": "SELECT ?ans1 WHERE { wd:Q43969 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Muhammad Yunus award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Muhammad Yunus receive the Empowering award",
            "query": "SELECT ?value WHERE { wd:Q43969 p:P166 ?s . ?s ps:P166 wd:Q18759513 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Muhammad Yunus award received ?s . ?s award received Empowering award . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Empowering award",
            "choppedEntity": "Q18759513"
        }
    },
    {
        "chopped": {
            "question": "What is the correct safety classification of iron(III) oxide as per ",
            "query": "SELECT ?ans1 WHERE { wd:Q419170 p:P4952 ?s . ?s ps:P4952 ?unknown . ?s pq:P995 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { iron(III) oxide safety classification and labelling ?s . ?s safety classification and labelling ?unknown . ?s NFPA Instability ?ans1}"
        },
        "original": {
            "question": "What is the correct safety classification of iron(III) oxide as per the NFPA 704:  Standard System for the Identification of Hazards of Materials for Emergency Response",
            "query": "SELECT ?value WHERE { wd:Q419170 p:P4952 ?s . ?s ps:P4952 wd:Q51139288 . ?s pq:P995 ?value}",
            "NLQuery": "SELECT ?value WHERE { iron(III) oxide safety classification and labelling ?s . ?s safety classification and labelling NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response . ?s NFPA Instability ?value}"
        },
        "meta": {
            "entityTagNER": "LAW",
            "choppedText": "the NFPA 704:  Standard System for the Identification of Hazards of Materials for Emergency Response",
            "choppedEntity": "Q51139288"
        }
    },
    {
        "chopped": {
            "question": "Is Second Sino-Japanese War significant to ",
            "query": "ASK WHERE { ?unknown wdt:P793 wd:Q170314 }",
            "NLQuery": "ASK WHERE { ?unknown significant event Second Sino-Japanese War }"
        },
        "original": {
            "question": "Is Second Sino-Japanese War significant to the Cold War",
            "query": "ASK WHERE { wd:Q8683 wdt:P793 wd:Q170314 }",
            "NLQuery": "ASK WHERE { Cold War significant event Second Sino-Japanese War }"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the Cold War",
            "choppedEntity": "Q8683"
        }
    },
    {
        "chopped": {
            "question": "Is the Second Sino-Japanese War related to ",
            "query": "ASK WHERE { ?unknown wdt:P793 wd:Q170314 }",
            "NLQuery": "ASK WHERE { ?unknown significant event Second Sino-Japanese War }"
        },
        "original": {
            "question": "Is the Second Sino-Japanese War related to the Cold War",
            "query": "ASK WHERE { wd:Q8683 wdt:P793 wd:Q170314 }",
            "NLQuery": "ASK WHERE { Cold War significant event Second Sino-Japanese War }"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the Cold War",
            "choppedEntity": "Q8683"
        }
    },
    {
        "chopped": {
            "question": "Who was the distributor for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P750 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown distributed by ?obj }"
        },
        "original": {
            "question": "Who was the distributor for Married...with Children",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q208647 wdt:P750 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Married... with Children distributed by ?obj }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Married...with Children",
            "choppedEntity": "Q208647"
        }
    },
    {
        "chopped": {
            "question": "Which self propelled gun originated in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P495 ?unknown . ?sbj wdt:P31 wd:Q272574 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country of origin ?unknown . ?sbj instance of self-propelled gun } "
        },
        "original": {
            "question": "Which self propelled gun originated in the Soviet Union",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P495 wd:Q15180 . ?sbj wdt:P31 wd:Q272574 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country of origin Soviet Union . ?sbj instance of self-propelled gun } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Soviet Union",
            "choppedEntity": "Q15180"
        }
    },
    {
        "chopped": {
            "question": "Which gun is use by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P495 ?unknown . ?sbj wdt:P31 wd:Q272574 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country of origin ?unknown . ?sbj instance of self-propelled gun } "
        },
        "original": {
            "question": "Which gun is use by the Soviet Union",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P495 wd:Q15180 . ?sbj wdt:P31 wd:Q272574 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country of origin Soviet Union . ?sbj instance of self-propelled gun } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Soviet Union",
            "choppedEntity": "Q15180"
        }
    },
    {
        "chopped": {
            "question": "Who is the sibling of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3373 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown sibling ?ans1}"
        },
        "original": {
            "question": "Who is the sibling of Christiaan Huygens",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q39599 wdt:P3373 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Christiaan Huygens sibling ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Christiaan Huygens",
            "choppedEntity": "Q39599"
        }
    },
    {
        "chopped": {
            "question": "What is the librettist of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P87 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown librettist ?ans1}"
        },
        "original": {
            "question": "What is the librettist of Die Walk\u00fcre",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q324319 wdt:P87 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Die Walk\u00fcre librettist ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Die Walk\u00fcre",
            "choppedEntity": "Q324319"
        }
    },
    {
        "chopped": {
            "question": "When did Albrecht D\u00fcrer end his residence in ",
            "query": "SELECT ?ans1 WHERE { wd:Q5580 p:P551 ?s . ?s ps:P551 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Albrecht D\u00fcrer residence ?s . ?s residence ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did Albrecht D\u00fcrer end his residence in Nuremburg",
            "query": "SELECT ?value WHERE { wd:Q5580 p:P551 ?s . ?s ps:P551 wd:Q2090 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Albrecht D\u00fcrer residence ?s . ?s residence Nuremberg . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Nuremburg",
            "choppedEntity": "Q2090"
        }
    },
    {
        "chopped": {
            "question": "What is the publication date for Immanuel Kant's most notable work, ",
            "query": "SELECT ?ans1 WHERE { wd:Q9312 p:P800 ?s . ?s ps:P800 ?unknown . ?s pq:P577 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Immanuel Kant notable work ?s . ?s notable work ?unknown . ?s date of publication ?ans1}"
        },
        "original": {
            "question": "What is the publication date for Immanuel Kant's most notable work, Critique of Practical Reason",
            "query": "SELECT ?value WHERE { wd:Q9312 p:P800 ?s . ?s ps:P800 wd:Q870851 . ?s pq:P577 ?value}",
            "NLQuery": "SELECT ?value WHERE { Immanuel Kant notable work ?s . ?s notable work Critique of Practical Reason . ?s date of publication ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Critique of Practical Reason",
            "choppedEntity": "Q870851"
        }
    },
    {
        "chopped": {
            "question": "What house has a child in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P40 ?X . ?X wdt:P53 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown child ?X . ?X family ?ans1}"
        },
        "original": {
            "question": "What house has a child in Sri Indraditya",
            "query": "SELECT ?answer WHERE { wd:Q887310 wdt:P40 ?X . ?X wdt:P53 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Sri Indraditya child ?X . ?X family ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Sri Indraditya",
            "choppedEntity": "Q887310"
        }
    },
    {
        "chopped": {
            "question": "Who received a nomination for portraying Lee Grant in ",
            "query": "SELECT ?ans1 WHERE { wd:Q230184 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Lee Grant nominated for ?s . ?s nominated for ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "Who received a nomination for portraying Lee Grant in Detective Story",
            "query": "SELECT ?obj WHERE { wd:Q230184 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q605867 }",
            "NLQuery": "SELECT ?obj WHERE { Lee Grant nominated for ?s . ?s nominated for ?obj . ?s for work Detective Story }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Detective Story",
            "choppedEntity": "Q605867"
        }
    },
    {
        "chopped": {
            "question": "What is the CESI conservation information for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3412 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Canadian Environmental Sustainability Indicators ID (Protected areas) ?ans1}"
        },
        "original": {
            "question": "What is the CESI conservation information for Banff National Park",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q41858 wdt:P3412 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Banff National Park Canadian Environmental Sustainability Indicators ID (Protected areas) ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Banff National Park",
            "choppedEntity": "Q41858"
        }
    },
    {
        "chopped": {
            "question": "What is the administrative territorial entity of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P150 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown contains administrative territorial entity ?ans1}"
        },
        "original": {
            "question": "What is the administrative territorial entity of Pune",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1538 wdt:P150 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Pune contains administrative territorial entity ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Pune",
            "choppedEntity": "Q1538"
        }
    },
    {
        "chopped": {
            "question": "What is part of Kansas history that has towns in ",
            "query": "SELECT ?ans1 WHERE { wd:Q5865093 wdt:P1269 ?ans1 . ?ans1 wdt:P150 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { history of Kansas facet of ?ans1 . ?ans1 contains administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "What is part of Kansas history that has towns in Geary County",
            "query": "SELECT ?answer WHERE { wd:Q5865093 wdt:P1269 ?answer . ?answer wdt:P150 wd:Q377148}",
            "NLQuery": "SELECT ?answer WHERE { history of Kansas facet of ?answer . ?answer contains administrative territorial entity Geary County}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Geary County",
            "choppedEntity": "Q377148"
        }
    },
    {
        "chopped": {
            "question": "What is phase of Kansas history that has towns in ",
            "query": "SELECT ?ans1 WHERE { wd:Q5865093 wdt:P1269 ?ans1 . ?ans1 wdt:P150 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { history of Kansas facet of ?ans1 . ?ans1 contains administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "What is phase of Kansas history that has towns in Geary County",
            "query": "SELECT ?answer WHERE { wd:Q5865093 wdt:P1269 ?answer . ?answer wdt:P150 wd:Q377148}",
            "NLQuery": "SELECT ?answer WHERE { history of Kansas facet of ?answer . ?answer contains administrative territorial entity Geary County}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Geary County",
            "choppedEntity": "Q377148"
        }
    },
    {
        "chopped": {
            "question": "What is the Christian name of Henry IV of England, that is the same as ",
            "query": "SELECT ?ans1 WHERE { wd:Q161866 wdt:P735 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Henry IV of England given name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "What is the Christian name of Henry IV of England, that is the same as Harald",
            "query": "SELECT ?answer WHERE { wd:Q161866 wdt:P735 ?answer . ?answer wdt:P460 wd:Q1530266}",
            "NLQuery": "SELECT ?answer WHERE { Henry IV of England given name ?answer . ?answer said to be the same as Harald}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Harald",
            "choppedEntity": "Q1530266"
        }
    },
    {
        "chopped": {
            "question": "What is the Christian title of Henry IV of Britain, that's the same as ",
            "query": "SELECT ?ans1 WHERE { wd:Q161866 wdt:P735 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Henry IV of England given name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "What is the Christian title of Henry IV of Britain, that's the same as Harald",
            "query": "SELECT ?answer WHERE { wd:Q161866 wdt:P735 ?answer . ?answer wdt:P460 wd:Q1530266}",
            "NLQuery": "SELECT ?answer WHERE { Henry IV of England given name ?answer . ?answer said to be the same as Harald}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Harald",
            "choppedEntity": "Q1530266"
        }
    },
    {
        "chopped": {
            "question": "Was Hans Zimmer's given name ",
            "query": "ASK WHERE { wd:Q76364 wdt:P735 wd:Q632842 . wd:Q76364 wdt:P735 ?unknown }",
            "NLQuery": "ASK WHERE { Hans Zimmer given name Hans . Hans Zimmer given name ?unknown }"
        },
        "original": {
            "question": "Was Hans Zimmer's given name Florian",
            "query": "ASK WHERE { wd:Q76364 wdt:P735 wd:Q632842 . wd:Q76364 wdt:P735 wd:Q937379 }",
            "NLQuery": "ASK WHERE { Hans Zimmer given name Hans . Hans Zimmer given name Florian }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Florian",
            "choppedEntity": "Q937379"
        }
    },
    {
        "chopped": {
            "question": "When Christian Democratic Union ended with its chairperson ",
            "query": "SELECT ?ans1 WHERE { wd:Q49762 p:P488 ?s . ?s ps:P488 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Christian Democratic Union chairperson ?s . ?s chairperson ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When Christian Democratic Union ended with its chairperson Helmut Kohl",
            "query": "SELECT ?value WHERE { wd:Q49762 p:P488 ?s . ?s ps:P488 wd:Q2518 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Christian Democratic Union chairperson ?s . ?s chairperson Helmut Kohl . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Helmut Kohl",
            "choppedEntity": "Q2518"
        }
    },
    {
        "chopped": {
            "question": "Where is the location of the landing from ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P1158 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 location of landing ?unknown}"
        },
        "original": {
            "question": "Where is the location of the landing from the Caribbean Sea",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P1158 wd:Q1247}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer location of landing Caribbean Sea}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Caribbean Sea",
            "choppedEntity": "Q1247"
        }
    },
    {
        "chopped": {
            "question": "Who is named after the Pauli exclusion principle whose middle name if ",
            "query": "SELECT ?ans1 WHERE { wd:Q131594 wdt:P138 ?ans1 . ?ans1 wdt:P735 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Pauli exclusion principle named after ?ans1 . ?ans1 given name ?unknown}"
        },
        "original": {
            "question": "Who is named after the Pauli exclusion principle whose middle name if Wolfgang",
            "query": "SELECT ?answer WHERE { wd:Q131594 wdt:P138 ?answer . ?answer wdt:P735 wd:Q2589157}",
            "NLQuery": "SELECT ?answer WHERE { Pauli exclusion principle named after ?answer . ?answer given name Wolfgang}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Wolfgang",
            "choppedEntity": "Q2589157"
        }
    },
    {
        "chopped": {
            "question": "Who is named after the Pauli exclusion precept whose middle name if ",
            "query": "SELECT ?ans1 WHERE { wd:Q131594 wdt:P138 ?ans1 . ?ans1 wdt:P735 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Pauli exclusion principle named after ?ans1 . ?ans1 given name ?unknown}"
        },
        "original": {
            "question": "Who is named after the Pauli exclusion precept whose middle name if Wolfgang",
            "query": "SELECT ?answer WHERE { wd:Q131594 wdt:P138 ?answer . ?answer wdt:P735 wd:Q2589157}",
            "NLQuery": "SELECT ?answer WHERE { Pauli exclusion principle named after ?answer . ?answer given name Wolfgang}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Wolfgang",
            "choppedEntity": "Q2589157"
        }
    },
    {
        "chopped": {
            "question": "Name the actor that appeared as Lord Voldemort and also in ",
            "query": "SELECT ?ans1 WHERE { wd:Q176132 p:P175 ?s . ?s ps:P175 ?ans1 . ?s pq:P642 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Lord Voldemort performer ?s . ?s performer ?ans1 . ?s of ?unknown }"
        },
        "original": {
            "question": "Name the actor that appeared as Lord Voldemort and also in the Lego Batman Movie",
            "query": "SELECT ?obj WHERE { wd:Q176132 p:P175 ?s . ?s ps:P175 ?obj . ?s pq:P642 wd:Q23013169 }",
            "NLQuery": "SELECT ?obj WHERE { Lord Voldemort performer ?s . ?s performer ?obj . ?s of The LEGO Batman Movie }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Lego Batman Movie",
            "choppedEntity": "Q23013169"
        }
    },
    {
        "chopped": {
            "question": "What is the computer language type used to create ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P407 ?ans1 . ?unknown wdt:P277 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown language of work or name ?ans1 . ?unknown programming language ?ans2 }"
        },
        "original": {
            "question": "What is the computer language type used to create Skype",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q40984 wdt:P407 ?ans_1 . wd:Q40984 wdt:P277 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Skype language of work or name ?ans_1 . Skype programming language ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Skype",
            "choppedEntity": "Q40984"
        }
    },
    {
        "chopped": {
            "question": "At point in time 1963-1-1, what award was received by ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1963')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),'1963')) }"
        },
        "original": {
            "question": "At point in time 1963-1-1, what award was received by Sin-Itiro Tomonaga",
            "query": "SELECT ?obj WHERE { wd:Q184563 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1963')) }",
            "NLQuery": "SELECT ?obj WHERE { Sin-Itiro Tomonaga award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1963')) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Sin-Itiro Tomonaga",
            "choppedEntity": "Q184563"
        }
    },
    {
        "chopped": {
            "question": "At point in time 1963-1-1, what grant was gotten by ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1963')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),'1963')) }"
        },
        "original": {
            "question": "At point in time 1963-1-1, what grant was gotten by Sin-Itiro Tomonaga",
            "query": "SELECT ?obj WHERE { wd:Q184563 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1963')) }",
            "NLQuery": "SELECT ?obj WHERE { Sin-Itiro Tomonaga award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1963')) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Sin-Itiro Tomonaga",
            "choppedEntity": "Q184563"
        }
    },
    {
        "chopped": {
            "question": "What is the namesake of nobelium used by the daughter of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1901 wdt:P138 ?ans1 . ?ans1 wdt:P25 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { nobelium named after ?ans1 . ?ans1 mother ?unknown}"
        },
        "original": {
            "question": "What is the namesake of nobelium used by the daughter of Karolina Andriette Ahlsell",
            "query": "SELECT ?answer WHERE { wd:Q1901 wdt:P138 ?answer . ?answer wdt:P25 wd:Q3813118}",
            "NLQuery": "SELECT ?answer WHERE { nobelium named after ?answer . ?answer mother Karolina Andriette Ahlsell}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Karolina Andriette Ahlsell",
            "choppedEntity": "Q3813118"
        }
    },
    {
        "chopped": {
            "question": "What is the namesake of nobelium used through the daughter of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1901 wdt:P138 ?ans1 . ?ans1 wdt:P25 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { nobelium named after ?ans1 . ?ans1 mother ?unknown}"
        },
        "original": {
            "question": "What is the namesake of nobelium used through the daughter of Karolina Andriette Ahlsell",
            "query": "SELECT ?answer WHERE { wd:Q1901 wdt:P138 ?answer . ?answer wdt:P25 wd:Q3813118}",
            "NLQuery": "SELECT ?answer WHERE { nobelium named after ?answer . ?answer mother Karolina Andriette Ahlsell}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Karolina Andriette Ahlsell",
            "choppedEntity": "Q3813118"
        }
    },
    {
        "chopped": {
            "question": "Which is the conviction for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1399 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown convicted of ?ans1}"
        },
        "original": {
            "question": "Which is the conviction for Sirhan Sirhan",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q297112 wdt:P1399 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Sirhan Sirhan convicted of ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Sirhan Sirhan",
            "choppedEntity": "Q297112"
        }
    },
    {
        "chopped": {
            "question": "What's the dialect of the ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P4913 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub dialect of ?unknown }"
        },
        "original": {
            "question": "What's the dialect of the Portuguese",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P4913 wd:Q5146 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub dialect of Portuguese }"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Portuguese",
            "choppedEntity": "Q5146"
        }
    },
    {
        "chopped": {
            "question": "Which is the dialect of ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P4913 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub dialect of ?unknown }"
        },
        "original": {
            "question": "Which is the dialect of Portuguese",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P4913 wd:Q5146 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub dialect of Portuguese }"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Portuguese",
            "choppedEntity": "Q5146"
        }
    },
    {
        "chopped": {
            "question": "What's the LombardiaBeniCulturali artwork ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3855 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown LombardiaBeniCulturali artwork ID ?ans1}"
        },
        "original": {
            "question": "What's the LombardiaBeniCulturali artwork ID of The Last Supper",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q128910 wdt:P3855 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { The Last Supper LombardiaBeniCulturali artwork ID ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Last Supper",
            "choppedEntity": "Q128910"
        }
    },
    {
        "chopped": {
            "question": "Which business is owned by ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P127 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown owned by ?obj . ?obj instance of business } "
        },
        "original": {
            "question": "Which business is owned by Walmart",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q483551 wdt:P127 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Walmart owned by ?obj . ?obj instance of business } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Walmart",
            "choppedEntity": "Q483551"
        }
    },
    {
        "chopped": {
            "question": "Was Otto the Great I born in ",
            "query": "SELECT ?ans1 WHERE { wd:Q43915 p:P19 ?s . ?s ps:P19 ?unknown . ?s pq:P5102 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Otto I the Great place of birth ?s . ?s place of birth ?unknown . ?s nature of statement ?ans1}"
        },
        "original": {
            "question": "Was Otto the Great I born in Wallhausen",
            "query": "SELECT ?value WHERE { wd:Q43915 p:P19 ?s . ?s ps:P19 wd:Q564351 . ?s pq:P5102 ?value}",
            "NLQuery": "SELECT ?value WHERE { Otto I the Great place of birth ?s . ?s place of birth Wallhausen . ?s nature of statement ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Wallhausen",
            "choppedEntity": "Q564351"
        }
    },
    {
        "chopped": {
            "question": "What is the name of the \"sister city\" tied to Kansas City, which is located in the county of ",
            "query": "SELECT ?ans1 WHERE { wd:Q41819 wdt:P190 ?ans1 . ?ans1 wdt:P1376 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Kansas City twinned administrative body ?ans1 . ?ans1 capital of ?unknown}"
        },
        "original": {
            "question": "What is the name of the \"sister city\" tied to Kansas City, which is located in the county of Seville Province",
            "query": "SELECT ?answer WHERE { wd:Q41819 wdt:P190 ?answer . ?answer wdt:P1376 wd:Q95088}",
            "NLQuery": "SELECT ?answer WHERE { Kansas City twinned administrative body ?answer . ?answer capital of Seville Province}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Seville Province",
            "choppedEntity": "Q95088"
        }
    },
    {
        "chopped": {
            "question": "What is the title of the \"sister city\" tied to Kansas City, which is found within the province of ",
            "query": "SELECT ?ans1 WHERE { wd:Q41819 wdt:P190 ?ans1 . ?ans1 wdt:P1376 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Kansas City twinned administrative body ?ans1 . ?ans1 capital of ?unknown}"
        },
        "original": {
            "question": "What is the title of the \"sister city\" tied to Kansas City, which is found within the province of Seville Province",
            "query": "SELECT ?answer WHERE { wd:Q41819 wdt:P190 ?answer . ?answer wdt:P1376 wd:Q95088}",
            "NLQuery": "SELECT ?answer WHERE { Kansas City twinned administrative body ?answer . ?answer capital of Seville Province}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Seville Province",
            "choppedEntity": "Q95088"
        }
    },
    {
        "chopped": {
            "question": "Does the International Space Station operate both the European Space Agency and ",
            "query": "ASK WHERE { wd:Q25271 wdt:P137 wd:Q42262 . wd:Q25271 wdt:P137 ?unknown }",
            "NLQuery": "ASK WHERE { International Space Station operator European Space Agency . International Space Station operator ?unknown }"
        },
        "original": {
            "question": "Does the International Space Station operate both the European Space Agency and Roscosmos State Corporation",
            "query": "ASK WHERE { wd:Q25271 wdt:P137 wd:Q42262 . wd:Q25271 wdt:P137 wd:Q190795 }",
            "NLQuery": "ASK WHERE { International Space Station operator European Space Agency . International Space Station operator Roscosmos State Corporation }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Roscosmos State Corporation",
            "choppedEntity": "Q190795"
        }
    },
    {
        "chopped": {
            "question": "Is it true that the International Space Station operates both the European Space Agency and ",
            "query": "ASK WHERE { wd:Q25271 wdt:P137 wd:Q42262 . wd:Q25271 wdt:P137 ?unknown }",
            "NLQuery": "ASK WHERE { International Space Station operator European Space Agency . International Space Station operator ?unknown }"
        },
        "original": {
            "question": "Is it true that the International Space Station operates both the European Space Agency and the Roscosmos State Corporation",
            "query": "ASK WHERE { wd:Q25271 wdt:P137 wd:Q42262 . wd:Q25271 wdt:P137 wd:Q190795 }",
            "NLQuery": "ASK WHERE { International Space Station operator European Space Agency . International Space Station operator Roscosmos State Corporation }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Roscosmos State Corporation",
            "choppedEntity": "Q190795"
        }
    },
    {
        "chopped": {
            "question": "Which is the Wikidata property for authority control conferred by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1027 ?unknown . ?sbj wdt:P31 wd:Q18614948 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj conferred by ?unknown . ?sbj instance of Wikidata property for authority control } "
        },
        "original": {
            "question": "Which is the Wikidata property for authority control conferred by YouTube",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1027 wd:Q866 . ?sbj wdt:P31 wd:Q18614948 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj conferred by YouTube . ?sbj instance of Wikidata property for authority control } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "YouTube",
            "choppedEntity": "Q866"
        }
    },
    {
        "chopped": {
            "question": "Which is the elevation above sea level for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2044 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown elevation above sea level ?ans1}"
        },
        "original": {
            "question": "Which is the elevation above sea level for Anaheim",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q49247 wdt:P2044 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Anaheim elevation above sea level ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Anaheim",
            "choppedEntity": "Q49247"
        }
    },
    {
        "chopped": {
            "question": "What is the number of victories by ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P2522 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown victory ?obj }"
        },
        "original": {
            "question": "What is the number of victories by Billie Jean King",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q54527 wdt:P2522 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Billie Jean King victory ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Billie Jean King",
            "choppedEntity": "Q54527"
        }
    },
    {
        "chopped": {
            "question": "In what subject did Linda Nochlin major while attending ",
            "query": "SELECT ?ans1 WHERE { wd:Q434478 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P812 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Linda Nochlin educated at ?s . ?s educated at ?unknown . ?s academic major ?ans1}"
        },
        "original": {
            "question": "In what subject did Linda Nochlin major while attending New York University Institute of Fine Arts",
            "query": "SELECT ?value WHERE { wd:Q434478 p:P69 ?s . ?s ps:P69 wd:Q3339070 . ?s pq:P812 ?value}",
            "NLQuery": "SELECT ?value WHERE { Linda Nochlin educated at ?s . ?s educated at New York University Institute of Fine Arts . ?s academic major ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "New York University Institute of Fine Arts",
            "choppedEntity": "Q3339070"
        }
    },
    {
        "chopped": {
            "question": "Linda Nochlin majored in what subject at ",
            "query": "SELECT ?ans1 WHERE { wd:Q434478 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P812 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Linda Nochlin educated at ?s . ?s educated at ?unknown . ?s academic major ?ans1}"
        },
        "original": {
            "question": "Linda Nochlin majored in what subject at New York University Institute of Fine Arts",
            "query": "SELECT ?value WHERE { wd:Q434478 p:P69 ?s . ?s ps:P69 wd:Q3339070 . ?s pq:P812 ?value}",
            "NLQuery": "SELECT ?value WHERE { Linda Nochlin educated at ?s . ?s educated at New York University Institute of Fine Arts . ?s academic major ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "New York University Institute of Fine Arts",
            "choppedEntity": "Q3339070"
        }
    },
    {
        "chopped": {
            "question": "Which was the source that described ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P1343 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub described by source ?unknown }"
        },
        "original": {
            "question": "Which was the source that described The Guardian",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P1343 wd:Q11148 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub described by source The Guardian }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "The Guardian",
            "choppedEntity": "Q11148"
        }
    },
    {
        "chopped": {
            "question": "Is -107.5 the speed of ",
            "query": "ASK WHERE { ?unknown wdt:P2216 ?obj FILTER(?obj = -107.5) } ",
            "NLQuery": "ASK WHERE { ?unknown radial velocity ?obj FILTER(?obj = -107.5) } "
        },
        "original": {
            "question": "Is -107.5 the speed of Messier 15",
            "query": "ASK WHERE { wd:Q11332 wdt:P2216 ?obj FILTER(?obj = -107.5) } ",
            "NLQuery": "ASK WHERE { Messier 15 radial velocity ?obj FILTER(?obj = -107.5) } "
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Messier 15",
            "choppedEntity": "Q11332"
        }
    },
    {
        "chopped": {
            "question": "Tell me me a integrated circuit design whose name consist of the word \"architecture\" and whose designed by ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1074539 . ?ans1 wdt:P287 ?unknown . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), 'architecture')) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of integrated circuit design . ?ans1 designed by ?unknown . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), 'architecture')) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me me a integrated circuit design whose name consist of the word \"architecture\" and whose designed by ARM Holdings",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1074539 . ?sbj wdt:P287 wd:Q296782 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'architecture')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of integrated circuit design . ?sbj designed by ARM Holdings . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'architecture')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "ARM Holdings",
            "choppedEntity": "Q296782"
        }
    },
    {
        "chopped": {
            "question": "Tell me me a built-in circuit sketch whose identify consist of the phrase \"architecture\" and whose designed by using ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1074539 . ?ans1 wdt:P287 ?unknown . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), 'architecture')) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of integrated circuit design . ?ans1 designed by ?unknown . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), 'architecture')) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me me a built-in circuit sketch whose identify consist of the phrase \"architecture\" and whose designed by using ARM Holdings",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1074539 . ?sbj wdt:P287 wd:Q296782 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'architecture')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of integrated circuit design . ?sbj designed by ARM Holdings . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'architecture')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "ARM Holdings",
            "choppedEntity": "Q296782"
        }
    },
    {
        "chopped": {
            "question": "Who was the owner of the land known as ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P3931 ?X . ?X wdt:P937 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown copyright holder ?X . ?X work location ?ans1}"
        },
        "original": {
            "question": "Who was the owner of the land known as Mein Kampf",
            "query": "SELECT ?answer WHERE { wd:Q48244 wdt:P3931 ?X . ?X wdt:P937 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Mein Kampf copyright holder ?X . ?X work location ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Mein Kampf",
            "choppedEntity": "Q48244"
        }
    },
    {
        "chopped": {
            "question": "What was founded next to ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P740 ?X . ?X wdt:P47 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown location of formation ?X . ?X shares border with ?ans1}"
        },
        "original": {
            "question": "What was founded next to Krafwerk",
            "query": "SELECT ?answer WHERE { wd:Q44892 wdt:P740 ?X . ?X wdt:P47 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Kraftwerk location of formation ?X . ?X shares border with ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Krafwerk",
            "choppedEntity": "Q44892"
        }
    },
    {
        "chopped": {
            "question": "what was begun next to ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P740 ?X . ?X wdt:P47 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown location of formation ?X . ?X shares border with ?ans1}"
        },
        "original": {
            "question": "what was begun next to Krafwerk",
            "query": "SELECT ?answer WHERE { wd:Q44892 wdt:P740 ?X . ?X wdt:P47 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Kraftwerk location of formation ?X . ?X shares border with ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Krafwerk",
            "choppedEntity": "Q44892"
        }
    },
    {
        "chopped": {
            "question": "Who is the relative of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P1038 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 relative ?unknown}"
        },
        "original": {
            "question": "Who is the relative of Mahatma Gandhi",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P1038 wd:Q1001}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer relative Mahatma Gandhi}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mahatma Gandhi",
            "choppedEntity": "Q1001"
        }
    },
    {
        "chopped": {
            "question": "What's the legal form of University of Paris VI: ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1454 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown legal form ?ans1}"
        },
        "original": {
            "question": "What's the legal form of University of Paris VI: Pierre-and-Marie-Curie University",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1144549 wdt:P1454 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Pierre and Marie Curie University legal form ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Pierre-and-Marie-Curie University",
            "choppedEntity": "Q1144549"
        }
    },
    {
        "chopped": {
            "question": "Who is the team manager of the team ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P54 ?X . ?X wdt:P286 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown member of sports team ?X . ?X head coach ?ans1}"
        },
        "original": {
            "question": "Who is the team manager of the team Chavdar Atanasov",
            "query": "SELECT ?answer WHERE { wd:Q5088485 wdt:P54 ?X . ?X wdt:P286 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Chavdar Atanasov member of sports team ?X . ?X head coach ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Chavdar Atanasov",
            "choppedEntity": "Q5088485"
        }
    },
    {
        "chopped": {
            "question": "Who is the group supervisor of the group ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P54 ?X . ?X wdt:P286 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown member of sports team ?X . ?X head coach ?ans1}"
        },
        "original": {
            "question": "Who is the group supervisor of the group Chavdar Atanasov",
            "query": "SELECT ?answer WHERE { wd:Q5088485 wdt:P54 ?X . ?X wdt:P286 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Chavdar Atanasov member of sports team ?X . ?X head coach ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Chavdar Atanasov",
            "choppedEntity": "Q5088485"
        }
    },
    {
        "chopped": {
            "question": "When does daylight saving time begin in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P421 ?s . ?s ps:P421 ?ans1 . ?s pq:P1264 wd:Q36669 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in time zone ?s . ?s located in time zone ?ans1 . ?s valid in period daylight saving time }"
        },
        "original": {
            "question": "When does daylight saving time begin in Vichy",
            "query": "SELECT ?obj WHERE { wd:Q93351 p:P421 ?s . ?s ps:P421 ?obj . ?s pq:P1264 wd:Q36669 }",
            "NLQuery": "SELECT ?obj WHERE { Vichy located in time zone ?s . ?s located in time zone ?obj . ?s valid in period daylight saving time }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Vichy",
            "choppedEntity": "Q93351"
        }
    },
    {
        "chopped": {
            "question": "What is the sunset timings in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P421 ?s . ?s ps:P421 ?ans1 . ?s pq:P1264 wd:Q36669 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in time zone ?s . ?s located in time zone ?ans1 . ?s valid in period daylight saving time }"
        },
        "original": {
            "question": "What is the sunset timings in Vichy",
            "query": "SELECT ?obj WHERE { wd:Q93351 p:P421 ?s . ?s ps:P421 ?obj . ?s pq:P1264 wd:Q36669 }",
            "NLQuery": "SELECT ?obj WHERE { Vichy located in time zone ?s . ?s located in time zone ?obj . ?s valid in period daylight saving time }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Vichy",
            "choppedEntity": "Q93351"
        }
    },
    {
        "chopped": {
            "question": "Is Ania the equivalent of the forename of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P735 ?ans1 . ?ans1 wdt:P460 wd:Q20678656}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown given name ?ans1 . ?ans1 said to be the same as Ania}"
        },
        "original": {
            "question": "Is Ania the equivalent of the forename of Anna Atkins",
            "query": "SELECT ?answer WHERE { wd:Q264269 wdt:P735 ?answer . ?answer wdt:P460 wd:Q20678656}",
            "NLQuery": "SELECT ?answer WHERE { Anna Atkins given name ?answer . ?answer said to be the same as Ania}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Anna Atkins",
            "choppedEntity": "Q264269"
        }
    },
    {
        "chopped": {
            "question": "Is Ania the proportionate of the forename of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P735 ?ans1 . ?ans1 wdt:P460 wd:Q20678656}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown given name ?ans1 . ?ans1 said to be the same as Ania}"
        },
        "original": {
            "question": "Is Ania the proportionate of the forename of Anna Atkins",
            "query": "SELECT ?answer WHERE { wd:Q264269 wdt:P735 ?answer . ?answer wdt:P460 wd:Q20678656}",
            "NLQuery": "SELECT ?answer WHERE { Anna Atkins given name ?answer . ?answer said to be the same as Ania}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Anna Atkins",
            "choppedEntity": "Q264269"
        }
    },
    {
        "chopped": {
            "question": "What is the provincial population located in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P159 ?X . ?X wdt:P1082 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown headquarters location ?X . ?X population ?ans1}"
        },
        "original": {
            "question": "What is the provincial population located in the Kunsthistorisches Museum",
            "query": "SELECT ?answer WHERE { wd:Q95569 wdt:P159 ?X . ?X wdt:P1082 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Kunsthistorisches Museum headquarters location ?X . ?X population ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Kunsthistorisches Museum",
            "choppedEntity": "Q95569"
        }
    },
    {
        "chopped": {
            "question": "What is the number of representatives in an organization of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1410 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown number of representatives in an organization/legislature or won in elections ?ans1}"
        },
        "original": {
            "question": "What is the number of representatives in an organization of the Christian Democratic Union",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q49762 wdt:P1410 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Christian Democratic Union number of representatives in an organization/legislature or won in elections ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Christian Democratic Union",
            "choppedEntity": "Q49762"
        }
    },
    {
        "chopped": {
            "question": "who is the teacher of nikolay yegorovich Zhukovshy, the member of ",
            "query": "SELECT ?ans1 WHERE { wd:Q271956 wdt:P802 ?ans1 . ?ans1 wdt:P463 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Nikolay Zhukovsky student ?ans1 . ?ans1 member of ?unknown}"
        },
        "original": {
            "question": "who is the teacher of nikolay yegorovich Zhukovshy, the member of Russian Academy of sciences",
            "query": "SELECT ?answer WHERE { wd:Q271956 wdt:P802 ?answer . ?answer wdt:P463 wd:Q83172}",
            "NLQuery": "SELECT ?answer WHERE { Nikolay Zhukovsky student ?answer . ?answer member of Russian Academy of Sciences}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Russian Academy of sciences",
            "choppedEntity": "Q83172"
        }
    },
    {
        "chopped": {
            "question": "who is the trainer of nikolay yegorovich Zhukovshy, the member of ",
            "query": "SELECT ?ans1 WHERE { wd:Q271956 wdt:P802 ?ans1 . ?ans1 wdt:P463 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Nikolay Zhukovsky student ?ans1 . ?ans1 member of ?unknown}"
        },
        "original": {
            "question": "who is the trainer of nikolay yegorovich Zhukovshy, the member of Russian Academy of sciences",
            "query": "SELECT ?answer WHERE { wd:Q271956 wdt:P802 ?answer . ?answer wdt:P463 wd:Q83172}",
            "NLQuery": "SELECT ?answer WHERE { Nikolay Zhukovsky student ?answer . ?answer member of Russian Academy of Sciences}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Russian Academy of sciences",
            "choppedEntity": "Q83172"
        }
    },
    {
        "chopped": {
            "question": "When was Elizabeth Bishop has received award as ",
            "query": "SELECT ?ans1 WHERE { wd:Q235946 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Elizabeth Bishop award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was Elizabeth Bishop has received award as National Book Award for Poetry",
            "query": "SELECT ?value WHERE { wd:Q235946 p:P166 ?s . ?s ps:P166 wd:Q3873146 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Elizabeth Bishop award received ?s . ?s award received National Book Award for Poetry . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "National Book Award for Poetry",
            "choppedEntity": "Q3873146"
        }
    },
    {
        "chopped": {
            "question": "Which is the Pro Football Hall of Fame ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3581 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Pro Football Hall of Fame ID (old) ?ans1}"
        },
        "original": {
            "question": "Which is the Pro Football Hall of Fame ID of Barry Sanders",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q809097 wdt:P3581 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Barry Sanders Pro Football Hall of Fame ID (old) ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Barry Sanders",
            "choppedEntity": "Q809097"
        }
    },
    {
        "chopped": {
            "question": "What is the GHS hazard statement for cocaine classified and labelled as ",
            "query": "SELECT ?ans1 WHERE { wd:Q41576 p:P4952 ?s . ?s ps:P4952 ?unknown . ?s pq:P5041 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { cocaine safety classification and labelling ?s . ?s safety classification and labelling ?unknown . ?s GHS hazard statement ?ans1}"
        },
        "original": {
            "question": "What is the GHS hazard statement for cocaine classified and labelled as Regulation (EC) No. 1272/2008",
            "query": "SELECT ?value WHERE { wd:Q41576 p:P4952 ?s . ?s ps:P4952 wd:Q2005334 . ?s pq:P5041 ?value}",
            "NLQuery": "SELECT ?value WHERE { cocaine safety classification and labelling ?s . ?s safety classification and labelling Regulation (EC) No. 1272/2008 . ?s GHS hazard statement ?value}"
        },
        "meta": {
            "entityTagNER": "LAW",
            "choppedText": "Regulation (EC) No. 1272/2008",
            "choppedEntity": "Q2005334"
        }
    },
    {
        "chopped": {
            "question": "Who is the mother of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P25 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown mother ?ans1}"
        },
        "original": {
            "question": "Who is the mother of Ashurbanipal",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q171191 wdt:P25 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Ashurbanipal mother ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ashurbanipal",
            "choppedEntity": "Q171191"
        }
    },
    {
        "chopped": {
            "question": "Mention the year of establishment of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P112 ?X . ?X wdt:P569 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown founded by ?X . ?X date of birth ?ans1}"
        },
        "original": {
            "question": "Mention the year of establishment of Chiropractic",
            "query": "SELECT ?answer WHERE { wd:Q658096 wdt:P112 ?X . ?X wdt:P569 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Chiropractic founded by ?X . ?X date of birth ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Chiropractic",
            "choppedEntity": "Q658096"
        }
    },
    {
        "chopped": {
            "question": "Which is the Unz Review author identifier for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2734 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Unz Review author ID ?ans1}"
        },
        "original": {
            "question": "Which is the Unz Review author identifier for Sherwood Anderson",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q233898 wdt:P2734 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Sherwood Anderson Unz Review author ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Sherwood Anderson",
            "choppedEntity": "Q233898"
        }
    },
    {
        "chopped": {
            "question": "What was the end cause of the dissolution of parliament according to ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1534 wd:Q741182 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown position held ?s . ?s position held ?ans1 . ?s end cause dissolution of parliament }"
        },
        "original": {
            "question": "What was the end cause of the dissolution of parliament according to William Ewart Gladstone",
            "query": "SELECT ?obj WHERE { wd:Q160852 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1534 wd:Q741182 }",
            "NLQuery": "SELECT ?obj WHERE { William Ewart Gladstone position held ?s . ?s position held ?obj . ?s end cause dissolution of parliament }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "William Ewart Gladstone",
            "choppedEntity": "Q160852"
        }
    },
    {
        "chopped": {
            "question": "When was the pseudonym \"Didier Desroches\" was used by ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P742 ?s . ?s ps:P742 ?x FILTER(contains(?x,'Didier Desroches')) . ?s pq:P31 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown pseudonym ?s . ?s pseudonym ?x FILTER(contains(?x,'Didier Desroches')) . ?s instance of ?ans1}"
        },
        "original": {
            "question": "When was the pseudonym \"Didier Desroches\" was used by Paul Eluard",
            "query": "SELECT ?value WHERE { wd:Q152176 p:P742 ?s . ?s ps:P742 ?x FILTER(contains(?x,'Didier Desroches')) . ?s pq:P31 ?value}",
            "NLQuery": "SELECT ?value WHERE { Paul \u00c9luard pseudonym ?s . ?s pseudonym ?x FILTER(contains(?x,'Didier Desroches')) . ?s instance of ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Paul Eluard",
            "choppedEntity": "Q152176"
        }
    },
    {
        "chopped": {
            "question": "When and with which degree did Guy Fieri completed his education at ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q12057690 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P585 ?ans1 . ?s pq:P512 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Guy Fieri educated at ?s . ?s educated at ?unknown . ?s point in time ?ans1 . ?s academic degree ?ans2 }"
        },
        "original": {
            "question": "When and with which degree did Guy Fieri completed his education at the University of Nevada, Las Vegas",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q12057690 p:P69 ?s . ?s ps:P69 wd:Q2302311 . ?s pq:P585 ?value1 . ?s pq:P512 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Guy Fieri educated at ?s . ?s educated at University of Nevada, Las Vegas . ?s point in time ?value1 . ?s academic degree ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the University of Nevada, Las Vegas",
            "choppedEntity": "Q2302311"
        }
    },
    {
        "chopped": {
            "question": "When and with which degree did Guy Fieri completed his training at ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q12057690 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P585 ?ans1 . ?s pq:P512 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Guy Fieri educated at ?s . ?s educated at ?unknown . ?s point in time ?ans1 . ?s academic degree ?ans2 }"
        },
        "original": {
            "question": "When and with which degree did Guy Fieri completed his training at the University of Nevada, Las Vegas",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q12057690 p:P69 ?s . ?s ps:P69 wd:Q2302311 . ?s pq:P585 ?value1 . ?s pq:P512 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Guy Fieri educated at ?s . ?s educated at University of Nevada, Las Vegas . ?s point in time ?value1 . ?s academic degree ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the University of Nevada, Las Vegas",
            "choppedEntity": "Q2302311"
        }
    },
    {
        "chopped": {
            "question": "Name the ship class with the slow speed which is named after ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q559026 . ?ans1 wdt:P2217 ?obj . ?ans1 wdt:P138 ?unknown. } ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of ship class . ?ans1 cruise speed ?obj . ?ans1 named after ?unknown. } ORDER BY ASC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "Name the ship class with the slow speed which is named after M\u00e6rsk Mc-Kinney M\u00f8ller",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q559026 . ?ent wdt:P2217 ?obj . ?ent wdt:P138 wd:Q14493958. } ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of ship class . ?ent cruise speed ?obj . ?ent named after M\u00e6rsk Mc-Kinney M\u00f8ller. } ORDER BY ASC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "M\u00e6rsk Mc-Kinney M\u00f8ller",
            "choppedEntity": "Q14493958"
        }
    },
    {
        "chopped": {
            "question": "What is the name of the slow speed ship class named after ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q559026 . ?ans1 wdt:P2217 ?obj . ?ans1 wdt:P138 ?unknown. } ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of ship class . ?ans1 cruise speed ?obj . ?ans1 named after ?unknown. } ORDER BY ASC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the name of the slow speed ship class named after Maersk Mc-Kinney Moller",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q559026 . ?ent wdt:P2217 ?obj . ?ent wdt:P138 wd:Q14493958. } ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of ship class . ?ent cruise speed ?obj . ?ent named after M\u00e6rsk Mc-Kinney M\u00f8ller. } ORDER BY ASC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Maersk Mc-Kinney Moller",
            "choppedEntity": "Q14493958"
        }
    },
    {
        "chopped": {
            "question": "How many of the deepest points are in ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P1589 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub lowest point ?unknown }"
        },
        "original": {
            "question": "How many of the deepest points are in the Persian Gulf",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P1589 wd:Q34675 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub lowest point Persian Gulf }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Persian Gulf",
            "choppedEntity": "Q34675"
        }
    },
    {
        "chopped": {
            "question": "Who started a conflict by overthrowing ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P607 ?obj . ?obj wdt:P31 wd:Q45382 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown conflict ?obj . ?obj instance of coup d'\u00e9tat } "
        },
        "original": {
            "question": "Who started a conflict by overthrowing Idi Amin",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q48231 wdt:P607 ?obj . ?obj wdt:P31 wd:Q45382 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Idi Amin conflict ?obj . ?obj instance of coup d'\u00e9tat } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Idi Amin",
            "choppedEntity": "Q48231"
        }
    },
    {
        "chopped": {
            "question": "Who begun a struggle by ousting ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P607 ?obj . ?obj wdt:P31 wd:Q45382 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown conflict ?obj . ?obj instance of coup d'\u00e9tat } "
        },
        "original": {
            "question": "Who begun a struggle by ousting Idi Amin",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q48231 wdt:P607 ?obj . ?obj wdt:P31 wd:Q45382 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Idi Amin conflict ?obj . ?obj instance of coup d'\u00e9tat } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Idi Amin",
            "choppedEntity": "Q48231"
        }
    },
    {
        "chopped": {
            "question": "What character role did Michael Damian play in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P161 ?s . ?s ps:P161 wd:Q3277020 . ?s pq:P453 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cast member ?s . ?s cast member Michael Damian . ?s character role ?ans1}"
        },
        "original": {
            "question": "What character role did Michael Damian play in The Young and Restless",
            "query": "SELECT ?value WHERE { wd:Q849627 p:P161 ?s . ?s ps:P161 wd:Q3277020 . ?s pq:P453 ?value}",
            "NLQuery": "SELECT ?value WHERE { The Young and the Restless cast member ?s . ?s cast member Michael Damian . ?s character role ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Young and Restless",
            "choppedEntity": "Q849627"
        }
    },
    {
        "chopped": {
            "question": "Who did Michael Damian play in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P161 ?s . ?s ps:P161 wd:Q3277020 . ?s pq:P453 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cast member ?s . ?s cast member Michael Damian . ?s character role ?ans1}"
        },
        "original": {
            "question": "Who did Michael Damian play in The Young and Restless",
            "query": "SELECT ?value WHERE { wd:Q849627 p:P161 ?s . ?s ps:P161 wd:Q3277020 . ?s pq:P453 ?value}",
            "NLQuery": "SELECT ?value WHERE { The Young and the Restless cast member ?s . ?s cast member Michael Damian . ?s character role ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Young and Restless",
            "choppedEntity": "Q849627"
        }
    },
    {
        "chopped": {
            "question": "Which is the SIPA ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1700 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown SIPA ID ?ans1}"
        },
        "original": {
            "question": "Which is the SIPA ID of Elmina Castle",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1438772 wdt:P1700 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Elmina Castle SIPA ID ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Elmina Castle",
            "choppedEntity": "Q1438772"
        }
    },
    {
        "chopped": {
            "question": "Was Jane the given, or middle name of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P735 ?s . ?s ps:P735 wd:Q1682564 . ?s pq:P1545 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown given name ?s . ?s given name Jane . ?s series ordinal ?ans1}"
        },
        "original": {
            "question": "Was Jane the given, or middle name of Nellie Bly",
            "query": "SELECT ?value WHERE { wd:Q230299 p:P735 ?s . ?s ps:P735 wd:Q1682564 . ?s pq:P1545 ?value}",
            "NLQuery": "SELECT ?value WHERE { Nellie Bly given name ?s . ?s given name Jane . ?s series ordinal ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Nellie Bly",
            "choppedEntity": "Q230299"
        }
    },
    {
        "chopped": {
            "question": "Was Nellie Bly's given name or middle name ",
            "query": "SELECT ?ans1 WHERE { wd:Q230299 p:P735 ?s . ?s ps:P735 ?unknown . ?s pq:P1545 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Nellie Bly given name ?s . ?s given name ?unknown . ?s series ordinal ?ans1}"
        },
        "original": {
            "question": "Was Nellie Bly's given name or middle name Jane",
            "query": "SELECT ?value WHERE { wd:Q230299 p:P735 ?s . ?s ps:P735 wd:Q1682564 . ?s pq:P1545 ?value}",
            "NLQuery": "SELECT ?value WHERE { Nellie Bly given name ?s . ?s given name Jane . ?s series ordinal ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jane",
            "choppedEntity": "Q1682564"
        }
    },
    {
        "chopped": {
            "question": "Who are the children in the painting of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P180 ?X . ?X wdt:P40 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown depicts ?X . ?X child ?ans1}"
        },
        "original": {
            "question": "Who are the children in the painting of Venus de' Medici",
            "query": "SELECT ?answer WHERE { wd:Q774967 wdt:P180 ?X . ?X wdt:P40 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Venus de' Medici depicts ?X . ?X child ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Venus de' Medici",
            "choppedEntity": "Q774967"
        }
    },
    {
        "chopped": {
            "question": "What do you know about the children in the painting of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P180 ?X . ?X wdt:P40 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown depicts ?X . ?X child ?ans1}"
        },
        "original": {
            "question": "What do you know about the children in the painting of Venus de' Medici",
            "query": "SELECT ?answer WHERE { wd:Q774967 wdt:P180 ?X . ?X wdt:P40 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Venus de' Medici depicts ?X . ?X child ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Venus de' Medici",
            "choppedEntity": "Q774967"
        }
    },
    {
        "chopped": {
            "question": "What award did The Godfather Part II receive at the 47th ",
            "query": "SELECT ?ans1 WHERE { wd:Q184768 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { The Godfather Part II award received ?s . ?s award received ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "What award did The Godfather Part II receive at the 47th Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q184768 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q369706 }",
            "NLQuery": "SELECT ?obj WHERE { The Godfather Part II award received ?s . ?s award received ?obj . ?s statement is subject of 47th Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q369706"
        }
    },
    {
        "chopped": {
            "question": "What is the faculty of Harvard Art Museum that has the subsidiary ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P69 ?ans1 . ?ans1 wdt:P355 wd:Q3783572}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown educated at ?ans1 . ?ans1 subsidiary Harvard Art Museums}"
        },
        "original": {
            "question": "What is the faculty of Harvard Art Museum that has the subsidiary Jamie Dimon",
            "query": "SELECT ?answer WHERE { wd:Q922169 wdt:P69 ?answer . ?answer wdt:P355 wd:Q3783572}",
            "NLQuery": "SELECT ?answer WHERE { Jamie Dimon educated at ?answer . ?answer subsidiary Harvard Art Museums}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Jamie Dimon",
            "choppedEntity": "Q922169"
        }
    },
    {
        "chopped": {
            "question": "What is the school of Harvard Art Museum that has the subsidiary ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P69 ?ans1 . ?ans1 wdt:P355 wd:Q3783572}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown educated at ?ans1 . ?ans1 subsidiary Harvard Art Museums}"
        },
        "original": {
            "question": "What is the school of Harvard Art Museum that has the subsidiary Jamie Dimon",
            "query": "SELECT ?answer WHERE { wd:Q922169 wdt:P69 ?answer . ?answer wdt:P355 wd:Q3783572}",
            "NLQuery": "SELECT ?answer WHERE { Jamie Dimon educated at ?answer . ?answer subsidiary Harvard Art Museums}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Jamie Dimon",
            "choppedEntity": "Q922169"
        }
    },
    {
        "chopped": {
            "question": "Who is the fictional person that is present in the work of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1441 ?unknown . ?sbj wdt:P31 wd:Q15632617 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj present in work ?unknown . ?sbj instance of fictional human } "
        },
        "original": {
            "question": "Who is the fictional person that is present in the work of The Andy Griffith Show",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1441 wd:Q526035 . ?sbj wdt:P31 wd:Q15632617 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj present in work The Andy Griffith Show . ?sbj instance of fictional human } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Andy Griffith Show",
            "choppedEntity": "Q526035"
        }
    },
    {
        "chopped": {
            "question": "Who is the anecdotal individual that's display within the work of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1441 ?unknown . ?sbj wdt:P31 wd:Q15632617 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj present in work ?unknown . ?sbj instance of fictional human } "
        },
        "original": {
            "question": "Who is the anecdotal individual that's display within the work of The Andy Griffith Show",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1441 wd:Q526035 . ?sbj wdt:P31 wd:Q15632617 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj present in work The Andy Griffith Show . ?sbj instance of fictional human } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Andy Griffith Show",
            "choppedEntity": "Q526035"
        }
    },
    {
        "chopped": {
            "question": "Is Istanbul a twinned administrative body with Buenos Aires and ",
            "query": "ASK WHERE { wd:Q406 wdt:P190 wd:Q1486 . wd:Q406 wdt:P190 ?unknown }",
            "NLQuery": "ASK WHERE { Istanbul twinned administrative body Buenos Aires . Istanbul twinned administrative body ?unknown }"
        },
        "original": {
            "question": "Is Istanbul a twinned administrative body with Buenos Aires and Lahore",
            "query": "ASK WHERE { wd:Q406 wdt:P190 wd:Q1486 . wd:Q406 wdt:P190 wd:Q11739 }",
            "NLQuery": "ASK WHERE { Istanbul twinned administrative body Buenos Aires . Istanbul twinned administrative body Lahore }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Lahore",
            "choppedEntity": "Q11739"
        }
    },
    {
        "chopped": {
            "question": "What is the temperature of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2076 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown temperature ?ans1}"
        },
        "original": {
            "question": "What is the temperature of Triton",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q3359 wdt:P2076 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Triton temperature ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Triton",
            "choppedEntity": "Q3359"
        }
    },
    {
        "chopped": {
            "question": "In 1959, what was the population of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1959')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),'1959')) }"
        },
        "original": {
            "question": "In 1959, what was the population of Fergana",
            "query": "SELECT ?obj WHERE { wd:Q486329 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1959')) }",
            "NLQuery": "SELECT ?obj WHERE { Fergana population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1959')) }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Fergana",
            "choppedEntity": "Q486329"
        }
    },
    {
        "chopped": {
            "question": "What is the NFPA Health safety classification and labeling of formic acid according to ",
            "query": "SELECT ?ans1 WHERE { wd:Q161233 p:P4952 ?s . ?s ps:P4952 ?unknown . ?s pq:P993 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { formic acid safety classification and labelling ?s . ?s safety classification and labelling ?unknown . ?s NFPA Health ?ans1}"
        },
        "original": {
            "question": "What is the NFPA Health safety classification and labeling of formic acid according to the NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response",
            "query": "SELECT ?value WHERE { wd:Q161233 p:P4952 ?s . ?s ps:P4952 wd:Q51139288 . ?s pq:P993 ?value}",
            "NLQuery": "SELECT ?value WHERE { formic acid safety classification and labelling ?s . ?s safety classification and labelling NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response . ?s NFPA Health ?value}"
        },
        "meta": {
            "entityTagNER": "LAW",
            "choppedText": "the NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response",
            "choppedEntity": "Q51139288"
        }
    },
    {
        "chopped": {
            "question": "What is the local dialing code for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P473 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown local dialing code ?ans1}"
        },
        "original": {
            "question": "What is the local dialing code for Panjin",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q75230 wdt:P473 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Panjin local dialing code ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Panjin",
            "choppedEntity": "Q75230"
        }
    },
    {
        "chopped": {
            "question": "Who was Link in ",
            "query": "SELECT ?ans1 WHERE { wd:Q568553 p:P175 ?s . ?s ps:P175 ?ans1 . ?s pq:P642 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Link performer ?s . ?s performer ?ans1 . ?s of ?unknown }"
        },
        "original": {
            "question": "Who was Link in The Legend of Zelda: Twilight Princess",
            "query": "SELECT ?obj WHERE { wd:Q568553 p:P175 ?s . ?s ps:P175 ?obj . ?s pq:P642 wd:Q735613 }",
            "NLQuery": "SELECT ?obj WHERE { Link performer ?s . ?s performer ?obj . ?s of The Legend of Zelda: Twilight Princess }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Legend of Zelda: Twilight Princess",
            "choppedEntity": "Q735613"
        }
    },
    {
        "chopped": {
            "question": "Karisma Kapoor is considered top dog in which of the medals of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P166 ?ans1 . ?ans1 wdt:P1346 wd:Q464578}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?ans1 . ?ans1 winner Karisma Kapoor}"
        },
        "original": {
            "question": "Karisma Kapoor is considered top dog in which of the medals of Rakhee Gulzar",
            "query": "SELECT ?answer WHERE { wd:Q3196775 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q464578}",
            "NLQuery": "SELECT ?answer WHERE { Rakhee Gulzar award received ?answer . ?answer winner Karisma Kapoor}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Rakhee Gulzar",
            "choppedEntity": "Q3196775"
        }
    },
    {
        "chopped": {
            "question": "Karisma Kapoor is considered beat puppy in which of the decorations of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P166 ?ans1 . ?ans1 wdt:P1346 wd:Q464578}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?ans1 . ?ans1 winner Karisma Kapoor}"
        },
        "original": {
            "question": "Karisma Kapoor is considered beat puppy in which of the decorations of Rakhee Gulzar",
            "query": "SELECT ?answer WHERE { wd:Q3196775 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q464578}",
            "NLQuery": "SELECT ?answer WHERE { Rakhee Gulzar award received ?answer . ?answer winner Karisma Kapoor}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Rakhee Gulzar",
            "choppedEntity": "Q3196775"
        }
    },
    {
        "chopped": {
            "question": "Which is the ESPN.com NFL player ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3686 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown ESPN.com NFL player ID ?ans1}"
        },
        "original": {
            "question": "Which is the ESPN.com NFL player ID for Kurt Warner",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q945750 wdt:P3686 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Kurt Warner ESPN.com NFL player ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Kurt Warner",
            "choppedEntity": "Q945750"
        }
    },
    {
        "chopped": {
            "question": "What is representative of those active in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P937 ?X . ?X wdt:P180 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown work location ?X . ?X depicts ?ans1}"
        },
        "original": {
            "question": "What is representative of those active in Harry Potter",
            "query": "SELECT ?answer WHERE { wd:Q3244512 wdt:P937 ?X . ?X wdt:P180 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Harry Potter work location ?X . ?X depicts ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Harry Potter",
            "choppedEntity": "Q3244512"
        }
    },
    {
        "chopped": {
            "question": "What is agent of those dynamic in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P937 ?X . ?X wdt:P180 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown work location ?X . ?X depicts ?ans1}"
        },
        "original": {
            "question": "What is agent of those dynamic in Harry Potter",
            "query": "SELECT ?answer WHERE { wd:Q3244512 wdt:P937 ?X . ?X wdt:P180 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Harry Potter work location ?X . ?X depicts ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Harry Potter",
            "choppedEntity": "Q3244512"
        }
    },
    {
        "chopped": {
            "question": "Who is in voivodership of Asyut Governorate, that has diplomatic relations in ",
            "query": "SELECT ?ans1 WHERE { wd:Q29965 wdt:P131 ?ans1 . ?ans1 wdt:P530 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Asyut Governorate located in the administrative territorial entity ?ans1 . ?ans1 diplomatic relation ?unknown}"
        },
        "original": {
            "question": "Who is in voivodership of Asyut Governorate, that has diplomatic relations in Russia",
            "query": "SELECT ?answer WHERE { wd:Q29965 wdt:P131 ?answer . ?answer wdt:P530 wd:Q159}",
            "NLQuery": "SELECT ?answer WHERE { Asyut Governorate located in the administrative territorial entity ?answer . ?answer diplomatic relation Russia}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Russia",
            "choppedEntity": "Q159"
        }
    },
    {
        "chopped": {
            "question": "Who is in voivodership of Asyut Governorate, that has discretionary relations in ",
            "query": "SELECT ?ans1 WHERE { wd:Q29965 wdt:P131 ?ans1 . ?ans1 wdt:P530 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Asyut Governorate located in the administrative territorial entity ?ans1 . ?ans1 diplomatic relation ?unknown}"
        },
        "original": {
            "question": "Who is in voivodership of Asyut Governorate, that has discretionary relations in Russia",
            "query": "SELECT ?answer WHERE { wd:Q29965 wdt:P131 ?answer . ?answer wdt:P530 wd:Q159}",
            "NLQuery": "SELECT ?answer WHERE { Asyut Governorate located in the administrative territorial entity ?answer . ?answer diplomatic relation Russia}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Russia",
            "choppedEntity": "Q159"
        }
    },
    {
        "chopped": {
            "question": "What is the municipal council of diplomatic relations for ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P530 ?X . ?X wdt:P194 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown diplomatic relation ?X . ?X legislative body ?ans1}"
        },
        "original": {
            "question": "What is the municipal council of diplomatic relations for the Turkish Republic of Northern Cyprus",
            "query": "SELECT ?answer WHERE { wd:Q23681 wdt:P530 ?X . ?X wdt:P194 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Turkish Republic of Northern Cyprus diplomatic relation ?X . ?X legislative body ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Turkish Republic of Northern Cyprus",
            "choppedEntity": "Q23681"
        }
    },
    {
        "chopped": {
            "question": "What is the civil chamber of discretionary relations for ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P530 ?X . ?X wdt:P194 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown diplomatic relation ?X . ?X legislative body ?ans1}"
        },
        "original": {
            "question": "What is the civil chamber of discretionary relations for the Turkish Republic of Northern Cyprus",
            "query": "SELECT ?answer WHERE { wd:Q23681 wdt:P530 ?X . ?X wdt:P194 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Turkish Republic of Northern Cyprus diplomatic relation ?X . ?X legislative body ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Turkish Republic of Northern Cyprus",
            "choppedEntity": "Q23681"
        }
    },
    {
        "chopped": {
            "question": "What was the name of the second work published by ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P735 ?s . ?s ps:P735 ?ans1 . ?s pq:P1545 ?x FILTER(contains(?x,'2')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown given name ?s . ?s given name ?ans1 . ?s series ordinal ?x FILTER(contains(?x,'2')) }"
        },
        "original": {
            "question": "What was the name of the second work published by Oscar Wilde",
            "query": "SELECT ?obj WHERE { wd:Q30875 p:P735 ?s . ?s ps:P735 ?obj . ?s pq:P1545 ?x FILTER(contains(?x,'2')) }",
            "NLQuery": "SELECT ?obj WHERE { Oscar Wilde given name ?s . ?s given name ?obj . ?s series ordinal ?x FILTER(contains(?x,'2')) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Oscar Wilde",
            "choppedEntity": "Q30875"
        }
    },
    {
        "chopped": {
            "question": "Well, what was the name of the second work published by ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P735 ?s . ?s ps:P735 ?ans1 . ?s pq:P1545 ?x FILTER(contains(?x,'2')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown given name ?s . ?s given name ?ans1 . ?s series ordinal ?x FILTER(contains(?x,'2')) }"
        },
        "original": {
            "question": "Well, what was the name of the second work published by Oscar Wilde",
            "query": "SELECT ?obj WHERE { wd:Q30875 p:P735 ?s . ?s ps:P735 ?obj . ?s pq:P1545 ?x FILTER(contains(?x,'2')) }",
            "NLQuery": "SELECT ?obj WHERE { Oscar Wilde given name ?s . ?s given name ?obj . ?s series ordinal ?x FILTER(contains(?x,'2')) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Oscar Wilde",
            "choppedEntity": "Q30875"
        }
    },
    {
        "chopped": {
            "question": "What nation was made by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P170 ?X . ?X wdt:P27 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown creator ?X . ?X country of citizenship ?ans1}"
        },
        "original": {
            "question": "What nation was made by WWE Raw",
            "query": "SELECT ?answer WHERE { wd:Q18754 wdt:P170 ?X . ?X wdt:P27 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { WWE Raw creator ?X . ?X country of citizenship ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "WWE Raw",
            "choppedEntity": "Q18754"
        }
    },
    {
        "chopped": {
            "question": "What country was made by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P170 ?X . ?X wdt:P27 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown creator ?X . ?X country of citizenship ?ans1}"
        },
        "original": {
            "question": "What country was made by WWE Raw",
            "query": "SELECT ?answer WHERE { wd:Q18754 wdt:P170 ?X . ?X wdt:P27 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { WWE Raw creator ?X . ?X country of citizenship ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "WWE Raw",
            "choppedEntity": "Q18754"
        }
    },
    {
        "chopped": {
            "question": "Who curated the museum collection of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P195 ?X . ?X wdt:P170 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown collection ?X . ?X creator ?ans1}"
        },
        "original": {
            "question": "Who curated the museum collection of Fez",
            "query": "SELECT ?answer WHERE { wd:Q5446176 wdt:P195 ?X . ?X wdt:P170 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Fez collection ?X . ?X creator ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Fez",
            "choppedEntity": "Q5446176"
        }
    },
    {
        "chopped": {
            "question": "When did Claude Monet move to ",
            "query": "SELECT ?ans1 WHERE { wd:Q296 p:P551 ?s . ?s ps:P551 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Claude Monet residence ?s . ?s residence ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Claude Monet move to Giverny",
            "query": "SELECT ?value WHERE { wd:Q296 p:P551 ?s . ?s ps:P551 wd:Q165061 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Claude Monet residence ?s . ?s residence Giverny . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Giverny",
            "choppedEntity": "Q165061"
        }
    },
    {
        "chopped": {
            "question": "On what date did Claude Monet relocate to ",
            "query": "SELECT ?ans1 WHERE { wd:Q296 p:P551 ?s . ?s ps:P551 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Claude Monet residence ?s . ?s residence ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "On what date did Claude Monet relocate to Giverny",
            "query": "SELECT ?value WHERE { wd:Q296 p:P551 ?s . ?s ps:P551 wd:Q165061 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Claude Monet residence ?s . ?s residence Giverny . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Giverny",
            "choppedEntity": "Q165061"
        }
    },
    {
        "chopped": {
            "question": "Which is the New York City Landmarks Preservation Commission ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4273 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown New York City Landmarks Preservation Commission ID ?ans1}"
        },
        "original": {
            "question": "Which is the New York City Landmarks Preservation Commission ID for Chrysler Building",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q11274 wdt:P4273 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Chrysler Building New York City Landmarks Preservation Commission ID ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Chrysler Building",
            "choppedEntity": "Q11274"
        }
    },
    {
        "chopped": {
            "question": "When did Waisale Serevi join ",
            "query": "SELECT ?ans1 WHERE { wd:Q3565170 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Waisale Serevi member of sports team ?s . ?s member of sports team ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Waisale Serevi join Stade Montois",
            "query": "SELECT ?value WHERE { wd:Q3565170 p:P54 ?s . ?s ps:P54 wd:Q1782908 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Waisale Serevi member of sports team ?s . ?s member of sports team Stade Montois . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Stade Montois",
            "choppedEntity": "Q1782908"
        }
    },
    {
        "chopped": {
            "question": "When did Waisale Serevi sign up with ",
            "query": "SELECT ?ans1 WHERE { wd:Q3565170 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Waisale Serevi member of sports team ?s . ?s member of sports team ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Waisale Serevi sign up with Stade Montois",
            "query": "SELECT ?value WHERE { wd:Q3565170 p:P54 ?s . ?s ps:P54 wd:Q1782908 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Waisale Serevi member of sports team ?s . ?s member of sports team Stade Montois . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Stade Montois",
            "choppedEntity": "Q1782908"
        }
    },
    {
        "chopped": {
            "question": "What city hold the administrative body and functioning of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P190 ?unknown . ?sbj wdt:P31 wd:Q515 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj twinned administrative body ?unknown . ?sbj instance of city } "
        },
        "original": {
            "question": "What city hold the administrative body and functioning of Bern",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P190 wd:Q70 . ?sbj wdt:P31 wd:Q515 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj twinned administrative body Bern . ?sbj instance of city } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Bern",
            "choppedEntity": "Q70"
        }
    },
    {
        "chopped": {
            "question": "Did Lynyrd Skynyrd sign with ",
            "query": "ASK WHERE { wd:Q158462 wdt:P264 ?unknown }",
            "NLQuery": "ASK WHERE { Lynyrd Skynyrd record label ?unknown }"
        },
        "original": {
            "question": "Did Lynyrd Skynyrd sign with MCA Inc.",
            "query": "ASK WHERE { wd:Q158462 wdt:P264 wd:Q304509 }",
            "NLQuery": "ASK WHERE { Lynyrd Skynyrd record label MCA Inc. }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "MCA Inc.",
            "choppedEntity": "Q304509"
        }
    },
    {
        "chopped": {
            "question": "Did MCA ever sign ",
            "query": "ASK WHERE { ?unknown wdt:P264 wd:Q304509 }",
            "NLQuery": "ASK WHERE { ?unknown record label MCA Inc. }"
        },
        "original": {
            "question": "Did MCA ever sign Lynyrd Skynyrd",
            "query": "ASK WHERE { wd:Q158462 wdt:P264 wd:Q304509 }",
            "NLQuery": "ASK WHERE { Lynyrd Skynyrd record label MCA Inc. }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Lynyrd Skynyrd",
            "choppedEntity": "Q158462"
        }
    },
    {
        "chopped": {
            "question": "What is the diplomatic relation of the birthplace of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P495 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country of origin ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "What is the diplomatic relation of the birthplace of Over the Rainbow",
            "query": "SELECT ?answer WHERE { wd:Q161402 wdt:P495 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Over the Rainbow country of origin ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Over the Rainbow",
            "choppedEntity": "Q161402"
        }
    },
    {
        "chopped": {
            "question": "What is the political connection of the origin of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P495 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country of origin ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "What is the political connection of the origin of Over the Rainbow",
            "query": "SELECT ?answer WHERE { wd:Q161402 wdt:P495 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Over the Rainbow country of origin ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Over the Rainbow",
            "choppedEntity": "Q161402"
        }
    },
    {
        "chopped": {
            "question": "Where is the birthplace of Urban VI which is adjacent to ",
            "query": "SELECT ?ans1 WHERE { wd:Q171626 wdt:P19 ?ans1 . ?ans1 wdt:P47 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Urban VI place of birth ?ans1 . ?ans1 shares border with ?unknown}"
        },
        "original": {
            "question": "Where is the birthplace of Urban VI which is adjacent to San Giorgio a Crremano",
            "query": "SELECT ?answer WHERE { wd:Q171626 wdt:P19 ?answer . ?answer wdt:P47 wd:Q72497}",
            "NLQuery": "SELECT ?answer WHERE { Urban VI place of birth ?answer . ?answer shares border with San Giorgio a Cremano}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "San Giorgio a Crremano",
            "choppedEntity": "Q72497"
        }
    },
    {
        "chopped": {
            "question": "Where is the origin of Urban VI which is adjoining to ",
            "query": "SELECT ?ans1 WHERE { wd:Q171626 wdt:P19 ?ans1 . ?ans1 wdt:P47 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Urban VI place of birth ?ans1 . ?ans1 shares border with ?unknown}"
        },
        "original": {
            "question": "Where is the origin of Urban VI which is adjoining to San Giorgio a Crremano",
            "query": "SELECT ?answer WHERE { wd:Q171626 wdt:P19 ?answer . ?answer wdt:P47 wd:Q72497}",
            "NLQuery": "SELECT ?answer WHERE { Urban VI place of birth ?answer . ?answer shares border with San Giorgio a Cremano}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "San Giorgio a Crremano",
            "choppedEntity": "Q72497"
        }
    },
    {
        "chopped": {
            "question": "Is 3.2 the correct number of masts on the ",
            "query": "ASK WHERE { ?unknown wdt:P1099 ?obj FILTER(?obj = 3.2) } ",
            "NLQuery": "ASK WHERE { ?unknown number of masts ?obj FILTER(?obj = 3.2) } "
        },
        "original": {
            "question": "Is 3.2 the correct number of masts on the Dundonald",
            "query": "ASK WHERE { wd:Q5314887 wdt:P1099 ?obj FILTER(?obj = 3.2) } ",
            "NLQuery": "ASK WHERE { Dundonald number of masts ?obj FILTER(?obj = 3.2) } "
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Dundonald",
            "choppedEntity": "Q5314887"
        }
    },
    {
        "chopped": {
            "question": "What sovereign state contains ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P150 ?unknown . ?sbj wdt:P31 wd:Q3624078 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj contains administrative territorial entity ?unknown . ?sbj instance of sovereign state } "
        },
        "original": {
            "question": "What sovereign state contains Mizoram",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P150 wd:Q1502 . ?sbj wdt:P31 wd:Q3624078 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj contains administrative territorial entity Mizoram . ?sbj instance of sovereign state } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Mizoram",
            "choppedEntity": "Q1502"
        }
    },
    {
        "chopped": {
            "question": "What paramount state contains ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P150 ?unknown . ?sbj wdt:P31 wd:Q3624078 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj contains administrative territorial entity ?unknown . ?sbj instance of sovereign state } "
        },
        "original": {
            "question": "What paramount state contains Mizoram",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P150 wd:Q1502 . ?sbj wdt:P31 wd:Q3624078 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj contains administrative territorial entity Mizoram . ?sbj instance of sovereign state } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Mizoram",
            "choppedEntity": "Q1502"
        }
    },
    {
        "chopped": {
            "question": "Which airport is the hub of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P113 ?obj . ?obj wdt:P31 wd:Q1248784 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown airline hub ?obj . ?obj instance of airport } "
        },
        "original": {
            "question": "Which airport is the hub of Delta Air Lines",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q188920 wdt:P113 ?obj . ?obj wdt:P31 wd:Q1248784 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Delta Air Lines airline hub ?obj . ?obj instance of airport } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Delta Air Lines",
            "choppedEntity": "Q188920"
        }
    },
    {
        "chopped": {
            "question": "When did Dresden start being located in the administrative territorial entity of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1731 p:P131 ?s . ?s ps:P131 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Dresden located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Dresden start being located in the administrative territorial entity of the Dresden Government Region",
            "query": "SELECT ?value WHERE { wd:Q1731 p:P131 ?s . ?s ps:P131 wd:Q24174 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Dresden located in the administrative territorial entity ?s . ?s located in the administrative territorial entity Dresden Government Region . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Dresden Government Region",
            "choppedEntity": "Q24174"
        }
    },
    {
        "chopped": {
            "question": "When was Dresden first deemed to be located in the administrative territorial entity of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1731 p:P131 ?s . ?s ps:P131 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Dresden located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When was Dresden first deemed to be located in the administrative territorial entity of the Dresden Government Region",
            "query": "SELECT ?value WHERE { wd:Q1731 p:P131 ?s . ?s ps:P131 wd:Q24174 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Dresden located in the administrative territorial entity ?s . ?s located in the administrative territorial entity Dresden Government Region . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Dresden Government Region",
            "choppedEntity": "Q24174"
        }
    },
    {
        "chopped": {
            "question": "What is the NAIF ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2956 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown NAIF ID ?ans1}"
        },
        "original": {
            "question": "What is the NAIF ID for Titania",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q3322 wdt:P2956 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Titania NAIF ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Titania",
            "choppedEntity": "Q3322"
        }
    },
    {
        "chopped": {
            "question": "Which carries scientific instrument for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1202 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown carries scientific instrument ?ans1}"
        },
        "original": {
            "question": "Which carries scientific instrument for Wide-field Infrared Survey Explorer",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q693552 wdt:P1202 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Wide-field Infrared Survey Explorer carries scientific instrument ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Wide-field Infrared Survey Explorer",
            "choppedEntity": "Q693552"
        }
    },
    {
        "chopped": {
            "question": "What actress played ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1441 ?X . ?X wdt:P161 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown present in work ?X . ?X cast member ?ans1}"
        },
        "original": {
            "question": "What actress played Marie Schrader",
            "query": "SELECT ?answer WHERE { wd:Q15992576 wdt:P1441 ?X . ?X wdt:P161 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Marie Schrader present in work ?X . ?X cast member ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Marie Schrader",
            "choppedEntity": "Q15992576"
        }
    },
    {
        "chopped": {
            "question": "What performing artist played ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1441 ?X . ?X wdt:P161 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown present in work ?X . ?X cast member ?ans1}"
        },
        "original": {
            "question": "What performing artist played Marie Schrader",
            "query": "SELECT ?answer WHERE { wd:Q15992576 wdt:P1441 ?X . ?X wdt:P161 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Marie Schrader present in work ?X . ?X cast member ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Marie Schrader",
            "choppedEntity": "Q15992576"
        }
    },
    {
        "chopped": {
            "question": "When and with whom did Mairead Maguire win an award as ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q157655 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P1706 ?ans1 . ?s pq:P585 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Mairead Maguire award received ?s . ?s award received ?unknown . ?s together with ?ans1 . ?s point in time ?ans2 }"
        },
        "original": {
            "question": "When and with whom did Mairead Maguire win an award as Carl von Ossietzky Medaille",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q157655 p:P166 ?s . ?s ps:P166 wd:Q605151 . ?s pq:P1706 ?value1 . ?s pq:P585 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Mairead Maguire award received ?s . ?s award received Carl-von-Ossietzky-Medaille . ?s together with ?value1 . ?s point in time ?value2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Carl von Ossietzky Medaille",
            "choppedEntity": "Q605151"
        }
    },
    {
        "chopped": {
            "question": "Is it true that Charlemagne ruled during ",
            "query": "ASK WHERE { wd:Q3044 wdt:P2348 ?unknown }",
            "NLQuery": "ASK WHERE { Charlemagne time period ?unknown }"
        },
        "original": {
            "question": "Is it true that Charlemagne ruled during the Middle Ages",
            "query": "ASK WHERE { wd:Q3044 wdt:P2348 wd:Q12554 }",
            "NLQuery": "ASK WHERE { Charlemagne time period Middle Ages }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "the Middle Ages",
            "choppedEntity": "Q12554"
        }
    },
    {
        "chopped": {
            "question": "Did Charlemagne rule during ",
            "query": "ASK WHERE { wd:Q3044 wdt:P2348 ?unknown }",
            "NLQuery": "ASK WHERE { Charlemagne time period ?unknown }"
        },
        "original": {
            "question": "Did Charlemagne rule during the Middle Ages",
            "query": "ASK WHERE { wd:Q3044 wdt:P2348 wd:Q12554 }",
            "NLQuery": "ASK WHERE { Charlemagne time period Middle Ages }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "the Middle Ages",
            "choppedEntity": "Q12554"
        }
    },
    {
        "chopped": {
            "question": "Which is the mouthpiece for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2813 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown house publication ?ans1}"
        },
        "original": {
            "question": "Which is the mouthpiece for Scandinavian Airlines",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q187854 wdt:P2813 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Scandinavian Airlines house publication ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Scandinavian Airlines",
            "choppedEntity": "Q187854"
        }
    },
    {
        "chopped": {
            "question": "Who developed ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P178 ?X . ?X wdt:P571 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown developer ?X . ?X inception ?ans1}"
        },
        "original": {
            "question": "Who developed Space Invaders",
            "query": "SELECT ?answer WHERE { wd:Q220665 wdt:P178 ?X . ?X wdt:P571 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Space Invaders developer ?X . ?X inception ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Space Invaders",
            "choppedEntity": "Q220665"
        }
    },
    {
        "chopped": {
            "question": "Who were the developers of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P178 ?X . ?X wdt:P571 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown developer ?X . ?X inception ?ans1}"
        },
        "original": {
            "question": "Who were the developers of Space Invaders",
            "query": "SELECT ?answer WHERE { wd:Q220665 wdt:P178 ?X . ?X wdt:P571 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Space Invaders developer ?X . ?X inception ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Space Invaders",
            "choppedEntity": "Q220665"
        }
    },
    {
        "chopped": {
            "question": "In which year Tunis located in the administrative territorial entity was named Eyalet of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P131 ?s . ?s ps:P131 wd:Q20018403 . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in the administrative territorial entity ?s . ?s located in the administrative territorial entity Eyalet of Tunis . ?s start time ?ans1}"
        },
        "original": {
            "question": "In which year Tunis located in the administrative territorial entity was named Eyalet of Tunis",
            "query": "SELECT ?value WHERE { wd:Q3572 p:P131 ?s . ?s ps:P131 wd:Q20018403 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Tunis located in the administrative territorial entity ?s . ?s located in the administrative territorial entity Eyalet of Tunis . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Tunis",
            "choppedEntity": "Q3572"
        }
    },
    {
        "chopped": {
            "question": "When did Tunis loacte the administrative territorial entity named Eyalet of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P131 ?s . ?s ps:P131 wd:Q20018403 . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in the administrative territorial entity ?s . ?s located in the administrative territorial entity Eyalet of Tunis . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Tunis loacte the administrative territorial entity named Eyalet of Tunis",
            "query": "SELECT ?value WHERE { wd:Q3572 p:P131 ?s . ?s ps:P131 wd:Q20018403 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Tunis located in the administrative territorial entity ?s . ?s located in the administrative territorial entity Eyalet of Tunis . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Tunis",
            "choppedEntity": "Q3572"
        }
    },
    {
        "chopped": {
            "question": "What was George Cukor nominated for at the 23rd ",
            "query": "SELECT ?ans1 WHERE { wd:Q56014 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { George Cukor nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "What was George Cukor nominated for at the 23rd Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q56014 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q917076 }",
            "NLQuery": "SELECT ?obj WHERE { George Cukor nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 23rd Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q917076"
        }
    },
    {
        "chopped": {
            "question": "George Cukor was nominated for which award at the 23rd ",
            "query": "SELECT ?ans1 WHERE { wd:Q56014 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { George Cukor nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "George Cukor was nominated for which award at the 23rd Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q56014 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q917076 }",
            "NLQuery": "SELECT ?obj WHERE { George Cukor nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 23rd Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q917076"
        }
    },
    {
        "chopped": {
            "question": "Where is the birth location of Caleb Bradham that contains ",
            "query": "SELECT ?ans1 WHERE { wd:Q706204 wdt:P19 ?ans1 . ?ans1 wdt:P150 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Caleb Bradham place of birth ?ans1 . ?ans1 contains administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "Where is the birth location of Caleb Bradham that contains Onslow County",
            "query": "SELECT ?answer WHERE { wd:Q706204 wdt:P19 ?answer . ?answer wdt:P150 wd:Q508220}",
            "NLQuery": "SELECT ?answer WHERE { Caleb Bradham place of birth ?answer . ?answer contains administrative territorial entity Onslow County}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Onslow County",
            "choppedEntity": "Q508220"
        }
    },
    {
        "chopped": {
            "question": "Where is Caleb Bradham's birthplace that includes ",
            "query": "SELECT ?ans1 WHERE { wd:Q706204 wdt:P19 ?ans1 . ?ans1 wdt:P150 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Caleb Bradham place of birth ?ans1 . ?ans1 contains administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "Where is Caleb Bradham's birthplace that includes Onslow County",
            "query": "SELECT ?answer WHERE { wd:Q706204 wdt:P19 ?answer . ?answer wdt:P150 wd:Q508220}",
            "NLQuery": "SELECT ?answer WHERE { Caleb Bradham place of birth ?answer . ?answer contains administrative territorial entity Onslow County}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Onslow County",
            "choppedEntity": "Q508220"
        }
    },
    {
        "chopped": {
            "question": "Which is the tag editor of the operating system of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P306 ?unknown . ?sbj wdt:P31 wd:Q240795 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj operating system ?unknown . ?sbj instance of tag editor } "
        },
        "original": {
            "question": "Which is the tag editor of the operating system of MS-DOS",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P306 wd:Q47604 . ?sbj wdt:P31 wd:Q240795 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj operating system MS-DOS . ?sbj instance of tag editor } "
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "MS-DOS",
            "choppedEntity": "Q47604"
        }
    },
    {
        "chopped": {
            "question": "What is the nationality of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P27 ?X . ?X wdt:P1082 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country of citizenship ?X . ?X population ?ans1}"
        },
        "original": {
            "question": "What is the nationality of Katharine Hayhoe",
            "query": "SELECT ?answer WHERE { wd:Q15429497 wdt:P27 ?X . ?X wdt:P1082 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Katharine Hayhoe country of citizenship ?X . ?X population ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Katharine Hayhoe",
            "choppedEntity": "Q15429497"
        }
    },
    {
        "chopped": {
            "question": "Who owns ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P127 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown owned by ?obj . ?obj instance of business } "
        },
        "original": {
            "question": "Who owns YouTube",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q866 wdt:P127 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { YouTube owned by ?obj . ?obj instance of business } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "YouTube",
            "choppedEntity": "Q866"
        }
    },
    {
        "chopped": {
            "question": "Who possesses ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P127 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown owned by ?obj . ?obj instance of business } "
        },
        "original": {
            "question": "Who possesses YouTube",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q866 wdt:P127 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { YouTube owned by ?obj . ?obj instance of business } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "YouTube",
            "choppedEntity": "Q866"
        }
    },
    {
        "chopped": {
            "question": "How many time zones are in ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P421 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown located in time zone ?obj }"
        },
        "original": {
            "question": "How many time zones are in Hungary",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q28 wdt:P421 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Hungary located in time zone ?obj }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Hungary",
            "choppedEntity": "Q28"
        }
    },
    {
        "chopped": {
            "question": "Which is the total production of Airbus ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1092 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown total produced ?ans1}"
        },
        "original": {
            "question": "Which is the total production of Airbus A380",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q5830 wdt:P1092 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { A380 total produced ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "A380",
            "choppedEntity": "Q5830"
        }
    },
    {
        "chopped": {
            "question": "What is in the category of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2258 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown mobile country code ?ans1}"
        },
        "original": {
            "question": "What is in the category of Tonga",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q678 wdt:P2258 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Tonga mobile country code ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Tonga",
            "choppedEntity": "Q678"
        }
    },
    {
        "chopped": {
            "question": "Who is the grandfather of the film director of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P57 ?X . ?X wdt:P1038 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown director ?X . ?X relative ?ans1}"
        },
        "original": {
            "question": "Who is the grandfather of the film director of The Don Knotts Show",
            "query": "SELECT ?answer WHERE { wd:Q7730630 wdt:P57 ?X . ?X wdt:P1038 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Don Knotts Show director ?X . ?X relative ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Don Knotts Show",
            "choppedEntity": "Q7730630"
        }
    },
    {
        "chopped": {
            "question": "Who is the granddad of the film executive of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P57 ?X . ?X wdt:P1038 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown director ?X . ?X relative ?ans1}"
        },
        "original": {
            "question": "Who is the granddad of the film executive of The Wear Knotts Show",
            "query": "SELECT ?answer WHERE { wd:Q7730630 wdt:P57 ?X . ?X wdt:P1038 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Don Knotts Show director ?X . ?X relative ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Wear Knotts Show",
            "choppedEntity": "Q7730630"
        }
    },
    {
        "chopped": {
            "question": "When did Ian Kershaw receive ",
            "query": "SELECT ?ans1 WHERE { wd:Q312532 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ian Kershaw award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Ian Kershaw receive the Wolfson History Prize",
            "query": "SELECT ?value WHERE { wd:Q312532 p:P166 ?s . ?s ps:P166 wd:Q4020686 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ian Kershaw award received ?s . ?s award received Wolfson History Prize . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Wolfson History Prize",
            "choppedEntity": "Q4020686"
        }
    },
    {
        "chopped": {
            "question": "In which year did Ian Kershaw get ",
            "query": "SELECT ?ans1 WHERE { wd:Q312532 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ian Kershaw award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "In which year did Ian Kershaw get the Wolfson History Prize",
            "query": "SELECT ?value WHERE { wd:Q312532 p:P166 ?s . ?s ps:P166 wd:Q4020686 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ian Kershaw award received ?s . ?s award received Wolfson History Prize . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Wolfson History Prize",
            "choppedEntity": "Q4020686"
        }
    },
    {
        "chopped": {
            "question": "Which period in time did people speak ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P37 ?unknown . ?sbj wdt:P31 wd:Q11514315 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj official language ?unknown . ?sbj instance of historical period } "
        },
        "original": {
            "question": "Which period in time did people speak Latin",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P37 wd:Q397 . ?sbj wdt:P31 wd:Q11514315 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj official language Latin . ?sbj instance of historical period } "
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Latin",
            "choppedEntity": "Q397"
        }
    },
    {
        "chopped": {
            "question": "Which period in time did individuals talk ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P37 ?unknown . ?sbj wdt:P31 wd:Q11514315 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj official language ?unknown . ?sbj instance of historical period } "
        },
        "original": {
            "question": "Which period in time did individuals talk Latin",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P37 wd:Q397 . ?sbj wdt:P31 wd:Q11514315 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj official language Latin . ?sbj instance of historical period } "
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Latin",
            "choppedEntity": "Q397"
        }
    },
    {
        "chopped": {
            "question": "What is the diplomatic relation to citizenship according to ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P27 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country of citizenship ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "What is the diplomatic relation to citizenship according to Carl Bernstein",
            "query": "SELECT ?answer WHERE { wd:Q319967 wdt:P27 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Carl Bernstein country of citizenship ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Carl Bernstein",
            "choppedEntity": "Q319967"
        }
    },
    {
        "chopped": {
            "question": "What is the discretionary connection to citizenship concurring to ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P27 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country of citizenship ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "What is the discretionary connection to citizenship concurring to Carl Bernstein",
            "query": "SELECT ?answer WHERE { wd:Q319967 wdt:P27 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Carl Bernstein country of citizenship ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Carl Bernstein",
            "choppedEntity": "Q319967"
        }
    },
    {
        "chopped": {
            "question": "What is the partner city of Antalya that is in the principal area of ",
            "query": "SELECT ?ans1 WHERE { wd:Q6487 wdt:P190 ?ans1 . ?ans1 wdt:P131 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Antalya twinned administrative body ?ans1 . ?ans1 located in the administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "What is the partner city of Antalya that is in the principal area of Omsk Governorate",
            "query": "SELECT ?answer WHERE { wd:Q6487 wdt:P190 ?answer . ?answer wdt:P131 wd:Q794828}",
            "NLQuery": "SELECT ?answer WHERE { Antalya twinned administrative body ?answer . ?answer located in the administrative territorial entity Omsk Governorate}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Omsk Governorate",
            "choppedEntity": "Q794828"
        }
    },
    {
        "chopped": {
            "question": "What is the accomplice city of Antalya that's within the central zone of ",
            "query": "SELECT ?ans1 WHERE { wd:Q6487 wdt:P190 ?ans1 . ?ans1 wdt:P131 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Antalya twinned administrative body ?ans1 . ?ans1 located in the administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "What is the accomplice city of Antalya that's within the central zone of Omsk Governorate",
            "query": "SELECT ?answer WHERE { wd:Q6487 wdt:P190 ?answer . ?answer wdt:P131 wd:Q794828}",
            "NLQuery": "SELECT ?answer WHERE { Antalya twinned administrative body ?answer . ?answer located in the administrative territorial entity Omsk Governorate}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Omsk Governorate",
            "choppedEntity": "Q794828"
        }
    },
    {
        "chopped": {
            "question": "What are the feminine/masculine forms in the expressive language of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1412 ?X . ?X wdt:P5109 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown languages spoken, written or signed ?X . ?X has grammatical gender ?ans1}"
        },
        "original": {
            "question": "What are the feminine/masculine forms in the expressive language of Georg Solti",
            "query": "SELECT ?answer WHERE { wd:Q128085 wdt:P1412 ?X . ?X wdt:P5109 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Georg Solti languages spoken, written or signed ?X . ?X has grammatical gender ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Georg Solti",
            "choppedEntity": "Q128085"
        }
    },
    {
        "chopped": {
            "question": "Where is the location of death of the collaborator of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P767 ?X . ?X wdt:P20 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown contributor to the creative work or subject ?X . ?X place of death ?ans1}"
        },
        "original": {
            "question": "Where is the location of death of the collaborator of the Man with a Movie Camera",
            "query": "SELECT ?answer WHERE { wd:Q829250 wdt:P767 ?X . ?X wdt:P20 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Man with a Movie Camera contributor to the creative work or subject ?X . ?X place of death ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "the Man with a Movie Camera",
            "choppedEntity": "Q829250"
        }
    },
    {
        "chopped": {
            "question": "Where is the location of demise of the collaborator of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P767 ?X . ?X wdt:P20 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown contributor to the creative work or subject ?X . ?X place of death ?ans1}"
        },
        "original": {
            "question": "Where is the location of demise of the collaborator of the Man with a Movie Camera",
            "query": "SELECT ?answer WHERE { wd:Q829250 wdt:P767 ?X . ?X wdt:P20 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Man with a Movie Camera contributor to the creative work or subject ?X . ?X place of death ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "the Man with a Movie Camera",
            "choppedEntity": "Q829250"
        }
    },
    {
        "chopped": {
            "question": "Who thought the class of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P69 ?X . ?X wdt:P802 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown educated at ?X . ?X student ?ans1}"
        },
        "original": {
            "question": "Who thought the class of Antonio Ermolao Paoletti",
            "query": "SELECT ?answer WHERE { wd:Q3619549 wdt:P69 ?X . ?X wdt:P802 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Antonio Ermolao Paoletti educated at ?X . ?X student ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Antonio Ermolao Paoletti",
            "choppedEntity": "Q3619549"
        }
    },
    {
        "chopped": {
            "question": "Who thought the course of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P69 ?X . ?X wdt:P802 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown educated at ?X . ?X student ?ans1}"
        },
        "original": {
            "question": "Who thought the course of Antonio Ermolao Paoletti",
            "query": "SELECT ?answer WHERE { wd:Q3619549 wdt:P69 ?X . ?X wdt:P802 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Antonio Ermolao Paoletti educated at ?X . ?X student ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Antonio Ermolao Paoletti",
            "choppedEntity": "Q3619549"
        }
    },
    {
        "chopped": {
            "question": "Who are the characters present in the video game series ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1441 ?unknown . ?sbj wdt:P31 wd:Q1569167 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj present in work ?unknown . ?sbj instance of video game character } "
        },
        "original": {
            "question": "Who are the characters present in the video game series Sonic the Hedgehog",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1441 wd:Q1046812 . ?sbj wdt:P31 wd:Q1569167 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj present in work Sonic the Hedgehog . ?sbj instance of video game character } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Sonic the Hedgehog",
            "choppedEntity": "Q1046812"
        }
    },
    {
        "chopped": {
            "question": "What is the language regulatory body and country of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P1018 ?ans1 . ?unknown wdt:P17 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown language regulatory body ?ans1 . ?unknown country ?ans2 }"
        },
        "original": {
            "question": "What is the language regulatory body and country of Urdu",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q1617 wdt:P1018 ?ans_1 . wd:Q1617 wdt:P17 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Urdu language regulatory body ?ans_1 . Urdu country ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Urdu",
            "choppedEntity": "Q1617"
        }
    },
    {
        "chopped": {
            "question": "When was Hurrem Sultan the Crown of ",
            "query": "SELECT ?ans1 WHERE { wd:Q255809 p:P27 ?s . ?s ps:P27 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Roxelana country of citizenship ?s . ?s country of citizenship ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When was Hurrem Sultan the Crown of the Kingdom of Poland",
            "query": "SELECT ?value WHERE { wd:Q255809 p:P27 ?s . ?s ps:P27 wd:Q171348 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Roxelana country of citizenship ?s . ?s country of citizenship Crown of the Kingdom of Poland . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Kingdom of Poland",
            "choppedEntity": "Q171348"
        }
    },
    {
        "chopped": {
            "question": "Which is the Amazon author page for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4862 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Amazon author ID ?ans1}"
        },
        "original": {
            "question": "Which is the Amazon author page for Oprah Winfrey",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q55800 wdt:P4862 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Oprah Winfrey Amazon author ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Oprah Winfrey",
            "choppedEntity": "Q55800"
        }
    },
    {
        "chopped": {
            "question": "Who played the predecessor of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P155 ?X . ?X wdt:P175 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown follows ?X . ?X performer ?ans1}"
        },
        "original": {
            "question": "Who played the predecessor of Live at the Copa",
            "query": "SELECT ?answer WHERE { wd:Q6656654 wdt:P155 ?X . ?X wdt:P175 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Live at the Copa follows ?X . ?X performer ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Live at the Copa",
            "choppedEntity": "Q6656654"
        }
    },
    {
        "chopped": {
            "question": "Who played previously of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P155 ?X . ?X wdt:P175 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown follows ?X . ?X performer ?ans1}"
        },
        "original": {
            "question": "Who played previously of Live at the Copa",
            "query": "SELECT ?answer WHERE { wd:Q6656654 wdt:P155 ?X . ?X wdt:P175 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Live at the Copa follows ?X . ?X performer ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Live at the Copa",
            "choppedEntity": "Q6656654"
        }
    },
    {
        "chopped": {
            "question": "What is the notation and the child astronomical body of the ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P913 ?ans1 . ?unknown wdt:P398 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown notation ?ans1 . ?unknown child astronomical body ?ans2 }"
        },
        "original": {
            "question": "What is the notation and the child astronomical body of the Sun",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q525 wdt:P913 ?ans_1 . wd:Q525 wdt:P398 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Sun notation ?ans_1 . Sun child astronomical body ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Sun",
            "choppedEntity": "Q525"
        }
    },
    {
        "chopped": {
            "question": "Who is the Prime minister of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P6 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown head of government ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who is the Prime minister of Warsaw",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q270 wdt:P6 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Warsaw head of government ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Warsaw",
            "choppedEntity": "Q270"
        }
    },
    {
        "chopped": {
            "question": "Who is the Prime serve of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P6 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown head of government ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who is the Prime serve of Warsaw",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q270 wdt:P6 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Warsaw head of government ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Warsaw",
            "choppedEntity": "Q270"
        }
    },
    {
        "chopped": {
            "question": "Where in the continent of the Antarctic Peninsula is the discoverer ",
            "query": "SELECT ?ans1 WHERE { wd:Q185605 wdt:P30 ?ans1 . ?ans1 wdt:P61 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Antarctic Peninsula continent ?ans1 . ?ans1 discoverer or inventor ?unknown}"
        },
        "original": {
            "question": "Where in the continent of the Antarctic Peninsula is the discoverer Fabian Gottlieb von Bellingshausen",
            "query": "SELECT ?answer WHERE { wd:Q185605 wdt:P30 ?answer . ?answer wdt:P61 wd:Q76754}",
            "NLQuery": "SELECT ?answer WHERE { Antarctic Peninsula continent ?answer . ?answer discoverer or inventor Fabian Gottlieb von Bellingshausen}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Fabian Gottlieb von Bellingshausen",
            "choppedEntity": "Q76754"
        }
    },
    {
        "chopped": {
            "question": "When was Alicia Vikander became a spouse of ",
            "query": "SELECT ?ans1 WHERE { wd:Q439314 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Alicia Vikander spouse ?s . ?s spouse ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When was Alicia Vikander became a spouse of Michael Fassbender",
            "query": "SELECT ?value WHERE { wd:Q439314 p:P26 ?s . ?s ps:P26 wd:Q57147 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Alicia Vikander spouse ?s . ?s spouse Michael Fassbender . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Michael Fassbender",
            "choppedEntity": "Q57147"
        }
    },
    {
        "chopped": {
            "question": "Which television film was produced by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P162 ?unknown . ?sbj wdt:P31 wd:Q506240 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj producer ?unknown . ?sbj instance of television film } "
        },
        "original": {
            "question": "Which television film was produced by Jim Henson",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P162 wd:Q191037 . ?sbj wdt:P31 wd:Q506240 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj producer Jim Henson . ?sbj instance of television film } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jim Henson",
            "choppedEntity": "Q191037"
        }
    },
    {
        "chopped": {
            "question": "Which TV film was delivered by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P162 ?unknown . ?sbj wdt:P31 wd:Q506240 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj producer ?unknown . ?sbj instance of television film } "
        },
        "original": {
            "question": "Which TV film was delivered by Jim Henson",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P162 wd:Q191037 . ?sbj wdt:P31 wd:Q506240 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj producer Jim Henson . ?sbj instance of television film } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jim Henson",
            "choppedEntity": "Q191037"
        }
    },
    {
        "chopped": {
            "question": "Which is the film of the composer ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P86 ?unknown . ?sbj wdt:P31 wd:Q11424 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj composer ?unknown . ?sbj instance of film } "
        },
        "original": {
            "question": "Which is the film of the composer Pete Townshend",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P86 wd:Q26933 . ?sbj wdt:P31 wd:Q11424 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj composer Pete Townshend . ?sbj instance of film } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Pete Townshend",
            "choppedEntity": "Q26933"
        }
    },
    {
        "chopped": {
            "question": "Which is the cause of destruction for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P770 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown cause of destruction ?ans1}"
        },
        "original": {
            "question": "Which is the cause of destruction for Colossus of Rhodes",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q41553 wdt:P770 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Colossus of Rhodes cause of destruction ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Colossus of Rhodes",
            "choppedEntity": "Q41553"
        }
    },
    {
        "chopped": {
            "question": "Starting in 1953, who was the spouse of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1953')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),'1953')) }"
        },
        "original": {
            "question": "Starting in 1953, who was the spouse of Aaron Spelling",
            "query": "SELECT ?obj WHERE { wd:Q295080 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1953')) }",
            "NLQuery": "SELECT ?obj WHERE { Aaron Spelling spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1953')) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Aaron Spelling",
            "choppedEntity": "Q295080"
        }
    },
    {
        "chopped": {
            "question": "How many doctoral students are at ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P185 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown doctoral student ?obj }"
        },
        "original": {
            "question": "How many doctoral students are at Lawrence Klein",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q295761 wdt:P185 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Lawrence Klein doctoral student ?obj }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Lawrence Klein",
            "choppedEntity": "Q295761"
        }
    },
    {
        "chopped": {
            "question": "Which is the number of doctoral students at ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P185 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown doctoral student ?obj }"
        },
        "original": {
            "question": "Which is the number of doctoral students at Lawrence Klein",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q295761 wdt:P185 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Lawrence Klein doctoral student ?obj }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Lawrence Klein",
            "choppedEntity": "Q295761"
        }
    },
    {
        "chopped": {
            "question": "When did YouTube receive ",
            "query": "SELECT ?ans1 WHERE { wd:Q866 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { YouTube award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did YouTube receive the Peabody Award",
            "query": "SELECT ?value WHERE { wd:Q866 p:P166 ?s . ?s ps:P166 wd:Q838121 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { YouTube award received ?s . ?s award received Peabody Award . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Peabody Award",
            "choppedEntity": "Q838121"
        }
    },
    {
        "chopped": {
            "question": "Which is next crossing upstream of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P2673 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 next crossing upstream ?unknown}"
        },
        "original": {
            "question": "Which is next crossing upstream of Banpo Bridge",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P2673 wd:Q255506}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer next crossing upstream Banpo Bridge}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Banpo Bridge",
            "choppedEntity": "Q255506"
        }
    },
    {
        "chopped": {
            "question": "How many parent astronomical bodies are there by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P397 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub parent astronomical body ?unknown }"
        },
        "original": {
            "question": "How many parent astronomical bodies are there by Jupiter",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P397 wd:Q319 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub parent astronomical body Jupiter }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Jupiter",
            "choppedEntity": "Q319"
        }
    },
    {
        "chopped": {
            "question": "What is the work nature of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P106 ?ans1 . ?ans1 wdt:P425 wd:Q3908516}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown occupation ?ans1 . ?ans1 field of this occupation entrepreneurship}"
        },
        "original": {
            "question": "What is the work nature of Elizabeth Arden",
            "query": "SELECT ?answer WHERE { wd:Q235509 wdt:P106 ?answer . ?answer wdt:P425 wd:Q3908516}",
            "NLQuery": "SELECT ?answer WHERE { Elizabeth Arden occupation ?answer . ?answer field of this occupation entrepreneurship}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Elizabeth Arden",
            "choppedEntity": "Q235509"
        }
    },
    {
        "chopped": {
            "question": "How many states are near ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P840 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub narrative location ?unknown }"
        },
        "original": {
            "question": "How many states are near Nevada",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P840 wd:Q1227 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub narrative location Nevada }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Nevada",
            "choppedEntity": "Q1227"
        }
    },
    {
        "chopped": {
            "question": "Did Rosa Parks die in ",
            "query": "ASK WHERE { wd:Q41921 wdt:P20 ?unknown }",
            "NLQuery": "ASK WHERE { Rosa Parks place of death ?unknown }"
        },
        "original": {
            "question": "Did Rosa Parks die in Detroit",
            "query": "ASK WHERE { wd:Q41921 wdt:P20 wd:Q12439 }",
            "NLQuery": "ASK WHERE { Rosa Parks place of death Detroit }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Detroit",
            "choppedEntity": "Q12439"
        }
    },
    {
        "chopped": {
            "question": "Was Rosa Parks place of death in ",
            "query": "ASK WHERE { wd:Q41921 wdt:P20 ?unknown }",
            "NLQuery": "ASK WHERE { Rosa Parks place of death ?unknown }"
        },
        "original": {
            "question": "Was Rosa Parks place of death in Detroit",
            "query": "ASK WHERE { wd:Q41921 wdt:P20 wd:Q12439 }",
            "NLQuery": "ASK WHERE { Rosa Parks place of death Detroit }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Detroit",
            "choppedEntity": "Q12439"
        }
    },
    {
        "chopped": {
            "question": "Which is the Panth\u00e9on des sports du Qu\u00e9bec ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4416 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Panth\u00e9on des sports du Qu\u00e9bec ID ?ans1}"
        },
        "original": {
            "question": "Which is the Panth\u00e9on des sports du Qu\u00e9bec ID of Maurice Richard",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q325138 wdt:P4416 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Maurice Richard Panth\u00e9on des sports du Qu\u00e9bec ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Maurice Richard",
            "choppedEntity": "Q325138"
        }
    },
    {
        "chopped": {
            "question": "What is the name of a video game published by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P123 ?unknown . ?sbj wdt:P31 wd:Q7889 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj publisher ?unknown . ?sbj instance of video game } "
        },
        "original": {
            "question": "What is the name of a video game published by Nintendo",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P123 wd:Q8093 . ?sbj wdt:P31 wd:Q7889 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj publisher Nintendo . ?sbj instance of video game } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Nintendo",
            "choppedEntity": "Q8093"
        }
    },
    {
        "chopped": {
            "question": "When did Surat become part of ",
            "query": "SELECT ?ans1 WHERE { wd:Q4629 p:P131 ?s . ?s ps:P131 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Surat located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Surat become part of Bombay State",
            "query": "SELECT ?value WHERE { wd:Q4629 p:P131 ?s . ?s ps:P131 wd:Q2627082 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Surat located in the administrative territorial entity ?s . ?s located in the administrative territorial entity Bombay State . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Bombay State",
            "choppedEntity": "Q2627082"
        }
    },
    {
        "chopped": {
            "question": "On what date did Surat become part of ",
            "query": "SELECT ?ans1 WHERE { wd:Q4629 p:P131 ?s . ?s ps:P131 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Surat located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "On what date did Surat become part of Bombay State",
            "query": "SELECT ?value WHERE { wd:Q4629 p:P131 ?s . ?s ps:P131 wd:Q2627082 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Surat located in the administrative territorial entity ?s . ?s located in the administrative territorial entity Bombay State . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Bombay State",
            "choppedEntity": "Q2627082"
        }
    },
    {
        "chopped": {
            "question": "Is it True that the Middle East is located in the time zones UTC+03:00 and ",
            "query": "ASK WHERE { wd:Q7204 wdt:P421 ?unknown . wd:Q7204 wdt:P421 wd:Q6773 }",
            "NLQuery": "ASK WHERE { Middle East located in time zone ?unknown . Middle East located in time zone UTC+03:30 }"
        },
        "original": {
            "question": "Is it True that the Middle East is located in the time zones UTC+03:00 and UTC+03:00",
            "query": "ASK WHERE { wd:Q7204 wdt:P421 wd:Q6760 . wd:Q7204 wdt:P421 wd:Q6773 }",
            "NLQuery": "ASK WHERE { Middle East located in time zone UTC+03:00 . Middle East located in time zone UTC+03:30 }"
        },
        "meta": {
            "entityTagNER": "TIME",
            "choppedText": "UTC+03:00",
            "choppedEntity": "Q6760"
        }
    },
    {
        "chopped": {
            "question": "Is it True that the Middle East is located in the time zones UTC+03:00 and ",
            "query": "ASK WHERE { wd:Q7204 wdt:P421 wd:Q6760 . wd:Q7204 wdt:P421 ?unknown }",
            "NLQuery": "ASK WHERE { Middle East located in time zone UTC+03:00 . Middle East located in time zone ?unknown }"
        },
        "original": {
            "question": "Is it True that the Middle East is located in the time zones UTC+03:00 and UTC+03:00",
            "query": "ASK WHERE { wd:Q7204 wdt:P421 wd:Q6760 . wd:Q7204 wdt:P421 wd:Q6773 }",
            "NLQuery": "ASK WHERE { Middle East located in time zone UTC+03:00 . Middle East located in time zone UTC+03:30 }"
        },
        "meta": {
            "entityTagNER": "TIME",
            "choppedText": "UTC+03:00",
            "choppedEntity": "Q6773"
        }
    },
    {
        "chopped": {
            "question": "What was the original name of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1366 ?obj . ?obj wdt:P31 wd:Q17054562 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown replaced by ?obj . ?obj instance of region of the Northern Territory } "
        },
        "original": {
            "question": "What was the original name of the Northern Territory",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q3235 wdt:P1366 ?obj . ?obj wdt:P31 wd:Q17054562 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Northern Territory replaced by ?obj . ?obj instance of region of the Northern Territory } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Northern Territory",
            "choppedEntity": "Q3235"
        }
    },
    {
        "chopped": {
            "question": "What was the original name of ",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q3235 wdt:P1366 ?obj . ?obj wdt:P31 ?unknown } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Northern Territory replaced by ?obj . ?obj instance of ?unknown } "
        },
        "original": {
            "question": "What was the original name of the Northern Territory",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q3235 wdt:P1366 ?obj . ?obj wdt:P31 wd:Q17054562 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Northern Territory replaced by ?obj . ?obj instance of region of the Northern Territory } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Northern Territory",
            "choppedEntity": "Q17054562"
        }
    },
    {
        "chopped": {
            "question": "What was the first title of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1366 ?obj . ?obj wdt:P31 wd:Q17054562 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown replaced by ?obj . ?obj instance of region of the Northern Territory } "
        },
        "original": {
            "question": "What was the first title of the Northern Territory",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q3235 wdt:P1366 ?obj . ?obj wdt:P31 wd:Q17054562 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Northern Territory replaced by ?obj . ?obj instance of region of the Northern Territory } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Northern Territory",
            "choppedEntity": "Q3235"
        }
    },
    {
        "chopped": {
            "question": "What was the first title of ",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q3235 wdt:P1366 ?obj . ?obj wdt:P31 ?unknown } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Northern Territory replaced by ?obj . ?obj instance of ?unknown } "
        },
        "original": {
            "question": "What was the first title of the Northern Territory",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q3235 wdt:P1366 ?obj . ?obj wdt:P31 wd:Q17054562 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Northern Territory replaced by ?obj . ?obj instance of region of the Northern Territory } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Northern Territory",
            "choppedEntity": "Q17054562"
        }
    },
    {
        "chopped": {
            "question": "When did WIlliam Herschel started to serve as President of ",
            "query": "SELECT ?ans1 WHERE { wd:Q14277 p:P39 ?s . ?s ps:P39 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { William Herschel position held ?s . ?s position held ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did WIlliam Herschel started to serve as President of the Royal Astronomical Society",
            "query": "SELECT ?value WHERE { wd:Q14277 p:P39 ?s . ?s ps:P39 wd:Q24357183 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { William Herschel position held ?s . ?s position held President of the Royal Astronomical Society . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Royal Astronomical Society",
            "choppedEntity": "Q24357183"
        }
    },
    {
        "chopped": {
            "question": "What was the date when William Herschel began his term as the President of ",
            "query": "SELECT ?ans1 WHERE { wd:Q14277 p:P39 ?s . ?s ps:P39 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { William Herschel position held ?s . ?s position held ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "What was the date when William Herschel began his term as the President of the Royal Astronomical Society",
            "query": "SELECT ?value WHERE { wd:Q14277 p:P39 ?s . ?s ps:P39 wd:Q24357183 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { William Herschel position held ?s . ?s position held President of the Royal Astronomical Society . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Royal Astronomical Society",
            "choppedEntity": "Q24357183"
        }
    },
    {
        "chopped": {
            "question": "How many recorded for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P483 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown recorded at studio or venue ?obj }"
        },
        "original": {
            "question": "How many recorded for Pet Sounds",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q212863 wdt:P483 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Pet Sounds recorded at studio or venue ?obj }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Pet Sounds",
            "choppedEntity": "Q212863"
        }
    },
    {
        "chopped": {
            "question": "Who are the founders of Onyanko Club that speak native ",
            "query": "SELECT ?ans1 WHERE { wd:Q669430 wdt:P112 ?ans1 . ?ans1 wdt:P103 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Onyanko Club founded by ?ans1 . ?ans1 native language ?unknown}"
        },
        "original": {
            "question": "Who are the founders of Onyanko Club that speak native Japanese",
            "query": "SELECT ?answer WHERE { wd:Q669430 wdt:P112 ?answer . ?answer wdt:P103 wd:Q5287}",
            "NLQuery": "SELECT ?answer WHERE { Onyanko Club founded by ?answer . ?answer native language Japanese}"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Japanese",
            "choppedEntity": "Q5287"
        }
    },
    {
        "chopped": {
            "question": "Who are the originators of Onyanko Club that talk local ",
            "query": "SELECT ?ans1 WHERE { wd:Q669430 wdt:P112 ?ans1 . ?ans1 wdt:P103 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Onyanko Club founded by ?ans1 . ?ans1 native language ?unknown}"
        },
        "original": {
            "question": "Who are the originators of Onyanko Club that talk local Japanese",
            "query": "SELECT ?answer WHERE { wd:Q669430 wdt:P112 ?answer . ?answer wdt:P103 wd:Q5287}",
            "NLQuery": "SELECT ?answer WHERE { Onyanko Club founded by ?answer . ?answer native language Japanese}"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Japanese",
            "choppedEntity": "Q5287"
        }
    },
    {
        "chopped": {
            "question": "What is the Christian name of Ben Daniels that is the equivalent of ",
            "query": "SELECT ?ans1 WHERE { wd:Q16031547 wdt:P735 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Ben Daniels given name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "What is the Christian name of Ben Daniels that is the equivalent of Benedicto",
            "query": "SELECT ?answer WHERE { wd:Q16031547 wdt:P735 ?answer . ?answer wdt:P460 wd:Q21285850}",
            "NLQuery": "SELECT ?answer WHERE { Ben Daniels given name ?answer . ?answer said to be the same as Benedicto}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Benedicto",
            "choppedEntity": "Q21285850"
        }
    },
    {
        "chopped": {
            "question": "What is the Christian identify of Ben Daniels that is the equal of ",
            "query": "SELECT ?ans1 WHERE { wd:Q16031547 wdt:P735 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Ben Daniels given name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "What is the Christian identify of Ben Daniels that is the equal of Benedicto",
            "query": "SELECT ?answer WHERE { wd:Q16031547 wdt:P735 ?answer . ?answer wdt:P460 wd:Q21285850}",
            "NLQuery": "SELECT ?answer WHERE { Ben Daniels given name ?answer . ?answer said to be the same as Benedicto}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Benedicto",
            "choppedEntity": "Q21285850"
        }
    },
    {
        "chopped": {
            "question": "When did Karl Popper received ",
            "query": "SELECT ?ans1 WHERE { wd:Q81244 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Karl Popper award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Karl Popper received the Otto Hahn Peace Medal",
            "query": "SELECT ?value WHERE { wd:Q81244 p:P166 ?s . ?s ps:P166 wd:Q314209 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Karl Popper award received ?s . ?s award received Otto Hahn Peace Medal . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Otto Hahn Peace Medal",
            "choppedEntity": "Q314209"
        }
    },
    {
        "chopped": {
            "question": "What year did Karl Popper receive ",
            "query": "SELECT ?ans1 WHERE { wd:Q81244 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Karl Popper award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "What year did Karl Popper receive the Otto Hahn Peace Medal",
            "query": "SELECT ?value WHERE { wd:Q81244 p:P166 ?s . ?s ps:P166 wd:Q314209 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Karl Popper award received ?s . ?s award received Otto Hahn Peace Medal . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Otto Hahn Peace Medal",
            "choppedEntity": "Q314209"
        }
    },
    {
        "chopped": {
            "question": "Which ideology is followed by the political party of Christian ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P102 ?X . ?X wdt:P1142 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown member of political party ?X . ?X political ideology ?ans1}"
        },
        "original": {
            "question": "Which ideology is followed by the political party of Christian Emil Stoud Platou",
            "query": "SELECT ?answer WHERE { wd:Q3376485 wdt:P102 ?X . ?X wdt:P1142 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Christian Emil Stoud Platou member of political party ?X . ?X political ideology ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Emil Stoud Platou",
            "choppedEntity": "Q3376485"
        }
    },
    {
        "chopped": {
            "question": "Which belief system is taken after by the political party of Christian ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P102 ?X . ?X wdt:P1142 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown member of political party ?X . ?X political ideology ?ans1}"
        },
        "original": {
            "question": "Which belief system is taken after by the political party of Christian Emil Stoud Platou",
            "query": "SELECT ?answer WHERE { wd:Q3376485 wdt:P102 ?X . ?X wdt:P1142 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Christian Emil Stoud Platou member of political party ?X . ?X political ideology ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Emil Stoud Platou",
            "choppedEntity": "Q3376485"
        }
    },
    {
        "chopped": {
            "question": "Which battle is for the son of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P22 ?X . ?X wdt:P607 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown father ?X . ?X conflict ?ans1}"
        },
        "original": {
            "question": "Which battle is for the son of Uday Hussein",
            "query": "SELECT ?answer WHERE { wd:Q311916 wdt:P22 ?X . ?X wdt:P607 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Uday Hussein father ?X . ?X conflict ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Uday Hussein",
            "choppedEntity": "Q311916"
        }
    },
    {
        "chopped": {
            "question": "Which fight is for the child of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P22 ?X . ?X wdt:P607 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown father ?X . ?X conflict ?ans1}"
        },
        "original": {
            "question": "Which fight is for the child of Uday Hussein",
            "query": "SELECT ?answer WHERE { wd:Q311916 wdt:P22 ?X . ?X wdt:P607 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Uday Hussein father ?X . ?X conflict ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Uday Hussein",
            "choppedEntity": "Q311916"
        }
    },
    {
        "chopped": {
            "question": "In 1960 what was the population of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1960')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),'1960')) }"
        },
        "original": {
            "question": "In 1960 what was the population of Laos",
            "query": "SELECT ?obj WHERE { wd:Q819 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1960')) }",
            "NLQuery": "SELECT ?obj WHERE { Laos population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1960')) }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Laos",
            "choppedEntity": "Q819"
        }
    },
    {
        "chopped": {
            "question": "What is Peakbagger area ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3635 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Peakbagger area ID ?ans1}"
        },
        "original": {
            "question": "What is Peakbagger area ID for Mascarene Islands",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q205695 wdt:P3635 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Mascarene Islands Peakbagger area ID ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Mascarene Islands",
            "choppedEntity": "Q205695"
        }
    },
    {
        "chopped": {
            "question": "How did Andrea del Verrocchio come to be a student of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1066 ?s . ?s ps:P1066 wd:Q183458 . ?s pq:P1480 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown student of ?s . ?s student of Andrea Verrocchio . ?s sourcing circumstances ?ans1}"
        },
        "original": {
            "question": "How did Andrea del Verrocchio come to be a student of Pietro Perugino",
            "query": "SELECT ?value WHERE { wd:Q5827 p:P1066 ?s . ?s ps:P1066 wd:Q183458 . ?s pq:P1480 ?value}",
            "NLQuery": "SELECT ?value WHERE { Pietro Perugino student of ?s . ?s student of Andrea Verrocchio . ?s sourcing circumstances ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Pietro Perugino",
            "choppedEntity": "Q5827"
        }
    },
    {
        "chopped": {
            "question": "How did Pietro Perugino come to teach ",
            "query": "SELECT ?ans1 WHERE { wd:Q5827 p:P1066 ?s . ?s ps:P1066 ?unknown . ?s pq:P1480 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Pietro Perugino student of ?s . ?s student of ?unknown . ?s sourcing circumstances ?ans1}"
        },
        "original": {
            "question": "How did Pietro Perugino come to teach Andrea del Verrocchio",
            "query": "SELECT ?value WHERE { wd:Q5827 p:P1066 ?s . ?s ps:P1066 wd:Q183458 . ?s pq:P1480 ?value}",
            "NLQuery": "SELECT ?value WHERE { Pietro Perugino student of ?s . ?s student of Andrea Verrocchio . ?s sourcing circumstances ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Andrea del Verrocchio",
            "choppedEntity": "Q183458"
        }
    },
    {
        "chopped": {
            "question": "When was Anna Paquin given ",
            "query": "SELECT ?ans1 WHERE { wd:Q199884 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Anna Paquin award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was Anna Paquin given a Theatre World Award",
            "query": "SELECT ?value WHERE { wd:Q199884 p:P166 ?s . ?s ps:P166 wd:Q1131356 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Anna Paquin award received ?s . ?s award received Theatre World Award . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "a Theatre World Award",
            "choppedEntity": "Q1131356"
        }
    },
    {
        "chopped": {
            "question": "On what date did Anna Paquin receive her ",
            "query": "SELECT ?ans1 WHERE { wd:Q199884 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Anna Paquin award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "On what date did Anna Paquin receive her Theatre World Award",
            "query": "SELECT ?value WHERE { wd:Q199884 p:P166 ?s . ?s ps:P166 wd:Q1131356 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Anna Paquin award received ?s . ?s award received Theatre World Award . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Theatre World Award",
            "choppedEntity": "Q1131356"
        }
    },
    {
        "chopped": {
            "question": "What is the home stadium for ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P115 ?obj . ?obj wdt:P31 wd:Q483110 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown home venue ?obj . ?obj instance of stadium } "
        },
        "original": {
            "question": "What is the home stadium for the Chicago Bears",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q205033 wdt:P115 ?obj . ?obj wdt:P31 wd:Q483110 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Chicago Bears home venue ?obj . ?obj instance of stadium } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Chicago Bears",
            "choppedEntity": "Q205033"
        }
    },
    {
        "chopped": {
            "question": "How many local dialing codes are for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P473 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown local dialing code ?obj }"
        },
        "original": {
            "question": "How many local dialing codes are for Sydney",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q3130 wdt:P473 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Sydney local dialing code ?obj }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Sydney",
            "choppedEntity": "Q3130"
        }
    },
    {
        "chopped": {
            "question": "What was John Green nominated for ",
            "query": "SELECT ?ans1 WHERE { wd:Q630446 p:P1411 ?s . ?s ps:P1411 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { John Green nominated for ?s . ?s nominated for ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "What was John Green nominated for the Guardian Children's Fiction Prize",
            "query": "SELECT ?value WHERE { wd:Q630446 p:P1411 ?s . ?s ps:P1411 wd:Q971363 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { John Green nominated for ?s . ?s nominated for Guardian Children's Fiction Prize . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Guardian Children's Fiction Prize",
            "choppedEntity": "Q971363"
        }
    },
    {
        "chopped": {
            "question": "Who follows ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P140 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj religion ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who follows the Catholic Church",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P140 wd:Q9592 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj religion Catholic Church . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Catholic Church",
            "choppedEntity": "Q9592"
        }
    },
    {
        "chopped": {
            "question": "What is the NFPA Health for DDT with the safety classification and labelling as ",
            "query": "SELECT ?ans1 WHERE { wd:Q163648 p:P4952 ?s . ?s ps:P4952 ?unknown . ?s pq:P993 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { DDT safety classification and labelling ?s . ?s safety classification and labelling ?unknown . ?s NFPA Health ?ans1}"
        },
        "original": {
            "question": "What is the NFPA Health for DDT with the safety classification and labelling as NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response",
            "query": "SELECT ?value WHERE { wd:Q163648 p:P4952 ?s . ?s ps:P4952 wd:Q51139288 . ?s pq:P993 ?value}",
            "NLQuery": "SELECT ?value WHERE { DDT safety classification and labelling ?s . ?s safety classification and labelling NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response . ?s NFPA Health ?value}"
        },
        "meta": {
            "entityTagNER": "LAW",
            "choppedText": "NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response",
            "choppedEntity": "Q51139288"
        }
    },
    {
        "chopped": {
            "question": "Which is the country that contains the administrative territorial entity of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P150 ?unknown . ?sbj wdt:P31 wd:Q6256 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj contains administrative territorial entity ?unknown . ?sbj instance of country } "
        },
        "original": {
            "question": "Which is the country that contains the administrative territorial entity of Mizoram",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P150 wd:Q1502 . ?sbj wdt:P31 wd:Q6256 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj contains administrative territorial entity Mizoram . ?sbj instance of country } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Mizoram",
            "choppedEntity": "Q1502"
        }
    },
    {
        "chopped": {
            "question": "What is the fate of starring in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P161 ?X . ?X wdt:P793 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cast member ?X . ?X significant event ?ans1}"
        },
        "original": {
            "question": "What is the fate of starring in Mezi n\u00e1mi zlod\u011bji",
            "query": "SELECT ?answer WHERE { wd:Q6826657 wdt:P161 ?X . ?X wdt:P793 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Mezi n\u00e1mi zlod\u011bji cast member ?X . ?X significant event ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Mezi n\u00e1mi zlod\u011bji",
            "choppedEntity": "Q6826657"
        }
    },
    {
        "chopped": {
            "question": "What is the destiny of featuring in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P161 ?X . ?X wdt:P793 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cast member ?X . ?X significant event ?ans1}"
        },
        "original": {
            "question": "What is the destiny of featuring in Mezi n\u00e1mi zlod\u011bji",
            "query": "SELECT ?answer WHERE { wd:Q6826657 wdt:P161 ?X . ?X wdt:P793 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Mezi n\u00e1mi zlod\u011bji cast member ?X . ?X significant event ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Mezi n\u00e1mi zlod\u011bji",
            "choppedEntity": "Q6826657"
        }
    },
    {
        "chopped": {
            "question": "When was the first ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 ?unknown . ?ans1 wdt:P1350 ?obj . ?ans1 wdt:P641 wd:Q1748406} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of ?unknown . ?ans1 number of matches played/races/starts ?obj . ?ans1 sport roller hockey (quad)} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "When was the first Roller Hockey World Cup",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q327110 . ?ent wdt:P1350 ?obj . ?ent wdt:P641 wd:Q1748406} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of FIRS Roller Hockey World Cup . ?ent number of matches played/races/starts ?obj . ?ent sport roller hockey (quad)} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "Roller Hockey World Cup",
            "choppedEntity": "Q327110"
        }
    },
    {
        "chopped": {
            "question": "Which is the rock band, member of which was ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P463 ?obj . ?obj wdt:P31 wd:Q5741069 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown member of ?obj . ?obj instance of rock group } "
        },
        "original": {
            "question": "Which is the rock band, member of which was Tom Petty",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q311655 wdt:P463 ?obj . ?obj wdt:P31 wd:Q5741069 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Tom Petty member of ?obj . ?obj instance of rock group } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Tom Petty",
            "choppedEntity": "Q311655"
        }
    },
    {
        "chopped": {
            "question": "Which is the shake band, part of which was ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P463 ?obj . ?obj wdt:P31 wd:Q5741069 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown member of ?obj . ?obj instance of rock group } "
        },
        "original": {
            "question": "Which is the shake band, part of which was Tom Petty",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q311655 wdt:P463 ?obj . ?obj wdt:P31 wd:Q5741069 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Tom Petty member of ?obj . ?obj instance of rock group } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Tom Petty",
            "choppedEntity": "Q311655"
        }
    },
    {
        "chopped": {
            "question": "Which is the FEI ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3111 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown FEI person ID ?ans1}"
        },
        "original": {
            "question": "Which is the FEI ID of Mark Todd",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1332346 wdt:P3111 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Mark Todd FEI person ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mark Todd",
            "choppedEntity": "Q1332346"
        }
    },
    {
        "chopped": {
            "question": "What is the Quebec cultural heritage directory ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P633 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Quebec cultural heritage directory ID ?ans1}"
        },
        "original": {
            "question": "What is the Quebec cultural heritage directory ID for the Ottawa River",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q60974 wdt:P633 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Ottawa River Quebec cultural heritage directory ID ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Ottawa River",
            "choppedEntity": "Q60974"
        }
    },
    {
        "chopped": {
            "question": "When did Ashton Kutcher divorce ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q164782 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P582 ?ans1 . ?s pq:P580 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Ashton Kutcher spouse ?s . ?s spouse ?unknown . ?s end time ?ans1 . ?s start time ?ans2 }"
        },
        "original": {
            "question": "When did Ashton Kutcher divorce Demi Moore",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q164782 p:P26 ?s . ?s ps:P26 wd:Q43044 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Ashton Kutcher spouse ?s . ?s spouse Demi Moore . ?s end time ?value1 . ?s start time ?value2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Demi Moore",
            "choppedEntity": "Q43044"
        }
    },
    {
        "chopped": {
            "question": "Mention the year span in which Tbilisi  became capital of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q994 p:P1376 ?s . ?s ps:P1376 ?unknown . ?s pq:P582 ?ans1 . ?s pq:P580 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Tbilisi capital of ?s . ?s capital of ?unknown . ?s end time ?ans1 . ?s start time ?ans2 }"
        },
        "original": {
            "question": "Mention the year span in which Tbilisi  became capital of the Tiflis County",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q994 p:P1376 ?s . ?s ps:P1376 wd:Q12864947 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Tbilisi capital of ?s . ?s capital of Tiflis County . ?s end time ?value1 . ?s start time ?value2 }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Tiflis County",
            "choppedEntity": "Q12864947"
        }
    },
    {
        "chopped": {
            "question": "Mention the yr span in which Tbilisi became capital of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q994 p:P1376 ?s . ?s ps:P1376 ?unknown . ?s pq:P582 ?ans1 . ?s pq:P580 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Tbilisi capital of ?s . ?s capital of ?unknown . ?s end time ?ans1 . ?s start time ?ans2 }"
        },
        "original": {
            "question": "Mention the yr span in which Tbilisi became capital of the Tiflis County",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q994 p:P1376 ?s . ?s ps:P1376 wd:Q12864947 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Tbilisi capital of ?s . ?s capital of Tiflis County . ?s end time ?value1 . ?s start time ?value2 }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Tiflis County",
            "choppedEntity": "Q12864947"
        }
    },
    {
        "chopped": {
            "question": "Which is the unemployment rate for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1198 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown unemployment rate ?ans1}"
        },
        "original": {
            "question": "Which is the unemployment rate for Jordan",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q810 wdt:P1198 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Jordan unemployment rate ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Jordan",
            "choppedEntity": "Q810"
        }
    },
    {
        "chopped": {
            "question": "How many translations are by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P655 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub translator ?unknown }"
        },
        "original": {
            "question": "How many translations are by Konstantin Balmont",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P655 wd:Q314498 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub translator Konstantin Balmont }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Konstantin Balmont",
            "choppedEntity": "Q314498"
        }
    },
    {
        "chopped": {
            "question": "Which video game company produced ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1056 ?unknown . ?sbj wdt:P31 wd:Q1137109 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj product or material produced ?unknown . ?sbj instance of video game publisher } "
        },
        "original": {
            "question": "Which video game company produced Pong",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1056 wd:Q216293 . ?sbj wdt:P31 wd:Q1137109 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj product or material produced Pong . ?sbj instance of video game publisher } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Pong",
            "choppedEntity": "Q216293"
        }
    },
    {
        "chopped": {
            "question": "Which video diversion company delivered ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1056 ?unknown . ?sbj wdt:P31 wd:Q1137109 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj product or material produced ?unknown . ?sbj instance of video game publisher } "
        },
        "original": {
            "question": "Which video diversion company delivered Pong",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1056 wd:Q216293 . ?sbj wdt:P31 wd:Q1137109 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj product or material produced Pong . ?sbj instance of video game publisher } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Pong",
            "choppedEntity": "Q216293"
        }
    },
    {
        "chopped": {
            "question": "When did Konstantin Eduardovich Tsiolkovskii stop being a citizen of ",
            "query": "SELECT ?ans1 WHERE { wd:Q41239 p:P27 ?s . ?s ps:P27 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Konstantin Eduardovich Tsiolkovskii country of citizenship ?s . ?s country of citizenship ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did Konstantin Eduardovich Tsiolkovskii stop being a citizen of the Russian Empire",
            "query": "SELECT ?value WHERE { wd:Q41239 p:P27 ?s . ?s ps:P27 wd:Q34266 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Konstantin Eduardovich Tsiolkovskii country of citizenship ?s . ?s country of citizenship Russian Empire . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Russian Empire",
            "choppedEntity": "Q34266"
        }
    },
    {
        "chopped": {
            "question": "When was Konstantin Eduarovich Tsiolkovskii exiled from ",
            "query": "SELECT ?ans1 WHERE { wd:Q41239 p:P27 ?s . ?s ps:P27 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Konstantin Eduardovich Tsiolkovskii country of citizenship ?s . ?s country of citizenship ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When was Konstantin Eduarovich Tsiolkovskii exiled from the Russian Empire",
            "query": "SELECT ?value WHERE { wd:Q41239 p:P27 ?s . ?s ps:P27 wd:Q34266 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Konstantin Eduardovich Tsiolkovskii country of citizenship ?s . ?s country of citizenship Russian Empire . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Russian Empire",
            "choppedEntity": "Q34266"
        }
    },
    {
        "chopped": {
            "question": "What is godparent of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P1290 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 godparent ?unknown}"
        },
        "original": {
            "question": "What is godparent of Wilhelm II",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P1290 wd:Q2677}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer godparent Wilhelm II}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Wilhelm II",
            "choppedEntity": "Q2677"
        }
    },
    {
        "chopped": {
            "question": "Is it true Bill_Cosby notable work ",
            "query": "ASK WHERE { wd:Q213512 wdt:P800 ?unknown }",
            "NLQuery": "ASK WHERE { Bill Cosby notable work ?unknown }"
        },
        "original": {
            "question": "Is it true Bill_Cosby notable work Seinfeld",
            "query": "ASK WHERE { wd:Q213512 wdt:P800 wd:Q23733 }",
            "NLQuery": "ASK WHERE { Bill Cosby notable work Seinfeld }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Seinfeld",
            "choppedEntity": "Q23733"
        }
    },
    {
        "chopped": {
            "question": "Did Bill Cosby work on ",
            "query": "ASK WHERE { wd:Q213512 wdt:P800 ?unknown }",
            "NLQuery": "ASK WHERE { Bill Cosby notable work ?unknown }"
        },
        "original": {
            "question": "Did Bill Cosby work on Seinfeld",
            "query": "ASK WHERE { wd:Q213512 wdt:P800 wd:Q23733 }",
            "NLQuery": "ASK WHERE { Bill Cosby notable work Seinfeld }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Seinfeld",
            "choppedEntity": "Q23733"
        }
    },
    {
        "chopped": {
            "question": "How many depictions are there of ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P180 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub depicts ?unknown }"
        },
        "original": {
            "question": "How many depictions are there of Osiris",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P180 wd:Q46491 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub depicts Osiris }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Osiris",
            "choppedEntity": "Q46491"
        }
    },
    {
        "chopped": {
            "question": "Is 0.488 the topographic isolation of ",
            "query": "ASK WHERE { ?unknown wdt:P2659 ?obj FILTER(?obj = 0.488) } ",
            "NLQuery": "ASK WHERE { ?unknown topographic isolation ?obj FILTER(?obj = 0.488) } "
        },
        "original": {
            "question": "Is 0.488 the topographic isolation of Lenzspitze",
            "query": "ASK WHERE { wd:Q30436 wdt:P2659 ?obj FILTER(?obj = 0.488) } ",
            "NLQuery": "ASK WHERE { Lenzspitze topographic isolation ?obj FILTER(?obj = 0.488) } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Lenzspitze",
            "choppedEntity": "Q30436"
        }
    },
    {
        "chopped": {
            "question": "For what play did Jessica Tandy win ",
            "query": "SELECT ?ans1 WHERE { wd:Q182104 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P805 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Jessica Tandy award received ?s . ?s award received ?unknown . ?s statement is subject of ?ans1}"
        },
        "original": {
            "question": "For what play did Jessica Tandy win the Tony Away for Best Actress in a Play",
            "query": "SELECT ?value WHERE { wd:Q182104 p:P166 ?s . ?s ps:P166 wd:Q185299 . ?s pq:P805 ?value}",
            "NLQuery": "SELECT ?value WHERE { Jessica Tandy award received ?s . ?s award received Tony Award for Best Actress in a Play . ?s statement is subject of ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Tony Away for Best Actress in a Play",
            "choppedEntity": "Q185299"
        }
    },
    {
        "chopped": {
            "question": "What is the official language of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P355 ?X . ?X wdt:P37 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown subsidiary ?X . ?X official language ?ans1}"
        },
        "original": {
            "question": "What is the official language of the Government of India",
            "query": "SELECT ?answer WHERE { wd:Q2767140 wdt:P355 ?X . ?X wdt:P37 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Government of India subsidiary ?X . ?X official language ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Government of India",
            "choppedEntity": "Q2767140"
        }
    },
    {
        "chopped": {
            "question": "What is the official dialect of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P355 ?X . ?X wdt:P37 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown subsidiary ?X . ?X official language ?ans1}"
        },
        "original": {
            "question": "What is the official dialect of the Government of India",
            "query": "SELECT ?answer WHERE { wd:Q2767140 wdt:P355 ?X . ?X wdt:P37 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Government of India subsidiary ?X . ?X official language ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Government of India",
            "choppedEntity": "Q2767140"
        }
    },
    {
        "chopped": {
            "question": "Is Whoopi Goldberg's given name ",
            "query": "ASK WHERE { wd:Q49001 wdt:P735 ?unknown }",
            "NLQuery": "ASK WHERE { Whoopi Goldberg given name ?unknown }"
        },
        "original": {
            "question": "Is Whoopi Goldberg's given name Elaine",
            "query": "ASK WHERE { wd:Q49001 wdt:P735 wd:Q2646814 }",
            "NLQuery": "ASK WHERE { Whoopi Goldberg given name Elaine }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Elaine",
            "choppedEntity": "Q2646814"
        }
    },
    {
        "chopped": {
            "question": "Who are the members of and the participants in ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P1344 ?ans1 . ?unknown wdt:P463 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown participant in ?ans1 . ?unknown member of ?ans2 }"
        },
        "original": {
            "question": "Who are the members of and the participants in Carlos Santana",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q819016 wdt:P1344 ?ans_1 . wd:Q819016 wdt:P463 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Carlos Santana participant in ?ans_1 . Carlos Santana member of ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Carlos Santana",
            "choppedEntity": "Q819016"
        }
    },
    {
        "chopped": {
            "question": "What was the date when 248,440 people lived in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'248440')) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown population ?s . ?s population ?x FILTER(contains(?x,'248440')) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "What was the date when 248,440 people lived in Portsmouth",
            "query": "SELECT ?value WHERE { wd:Q72259 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'248440')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Portsmouth population ?s . ?s population ?x FILTER(contains(?x,'248440')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Portsmouth",
            "choppedEntity": "Q72259"
        }
    },
    {
        "chopped": {
            "question": "Was David Walliams born in Merton or ",
            "query": "ASK WHERE { wd:Q359665 wdt:P19 wd:Q32504 . wd:Q359665 wdt:P19 ?unknown }",
            "NLQuery": "ASK WHERE { David Walliams place of birth London Borough of Merton . David Walliams place of birth ?unknown }"
        },
        "original": {
            "question": "Was David Walliams born in Merton or Banstead",
            "query": "ASK WHERE { wd:Q359665 wdt:P19 wd:Q32504 . wd:Q359665 wdt:P19 wd:Q2280322 }",
            "NLQuery": "ASK WHERE { David Walliams place of birth London Borough of Merton . David Walliams place of birth Banstead }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Banstead",
            "choppedEntity": "Q2280322"
        }
    },
    {
        "chopped": {
            "question": "Was Merton or Banstead the birthplace of ",
            "query": "ASK WHERE { ?unknown wdt:P19 wd:Q32504 . ?unknown wdt:P19 wd:Q2280322 }",
            "NLQuery": "ASK WHERE { ?unknown place of birth London Borough of Merton . ?unknown place of birth Banstead }"
        },
        "original": {
            "question": "Was Merton or Banstead the birthplace of David Williams",
            "query": "ASK WHERE { wd:Q359665 wdt:P19 wd:Q32504 . wd:Q359665 wdt:P19 wd:Q2280322 }",
            "NLQuery": "ASK WHERE { David Walliams place of birth London Borough of Merton . David Walliams place of birth Banstead }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "David Williams",
            "choppedEntity": "Q359665"
        }
    },
    {
        "chopped": {
            "question": "What is the STD code of the chief lieutenant of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P36 ?X . ?X wdt:P473 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown capital ?X . ?X local dialing code ?ans1}"
        },
        "original": {
            "question": "What is the STD code of the chief lieutenant of the Great Seljuq Empire",
            "query": "SELECT ?answer WHERE { wd:Q3708094 wdt:P36 ?X . ?X wdt:P473 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Great Seljuk Empire capital ?X . ?X local dialing code ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Great Seljuq Empire",
            "choppedEntity": "Q3708094"
        }
    },
    {
        "chopped": {
            "question": "Name a love song from ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P495 ?unknown . ?sbj wdt:P31 wd:Q380233 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country of origin ?unknown . ?sbj instance of love song } "
        },
        "original": {
            "question": "Name a love song from Soviet Union",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P495 wd:Q15180 . ?sbj wdt:P31 wd:Q380233 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country of origin Soviet Union . ?sbj instance of love song } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Soviet Union",
            "choppedEntity": "Q15180"
        }
    },
    {
        "chopped": {
            "question": "Title a cherish melody from ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P495 ?unknown . ?sbj wdt:P31 wd:Q380233 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country of origin ?unknown . ?sbj instance of love song } "
        },
        "original": {
            "question": "Title a cherish melody from Soviet Union",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P495 wd:Q15180 . ?sbj wdt:P31 wd:Q380233 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country of origin Soviet Union . ?sbj instance of love song } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Soviet Union",
            "choppedEntity": "Q15180"
        }
    },
    {
        "chopped": {
            "question": "What are the rules of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P140 ?X . ?X wdt:P457 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown religion ?X . ?X foundational text ?ans1}"
        },
        "original": {
            "question": "What are the rules of Shinto Shrine",
            "query": "SELECT ?answer WHERE { wd:Q845945 wdt:P140 ?X . ?X wdt:P457 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { shinto shrine religion ?X . ?X foundational text ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Shinto Shrine",
            "choppedEntity": "Q845945"
        }
    },
    {
        "chopped": {
            "question": "Is 3.4 the salinity of ",
            "query": "ASK WHERE { ?unknown wdt:P4350 ?obj FILTER(?obj = 3.4) } ",
            "NLQuery": "ASK WHERE { ?unknown salinity ?obj FILTER(?obj = 3.4) } "
        },
        "original": {
            "question": "Is 3.4 the salinity of the North Sea",
            "query": "ASK WHERE { wd:Q1693 wdt:P4350 ?obj FILTER(?obj = 3.4) } ",
            "NLQuery": "ASK WHERE { North Sea salinity ?obj FILTER(?obj = 3.4) } "
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the North Sea",
            "choppedEntity": "Q1693"
        }
    },
    {
        "chopped": {
            "question": "Where are coordinates 37.106.68.3063 in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P625 ?s . ?s ps:P625 ?x FILTER(contains(?x,'37.106 68.3063')) . ?s pq:P518 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown coordinate location ?s . ?s coordinate location ?x FILTER(contains(?x,'37.106 68.3063')) . ?s applies to part ?ans1}"
        },
        "original": {
            "question": "Where are coordinates 37.106.68.3063 in Amu Darya",
            "query": "SELECT ?value WHERE { wd:Q8493 p:P625 ?s . ?s ps:P625 ?x FILTER(contains(?x,'37.106 68.3063')) . ?s pq:P518 ?value}",
            "NLQuery": "SELECT ?value WHERE { Amu Darya coordinate location ?s . ?s coordinate location ?x FILTER(contains(?x,'37.106 68.3063')) . ?s applies to part ?value}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Amu Darya",
            "choppedEntity": "Q8493"
        }
    },
    {
        "chopped": {
            "question": "What is the wingspan of a Airbus ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2050 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown wingspan ?ans1}"
        },
        "original": {
            "question": "What is the wingspan of a Airbus A340",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q6481 wdt:P2050 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { A340 wingspan ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "A340",
            "choppedEntity": "Q6481"
        }
    },
    {
        "chopped": {
            "question": "Which follows ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P155 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown follows ?ans1}"
        },
        "original": {
            "question": "Which follows Rhineland-Palatinate",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1200 wdt:P155 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Rhineland-Palatinate follows ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Rhineland-Palatinate",
            "choppedEntity": "Q1200"
        }
    },
    {
        "chopped": {
            "question": "What is World Heritage Site ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P757 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown World Heritage Site ID ?ans1}"
        },
        "original": {
            "question": "What is World Heritage Site ID for Taj Mahal",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q9141 wdt:P757 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Taj Mahal World Heritage Site ID ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Taj Mahal",
            "choppedEntity": "Q9141"
        }
    },
    {
        "chopped": {
            "question": "What is Biographical Directory of Federal ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2736 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Biographical Directory of Federal Judges ID ?ans1}"
        },
        "original": {
            "question": "What is Biographical Directory of Federal ID for John Jay",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q310847 wdt:P2736 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { John Jay Biographical Directory of Federal Judges ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "John Jay",
            "choppedEntity": "Q310847"
        }
    },
    {
        "chopped": {
            "question": "When did Cameroon become a member of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1009 p:P463 ?s . ?s ps:P463 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Cameroon member of ?s . ?s member of ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Cameroon become a member of the International Finance Corporation",
            "query": "SELECT ?value WHERE { wd:Q1009 p:P463 ?s . ?s ps:P463 wd:Q656801 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Cameroon member of ?s . ?s member of International Finance Corporation . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the International Finance Corporation",
            "choppedEntity": "Q656801"
        }
    },
    {
        "chopped": {
            "question": "At what time did Cameroon become a member of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1009 p:P463 ?s . ?s ps:P463 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Cameroon member of ?s . ?s member of ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "At what time did Cameroon become a member of the International Fincance Corporation",
            "query": "SELECT ?value WHERE { wd:Q1009 p:P463 ?s . ?s ps:P463 wd:Q656801 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Cameroon member of ?s . ?s member of International Finance Corporation . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the International Fincance Corporation",
            "choppedEntity": "Q656801"
        }
    },
    {
        "chopped": {
            "question": "What are the notable works of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P800 ?obj . ?obj wdt:P31 wd:Q47461344 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown notable work ?obj . ?obj instance of written work } "
        },
        "original": {
            "question": "What are the notable works of Ludwig Wittgenstein",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q9391 wdt:P800 ?obj . ?obj wdt:P31 wd:Q47461344 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Ludwig Wittgenstein notable work ?obj . ?obj instance of written work } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ludwig Wittgenstein",
            "choppedEntity": "Q9391"
        }
    },
    {
        "chopped": {
            "question": "What are the striking works of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P800 ?obj . ?obj wdt:P31 wd:Q47461344 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown notable work ?obj . ?obj instance of written work } "
        },
        "original": {
            "question": "What are the striking works of Ludwig Wittgenstein",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q9391 wdt:P800 ?obj . ?obj wdt:P31 wd:Q47461344 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Ludwig Wittgenstein notable work ?obj . ?obj instance of written work } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ludwig Wittgenstein",
            "choppedEntity": "Q9391"
        }
    },
    {
        "chopped": {
            "question": "What Peter Finch is nominated for at 44th ",
            "query": "SELECT ?ans1 WHERE { wd:Q294454 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Peter Finch nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "What Peter Finch is nominated for at 44th Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q294454 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q289412 }",
            "NLQuery": "SELECT ?obj WHERE { Peter Finch nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 44th Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q289412"
        }
    },
    {
        "chopped": {
            "question": "Which Peter Finch is actually nominated for the 44th ",
            "query": "SELECT ?ans1 WHERE { wd:Q294454 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Peter Finch nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "Which Peter Finch is actually nominated for the 44th Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q294454 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q289412 }",
            "NLQuery": "SELECT ?obj WHERE { Peter Finch nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 44th Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q289412"
        }
    },
    {
        "chopped": {
            "question": "What is Thompson's type of music that is shown in ",
            "query": "SELECT ?ans1 WHERE { wd:Q15285649 wdt:P136 ?ans1 . ?ans1 wdt:P1441 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Thompson genre ?ans1 . ?ans1 present in work ?unknown}"
        },
        "original": {
            "question": "What is Thompson's type of music that is shown in Good Times Bad Times",
            "query": "SELECT ?answer WHERE { wd:Q15285649 wdt:P136 ?answer . ?answer wdt:P1441 wd:Q686360}",
            "NLQuery": "SELECT ?answer WHERE { Thompson genre ?answer . ?answer present in work Good Times Bad Times}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Good Times Bad Times",
            "choppedEntity": "Q686360"
        }
    },
    {
        "chopped": {
            "question": "What academic degree did Tom Hiddleston receive at ",
            "query": "SELECT ?ans1 WHERE { wd:Q295803 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P512 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Tom Hiddleston educated at ?s . ?s educated at ?unknown . ?s academic degree ?ans1}"
        },
        "original": {
            "question": "What academic degree did Tom Hiddleston receive at the University of Cambridge",
            "query": "SELECT ?value WHERE { wd:Q295803 p:P69 ?s . ?s ps:P69 wd:Q35794 . ?s pq:P512 ?value}",
            "NLQuery": "SELECT ?value WHERE { Tom Hiddleston educated at ?s . ?s educated at University of Cambridge . ?s academic degree ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the University of Cambridge",
            "choppedEntity": "Q35794"
        }
    },
    {
        "chopped": {
            "question": "What airport has an airline hub for ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P113 ?obj . ?obj wdt:P31 wd:Q1248784 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown airline hub ?obj . ?obj instance of airport } "
        },
        "original": {
            "question": "What airport has an airline hub for American Airlines",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q32396 wdt:P113 ?obj . ?obj wdt:P31 wd:Q1248784 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { American Airlines airline hub ?obj . ?obj instance of airport } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "American Airlines",
            "choppedEntity": "Q32396"
        }
    },
    {
        "chopped": {
            "question": "What airplane terminal has an carrier center for ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P113 ?obj . ?obj wdt:P31 wd:Q1248784 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown airline hub ?obj . ?obj instance of airport } "
        },
        "original": {
            "question": "What airplane terminal has an carrier center for American Airlines",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q32396 wdt:P113 ?obj . ?obj wdt:P31 wd:Q1248784 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { American Airlines airline hub ?obj . ?obj instance of airport } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "American Airlines",
            "choppedEntity": "Q32396"
        }
    },
    {
        "chopped": {
            "question": "Which are the primary destinations for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P1302 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 primary destinations ?unknown}"
        },
        "original": {
            "question": "Which are the primary destinations for Hachinohe",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P1302 wd:Q191914}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer primary destinations Hachinohe}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Hachinohe",
            "choppedEntity": "Q191914"
        }
    },
    {
        "chopped": {
            "question": "When did Seoul become a sister city with ",
            "query": "SELECT ?ans1 WHERE { wd:Q8684 p:P190 ?s . ?s ps:P190 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Seoul twinned administrative body ?s . ?s twinned administrative body ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Seoul become a sister city with Tokyo",
            "query": "SELECT ?value WHERE { wd:Q8684 p:P190 ?s . ?s ps:P190 wd:Q1490 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Seoul twinned administrative body ?s . ?s twinned administrative body Tokyo . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Tokyo",
            "choppedEntity": "Q1490"
        }
    },
    {
        "chopped": {
            "question": "What date did Seoul become a sister city with ",
            "query": "SELECT ?ans1 WHERE { wd:Q8684 p:P190 ?s . ?s ps:P190 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Seoul twinned administrative body ?s . ?s twinned administrative body ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "What date did Seoul become a sister city with Tokyo",
            "query": "SELECT ?value WHERE { wd:Q8684 p:P190 ?s . ?s ps:P190 wd:Q1490 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Seoul twinned administrative body ?s . ?s twinned administrative body Tokyo . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Tokyo",
            "choppedEntity": "Q1490"
        }
    },
    {
        "chopped": {
            "question": "How many platforms are in ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P400 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown platform ?obj }"
        },
        "original": {
            "question": "How many platforms are in Metroid",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q12397 wdt:P400 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Metroid platform ?obj }"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Metroid",
            "choppedEntity": "Q12397"
        }
    },
    {
        "chopped": {
            "question": "What number of platforms are in ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P400 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown platform ?obj }"
        },
        "original": {
            "question": "What number of platforms are in Metriod",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q12397 wdt:P400 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Metroid platform ?obj }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Metriod",
            "choppedEntity": "Q12397"
        }
    },
    {
        "chopped": {
            "question": "What is ISO 639-2 cod for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P219 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown ISO 639-2 code ?ans1}"
        },
        "original": {
            "question": "What is ISO 639-2 cod for vietnamese",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q9199 wdt:P219 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Vietnamese ISO 639-2 code ?answer}"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "vietnamese",
            "choppedEntity": "Q9199"
        }
    },
    {
        "chopped": {
            "question": "What was Gareth Bales' number when he played for ",
            "query": "SELECT ?ans1 WHERE { wd:Q184586 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P1618 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Gareth Bale member of sports team ?s . ?s member of sports team ?unknown . ?s sport number ?ans1}"
        },
        "original": {
            "question": "What was Gareth Bales' number when he played for the Tottenham Hotspur F.C.",
            "query": "SELECT ?value WHERE { wd:Q184586 p:P54 ?s . ?s ps:P54 wd:Q18741 . ?s pq:P1618 ?value}",
            "NLQuery": "SELECT ?value WHERE { Gareth Bale member of sports team ?s . ?s member of sports team Tottenham Hotspur F.C. . ?s sport number ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Tottenham Hotspur F.C.",
            "choppedEntity": "Q18741"
        }
    },
    {
        "chopped": {
            "question": "What was Gareth Bales' number when he played for ",
            "query": "SELECT ?ans1 WHERE { wd:Q184586 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P1618 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Gareth Bale member of sports team ?s . ?s member of sports team ?unknown . ?s sport number ?ans1}"
        },
        "original": {
            "question": "What was Gareth Bales' number when he played for the Tottenham Hotspur F.C.",
            "query": "SELECT ?value WHERE { wd:Q184586 p:P54 ?s . ?s ps:P54 wd:Q18741 . ?s pq:P1618 ?value}",
            "NLQuery": "SELECT ?value WHERE { Gareth Bale member of sports team ?s . ?s member of sports team Tottenham Hotspur F.C. . ?s sport number ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Tottenham Hotspur F.C.",
            "choppedEntity": "Q18741"
        }
    },
    {
        "chopped": {
            "question": "When did Ingmar Bergman marry ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q7546 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P582 ?ans1 . ?s pq:P580 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Ingmar Bergman spouse ?s . ?s spouse ?unknown . ?s end time ?ans1 . ?s start time ?ans2 }"
        },
        "original": {
            "question": "When did Ingmar Bergman marry Kabi Laretei",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q7546 p:P26 ?s . ?s ps:P26 wd:Q438786 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Ingmar Bergman spouse ?s . ?s spouse K\u00e4bi Laretei . ?s end time ?value1 . ?s start time ?value2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Kabi Laretei",
            "choppedEntity": "Q438786"
        }
    },
    {
        "chopped": {
            "question": "Who caused ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P607 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj conflict ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who caused the Napoleonic Wars",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P607 wd:Q78994 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj conflict Napoleonic Wars . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the Napoleonic Wars",
            "choppedEntity": "Q78994"
        }
    },
    {
        "chopped": {
            "question": "Who is the diplomatic relation to the United States of America whose Chief of State is ",
            "query": "SELECT ?ans1 WHERE { wd:Q30 wdt:P530 ?ans1 . ?ans1 wdt:P35 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { United States of America diplomatic relation ?ans1 . ?ans1 head of state ?unknown}"
        },
        "original": {
            "question": "Who is the diplomatic relation to the United States of America whose Chief of State is Mswati III",
            "query": "SELECT ?answer WHERE { wd:Q30 wdt:P530 ?answer . ?answer wdt:P35 wd:Q57340}",
            "NLQuery": "SELECT ?answer WHERE { United States of America diplomatic relation ?answer . ?answer head of state Mswati III}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mswati III",
            "choppedEntity": "Q57340"
        }
    },
    {
        "chopped": {
            "question": "Who is the political connection to the Joined together States of America whose Chief of State is ",
            "query": "SELECT ?ans1 WHERE { wd:Q30 wdt:P530 ?ans1 . ?ans1 wdt:P35 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { United States of America diplomatic relation ?ans1 . ?ans1 head of state ?unknown}"
        },
        "original": {
            "question": "Who is the political connection to the Joined together States of America whose Chief of State is Mswati III",
            "query": "SELECT ?answer WHERE { wd:Q30 wdt:P530 ?answer . ?answer wdt:P35 wd:Q57340}",
            "NLQuery": "SELECT ?answer WHERE { United States of America diplomatic relation ?answer . ?answer head of state Mswati III}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mswati III",
            "choppedEntity": "Q57340"
        }
    },
    {
        "chopped": {
            "question": "Which is the UNESCO language status for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1999 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown UNESCO language status ?ans1}"
        },
        "original": {
            "question": "Which is the UNESCO language status for Finnish",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1412 wdt:P1999 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Finnish UNESCO language status ?answer}"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Finnish",
            "choppedEntity": "Q1412"
        }
    },
    {
        "chopped": {
            "question": "What is the Library of Congress JukeBox ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2089 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Library of Congress JukeBox ID (former scheme) ?ans1}"
        },
        "original": {
            "question": "What is the Library of Congress JukeBox ID for Joseph Haydn",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q7349 wdt:P2089 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Joseph Haydn Library of Congress JukeBox ID (former scheme) ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Joseph Haydn",
            "choppedEntity": "Q7349"
        }
    },
    {
        "chopped": {
            "question": "when did richard owen receive the ",
            "query": "SELECT ?ans1 WHERE { wd:Q151556 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Richard Owen award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "when did richard owen receive the wollaston medal award",
            "query": "SELECT ?value WHERE { wd:Q151556 p:P166 ?s . ?s ps:P166 wd:Q832424 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Richard Owen award received ?s . ?s award received Wollaston Medal . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "wollaston medal award",
            "choppedEntity": "Q832424"
        }
    },
    {
        "chopped": {
            "question": "In what year was the Wollaston Medal Award given to ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 wd:Q832424 . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received Wollaston Medal . ?s point in time ?ans1}"
        },
        "original": {
            "question": "In what year was the Wollaston Medal Award given to Richard Owen",
            "query": "SELECT ?value WHERE { wd:Q151556 p:P166 ?s . ?s ps:P166 wd:Q832424 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Richard Owen award received ?s . ?s award received Wollaston Medal . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Richard Owen",
            "choppedEntity": "Q151556"
        }
    },
    {
        "chopped": {
            "question": "What is SRCFB ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3697 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Sports-Reference.com college football player ID ?ans1}"
        },
        "original": {
            "question": "What is SRCFB ID for Mike Ditka",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1355840 wdt:P3697 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Mike Ditka Sports-Reference.com college football player ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mike Ditka",
            "choppedEntity": "Q1355840"
        }
    },
    {
        "chopped": {
            "question": "What major did Larry Page study at ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q4934 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P812 ?ans1 . ?s pq:P512 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Larry Page educated at ?s . ?s educated at ?unknown . ?s academic major ?ans1 . ?s academic degree ?ans2 }"
        },
        "original": {
            "question": "What major did Larry Page study at Stanford University",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q4934 p:P69 ?s . ?s ps:P69 wd:Q41506 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Larry Page educated at ?s . ?s educated at Stanford University . ?s academic major ?value1 . ?s academic degree ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Stanford University",
            "choppedEntity": "Q41506"
        }
    },
    {
        "chopped": {
            "question": "What is the market capitilization of ",
            "query": "ASK WHERE { ?unknown wdt:P2226 ?obj FILTER(?obj = 307295000000) } ",
            "NLQuery": "ASK WHERE { ?unknown market capitalisation ?obj FILTER(?obj = 307295000000) } "
        },
        "original": {
            "question": "What is the market capitilization of JP Morgan Chase",
            "query": "ASK WHERE { wd:Q192314 wdt:P2226 ?obj FILTER(?obj = 307295000000) } ",
            "NLQuery": "ASK WHERE { JPMorgan Chase market capitalisation ?obj FILTER(?obj = 307295000000) } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "JP Morgan Chase",
            "choppedEntity": "Q192314"
        }
    },
    {
        "chopped": {
            "question": "Who is the human for field work of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P101 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj field of work ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who is the human for field work of Sioux",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P101 wd:Q107434 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj field of work Sioux . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Sioux",
            "choppedEntity": "Q107434"
        }
    },
    {
        "chopped": {
            "question": "Which is the number of people that are convicted in ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P1399 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown convicted of ?obj }"
        },
        "original": {
            "question": "Which is the number of people that are convicted in the Chopper Read",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q2428420 wdt:P1399 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Chopper Read convicted of ?obj }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Chopper Read",
            "choppedEntity": "Q2428420"
        }
    },
    {
        "chopped": {
            "question": "Forename of Sean O'Casey is said to be the same as ",
            "query": "SELECT ?ans1 WHERE { wd:Q315170 wdt:P735 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Se\u00e1n O'Casey given name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "Forename of Sean O'Casey is said to be the same as Johannes",
            "query": "SELECT ?answer WHERE { wd:Q315170 wdt:P735 ?answer . ?answer wdt:P460 wd:Q7331879}",
            "NLQuery": "SELECT ?answer WHERE { Se\u00e1n O'Casey given name ?answer . ?answer said to be the same as J\u00f3hannes}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Johannes",
            "choppedEntity": "Q7331879"
        }
    },
    {
        "chopped": {
            "question": "What is the history of and what sort of music is ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P136 ?X . ?X wdt:P2184 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown genre ?X . ?X history of topic ?ans1}"
        },
        "original": {
            "question": "What is the history of and what sort of music is Living Another Entryway to the God of Love",
            "query": "SELECT ?answer WHERE { wd:Q44466585 wdt:P136 ?X . ?X wdt:P2184 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Living Next Door to the God of Love genre ?X . ?X history of topic ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Living Another Entryway to the God of Love",
            "choppedEntity": "Q44466585"
        }
    },
    {
        "chopped": {
            "question": "Which is CESAR person ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2340 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown CESAR person ID ?ans1}"
        },
        "original": {
            "question": "Which is CESAR person ID for Pierre Choderlos de Laclos",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q212476 wdt:P2340 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Pierre Choderlos de Laclos CESAR person ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Pierre Choderlos de Laclos",
            "choppedEntity": "Q212476"
        }
    },
    {
        "chopped": {
            "question": "Was manny_pacquiao place of birth is ",
            "query": "ASK WHERE { wd:Q486359 wdt:P19 ?unknown }",
            "NLQuery": "ASK WHERE { Manny Pacquiao place of birth ?unknown }"
        },
        "original": {
            "question": "Was manny_pacquiao place of birth is kibawe",
            "query": "ASK WHERE { wd:Q486359 wdt:P19 wd:Q357152 }",
            "NLQuery": "ASK WHERE { Manny Pacquiao place of birth Kibawe }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "kibawe",
            "choppedEntity": "Q357152"
        }
    },
    {
        "chopped": {
            "question": "Was manny_pacquiao born in ",
            "query": "ASK WHERE { wd:Q486359 wdt:P19 ?unknown }",
            "NLQuery": "ASK WHERE { Manny Pacquiao place of birth ?unknown }"
        },
        "original": {
            "question": "Was manny_pacquiao born in kibawe",
            "query": "ASK WHERE { wd:Q486359 wdt:P19 wd:Q357152 }",
            "NLQuery": "ASK WHERE { Manny Pacquiao place of birth Kibawe }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "kibawe",
            "choppedEntity": "Q357152"
        }
    },
    {
        "chopped": {
            "question": "What are the country and the organizer of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P17 ?ans1 . ?unknown wdt:P664 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown country ?ans1 . ?unknown organizer ?ans2 }"
        },
        "original": {
            "question": "What are the country and the organizer of the Super Bowl",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q32096 wdt:P17 ?ans_1 . wd:Q32096 wdt:P664 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Super Bowl country ?ans_1 . Super Bowl organizer ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the Super Bowl",
            "choppedEntity": "Q32096"
        }
    },
    {
        "chopped": {
            "question": "Which is the category of associated people for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1792 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown category of associated people ?ans1}"
        },
        "original": {
            "question": "Which is the category of associated people for N\u00f3gr\u00e1d County",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q194273 wdt:P1792 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { N\u00f3gr\u00e1d County category of associated people ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "N\u00f3gr\u00e1d County",
            "choppedEntity": "Q194273"
        }
    },
    {
        "chopped": {
            "question": "Name someone whose native language is ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P103 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj native language ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Name someone whose native language is russian",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P103 wd:Q7737 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj native language Russian . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "russian",
            "choppedEntity": "Q7737"
        }
    },
    {
        "chopped": {
            "question": "Name a person whose native language is ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P103 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj native language ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Name a person whose native language is Russian",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P103 wd:Q7737 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj native language Russian . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Russian",
            "choppedEntity": "Q7737"
        }
    },
    {
        "chopped": {
            "question": "What is the parent organization of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P749 ?unknown . ?sbj wdt:P31 wd:Q43229 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj parent organization ?unknown . ?sbj instance of organization } "
        },
        "original": {
            "question": "What is the parent organization of Purdue University",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P749 wd:Q217741 . ?sbj wdt:P31 wd:Q43229 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj parent organization Purdue University . ?sbj instance of organization } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Purdue University",
            "choppedEntity": "Q217741"
        }
    },
    {
        "chopped": {
            "question": "Which is the number of the administrative territorial entities for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P150 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown contains administrative territorial entity ?obj }"
        },
        "original": {
            "question": "Which is the number of the administrative territorial entities for Norway",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q20 wdt:P150 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Norway contains administrative territorial entity ?obj }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Norway",
            "choppedEntity": "Q20"
        }
    },
    {
        "chopped": {
            "question": "Is Stan Lee the creator of ",
            "query": "ASK WHERE { ?unknown wdt:P170 wd:Q181900 }",
            "NLQuery": "ASK WHERE { ?unknown creator Stan Lee }"
        },
        "original": {
            "question": "Is Stan Lee the creator of Captain America",
            "query": "ASK WHERE { wd:Q190679 wdt:P170 wd:Q181900 }",
            "NLQuery": "ASK WHERE { Captain America creator Stan Lee }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Captain America",
            "choppedEntity": "Q190679"
        }
    },
    {
        "chopped": {
            "question": "How many languages used are for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P2936 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown language used ?obj }"
        },
        "original": {
            "question": "How many languages used are for the Federated States of Micronesia",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q702 wdt:P2936 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Federated States of Micronesia language used ?obj }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Federated States of Micronesia",
            "choppedEntity": "Q702"
        }
    },
    {
        "chopped": {
            "question": "Which person took over the Islmaili imam over ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P39 ?s . ?s ps:P39 wd:Q38998920 . ?s pq:P1366 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown position held ?s . ?s position held Ismaili imam . ?s replaced by ?ans1}"
        },
        "original": {
            "question": "Which person took over the Islmaili imam over Aga Khan III",
            "query": "SELECT ?value WHERE { wd:Q366213 p:P39 ?s . ?s ps:P39 wd:Q38998920 . ?s pq:P1366 ?value}",
            "NLQuery": "SELECT ?value WHERE { Aga Khan III position held ?s . ?s position held Ismaili imam . ?s replaced by ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Aga Khan III",
            "choppedEntity": "Q366213"
        }
    },
    {
        "chopped": {
            "question": "when did vincent van gogh started working in ",
            "query": "SELECT ?ans1 WHERE { wd:Q5582 p:P937 ?s . ?s ps:P937 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Vincent van Gogh work location ?s . ?s work location ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "when did vincent van gogh started working in paris",
            "query": "SELECT ?value WHERE { wd:Q5582 p:P937 ?s . ?s ps:P937 wd:Q90 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Vincent van Gogh work location ?s . ?s work location Paris . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "paris",
            "choppedEntity": "Q90"
        }
    },
    {
        "chopped": {
            "question": "who public office for position held of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P39 ?obj . ?obj wdt:P31 wd:Q294414 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown position held ?obj . ?obj instance of public office } "
        },
        "original": {
            "question": "who public office for position held of Moon Jae-in",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q21001 wdt:P39 ?obj . ?obj wdt:P31 wd:Q294414 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Moon Jae-in position held ?obj . ?obj instance of public office } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Moon Jae-in",
            "choppedEntity": "Q21001"
        }
    },
    {
        "chopped": {
            "question": "who open office for position held of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P39 ?obj . ?obj wdt:P31 wd:Q294414 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown position held ?obj . ?obj instance of public office } "
        },
        "original": {
            "question": "who open office for position held of Moon Jae-in",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q21001 wdt:P39 ?obj . ?obj wdt:P31 wd:Q294414 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Moon Jae-in position held ?obj . ?obj instance of public office } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Moon Jae-in",
            "choppedEntity": "Q21001"
        }
    },
    {
        "chopped": {
            "question": "Was Sharon_Stone award received 66th Primetime Emmy Awards and ",
            "query": "ASK WHERE { wd:Q62975 wdt:P166 wd:Q16395511 . wd:Q62975 wdt:P166 ?unknown }",
            "NLQuery": "ASK WHERE { Sharon Stone award received 66th Primetime Emmy Awards . Sharon Stone award received ?unknown }"
        },
        "original": {
            "question": "Was Sharon_Stone award received 66th Primetime Emmy Awards and Ordre des arts et des lettres",
            "query": "ASK WHERE { wd:Q62975 wdt:P166 wd:Q16395511 . wd:Q62975 wdt:P166 wd:Q716909 }",
            "NLQuery": "ASK WHERE { Sharon Stone award received 66th Primetime Emmy Awards . Sharon Stone award received Ordre des arts et des Lettres }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Ordre des arts et des lettres",
            "choppedEntity": "Q716909"
        }
    },
    {
        "chopped": {
            "question": "At the 66th Primetime Emmy Awards, did Sharon Stone win ",
            "query": "ASK WHERE { wd:Q62975 wdt:P166 wd:Q16395511 . wd:Q62975 wdt:P166 ?unknown }",
            "NLQuery": "ASK WHERE { Sharon Stone award received 66th Primetime Emmy Awards . Sharon Stone award received ?unknown }"
        },
        "original": {
            "question": "At the 66th Primetime Emmy Awards, did Sharon Stone win an Ordre des arts et des lettres",
            "query": "ASK WHERE { wd:Q62975 wdt:P166 wd:Q16395511 . wd:Q62975 wdt:P166 wd:Q716909 }",
            "NLQuery": "ASK WHERE { Sharon Stone award received 66th Primetime Emmy Awards . Sharon Stone award received Ordre des arts et des Lettres }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "an Ordre des arts et des lettres",
            "choppedEntity": "Q716909"
        }
    },
    {
        "chopped": {
            "question": "Are Edoardo and Carlo Ponti the parents of ",
            "query": "ASK WHERE { ?unknown wdt:P40 wd:Q327436 . ?unknown wdt:P40 wd:Q1042396 }",
            "NLQuery": "ASK WHERE { ?unknown child Edoardo Ponti . ?unknown child Carlo Ponti }"
        },
        "original": {
            "question": "Are Edoardo and Carlo Ponti the parents of Sophia Loren",
            "query": "ASK WHERE { wd:Q43252 wdt:P40 wd:Q327436 . wd:Q43252 wdt:P40 wd:Q1042396 }",
            "NLQuery": "ASK WHERE { Sophia Loren child Edoardo Ponti . Sophia Loren child Carlo Ponti }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Sophia Loren",
            "choppedEntity": "Q43252"
        }
    },
    {
        "chopped": {
            "question": "Are Sophia Loren's parents Edoardo and ",
            "query": "ASK WHERE { wd:Q43252 wdt:P40 wd:Q327436 . wd:Q43252 wdt:P40 ?unknown }",
            "NLQuery": "ASK WHERE { Sophia Loren child Edoardo Ponti . Sophia Loren child ?unknown }"
        },
        "original": {
            "question": "Are Sophia Loren's parents Edoardo and Carlo Ponti",
            "query": "ASK WHERE { wd:Q43252 wdt:P40 wd:Q327436 . wd:Q43252 wdt:P40 wd:Q1042396 }",
            "NLQuery": "ASK WHERE { Sophia Loren child Edoardo Ponti . Sophia Loren child Carlo Ponti }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Carlo Ponti",
            "choppedEntity": "Q1042396"
        }
    },
    {
        "chopped": {
            "question": "Are Sophia Loren's parents Edoardo and ",
            "query": "ASK WHERE { wd:Q43252 wdt:P40 ?unknown . wd:Q43252 wdt:P40 wd:Q1042396 }",
            "NLQuery": "ASK WHERE { Sophia Loren child ?unknown . Sophia Loren child Carlo Ponti }"
        },
        "original": {
            "question": "Are Sophia Loren's parents Edoardo and Carlo Ponti",
            "query": "ASK WHERE { wd:Q43252 wdt:P40 wd:Q327436 . wd:Q43252 wdt:P40 wd:Q1042396 }",
            "NLQuery": "ASK WHERE { Sophia Loren child Edoardo Ponti . Sophia Loren child Carlo Ponti }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Carlo Ponti",
            "choppedEntity": "Q327436"
        }
    },
    {
        "chopped": {
            "question": "When was Jacques Anquetil received the award as ",
            "query": "SELECT ?ans1 WHERE { wd:Q221001 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Jacques Anquetil award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was Jacques Anquetil received the award as L'\u00c9quipe Champion of Champions",
            "query": "SELECT ?value WHERE { wd:Q221001 p:P166 ?s . ?s ps:P166 wd:Q1061233 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Jacques Anquetil award received ?s . ?s award received L'\u00c9quipe Champion of Champions . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "L'\u00c9quipe Champion of Champions",
            "choppedEntity": "Q1061233"
        }
    },
    {
        "chopped": {
            "question": "What are the characters that appear in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1441 ?X . ?X wdt:P674 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown present in work ?X . ?X characters ?ans1}"
        },
        "original": {
            "question": "What are the characters that appear in Nastes",
            "query": "SELECT ?answer WHERE { wd:Q3870525 wdt:P1441 ?X . ?X wdt:P674 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Nastes present in work ?X . ?X characters ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Nastes",
            "choppedEntity": "Q3870525"
        }
    },
    {
        "chopped": {
            "question": "which are the characters that appear in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1441 ?X . ?X wdt:P674 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown present in work ?X . ?X characters ?ans1}"
        },
        "original": {
            "question": "which are the characters that appear in Nastes",
            "query": "SELECT ?answer WHERE { wd:Q3870525 wdt:P1441 ?X . ?X wdt:P674 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Nastes present in work ?X . ?X characters ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Nastes",
            "choppedEntity": "Q3870525"
        }
    },
    {
        "chopped": {
            "question": "Which is the railway bridge completed by architect ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P84 ?unknown . ?sbj wdt:P31 wd:Q1210334 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj architect ?unknown . ?sbj instance of railway bridge } "
        },
        "original": {
            "question": "Which is the railway bridge completed by architect Isambard Kingdom Brunel",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P84 wd:Q207380 . ?sbj wdt:P31 wd:Q1210334 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj architect Isambard Kingdom Brunel . ?sbj instance of railway bridge } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Isambard Kingdom Brunel",
            "choppedEntity": "Q207380"
        }
    },
    {
        "chopped": {
            "question": "what is live journal ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3258 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown LiveJournal ID ?ans1}"
        },
        "original": {
            "question": "what is live journal ID for mikhail prokhorov",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q233581 wdt:P3258 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Mikhail Prokhorov LiveJournal ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "mikhail prokhorov",
            "choppedEntity": "Q233581"
        }
    },
    {
        "chopped": {
            "question": "Is 3.2 the installed capacity of ",
            "query": "ASK WHERE { ?unknown wdt:P2109 ?obj FILTER(?obj = 3.2) } ",
            "NLQuery": "ASK WHERE { ?unknown installed capacity ?obj FILTER(?obj = 3.2) } "
        },
        "original": {
            "question": "Is 3.2 the installed capacity of Jiangxia Tidal Power Station",
            "query": "ASK WHERE { wd:Q116918 wdt:P2109 ?obj FILTER(?obj = 3.2) } ",
            "NLQuery": "ASK WHERE { Jiangxia Tidal Power Station installed capacity ?obj FILTER(?obj = 3.2) } "
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Jiangxia Tidal Power Station",
            "choppedEntity": "Q116918"
        }
    },
    {
        "chopped": {
            "question": "On the album Sgt. Pepper's Lonely Hearts Club Band, what number in the track list is ",
            "query": "SELECT ?ans1 WHERE { wd:Q169226 p:P658 ?s . ?s ps:P658 ?unknown . ?s pq:P1545 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Sgt. Pepper's Lonely Hearts Club Band tracklist ?s . ?s tracklist ?unknown . ?s series ordinal ?ans1}"
        },
        "original": {
            "question": "On the album Sgt. Pepper's Lonely Hearts Club Band, what number in the track list is Within You Without You",
            "query": "SELECT ?value WHERE { wd:Q169226 p:P658 ?s . ?s ps:P658 wd:Q541835 . ?s pq:P1545 ?value}",
            "NLQuery": "SELECT ?value WHERE { Sgt. Pepper's Lonely Hearts Club Band tracklist ?s . ?s tracklist Within You Without You . ?s series ordinal ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Within You Without You",
            "choppedEntity": "Q541835"
        }
    },
    {
        "chopped": {
            "question": "At the time of 2001-1-1 what was the inflation rate of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1279 ?s . ?s ps:P1279 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2001')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown inflation rate ?s . ?s inflation rate ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),'2001')) }"
        },
        "original": {
            "question": "At the time of 2001-1-1 what was the inflation rate of Moldova",
            "query": "SELECT ?obj WHERE { wd:Q217 p:P1279 ?s . ?s ps:P1279 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2001')) }",
            "NLQuery": "SELECT ?obj WHERE { Moldova inflation rate ?s . ?s inflation rate ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2001')) }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Moldova",
            "choppedEntity": "Q217"
        }
    },
    {
        "chopped": {
            "question": "At the beginning of 2001 what what the rate of inflated for ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1279 ?s . ?s ps:P1279 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2001')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown inflation rate ?s . ?s inflation rate ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),'2001')) }"
        },
        "original": {
            "question": "At the beginning of 2001 what what the rate of inflated for Moldova",
            "query": "SELECT ?obj WHERE { wd:Q217 p:P1279 ?s . ?s ps:P1279 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2001')) }",
            "NLQuery": "SELECT ?obj WHERE { Moldova inflation rate ?s . ?s inflation rate ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2001')) }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Moldova",
            "choppedEntity": "Q217"
        }
    },
    {
        "chopped": {
            "question": "What is the domain of Scandinavian literature whose working is ",
            "query": "SELECT ?ans1 WHERE { wd:Q367092 wdt:P2579 ?ans1 . ?ans1 wdt:P2578 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Scandinavian literature studied by ?ans1 . ?ans1 studies ?unknown}"
        },
        "original": {
            "question": "What is the domain of Scandinavian literature whose working is Swedish",
            "query": "SELECT ?answer WHERE { wd:Q367092 wdt:P2579 ?answer . ?answer wdt:P2578 wd:Q9027}",
            "NLQuery": "SELECT ?answer WHERE { Scandinavian literature studied by ?answer . ?answer studies Swedish}"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Swedish",
            "choppedEntity": "Q9027"
        }
    },
    {
        "chopped": {
            "question": "What is the space of Scandinavian writing whose working is ",
            "query": "SELECT ?ans1 WHERE { wd:Q367092 wdt:P2579 ?ans1 . ?ans1 wdt:P2578 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Scandinavian literature studied by ?ans1 . ?ans1 studies ?unknown}"
        },
        "original": {
            "question": "What is the space of Scandinavian writing whose working is Swedish",
            "query": "SELECT ?answer WHERE { wd:Q367092 wdt:P2579 ?answer . ?answer wdt:P2578 wd:Q9027}",
            "NLQuery": "SELECT ?answer WHERE { Scandinavian literature studied by ?answer . ?answer studies Swedish}"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Swedish",
            "choppedEntity": "Q9027"
        }
    },
    {
        "chopped": {
            "question": "Describe the hat worn by ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P3828 ?obj . ?obj wdt:P31 wd:Q80151 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown wears ?obj . ?obj instance of hat } "
        },
        "original": {
            "question": "Describe the hat worn by Jimi Hendrix",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q5928 wdt:P3828 ?obj . ?obj wdt:P31 wd:Q80151 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Jimi Hendrix wears ?obj . ?obj instance of hat } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jimi Hendrix",
            "choppedEntity": "Q5928"
        }
    },
    {
        "chopped": {
            "question": "When did Milton Babbitt become a member of ",
            "query": "SELECT ?ans1 WHERE { wd:Q318518 p:P463 ?s . ?s ps:P463 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Milton Babbitt member of ?s . ?s member of ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Milton Babbitt become a member of the American Academy of Arts an Letters",
            "query": "SELECT ?value WHERE { wd:Q318518 p:P463 ?s . ?s ps:P463 wd:Q463281 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Milton Babbitt member of ?s . ?s member of American Academy of Arts and Letters . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the American Academy of Arts an Letters",
            "choppedEntity": "Q463281"
        }
    },
    {
        "chopped": {
            "question": "Mention the year in which Milton Babbitt was jointed to ",
            "query": "SELECT ?ans1 WHERE { wd:Q318518 p:P463 ?s . ?s ps:P463 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Milton Babbitt member of ?s . ?s member of ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "Mention the year in which Milton Babbitt was jointed to American Academy of Arts an Letters",
            "query": "SELECT ?value WHERE { wd:Q318518 p:P463 ?s . ?s ps:P463 wd:Q463281 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Milton Babbitt member of ?s . ?s member of American Academy of Arts and Letters . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "American Academy of Arts an Letters",
            "choppedEntity": "Q463281"
        }
    },
    {
        "chopped": {
            "question": "What is the capital of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P31 ?s . ?s ps:P31 wd:Q5119 . ?s pq:P642 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown instance of ?s . ?s instance of capital . ?s of ?ans1}"
        },
        "original": {
            "question": "What is the capital of Besancon",
            "query": "SELECT ?value WHERE { wd:Q37776 p:P31 ?s . ?s ps:P31 wd:Q5119 . ?s pq:P642 ?value}",
            "NLQuery": "SELECT ?value WHERE { Besan\u00e7on instance of ?s . ?s instance of capital . ?s of ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Besancon",
            "choppedEntity": "Q37776"
        }
    },
    {
        "chopped": {
            "question": "Which is Kvikmyndir person ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3341 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Kvikmyndir person ID ?ans1}"
        },
        "original": {
            "question": "Which is Kvikmyndir person ID for Shonda Rhimes",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q242329 wdt:P3341 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Shonda Rhimes Kvikmyndir person ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Shonda Rhimes",
            "choppedEntity": "Q242329"
        }
    },
    {
        "chopped": {
            "question": "Was Percy Bysshe Shelley a citizen of ",
            "query": "SELECT ?ans1 WHERE { wd:Q93343 p:P27 ?s . ?s ps:P27 ?unknown . ?s pq:P1534 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Percy Bysshe Shelley country of citizenship ?s . ?s country of citizenship ?unknown . ?s end cause ?ans1}"
        },
        "original": {
            "question": "Was Percy Bysshe Shelley a citizen of Great Britain",
            "query": "SELECT ?value WHERE { wd:Q93343 p:P27 ?s . ?s ps:P27 wd:Q161885 . ?s pq:P1534 ?value}",
            "NLQuery": "SELECT ?value WHERE { Percy Bysshe Shelley country of citizenship ?s . ?s country of citizenship Great Britain . ?s end cause ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Great Britain",
            "choppedEntity": "Q161885"
        }
    },
    {
        "chopped": {
            "question": "What is the member of Marx Brothers who is in the state of ",
            "query": "SELECT ?ans1 WHERE { wd:Q64450 wdt:P463 ?ans1 . ?ans1 wdt:P131 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Marx Brothers member of ?ans1 . ?ans1 located in the administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "What is the member of Marx Brothers who is in the state of Paris",
            "query": "SELECT ?answer WHERE { wd:Q64450 wdt:P463 ?answer . ?answer wdt:P131 wd:Q90}",
            "NLQuery": "SELECT ?answer WHERE { Marx Brothers member of ?answer . ?answer located in the administrative territorial entity Paris}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Paris",
            "choppedEntity": "Q90"
        }
    },
    {
        "chopped": {
            "question": "Who is the author of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P50 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown author ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who is the author of Walden",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q863534 wdt:P50 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Walden author ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Walden",
            "choppedEntity": "Q863534"
        }
    },
    {
        "chopped": {
            "question": "Who wrote ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P50 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown author ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who wrote Walden",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q863534 wdt:P50 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Walden author ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Walden",
            "choppedEntity": "Q863534"
        }
    },
    {
        "chopped": {
            "question": "Who is accused of participating in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1344 ?X . ?X wdt:P710 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown participant in ?X . ?X participant ?ans1}"
        },
        "original": {
            "question": "Who is accused of participating in Homare Sawa",
            "query": "SELECT ?answer WHERE { wd:Q230865 wdt:P1344 ?X . ?X wdt:P710 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Homare Sawa participant in ?X . ?X participant ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Homare Sawa",
            "choppedEntity": "Q230865"
        }
    },
    {
        "chopped": {
            "question": "Which FIFA U-17 World Cup match had the max number of points by ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q245286 . ?ans1 wdt:P1351 ?obj . ?ans1 wdt:P3279 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of FIFA Under-17 World Cup . ?ans1 number of points/goals/set scored ?obj . ?ans1 statistical leader ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "Which FIFA U-17 World Cup match had the max number of points by Adriano Gerlin da Silva",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q245286 . ?ent wdt:P1351 ?obj . ?ent wdt:P3279 wd:Q197569 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of FIFA Under-17 World Cup . ?ent number of points/goals/set scored ?obj . ?ent statistical leader Adriano Gerlin da Silva } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Adriano Gerlin da Silva",
            "choppedEntity": "Q197569"
        }
    },
    {
        "chopped": {
            "question": "Name the vessel that has the most volume that was assembled in ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q848944 . ?ans1 wdt:P2234 ?obj . ?ans1 wdt:P1071 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of merchant vessel . ?ans1 volume as quantity ?obj . ?ans1 location of creation ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "Name the vessel that has the most volume that was assembled in New Quay",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q848944 . ?ent wdt:P2234 ?obj . ?ent wdt:P1071 wd:Q2039004 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of merchant vessel . ?ent volume as quantity ?obj . ?ent location of creation New Quay } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "New Quay",
            "choppedEntity": "Q2039004"
        }
    },
    {
        "chopped": {
            "question": "Which is the surface of the headquarters of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P159 ?X . ?X wdt:P2046 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown headquarters location ?X . ?X area ?ans1}"
        },
        "original": {
            "question": "Which is the surface of the headquarters of the South Asian Association for Regional Cooperation",
            "query": "SELECT ?answer WHERE { wd:Q145700 wdt:P159 ?X . ?X wdt:P2046 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { South Asian Association for Regional Cooperation headquarters location ?X . ?X area ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the South Asian Association for Regional Cooperation",
            "choppedEntity": "Q145700"
        }
    },
    {
        "chopped": {
            "question": "Which office is the one held by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P39 ?X . ?X wdt:P1001 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown position held ?X . ?X applies to jurisdiction ?ans1}"
        },
        "original": {
            "question": "Which office is the one held by Jacques Chirac",
            "query": "SELECT ?answer WHERE { wd:Q2105 wdt:P39 ?X . ?X wdt:P1001 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Jacques Chirac position held ?X . ?X applies to jurisdiction ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jacques Chirac",
            "choppedEntity": "Q2105"
        }
    },
    {
        "chopped": {
            "question": "What award did Saroj Khan achieve for working on ",
            "query": "SELECT ?ans1 WHERE { wd:Q3473673 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Saroj Khan award received ?s . ?s award received ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "What award did Saroj Khan achieve for working on Guru",
            "query": "SELECT ?obj WHERE { wd:Q3473673 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q1393668 }",
            "NLQuery": "SELECT ?obj WHERE { Saroj Khan award received ?s . ?s award received ?obj . ?s for work Guru }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Guru",
            "choppedEntity": "Q1393668"
        }
    },
    {
        "chopped": {
            "question": "What was Saroj Khan awarded for work on ",
            "query": "SELECT ?ans1 WHERE { wd:Q3473673 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Saroj Khan award received ?s . ?s award received ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "What was Saroj Khan awarded for work on Guru",
            "query": "SELECT ?obj WHERE { wd:Q3473673 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q1393668 }",
            "NLQuery": "SELECT ?obj WHERE { Saroj Khan award received ?s . ?s award received ?obj . ?s for work Guru }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Guru",
            "choppedEntity": "Q1393668"
        }
    },
    {
        "chopped": {
            "question": "Who were the members and creators of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P463 ?ans1 . ?unknown wdt:P170 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown member of ?ans1 . ?unknown creator ?ans2 }"
        },
        "original": {
            "question": "Who were the members and creators of Green Lantern",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q32884 wdt:P463 ?ans_1 . wd:Q32884 wdt:P170 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Green Lantern member of ?ans_1 . Green Lantern creator ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Green Lantern",
            "choppedEntity": "Q32884"
        }
    },
    {
        "chopped": {
            "question": "In 2010, what was the population of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2010')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),'2010')) }"
        },
        "original": {
            "question": "In 2010, what was the population of Portland",
            "query": "SELECT ?obj WHERE { wd:Q6106 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2010')) }",
            "NLQuery": "SELECT ?obj WHERE { Portland population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2010')) }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Portland",
            "choppedEntity": "Q6106"
        }
    },
    {
        "chopped": {
            "question": "Which is the SABR ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2482 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown SABR person ID ?ans1}"
        },
        "original": {
            "question": "Which is the SABR ID of Babe Ruth",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q213812 wdt:P2482 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Babe Ruth SABR person ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Babe Ruth",
            "choppedEntity": "Q213812"
        }
    },
    {
        "chopped": {
            "question": "Which is the business that has as member of sports team ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P54 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown member of sports team ?obj . ?obj instance of business } "
        },
        "original": {
            "question": "Which is the business that has as member of sports team Ryan Giggs",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q10524 wdt:P54 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Ryan Giggs member of sports team ?obj . ?obj instance of business } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ryan Giggs",
            "choppedEntity": "Q10524"
        }
    },
    {
        "chopped": {
            "question": "Which is the trade that has as part of sports group ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P54 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown member of sports team ?obj . ?obj instance of business } "
        },
        "original": {
            "question": "Which is the trade that has as part of sports group Ryan Giggs",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q10524 wdt:P54 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Ryan Giggs member of sports team ?obj . ?obj instance of business } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ryan Giggs",
            "choppedEntity": "Q10524"
        }
    },
    {
        "chopped": {
            "question": "Which is the installed capacity for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2109 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown installed capacity ?ans1}"
        },
        "original": {
            "question": "Which is the installed capacity for Itaipu Binacional",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q244169 wdt:P2109 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Itaipu Binacional installed capacity ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Itaipu Binacional",
            "choppedEntity": "Q244169"
        }
    },
    {
        "chopped": {
            "question": "Which is impounded by the remake of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P144 ?X . ?X wdt:P4792 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown based on ?X . ?X dam ?ans1}"
        },
        "original": {
            "question": "Which is impounded by the remake of Toshka Lakes",
            "query": "SELECT ?answer WHERE { wd:Q2601819 wdt:P144 ?X . ?X wdt:P4792 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Toshka Lakes based on ?X . ?X dam ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Toshka Lakes",
            "choppedEntity": "Q2601819"
        }
    },
    {
        "chopped": {
            "question": "Which is appropriated by the change of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P144 ?X . ?X wdt:P4792 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown based on ?X . ?X dam ?ans1}"
        },
        "original": {
            "question": "Which is appropriated by the change of Toshka Lakes",
            "query": "SELECT ?answer WHERE { wd:Q2601819 wdt:P144 ?X . ?X wdt:P4792 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Toshka Lakes based on ?X . ?X dam ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Toshka Lakes",
            "choppedEntity": "Q2601819"
        }
    },
    {
        "chopped": {
            "question": "When did Lena Horne receive the Grammy Award for ",
            "query": "SELECT ?ans1 WHERE { wd:Q112307 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Lena Horne award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Lena Horne receive the Grammy Award for Best Jazz Vocal Album",
            "query": "SELECT ?value WHERE { wd:Q112307 p:P166 ?s . ?s ps:P166 wd:Q3113384 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Lena Horne award received ?s . ?s award received Grammy Award for Best Jazz Vocal Album . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Best Jazz Vocal Album",
            "choppedEntity": "Q3113384"
        }
    },
    {
        "chopped": {
            "question": "On which date did Lena Horne get the Grammy Award for ",
            "query": "SELECT ?ans1 WHERE { wd:Q112307 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Lena Horne award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "On which date did Lena Horne get the Grammy Award for Best Jazz Vocal Album",
            "query": "SELECT ?value WHERE { wd:Q112307 p:P166 ?s . ?s ps:P166 wd:Q3113384 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Lena Horne award received ?s . ?s award received Grammy Award for Best Jazz Vocal Album . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Best Jazz Vocal Album",
            "choppedEntity": "Q3113384"
        }
    },
    {
        "chopped": {
            "question": "Which is the diplomatic relation for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P530 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown diplomatic relation ?ans1}"
        },
        "original": {
            "question": "Which is the diplomatic relation for Liberia",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1014 wdt:P530 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Liberia diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Liberia",
            "choppedEntity": "Q1014"
        }
    },
    {
        "chopped": {
            "question": "which is the notable books written by  ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P58 ?X . ?X wdt:P800 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown screenwriter ?X . ?X notable work ?ans1}"
        },
        "original": {
            "question": "which is the notable books written by  hiveswap",
            "query": "SELECT ?answer WHERE { wd:Q17042341 wdt:P58 ?X . ?X wdt:P800 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Hiveswap screenwriter ?X . ?X notable work ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "hiveswap",
            "choppedEntity": "Q17042341"
        }
    },
    {
        "chopped": {
            "question": "In what position will Maria Miller replace ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1366 wd:Q334261 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown position held ?s . ?s position held ?ans1 . ?s replaced by Maria Miller }"
        },
        "original": {
            "question": "In what position will Maria Miller replace Theresa May",
            "query": "SELECT ?obj WHERE { wd:Q264766 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q334261 }",
            "NLQuery": "SELECT ?obj WHERE { Theresa May position held ?s . ?s position held ?obj . ?s replaced by Maria Miller }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Theresa May",
            "choppedEntity": "Q264766"
        }
    },
    {
        "chopped": {
            "question": "What is the Musopen composer ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2338 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Musopen composer ID ?ans1}"
        },
        "original": {
            "question": "What is the Musopen composer ID for Arvo P\u00e4rt",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q189534 wdt:P2338 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Arvo P\u00e4rt Musopen composer ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Arvo P\u00e4rt",
            "choppedEntity": "Q189534"
        }
    },
    {
        "chopped": {
            "question": "Where is the location of the wheelchair access in ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2846 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown wheelchair accessibility ?ans1}"
        },
        "original": {
            "question": "Where is the location of the wheelchair access in the Louvre Museum",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q19675 wdt:P2846 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Louvre Museum wheelchair accessibility ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "the Louvre Museum",
            "choppedEntity": "Q19675"
        }
    },
    {
        "chopped": {
            "question": "Are there 247416000000 assets under management of ",
            "query": "ASK WHERE { ?unknown wdt:P4103 ?obj FILTER(?obj = 247416000000) } ",
            "NLQuery": "ASK WHERE { ?unknown assets under management ?obj FILTER(?obj = 247416000000) } "
        },
        "original": {
            "question": "Are there 247416000000 assets under management of the Apollo Global Management",
            "query": "ASK WHERE { wd:Q619121 wdt:P4103 ?obj FILTER(?obj = 247416000000) } ",
            "NLQuery": "ASK WHERE { Apollo Global Management assets under management ?obj FILTER(?obj = 247416000000) } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Apollo Global Management",
            "choppedEntity": "Q619121"
        }
    },
    {
        "chopped": {
            "question": "Which enterprise is a subsidiary of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P355 ?unknown . ?sbj wdt:P31 wd:Q6881511 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj subsidiary ?unknown . ?sbj instance of enterprise } "
        },
        "original": {
            "question": "Which enterprise is a subsidiary of Cathay Pacific",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P355 wd:Q32141 . ?sbj wdt:P31 wd:Q6881511 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj subsidiary Cathay Pacific . ?sbj instance of enterprise } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Cathay Pacific",
            "choppedEntity": "Q32141"
        }
    },
    {
        "chopped": {
            "question": "Which venture may be a auxiliary of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P355 ?unknown . ?sbj wdt:P31 wd:Q6881511 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj subsidiary ?unknown . ?sbj instance of enterprise } "
        },
        "original": {
            "question": "Which venture may be a auxiliary of Cathay Pacific",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P355 wd:Q32141 . ?sbj wdt:P31 wd:Q6881511 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj subsidiary Cathay Pacific . ?sbj instance of enterprise } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Cathay Pacific",
            "choppedEntity": "Q32141"
        }
    },
    {
        "chopped": {
            "question": "When is the William Wyndham apointed as Grenville asSecretary of State for ",
            "query": "SELECT ?ans1 WHERE { wd:Q312596 p:P39 ?s . ?s ps:P39 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { William Wyndham Grenville, 1st Baron Grenville position held ?s . ?s position held ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When is the William Wyndham apointed as Grenville asSecretary of State for Foreign and Commonwealth Affairs",
            "query": "SELECT ?value WHERE { wd:Q312596 p:P39 ?s . ?s ps:P39 wd:Q1371091 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { William Wyndham Grenville, 1st Baron Grenville position held ?s . ?s position held Secretary of State for Foreign and Commonwealth Affairs . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Foreign and Commonwealth Affairs",
            "choppedEntity": "Q1371091"
        }
    },
    {
        "chopped": {
            "question": "When was William Wyndham appointed to the position of Secretary of State for ",
            "query": "SELECT ?ans1 WHERE { wd:Q312596 p:P39 ?s . ?s ps:P39 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { William Wyndham Grenville, 1st Baron Grenville position held ?s . ?s position held ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When was William Wyndham appointed to the position of Secretary of State for Foreign and Commonwealth Affairs",
            "query": "SELECT ?value WHERE { wd:Q312596 p:P39 ?s . ?s ps:P39 wd:Q1371091 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { William Wyndham Grenville, 1st Baron Grenville position held ?s . ?s position held Secretary of State for Foreign and Commonwealth Affairs . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Foreign and Commonwealth Affairs",
            "choppedEntity": "Q1371091"
        }
    },
    {
        "chopped": {
            "question": "Who is the employer and spouse of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P108 ?ans1 . ?unknown wdt:P26 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown employer ?ans1 . ?unknown spouse ?ans2 }"
        },
        "original": {
            "question": "Who is the employer and spouse of Neil Gaiman",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q210059 wdt:P108 ?ans_1 . wd:Q210059 wdt:P26 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Neil Gaiman employer ?ans_1 . Neil Gaiman spouse ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Neil Gaiman",
            "choppedEntity": "Q210059"
        }
    },
    {
        "chopped": {
            "question": "What is the street address for Manneken Pis where they speak ",
            "query": "SELECT ?ans1 WHERE { wd:Q152072 p:P969 ?s . ?s ps:P969 ?ans1 . ?s pq:P407 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Manneken Pis none ?s . ?s none ?ans1 . ?s language of work or name ?unknown }"
        },
        "original": {
            "question": "What is the street address for Manneken Pis where they speak French",
            "query": "SELECT ?obj WHERE { wd:Q152072 p:P969 ?s . ?s ps:P969 ?obj . ?s pq:P407 wd:Q150 }",
            "NLQuery": "SELECT ?obj WHERE { Manneken Pis none ?s . ?s none ?obj . ?s language of work or name French }"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "French",
            "choppedEntity": "Q150"
        }
    },
    {
        "chopped": {
            "question": "What is the focal height of the ",
            "query": "ASK WHERE { ?unknown wdt:P2923 ?obj FILTER(?obj = 4.0) } ",
            "NLQuery": "ASK WHERE { ?unknown focal height ?obj FILTER(?obj = 4.0) } "
        },
        "original": {
            "question": "What is the focal height of the Farfarsgrund",
            "query": "ASK WHERE { wd:Q28375651 wdt:P2923 ?obj FILTER(?obj = 4.0) } ",
            "NLQuery": "ASK WHERE { Farfarsgrund focal height ?obj FILTER(?obj = 4.0) } "
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Farfarsgrund",
            "choppedEntity": "Q28375651"
        }
    },
    {
        "chopped": {
            "question": "How much linguistic typology exists for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P4132 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown linguistic typology ?obj }"
        },
        "original": {
            "question": "How much linguistic typology exists for Serbo- Croatian",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q9301 wdt:P4132 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Serbo-Croatian linguistic typology ?obj }"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Serbo- Croatian",
            "choppedEntity": "Q9301"
        }
    },
    {
        "chopped": {
            "question": "Who manufactures ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P176 ?obj . ?obj wdt:P31 wd:Q1252971 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown manufacturer ?obj . ?obj instance of food manufacturer } "
        },
        "original": {
            "question": "Who manufactures Coca-Cola",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q2813 wdt:P176 ?obj . ?obj wdt:P31 wd:Q1252971 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Coca-Cola manufacturer ?obj . ?obj instance of food manufacturer } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Coca-Cola",
            "choppedEntity": "Q2813"
        }
    },
    {
        "chopped": {
            "question": "What company manufactures ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P176 ?obj . ?obj wdt:P31 wd:Q1252971 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown manufacturer ?obj . ?obj instance of food manufacturer } "
        },
        "original": {
            "question": "What company manufactures Coca-Cola",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q2813 wdt:P176 ?obj . ?obj wdt:P31 wd:Q1252971 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Coca-Cola manufacturer ?obj . ?obj instance of food manufacturer } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Coca-Cola",
            "choppedEntity": "Q2813"
        }
    },
    {
        "chopped": {
            "question": "Which is Mountain Bike Hall of Fame inductee ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4468 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Mountain Bike Hall of Fame inductee ID ?ans1}"
        },
        "original": {
            "question": "Which is Mountain Bike Hall of Fame inductee ID for Anne-Caroline Chausson",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q242823 wdt:P4468 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Anne-Caroline Chausson Mountain Bike Hall of Fame inductee ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Anne-Caroline Chausson",
            "choppedEntity": "Q242823"
        }
    },
    {
        "chopped": {
            "question": "When was inflation 12.3 in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1279 ?s . ?s ps:P1279 ?x FILTER(contains(?x,'12.3')) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown inflation rate ?s . ?s inflation rate ?x FILTER(contains(?x,'12.3')) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was inflation 12.3 in Guatemala",
            "query": "SELECT ?value WHERE { wd:Q774 p:P1279 ?s . ?s ps:P1279 ?x FILTER(contains(?x,'12.3')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Guatemala inflation rate ?s . ?s inflation rate ?x FILTER(contains(?x,'12.3')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Guatemala",
            "choppedEntity": "Q774"
        }
    },
    {
        "chopped": {
            "question": "Where does Jimmy live, where the city council is ",
            "query": "SELECT ?ans1 WHERE { wd:Q181 wdt:P551 ?ans1 . ?ans1 wdt:P194 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Jimmy Wales residence ?ans1 . ?ans1 legislative body ?unknown}"
        },
        "original": {
            "question": "Where does Jimmy live, where the city council is the Florida Legislature",
            "query": "SELECT ?answer WHERE { wd:Q181 wdt:P551 ?answer . ?answer wdt:P194 wd:Q3556484}",
            "NLQuery": "SELECT ?answer WHERE { Jimmy Wales residence ?answer . ?answer legislative body Florida Legislature}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Florida Legislature",
            "choppedEntity": "Q3556484"
        }
    },
    {
        "chopped": {
            "question": "Where does Jimmy live, where the city committee is ",
            "query": "SELECT ?ans1 WHERE { wd:Q181 wdt:P551 ?ans1 . ?ans1 wdt:P194 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Jimmy Wales residence ?ans1 . ?ans1 legislative body ?unknown}"
        },
        "original": {
            "question": "Where does Jimmy live, where the city committee is the Florida Legislature",
            "query": "SELECT ?answer WHERE { wd:Q181 wdt:P551 ?answer . ?answer wdt:P194 wd:Q3556484}",
            "NLQuery": "SELECT ?answer WHERE { Jimmy Wales residence ?answer . ?answer legislative body Florida Legislature}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Florida Legislature",
            "choppedEntity": "Q3556484"
        }
    },
    {
        "chopped": {
            "question": "When did Muhammed Ali Jinnah hold the position of President of ",
            "query": "SELECT ?ans1 WHERE { wd:Q160554 p:P39 ?s . ?s ps:P39 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Mohammad Ali Jinnah position held ?s . ?s position held ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did Muhammed Ali Jinnah hold the position of President of the Constituent Assembly of Pakistan",
            "query": "SELECT ?value WHERE { wd:Q160554 p:P39 ?s . ?s ps:P39 wd:Q42562461 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Mohammad Ali Jinnah position held ?s . ?s position held President of the Constituent Assembly of Pakistan . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Constituent Assembly of Pakistan",
            "choppedEntity": "Q42562461"
        }
    },
    {
        "chopped": {
            "question": "What instrument does the record producer play in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P162 ?X . ?X wdt:P1303 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown producer ?X . ?X instrument ?ans1}"
        },
        "original": {
            "question": "What instrument does the record producer play in Get your Gunn",
            "query": "SELECT ?answer WHERE { wd:Q549616 wdt:P162 ?X . ?X wdt:P1303 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Get Your Gunn producer ?X . ?X instrument ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Get your Gunn",
            "choppedEntity": "Q549616"
        }
    },
    {
        "chopped": {
            "question": "What instrument does the record maker play in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P162 ?X . ?X wdt:P1303 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown producer ?X . ?X instrument ?ans1}"
        },
        "original": {
            "question": "What instrument does the record maker play in Get your Gunn",
            "query": "SELECT ?answer WHERE { wd:Q549616 wdt:P162 ?X . ?X wdt:P1303 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Get Your Gunn producer ?X . ?X instrument ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Get your Gunn",
            "choppedEntity": "Q549616"
        }
    },
    {
        "chopped": {
            "question": "What road is connected to ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P2789 ?unknown . ?sbj wdt:P31 wd:Q34442 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj connects with ?unknown . ?sbj instance of road } "
        },
        "original": {
            "question": "What road is connected to Zagreb",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P2789 wd:Q1435 . ?sbj wdt:P31 wd:Q34442 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj connects with Zagreb . ?sbj instance of road } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Zagreb",
            "choppedEntity": "Q1435"
        }
    },
    {
        "chopped": {
            "question": "What is the cathedral of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P1885 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 cathedral ?unknown}"
        },
        "original": {
            "question": "What is the cathedral of Notre-Dame de Chartres",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P1885 wd:Q180274}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer cathedral Notre-Dame de Chartres}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Notre-Dame de Chartres",
            "choppedEntity": "Q180274"
        }
    },
    {
        "chopped": {
            "question": "When did Hank Azaria marry ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q202056 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P580 ?ans1 . ?s pq:P2842 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Hank Azaria spouse ?s . ?s spouse ?unknown . ?s start time ?ans1 . ?s place of marriage ?ans2 }"
        },
        "original": {
            "question": "When did Hank Azaria marry Helen Hunt",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q202056 p:P26 ?s . ?s ps:P26 wd:Q170574 . ?s pq:P580 ?value1 . ?s pq:P2842 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Hank Azaria spouse ?s . ?s spouse Helen Hunt . ?s start time ?value1 . ?s place of marriage ?value2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Helen Hunt",
            "choppedEntity": "Q170574"
        }
    },
    {
        "chopped": {
            "question": "Who was the doctoral advisor for ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P184 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown doctoral advisor ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who was the doctoral advisor for Janet Yellen",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q263725 wdt:P184 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Janet Yellen doctoral advisor ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Janet Yellen",
            "choppedEntity": "Q263725"
        }
    },
    {
        "chopped": {
            "question": "How many people currently support ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P460 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown said to be the same as ?obj }"
        },
        "original": {
            "question": "How many people currently support Mary",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q345 wdt:P460 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Mary said to be the same as ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mary",
            "choppedEntity": "Q345"
        }
    },
    {
        "chopped": {
            "question": "When did Jagjivan Ram succeed ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1366 wd:Q1471625 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown position held ?s . ?s position held ?ans1 . ?s replaced by Jagjivan Ram }"
        },
        "original": {
            "question": "When did Jagjivan Ram succeed Morarji Desai",
            "query": "SELECT ?obj WHERE { wd:Q218661 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q1471625 }",
            "NLQuery": "SELECT ?obj WHERE { Morarji Desai position held ?s . ?s position held ?obj . ?s replaced by Jagjivan Ram }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Morarji Desai",
            "choppedEntity": "Q218661"
        }
    },
    {
        "chopped": {
            "question": "Who was responsible for the allegiance of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P945 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj allegiance ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who was responsible for the allegiance of Nazi Germany",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P945 wd:Q7318 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj allegiance Nazi Germany . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Nazi Germany",
            "choppedEntity": "Q7318"
        }
    },
    {
        "chopped": {
            "question": "Who was mindful for the devotion of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P945 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj allegiance ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who was mindful for the devotion of Nazi Germany",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P945 wd:Q7318 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj allegiance Nazi Germany . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Nazi Germany",
            "choppedEntity": "Q7318"
        }
    },
    {
        "chopped": {
            "question": "Where is the place of death in Bavaria of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P20 ?s . ?s ps:P20 ?ans1 . ?s pq:P131 wd:Q980 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of death ?s . ?s place of death ?ans1 . ?s located in the administrative territorial entity Bavaria }"
        },
        "original": {
            "question": "Where is the place of death in Bavaria of Chinghiz Aitmatov",
            "query": "SELECT ?obj WHERE { wd:Q484292 p:P20 ?s . ?s ps:P20 ?obj . ?s pq:P131 wd:Q980 }",
            "NLQuery": "SELECT ?obj WHERE { Chinghiz Aitmatov place of death ?s . ?s place of death ?obj . ?s located in the administrative territorial entity Bavaria }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Chinghiz Aitmatov",
            "choppedEntity": "Q484292"
        }
    },
    {
        "chopped": {
            "question": "Whose motion picture studio is a part of series of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P179 ?X . ?X wdt:P272 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown part of the series ?X . ?X production company ?ans1}"
        },
        "original": {
            "question": "Whose motion picture studio is a part of series of The Stolen Eagle",
            "query": "SELECT ?answer WHERE { wd:Q3247886 wdt:P179 ?X . ?X wdt:P272 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Stolen Eagle part of the series ?X . ?X production company ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Stolen Eagle",
            "choppedEntity": "Q3247886"
        }
    },
    {
        "chopped": {
            "question": "Which motion picture studio is a part of series for ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P179 ?X . ?X wdt:P272 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown part of the series ?X . ?X production company ?ans1}"
        },
        "original": {
            "question": "Which motion picture studio is a part of series for The Stolen Eagle",
            "query": "SELECT ?answer WHERE { wd:Q3247886 wdt:P179 ?X . ?X wdt:P272 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Stolen Eagle part of the series ?X . ?X production company ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Stolen Eagle",
            "choppedEntity": "Q3247886"
        }
    },
    {
        "chopped": {
            "question": "What award did Jurassic Park receive at the 66th ",
            "query": "SELECT ?ans1 WHERE { wd:Q167726 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Jurassic Park award received ?s . ?s award received ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "What award did Jurassic Park receive at the 66th Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q167726 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q944352 }",
            "NLQuery": "SELECT ?obj WHERE { Jurassic Park award received ?s . ?s award received ?obj . ?s statement is subject of 66th Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q944352"
        }
    },
    {
        "chopped": {
            "question": "Which is the number of subscribers of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3744 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown number of subscribers ?ans1}"
        },
        "original": {
            "question": "Which is the number of subscribers of HBO",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q23633 wdt:P3744 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { HBO number of subscribers ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "HBO",
            "choppedEntity": "Q23633"
        }
    },
    {
        "chopped": {
            "question": "When did Ingrid Thulin marry ",
            "query": "SELECT ?ans1 WHERE { wd:Q233732 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ingrid Thulin spouse ?s . ?s spouse ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Ingrid Thulin marry Harry Schein",
            "query": "SELECT ?value WHERE { wd:Q233732 p:P26 ?s . ?s ps:P26 wd:Q1586766 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ingrid Thulin spouse ?s . ?s spouse Harry Schein . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Harry Schein",
            "choppedEntity": "Q1586766"
        }
    },
    {
        "chopped": {
            "question": "What was the wedding date for Ingrid Thulin and ",
            "query": "SELECT ?ans1 WHERE { wd:Q233732 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ingrid Thulin spouse ?s . ?s spouse ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "What was the wedding date for Ingrid Thulin and Harry Schein",
            "query": "SELECT ?value WHERE { wd:Q233732 p:P26 ?s . ?s ps:P26 wd:Q1586766 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ingrid Thulin spouse ?s . ?s spouse Harry Schein . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Harry Schein",
            "choppedEntity": "Q1586766"
        }
    },
    {
        "chopped": {
            "question": "What is the Christian name of Jean Rhys, which is the same as ",
            "query": "SELECT ?ans1 WHERE { wd:Q230598 wdt:P735 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Jean Rhys given name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "What is the Christian name of Jean Rhys, which is the same as Jane",
            "query": "SELECT ?answer WHERE { wd:Q230598 wdt:P735 ?answer . ?answer wdt:P460 wd:Q1682564}",
            "NLQuery": "SELECT ?answer WHERE { Jean Rhys given name ?answer . ?answer said to be the same as Jane}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jane",
            "choppedEntity": "Q1682564"
        }
    },
    {
        "chopped": {
            "question": "What is the Christian title of Jean Rhys, which is the same as ",
            "query": "SELECT ?ans1 WHERE { wd:Q230598 wdt:P735 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Jean Rhys given name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "What is the Christian title of Jean Rhys, which is the same as Jane",
            "query": "SELECT ?answer WHERE { wd:Q230598 wdt:P735 ?answer . ?answer wdt:P460 wd:Q1682564}",
            "NLQuery": "SELECT ?answer WHERE { Jean Rhys given name ?answer . ?answer said to be the same as Jane}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jane",
            "choppedEntity": "Q1682564"
        }
    },
    {
        "chopped": {
            "question": "When was Antonin Scalia employed by ",
            "query": "SELECT ?ans1 WHERE { wd:Q11156 p:P108 ?s . ?s ps:P108 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Antonin Scalia employer ?s . ?s employer ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When was Antonin Scalia employed by the University of Chicago Law School",
            "query": "SELECT ?value WHERE { wd:Q11156 p:P108 ?s . ?s ps:P108 wd:Q1036763 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Antonin Scalia employer ?s . ?s employer University of Chicago Law School . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the University of Chicago Law School",
            "choppedEntity": "Q1036763"
        }
    },
    {
        "chopped": {
            "question": "What year was Antonin Scalia employed by ",
            "query": "SELECT ?ans1 WHERE { wd:Q11156 p:P108 ?s . ?s ps:P108 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Antonin Scalia employer ?s . ?s employer ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "What year was Antonin Scalia employed by University of Chicago Law School",
            "query": "SELECT ?value WHERE { wd:Q11156 p:P108 ?s . ?s ps:P108 wd:Q1036763 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Antonin Scalia employer ?s . ?s employer University of Chicago Law School . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "University of Chicago Law School",
            "choppedEntity": "Q1036763"
        }
    },
    {
        "chopped": {
            "question": "Who is the crew member of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1029 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown crew member ?ans1}"
        },
        "original": {
            "question": "Who is the crew member of the C-130 Hercules",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q182027 wdt:P1029 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { C-130 Hercules crew member ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "the C-130 Hercules",
            "choppedEntity": "Q182027"
        }
    },
    {
        "chopped": {
            "question": "What is the grammatical gender of the language ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1412 ?ans1 . ?ans1 wdt:P5109 wd:Q1775415}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown languages spoken, written or signed ?ans1 . ?ans1 has grammatical gender feminine}"
        },
        "original": {
            "question": "What is the grammatical gender of the language Andrei Tupolev",
            "query": "SELECT ?answer WHERE { wd:Q219734 wdt:P1412 ?answer . ?answer wdt:P5109 wd:Q1775415}",
            "NLQuery": "SELECT ?answer WHERE { Andrei Tupolev languages spoken, written or signed ?answer . ?answer has grammatical gender feminine}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Andrei Tupolev",
            "choppedEntity": "Q219734"
        }
    },
    {
        "chopped": {
            "question": "How much has been proved by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P1318 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub proved by ?unknown }"
        },
        "original": {
            "question": "How much has been proved by Alexander Grothendieck",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P1318 wd:Q77141 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub proved by Alexander Grothendieck }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Alexander Grothendieck",
            "choppedEntity": "Q77141"
        }
    },
    {
        "chopped": {
            "question": "What is the diplomatic relation of the sovereign state of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P17 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "What is the diplomatic relation of the sovereign state of Lake Ontario",
            "query": "SELECT ?answer WHERE { wd:Q1062 wdt:P17 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Lake Ontario country ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Lake Ontario",
            "choppedEntity": "Q1062"
        }
    },
    {
        "chopped": {
            "question": "What is the political connection of the majestic state of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P17 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "What is the political connection of the majestic state of Lake Ontario",
            "query": "SELECT ?answer WHERE { wd:Q1062 wdt:P17 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Lake Ontario country ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Lake Ontario",
            "choppedEntity": "Q1062"
        }
    },
    {
        "chopped": {
            "question": "Who is the nominee for Andrew Carnegie, but has a prizewinner of ",
            "query": "SELECT ?ans1 WHERE { wd:Q484265 wdt:P1411 ?ans1 . ?ans1 wdt:P1346 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Andrew Carnegie nominated for ?ans1 . ?ans1 winner ?unknown}"
        },
        "original": {
            "question": "Who is the nominee for Andrew Carnegie, but has a prizewinner of Grameen Bank",
            "query": "SELECT ?answer WHERE { wd:Q484265 wdt:P1411 ?answer . ?answer wdt:P1346 wd:Q188567}",
            "NLQuery": "SELECT ?answer WHERE { Andrew Carnegie nominated for ?answer . ?answer winner Grameen Bank}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Grameen Bank",
            "choppedEntity": "Q188567"
        }
    },
    {
        "chopped": {
            "question": "What comes from Hole, whose twin city is ",
            "query": "SELECT ?ans1 WHERE { wd:Q624790 wdt:P740 ?ans1 . ?ans1 wdt:P190 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Hole location of formation ?ans1 . ?ans1 twinned administrative body ?unknown}"
        },
        "original": {
            "question": "What comes from Hole, whose twin city is Mumbai",
            "query": "SELECT ?answer WHERE { wd:Q624790 wdt:P740 ?answer . ?answer wdt:P190 wd:Q1156}",
            "NLQuery": "SELECT ?answer WHERE { Hole location of formation ?answer . ?answer twinned administrative body Mumbai}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Mumbai",
            "choppedEntity": "Q1156"
        }
    },
    {
        "chopped": {
            "question": "What comes from Gap, whose twin city is ",
            "query": "SELECT ?ans1 WHERE { wd:Q624790 wdt:P740 ?ans1 . ?ans1 wdt:P190 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Hole location of formation ?ans1 . ?ans1 twinned administrative body ?unknown}"
        },
        "original": {
            "question": "What comes from Gap, whose twin city is Mumbai",
            "query": "SELECT ?answer WHERE { wd:Q624790 wdt:P740 ?answer . ?answer wdt:P190 wd:Q1156}",
            "NLQuery": "SELECT ?answer WHERE { Hole location of formation ?answer . ?answer twinned administrative body Mumbai}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Mumbai",
            "choppedEntity": "Q1156"
        }
    },
    {
        "chopped": {
            "question": "Who is brother of musician of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P175 ?X . ?X wdt:P3373 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown performer ?X . ?X sibling ?ans1}"
        },
        "original": {
            "question": "Who is brother of musician of Duchess",
            "query": "SELECT ?answer WHERE { wd:Q27237663 wdt:P175 ?X . ?X wdt:P3373 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Duchess performer ?X . ?X sibling ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Duchess",
            "choppedEntity": "Q27237663"
        }
    },
    {
        "chopped": {
            "question": "Who is brother of artist of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P175 ?X . ?X wdt:P3373 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown performer ?X . ?X sibling ?ans1}"
        },
        "original": {
            "question": "Who is brother of artist of Duchess",
            "query": "SELECT ?answer WHERE { wd:Q27237663 wdt:P175 ?X . ?X wdt:P3373 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Duchess performer ?X . ?X sibling ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Duchess",
            "choppedEntity": "Q27237663"
        }
    },
    {
        "chopped": {
            "question": "Was Bashar_al-Assad religion ",
            "query": "ASK WHERE { wd:Q44329 wdt:P140 ?unknown }",
            "NLQuery": "ASK WHERE { Bashar al-Assad religion ?unknown }"
        },
        "original": {
            "question": "Was Bashar_al-Assad religion Alawi",
            "query": "ASK WHERE { wd:Q44329 wdt:P140 wd:Q209496 }",
            "NLQuery": "ASK WHERE { Bashar al-Assad religion Alawites }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Alawi",
            "choppedEntity": "Q209496"
        }
    },
    {
        "chopped": {
            "question": "Did Bashar al-Assad practice ",
            "query": "ASK WHERE { wd:Q44329 wdt:P140 ?unknown }",
            "NLQuery": "ASK WHERE { Bashar al-Assad religion ?unknown }"
        },
        "original": {
            "question": "Did Bashar al-Assad practice Alawi",
            "query": "ASK WHERE { wd:Q44329 wdt:P140 wd:Q209496 }",
            "NLQuery": "ASK WHERE { Bashar al-Assad religion Alawites }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Alawi",
            "choppedEntity": "Q209496"
        }
    },
    {
        "chopped": {
            "question": "What work is Zaha Hadid known for in addition to ",
            "query": "SELECT ?ans1 WHERE { wd:Q47780 p:P800 ?s . ?s ps:P800 ?unknown . ?s pq:P127 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Zaha Hadid notable work ?s . ?s notable work ?unknown . ?s owned by ?ans1}"
        },
        "original": {
            "question": "What work is Zaha Hadid known for in addition to Capital Hill Residence",
            "query": "SELECT ?value WHERE { wd:Q47780 p:P800 ?s . ?s ps:P800 wd:Q20127495 . ?s pq:P127 ?value}",
            "NLQuery": "SELECT ?value WHERE { Zaha Hadid notable work ?s . ?s notable work Capital Hill Residence . ?s owned by ?value}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Capital Hill Residence",
            "choppedEntity": "Q20127495"
        }
    },
    {
        "chopped": {
            "question": "What is Zaha Hadid known for besides ",
            "query": "SELECT ?ans1 WHERE { wd:Q47780 p:P800 ?s . ?s ps:P800 ?unknown . ?s pq:P127 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Zaha Hadid notable work ?s . ?s notable work ?unknown . ?s owned by ?ans1}"
        },
        "original": {
            "question": "What is Zaha Hadid known for besides Capital Hill Residence",
            "query": "SELECT ?value WHERE { wd:Q47780 p:P800 ?s . ?s ps:P800 wd:Q20127495 . ?s pq:P127 ?value}",
            "NLQuery": "SELECT ?value WHERE { Zaha Hadid notable work ?s . ?s notable work Capital Hill Residence . ?s owned by ?value}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Capital Hill Residence",
            "choppedEntity": "Q20127495"
        }
    },
    {
        "chopped": {
            "question": "What is the role played by City of Sydney which is located in the administrative territorial entity ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P131 ?s . ?s ps:P131 wd:Q1094194 . ?s pq:P3831 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in the administrative territorial entity ?s . ?s located in the administrative territorial entity City of Sydney . ?s object has role ?ans1}"
        },
        "original": {
            "question": "What is the role played by City of Sydney which is located in the administrative territorial entity Sydney",
            "query": "SELECT ?value WHERE { wd:Q3130 p:P131 ?s . ?s ps:P131 wd:Q1094194 . ?s pq:P3831 ?value}",
            "NLQuery": "SELECT ?value WHERE { Sydney located in the administrative territorial entity ?s . ?s located in the administrative territorial entity City of Sydney . ?s object has role ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Sydney",
            "choppedEntity": "Q3130"
        }
    },
    {
        "chopped": {
            "question": "Which is the role played by City of Sydney located in the administrative territorial entity of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P131 ?s . ?s ps:P131 wd:Q1094194 . ?s pq:P3831 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in the administrative territorial entity ?s . ?s located in the administrative territorial entity City of Sydney . ?s object has role ?ans1}"
        },
        "original": {
            "question": "Which is the role played by City of Sydney located in the administrative territorial entity of Sydney",
            "query": "SELECT ?value WHERE { wd:Q3130 p:P131 ?s . ?s ps:P131 wd:Q1094194 . ?s pq:P3831 ?value}",
            "NLQuery": "SELECT ?value WHERE { Sydney located in the administrative territorial entity ?s . ?s located in the administrative territorial entity City of Sydney . ?s object has role ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Sydney",
            "choppedEntity": "Q3130"
        }
    },
    {
        "chopped": {
            "question": "What is the TGN ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1667 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Getty Thesaurus of Geographic Names ID ?ans1}"
        },
        "original": {
            "question": "What is the TGN ID for Penang",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q188096 wdt:P1667 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Penang Getty Thesaurus of Geographic Names ID ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Penang",
            "choppedEntity": "Q188096"
        }
    },
    {
        "chopped": {
            "question": "What year did Michael Lauudrup start as a member of ",
            "query": "SELECT ?ans1 WHERE { wd:Q188720 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Michael Laudrup member of sports team ?s . ?s member of sports team ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "What year did Michael Lauudrup start as a member of Real Madrid C.F.",
            "query": "SELECT ?value WHERE { wd:Q188720 p:P54 ?s . ?s ps:P54 wd:Q8682 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Michael Laudrup member of sports team ?s . ?s member of sports team Real Madrid CF . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Real Madrid C.F.",
            "choppedEntity": "Q8682"
        }
    },
    {
        "chopped": {
            "question": "When did Michael Lauudrup break into the starting lineup for ",
            "query": "SELECT ?ans1 WHERE { wd:Q188720 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Michael Laudrup member of sports team ?s . ?s member of sports team ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Michael Lauudrup break into the starting lineup for Real Madrid C. F.",
            "query": "SELECT ?value WHERE { wd:Q188720 p:P54 ?s . ?s ps:P54 wd:Q8682 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Michael Laudrup member of sports team ?s . ?s member of sports team Real Madrid CF . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Real Madrid C. F.",
            "choppedEntity": "Q8682"
        }
    },
    {
        "chopped": {
            "question": "Which is the collection for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P195 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 collection ?unknown}"
        },
        "original": {
            "question": "Which is the collection for Saint Catherine's Monastery",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P195 wd:Q185362}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer collection Saint Catherine's Monastery}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Saint Catherine's Monastery",
            "choppedEntity": "Q185362"
        }
    },
    {
        "chopped": {
            "question": "Did Sidney Crosby take part in the 2014 and 2006 ",
            "query": "ASK WHERE { wd:Q311280 wdt:P1344 wd:Q9678 . wd:Q311280 wdt:P1344 ?unknown }",
            "NLQuery": "ASK WHERE { Sidney Crosby participant in 2014 Winter Olympics . Sidney Crosby participant in ?unknown }"
        },
        "original": {
            "question": "Did Sidney Crosby take part in the 2014 and 2006 Winter Olympics",
            "query": "ASK WHERE { wd:Q311280 wdt:P1344 wd:Q9678 . wd:Q311280 wdt:P1344 wd:Q9672 }",
            "NLQuery": "ASK WHERE { Sidney Crosby participant in 2014 Winter Olympics . Sidney Crosby participant in 2006 Winter Olympics }"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "Winter Olympics",
            "choppedEntity": "Q9672"
        }
    },
    {
        "chopped": {
            "question": "Did Sidney Crosby take part in the 2014 and 2006 ",
            "query": "ASK WHERE { wd:Q311280 wdt:P1344 ?unknown . wd:Q311280 wdt:P1344 wd:Q9672 }",
            "NLQuery": "ASK WHERE { Sidney Crosby participant in ?unknown . Sidney Crosby participant in 2006 Winter Olympics }"
        },
        "original": {
            "question": "Did Sidney Crosby take part in the 2014 and 2006 Winter Olympics",
            "query": "ASK WHERE { wd:Q311280 wdt:P1344 wd:Q9678 . wd:Q311280 wdt:P1344 wd:Q9672 }",
            "NLQuery": "ASK WHERE { Sidney Crosby participant in 2014 Winter Olympics . Sidney Crosby participant in 2006 Winter Olympics }"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "Winter Olympics",
            "choppedEntity": "Q9678"
        }
    },
    {
        "chopped": {
            "question": "Which is the drainage basin for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P4614 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 drainage basin ?unknown}"
        },
        "original": {
            "question": "Which is the drainage basin for Tarim Basin",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P4614 wd:Q216622}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer drainage basin Tarim Basin}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Tarim Basin",
            "choppedEntity": "Q216622"
        }
    },
    {
        "chopped": {
            "question": "What is the depiction of the narrative of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1441 ?X . ?X wdt:P180 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown present in work ?X . ?X depicts ?ans1}"
        },
        "original": {
            "question": "What is the depiction of the narrative of Thomas Buddenbrook",
            "query": "SELECT ?answer WHERE { wd:Q42324799 wdt:P1441 ?X . ?X wdt:P180 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Thomas Buddenbrook present in work ?X . ?X depicts ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Thomas Buddenbrook",
            "choppedEntity": "Q42324799"
        }
    },
    {
        "chopped": {
            "question": "What is the portrayal of the story of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1441 ?X . ?X wdt:P180 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown present in work ?X . ?X depicts ?ans1}"
        },
        "original": {
            "question": "What is the portrayal of the story of Thomas Buddenbrook",
            "query": "SELECT ?answer WHERE { wd:Q42324799 wdt:P1441 ?X . ?X wdt:P180 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Thomas Buddenbrook present in work ?X . ?X depicts ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Thomas Buddenbrook",
            "choppedEntity": "Q42324799"
        }
    },
    {
        "chopped": {
            "question": "Is it true that Kenneth Branagh was nominated for Academy Award for both Best Picture and Academy Award for ",
            "query": "ASK WHERE { wd:Q55294 wdt:P1411 wd:Q102427 . wd:Q55294 wdt:P1411 ?unknown }",
            "NLQuery": "ASK WHERE { Kenneth Branagh nominated for Academy Award for Best Picture . Kenneth Branagh nominated for ?unknown }"
        },
        "original": {
            "question": "Is it true that Kenneth Branagh was nominated for Academy Award for both Best Picture and Academy Award for Best Live Action Short Film",
            "query": "ASK WHERE { wd:Q55294 wdt:P1411 wd:Q102427 . wd:Q55294 wdt:P1411 wd:Q1324407 }",
            "NLQuery": "ASK WHERE { Kenneth Branagh nominated for Academy Award for Best Picture . Kenneth Branagh nominated for Academy Award for Best Live Action Short Film }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Best Live Action Short Film",
            "choppedEntity": "Q1324407"
        }
    },
    {
        "chopped": {
            "question": "Which is designed by ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P287 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown designed by ?ans1}"
        },
        "original": {
            "question": "Which is designed by Dragon Quest",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q615908 wdt:P287 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Dragon Quest designed by ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Dragon Quest",
            "choppedEntity": "Q615908"
        }
    },
    {
        "chopped": {
            "question": "How many basin countries are in ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P205 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown basin country ?obj }"
        },
        "original": {
            "question": "How many basin countries are in the Arctic Ocean",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q788 wdt:P205 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Arctic Ocean basin country ?obj }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Arctic Ocean",
            "choppedEntity": "Q788"
        }
    },
    {
        "chopped": {
            "question": "Who died in Bartolomeo Scappi which borders ",
            "query": "SELECT ?ans1 WHERE { wd:Q683189 wdt:P20 ?ans1 . ?ans1 wdt:P47 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Bartolomeo Scappi place of death ?ans1 . ?ans1 shares border with ?unknown}"
        },
        "original": {
            "question": "Who died in Bartolomeo Scappi which borders Gallicano nel Lazio",
            "query": "SELECT ?answer WHERE { wd:Q683189 wdt:P20 ?answer . ?answer wdt:P47 wd:Q242661}",
            "NLQuery": "SELECT ?answer WHERE { Bartolomeo Scappi place of death ?answer . ?answer shares border with Gallicano nel Lazio}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Gallicano nel Lazio",
            "choppedEntity": "Q242661"
        }
    },
    {
        "chopped": {
            "question": "Who passed on in Bartolomeo Scappi which borders ",
            "query": "SELECT ?ans1 WHERE { wd:Q683189 wdt:P20 ?ans1 . ?ans1 wdt:P47 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Bartolomeo Scappi place of death ?ans1 . ?ans1 shares border with ?unknown}"
        },
        "original": {
            "question": "Who passed on in Bartolomeo Scappi which borders Gallicano nel Lazio",
            "query": "SELECT ?answer WHERE { wd:Q683189 wdt:P20 ?answer . ?answer wdt:P47 wd:Q242661}",
            "NLQuery": "SELECT ?answer WHERE { Bartolomeo Scappi place of death ?answer . ?answer shares border with Gallicano nel Lazio}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Gallicano nel Lazio",
            "choppedEntity": "Q242661"
        }
    },
    {
        "chopped": {
            "question": "Who is the member of sports team of the team ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P54 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj member of sports team ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who is the member of sports team of the team Boston Celtics",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P54 wd:Q131371 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj member of sports team Boston Celtics . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Boston Celtics",
            "choppedEntity": "Q131371"
        }
    },
    {
        "chopped": {
            "question": "Who is the godparent of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1290 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown godparent ?ans1}"
        },
        "original": {
            "question": "Who is the godparent of Fran\u00e7ois F\u00e9nelon",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q310002 wdt:P1290 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Fran\u00e7ois F\u00e9nelon godparent ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Fran\u00e7ois F\u00e9nelon",
            "choppedEntity": "Q310002"
        }
    },
    {
        "chopped": {
            "question": "I want to know at what took part of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1344 ?X . ?X wdt:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown participant in ?X . ?X point in time ?ans1}"
        },
        "original": {
            "question": "I want to know at what took part of Ralf Schumann",
            "query": "SELECT ?answer WHERE { wd:Q553279 wdt:P1344 ?X . ?X wdt:P585 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Ralf Schumann participant in ?X . ?X point in time ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ralf Schumann",
            "choppedEntity": "Q553279"
        }
    },
    {
        "chopped": {
            "question": "What is the work done by David MCCullough that won him ",
            "query": "SELECT ?ans1 WHERE { wd:Q374610 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P1686 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { David McCullough award received ?s . ?s award received ?unknown . ?s for work ?ans1}"
        },
        "original": {
            "question": "What is the work done by David MCCullough that won him the Pulitzer Prize for Biography or Autobiography",
            "query": "SELECT ?value WHERE { wd:Q374610 p:P166 ?s . ?s ps:P166 wd:Q285117 . ?s pq:P1686 ?value}",
            "NLQuery": "SELECT ?value WHERE { David McCullough award received ?s . ?s award received Pulitzer Prize for Biography or Autobiography . ?s for work ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Pulitzer Prize for Biography or Autobiography",
            "choppedEntity": "Q285117"
        }
    },
    {
        "chopped": {
            "question": "Name a movie featuring ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P161 ?unknown . ?sbj wdt:P31 wd:Q11424 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj cast member ?unknown . ?sbj instance of film } "
        },
        "original": {
            "question": "Name a movie featuring Paul Rudd",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P161 wd:Q276525 . ?sbj wdt:P31 wd:Q11424 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj cast member Paul Rudd . ?sbj instance of film } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Paul Rudd",
            "choppedEntity": "Q276525"
        }
    },
    {
        "chopped": {
            "question": "Title a motion picture including ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P161 ?unknown . ?sbj wdt:P31 wd:Q11424 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj cast member ?unknown . ?sbj instance of film } "
        },
        "original": {
            "question": "Title a motion picture including Paul Rudd",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P161 wd:Q276525 . ?sbj wdt:P31 wd:Q11424 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj cast member Paul Rudd . ?sbj instance of film } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Paul Rudd",
            "choppedEntity": "Q276525"
        }
    },
    {
        "chopped": {
            "question": "What is the number of military branches for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P241 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown military branch ?obj }"
        },
        "original": {
            "question": "What is the number of military branches for James Stewart",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q102462 wdt:P241 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { James Stewart military branch ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "James Stewart",
            "choppedEntity": "Q102462"
        }
    },
    {
        "chopped": {
            "question": "What is Ruby in ",
            "query": "SELECT ?ans1 WHERE { wd:Q161053 p:P2078 ?s . ?s ps:P2078 ?ans1 . ?s pq:P407 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Ruby user manual URL ?s . ?s user manual URL ?ans1 . ?s language of work or name ?unknown }"
        },
        "original": {
            "question": "What is Ruby in English",
            "query": "SELECT ?obj WHERE { wd:Q161053 p:P2078 ?s . ?s ps:P2078 ?obj . ?s pq:P407 wd:Q1860 }",
            "NLQuery": "SELECT ?obj WHERE { Ruby user manual URL ?s . ?s user manual URL ?obj . ?s language of work or name English }"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "English",
            "choppedEntity": "Q1860"
        }
    },
    {
        "chopped": {
            "question": "How can Ruby be in ",
            "query": "SELECT ?ans1 WHERE { wd:Q161053 p:P2078 ?s . ?s ps:P2078 ?ans1 . ?s pq:P407 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Ruby user manual URL ?s . ?s user manual URL ?ans1 . ?s language of work or name ?unknown }"
        },
        "original": {
            "question": "How can Ruby be in English",
            "query": "SELECT ?obj WHERE { wd:Q161053 p:P2078 ?s . ?s ps:P2078 ?obj . ?s pq:P407 wd:Q1860 }",
            "NLQuery": "SELECT ?obj WHERE { Ruby user manual URL ?s . ?s user manual URL ?obj . ?s language of work or name English }"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "English",
            "choppedEntity": "Q1860"
        }
    },
    {
        "chopped": {
            "question": "What character did actor Richard Williams perform the voice of in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P725 ?s . ?s ps:P725 wd:Q1999598 . ?s pq:P453 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown voice actor ?s . ?s voice actor Richard Williams . ?s character role ?ans1}"
        },
        "original": {
            "question": "What character did actor Richard Williams perform the voice of in Who Framed Roger Rabbit",
            "query": "SELECT ?value WHERE { wd:Q379873 p:P725 ?s . ?s ps:P725 wd:Q1999598 . ?s pq:P453 ?value}",
            "NLQuery": "SELECT ?value WHERE { Who Framed Roger Rabbit voice actor ?s . ?s voice actor Richard Williams . ?s character role ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Who Framed Roger Rabbit",
            "choppedEntity": "Q379873"
        }
    },
    {
        "chopped": {
            "question": "Is the county seat of Canton of Lourdes-Ouest in the town of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P131 ?ans1 . ?ans1 wdt:P1376 wd:Q1725992}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in the administrative territorial entity ?ans1 . ?ans1 capital of canton of Lourdes-Ouest}"
        },
        "original": {
            "question": "Is the county seat of Canton of Lourdes-Ouest in the town of Sanctuary of Our Lady Lourdes",
            "query": "SELECT ?answer WHERE { wd:Q7709620 wdt:P131 ?answer . ?answer wdt:P1376 wd:Q1725992}",
            "NLQuery": "SELECT ?answer WHERE { Sanctuary of Our Lady of Lourdes located in the administrative territorial entity ?answer . ?answer capital of canton of Lourdes-Ouest}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Sanctuary of Our Lady Lourdes",
            "choppedEntity": "Q7709620"
        }
    },
    {
        "chopped": {
            "question": "When did Frederick Winslow Taylor start attending ",
            "query": "SELECT ?ans1 WHERE { wd:Q203906 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Frederick Winslow Taylor educated at ?s . ?s educated at ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Frederick Winslow Taylor start attending Phillips Exeter Academy",
            "query": "SELECT ?value WHERE { wd:Q203906 p:P69 ?s . ?s ps:P69 wd:Q1426464 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Frederick Winslow Taylor educated at ?s . ?s educated at Phillips Exeter Academy . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Phillips Exeter Academy",
            "choppedEntity": "Q1426464"
        }
    },
    {
        "chopped": {
            "question": "Was James's Cook's last name spelled Cook or ",
            "query": "SELECT ?ans1 WHERE { wd:Q7324 wdt:P734 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { James Cook family name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "Was James's Cook's last name spelled Cook or Cooke",
            "query": "SELECT ?answer WHERE { wd:Q7324 wdt:P734 ?answer . ?answer wdt:P460 wd:Q658676}",
            "NLQuery": "SELECT ?answer WHERE { James Cook family name ?answer . ?answer said to be the same as Cooke}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Cooke",
            "choppedEntity": "Q658676"
        }
    },
    {
        "chopped": {
            "question": "Was James's Cook's final title spelled Cook or ",
            "query": "SELECT ?ans1 WHERE { wd:Q7324 wdt:P734 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { James Cook family name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "Was James's Cook's final title spelled Cook or Cooke",
            "query": "SELECT ?answer WHERE { wd:Q7324 wdt:P734 ?answer . ?answer wdt:P460 wd:Q658676}",
            "NLQuery": "SELECT ?answer WHERE { James Cook family name ?answer . ?answer said to be the same as Cooke}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Cooke",
            "choppedEntity": "Q658676"
        }
    },
    {
        "chopped": {
            "question": "What degree did William Vickrey received at ",
            "query": "SELECT ?ans1 WHERE { wd:Q295673 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P512 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { William Vickrey educated at ?s . ?s educated at ?unknown . ?s academic degree ?ans1}"
        },
        "original": {
            "question": "What degree did William Vickrey received at Yale University",
            "query": "SELECT ?value WHERE { wd:Q295673 p:P69 ?s . ?s ps:P69 wd:Q49112 . ?s pq:P512 ?value}",
            "NLQuery": "SELECT ?value WHERE { William Vickrey educated at ?s . ?s educated at Yale University . ?s academic degree ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Yale University",
            "choppedEntity": "Q49112"
        }
    },
    {
        "chopped": {
            "question": "What did William Vickrey graduate for at ",
            "query": "SELECT ?ans1 WHERE { wd:Q295673 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P512 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { William Vickrey educated at ?s . ?s educated at ?unknown . ?s academic degree ?ans1}"
        },
        "original": {
            "question": "What did William Vickrey graduate for at Yale University",
            "query": "SELECT ?value WHERE { wd:Q295673 p:P69 ?s . ?s ps:P69 wd:Q49112 . ?s pq:P512 ?value}",
            "NLQuery": "SELECT ?value WHERE { William Vickrey educated at ?s . ?s educated at Yale University . ?s academic degree ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Yale University",
            "choppedEntity": "Q49112"
        }
    },
    {
        "chopped": {
            "question": "What is the notation and parent astronomical body of the ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P913 ?ans1 . ?unknown wdt:P397 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown notation ?ans1 . ?unknown parent astronomical body ?ans2 }"
        },
        "original": {
            "question": "What is the notation and parent astronomical body of the Sun",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q525 wdt:P913 ?ans_1 . wd:Q525 wdt:P397 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Sun notation ?ans_1 . Sun parent astronomical body ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Sun",
            "choppedEntity": "Q525"
        }
    },
    {
        "chopped": {
            "question": "When was George C. Scott nominated for Tony Award for ",
            "query": "SELECT ?ans1 WHERE { wd:Q182450 p:P1411 ?s . ?s ps:P1411 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { George C. Scott nominated for ?s . ?s nominated for ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was George C. Scott nominated for Tony Award for Best Actor in a Play",
            "query": "SELECT ?value WHERE { wd:Q182450 p:P1411 ?s . ?s ps:P1411 wd:Q1445521 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { George C. Scott nominated for ?s . ?s nominated for Tony Award for Best Actor in a Play . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Best Actor in a Play",
            "choppedEntity": "Q1445521"
        }
    },
    {
        "chopped": {
            "question": "What parts of Australia have the time zone ",
            "query": "SELECT ?ans1 WHERE { wd:Q3960 p:P421 ?s . ?s ps:P421 ?unknown . ?s pq:P518 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Australia located in time zone ?s . ?s located in time zone ?unknown . ?s applies to part ?ans1}"
        },
        "original": {
            "question": "What parts of Australia have the time zone UTC+09:30",
            "query": "SELECT ?value WHERE { wd:Q3960 p:P421 ?s . ?s ps:P421 wd:Q7048 . ?s pq:P518 ?value}",
            "NLQuery": "SELECT ?value WHERE { Australia located in time zone ?s . ?s located in time zone UTC+09:30 . ?s applies to part ?value}"
        },
        "meta": {
            "entityTagNER": "TIME",
            "choppedText": "UTC+09:30",
            "choppedEntity": "Q7048"
        }
    },
    {
        "chopped": {
            "question": "List the time zones of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P421 ?s . ?s ps:P421 wd:Q7048 . ?s pq:P518 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in time zone ?s . ?s located in time zone UTC+09:30 . ?s applies to part ?ans1}"
        },
        "original": {
            "question": "List the time zones of Australia",
            "query": "SELECT ?value WHERE { wd:Q3960 p:P421 ?s . ?s ps:P421 wd:Q7048 . ?s pq:P518 ?value}",
            "NLQuery": "SELECT ?value WHERE { Australia located in time zone ?s . ?s located in time zone UTC+09:30 . ?s applies to part ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Australia",
            "choppedEntity": "Q3960"
        }
    },
    {
        "chopped": {
            "question": "What degree did Yasser Arafat receive from ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q34211 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P812 ?ans1 . ?s pq:P512 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Yasser Arafat educated at ?s . ?s educated at ?unknown . ?s academic major ?ans1 . ?s academic degree ?ans2 }"
        },
        "original": {
            "question": "What degree did Yasser Arafat receive from Cairo University",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q34211 p:P69 ?s . ?s ps:P69 wd:Q194445 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Yasser Arafat educated at ?s . ?s educated at Cairo University . ?s academic major ?value1 . ?s academic degree ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Cairo University",
            "choppedEntity": "Q194445"
        }
    },
    {
        "chopped": {
            "question": "What was the degree that Yasser Arafat received from ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q34211 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P812 ?ans1 . ?s pq:P512 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Yasser Arafat educated at ?s . ?s educated at ?unknown . ?s academic major ?ans1 . ?s academic degree ?ans2 }"
        },
        "original": {
            "question": "What was the degree that Yasser Arafat received from Cairo University",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q34211 p:P69 ?s . ?s ps:P69 wd:Q194445 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Yasser Arafat educated at ?s . ?s educated at Cairo University . ?s academic major ?value1 . ?s academic degree ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Cairo University",
            "choppedEntity": "Q194445"
        }
    },
    {
        "chopped": {
            "question": "Which is the signature for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P109 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown signature ?ans1}"
        },
        "original": {
            "question": "Which is the signature for Andrei Mironov",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q469550 wdt:P109 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Andrei Mironov signature ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Andrei Mironov",
            "choppedEntity": "Q469550"
        }
    },
    {
        "chopped": {
            "question": "When was Polly Samson the spouse of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P26 ?s . ?s ps:P26 wd:Q281036 . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown spouse ?s . ?s spouse Polly Samson . ?s start time ?ans1}"
        },
        "original": {
            "question": "When was Polly Samson the spouse of David Gilmour",
            "query": "SELECT ?value WHERE { wd:Q178517 p:P26 ?s . ?s ps:P26 wd:Q281036 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { David Gilmour spouse ?s . ?s spouse Polly Samson . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "David Gilmour",
            "choppedEntity": "Q178517"
        }
    },
    {
        "chopped": {
            "question": "Which is the Olympic Committee of Serbia athlete ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4547 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Serbian Olympic Committee athlete ID ?ans1}"
        },
        "original": {
            "question": "Which is the Olympic Committee of Serbia athlete ID for Novak Djokovic",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q5812 wdt:P4547 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Novak Djokovic Serbian Olympic Committee athlete ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Novak Djokovic",
            "choppedEntity": "Q5812"
        }
    },
    {
        "chopped": {
            "question": "Which is the Songkick venue ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3977 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Songkick venue ID ?ans1}"
        },
        "original": {
            "question": "Which is the Songkick venue ID for Louvre Museum",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q19675 wdt:P3977 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Louvre Museum Songkick venue ID ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Louvre Museum",
            "choppedEntity": "Q19675"
        }
    },
    {
        "chopped": {
            "question": "What award did Sean Connery receive for ",
            "query": "SELECT ?ans1 WHERE { wd:Q4573 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Sean Connery award received ?s . ?s award received ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "What award did Sean Connery receive for The Rock",
            "query": "SELECT ?obj WHERE { wd:Q4573 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q216720 }",
            "NLQuery": "SELECT ?obj WHERE { Sean Connery award received ?s . ?s award received ?obj . ?s for work The Rock }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Rock",
            "choppedEntity": "Q216720"
        }
    },
    {
        "chopped": {
            "question": "What Marama Teururai brother is married to ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P26 ?ans1 . ?ans1 wdt:P3373 wd:Q3287438}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown spouse ?ans1 . ?ans1 sibling Marama Teururai}"
        },
        "original": {
            "question": "What Marama Teururai brother is married to P\u014dmare V",
            "query": "SELECT ?answer WHERE { wd:Q879812 wdt:P26 ?answer . ?answer wdt:P3373 wd:Q3287438}",
            "NLQuery": "SELECT ?answer WHERE { P\u014dmare V spouse ?answer . ?answer sibling Marama Teururai}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "P\u014dmare V",
            "choppedEntity": "Q879812"
        }
    },
    {
        "chopped": {
            "question": "What newspaper is found in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P495 ?unknown . ?sbj wdt:P31 wd:Q11032 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country of origin ?unknown . ?sbj instance of newspaper } "
        },
        "original": {
            "question": "What newspaper is found in the Russian Empire",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P495 wd:Q34266 . ?sbj wdt:P31 wd:Q11032 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country of origin Russian Empire . ?sbj instance of newspaper } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Russian Empire",
            "choppedEntity": "Q34266"
        }
    },
    {
        "chopped": {
            "question": "What daily paper is found within ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P495 ?unknown . ?sbj wdt:P31 wd:Q11032 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country of origin ?unknown . ?sbj instance of newspaper } "
        },
        "original": {
            "question": "What daily paper is found within the Russian Empire",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P495 wd:Q34266 . ?sbj wdt:P31 wd:Q11032 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country of origin Russian Empire . ?sbj instance of newspaper } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Russian Empire",
            "choppedEntity": "Q34266"
        }
    },
    {
        "chopped": {
            "question": "What is similar to the current look of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P460 ?ans1 . ?unknown wdt:P1441 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown said to be the same as ?ans1 . ?unknown present in work ?ans2 }"
        },
        "original": {
            "question": "What is similar to the current look of Lex Luthor",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q694790 wdt:P460 ?ans_1 . wd:Q694790 wdt:P1441 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Lex Luthor said to be the same as ?ans_1 . Lex Luthor present in work ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Lex Luthor",
            "choppedEntity": "Q694790"
        }
    },
    {
        "chopped": {
            "question": "Who is the person that was the professional or sport partner of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1327 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj partner in business or sport ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who is the person that was the professional or sport partner of Paul McCartney",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1327 wd:Q2599 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj partner in business or sport Paul McCartney . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Paul McCartney",
            "choppedEntity": "Q2599"
        }
    },
    {
        "chopped": {
            "question": "Which is the WWE.com superstar ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2857 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown WWE.com superstar ID ?ans1}"
        },
        "original": {
            "question": "Which is the WWE.com superstar ID of Arnold Schwarzenegger",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q2685 wdt:P2857 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Arnold Schwarzenegger WWE.com superstar ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Arnold Schwarzenegger",
            "choppedEntity": "Q2685"
        }
    },
    {
        "chopped": {
            "question": "What subject did Trey Parker major in at ",
            "query": "SELECT ?ans1 WHERE { wd:Q44414 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P812 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Trey Parker educated at ?s . ?s educated at ?unknown . ?s academic major ?ans1}"
        },
        "original": {
            "question": "What subject did Trey Parker major in at University of Colorado Boulder",
            "query": "SELECT ?value WHERE { wd:Q44414 p:P69 ?s . ?s ps:P69 wd:Q736674 . ?s pq:P812 ?value}",
            "NLQuery": "SELECT ?value WHERE { Trey Parker educated at ?s . ?s educated at University of Colorado Boulder . ?s academic major ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "University of Colorado Boulder",
            "choppedEntity": "Q736674"
        }
    },
    {
        "chopped": {
            "question": "Is Abu Dhabi a twinned administrative body with Madrid and ",
            "query": "ASK WHERE { wd:Q1519 wdt:P190 wd:Q2807 . wd:Q1519 wdt:P190 ?unknown }",
            "NLQuery": "ASK WHERE { Abu Dhabi twinned administrative body Madrid . Abu Dhabi twinned administrative body ?unknown }"
        },
        "original": {
            "question": "Is Abu Dhabi a twinned administrative body with Madrid and Brisbane",
            "query": "ASK WHERE { wd:Q1519 wdt:P190 wd:Q2807 . wd:Q1519 wdt:P190 wd:Q34932 }",
            "NLQuery": "ASK WHERE { Abu Dhabi twinned administrative body Madrid . Abu Dhabi twinned administrative body Brisbane }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Brisbane",
            "choppedEntity": "Q34932"
        }
    },
    {
        "chopped": {
            "question": "Are Madrid and Brisbane twinned administrative bodies with ",
            "query": "ASK WHERE { ?unknown wdt:P190 wd:Q2807 . ?unknown wdt:P190 wd:Q34932 }",
            "NLQuery": "ASK WHERE { ?unknown twinned administrative body Madrid . ?unknown twinned administrative body Brisbane }"
        },
        "original": {
            "question": "Are Madrid and Brisbane twinned administrative bodies with Abu Dhabi",
            "query": "ASK WHERE { wd:Q1519 wdt:P190 wd:Q2807 . wd:Q1519 wdt:P190 wd:Q34932 }",
            "NLQuery": "ASK WHERE { Abu Dhabi twinned administrative body Madrid . Abu Dhabi twinned administrative body Brisbane }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Abu Dhabi",
            "choppedEntity": "Q1519"
        }
    },
    {
        "chopped": {
            "question": "What was Stephen Hillenburg's field of work when he was employed by ",
            "query": "SELECT ?ans1 WHERE { wd:Q318750 p:P108 ?s . ?s ps:P108 ?unknown . ?s pq:P101 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Stephen Hillenburg employer ?s . ?s employer ?unknown . ?s field of work ?ans1}"
        },
        "original": {
            "question": "What was Stephen Hillenburg's field of work when he was employed by the Ocean Institute",
            "query": "SELECT ?value WHERE { wd:Q318750 p:P108 ?s . ?s ps:P108 wd:Q3348664 . ?s pq:P101 ?value}",
            "NLQuery": "SELECT ?value WHERE { Stephen Hillenburg employer ?s . ?s employer Ocean Institute . ?s field of work ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Ocean Institute",
            "choppedEntity": "Q3348664"
        }
    },
    {
        "chopped": {
            "question": "What job did Stephen Hillenburg have when he worked at ",
            "query": "SELECT ?ans1 WHERE { wd:Q318750 p:P108 ?s . ?s ps:P108 ?unknown . ?s pq:P101 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Stephen Hillenburg employer ?s . ?s employer ?unknown . ?s field of work ?ans1}"
        },
        "original": {
            "question": "What job did Stephen Hillenburg have when he worked at the Ocean Institute",
            "query": "SELECT ?value WHERE { wd:Q318750 p:P108 ?s . ?s ps:P108 wd:Q3348664 . ?s pq:P101 ?value}",
            "NLQuery": "SELECT ?value WHERE { Stephen Hillenburg employer ?s . ?s employer Ocean Institute . ?s field of work ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Ocean Institute",
            "choppedEntity": "Q3348664"
        }
    },
    {
        "chopped": {
            "question": "How much is measured by the quantity of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P111 ?X . ?X wdt:P1880 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown measured physical quantity ?X . ?X measurement scale ?ans1}"
        },
        "original": {
            "question": "How much is measured by the quantity of a tonne",
            "query": "SELECT ?answer WHERE { wd:Q191118 wdt:P111 ?X . ?X wdt:P1880 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { tonne measured physical quantity ?X . ?X measurement scale ?answer}"
        },
        "meta": {
            "entityTagNER": "QUANTITY",
            "choppedText": "a tonne",
            "choppedEntity": "Q191118"
        }
    },
    {
        "chopped": {
            "question": "How much is measured by the amount of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P111 ?X . ?X wdt:P1880 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown measured physical quantity ?X . ?X measurement scale ?ans1}"
        },
        "original": {
            "question": "How much is measured by the amount of a tonne",
            "query": "SELECT ?answer WHERE { wd:Q191118 wdt:P111 ?X . ?X wdt:P1880 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { tonne measured physical quantity ?X . ?X measurement scale ?answer}"
        },
        "meta": {
            "entityTagNER": "QUANTITY",
            "choppedText": "a tonne",
            "choppedEntity": "Q191118"
        }
    },
    {
        "chopped": {
            "question": "Who are the representatives from ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P1268 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub represents ?unknown }"
        },
        "original": {
            "question": "Who are the representatives from Slovenia",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P1268 wd:Q215 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub represents Slovenia }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Slovenia",
            "choppedEntity": "Q215"
        }
    },
    {
        "chopped": {
            "question": "Which private not-for-profit educational institution employs ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P108 ?obj . ?obj wdt:P31 wd:Q23002054 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown employer ?obj . ?obj instance of private not-for-profit educational institution } "
        },
        "original": {
            "question": "Which private not-for-profit educational institution employs Linus Pauling",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q48983 wdt:P108 ?obj . ?obj wdt:P31 wd:Q23002054 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Linus Pauling employer ?obj . ?obj instance of private not-for-profit educational institution } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Linus Pauling",
            "choppedEntity": "Q48983"
        }
    },
    {
        "chopped": {
            "question": "Which is the Glottolog code for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1394 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Glottolog code ?ans1}"
        },
        "original": {
            "question": "Which is the Glottolog code for Vietnamese",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q9199 wdt:P1394 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Vietnamese Glottolog code ?answer}"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Vietnamese",
            "choppedEntity": "Q9199"
        }
    },
    {
        "chopped": {
            "question": "What is the legislative body for the city of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1001 ?unknown . ?sbj wdt:P31 wd:Q3154693 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj applies to jurisdiction ?unknown . ?sbj instance of city council } "
        },
        "original": {
            "question": "What is the legislative body for the city of Bucharest",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1001 wd:Q19660 . ?sbj wdt:P31 wd:Q3154693 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj applies to jurisdiction Bucharest . ?sbj instance of city council } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Bucharest",
            "choppedEntity": "Q19660"
        }
    },
    {
        "chopped": {
            "question": "What is the administrative body for the city of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1001 ?unknown . ?sbj wdt:P31 wd:Q3154693 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj applies to jurisdiction ?unknown . ?sbj instance of city council } "
        },
        "original": {
            "question": "What is the administrative body for the city of Bucharest",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1001 wd:Q19660 . ?sbj wdt:P31 wd:Q3154693 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj applies to jurisdiction Bucharest . ?sbj instance of city council } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Bucharest",
            "choppedEntity": "Q19660"
        }
    },
    {
        "chopped": {
            "question": "Who received the Directors Guild of America Award for Outstanding Directing in a Comedy Series for work on ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 wd:Q5280670 . ?s pq:P1346 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received Directors Guild of America Award for Outstanding Directing \u2013 Comedy Series . ?s winner ?ans1}"
        },
        "original": {
            "question": "Who received the Directors Guild of America Award for Outstanding Directing in a Comedy Series for work on All in the Family",
            "query": "SELECT ?value WHERE { wd:Q1048856 p:P166 ?s . ?s ps:P166 wd:Q5280670 . ?s pq:P1346 ?value}",
            "NLQuery": "SELECT ?value WHERE { All in the Family award received ?s . ?s award received Directors Guild of America Award for Outstanding Directing \u2013 Comedy Series . ?s winner ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "All in the Family",
            "choppedEntity": "Q1048856"
        }
    },
    {
        "chopped": {
            "question": "Which is the main building contractor of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P193 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 main building contractor ?unknown}"
        },
        "original": {
            "question": "Which is the main building contractor of Suleiman the Magnificent",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P193 wd:Q8474}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer main building contractor Suleiman the Magnificent}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Suleiman the Magnificent",
            "choppedEntity": "Q8474"
        }
    },
    {
        "chopped": {
            "question": "What is the name of the watercourse with the hightest length whose country is ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q355304 . ?ans1 wdt:P2043 ?obj . ?ans1 wdt:P17 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of watercourse . ?ans1 length ?obj . ?ans1 country ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the name of the watercourse with the hightest length whose country is lithuania",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q355304 . ?ent wdt:P2043 ?obj . ?ent wdt:P17 wd:Q37 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of watercourse . ?ent length ?obj . ?ent country Lithuania } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "lithuania",
            "choppedEntity": "Q37"
        }
    },
    {
        "chopped": {
            "question": "Which is the SIPCA code for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3580 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown SIPCA code ?ans1}"
        },
        "original": {
            "question": "Which is the SIPCA code for Basilica of Our Lady of the Pillar",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q810684 wdt:P3580 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Basilica of Our Lady of the Pillar SIPCA code ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Basilica of Our Lady of the Pillar",
            "choppedEntity": "Q810684"
        }
    },
    {
        "chopped": {
            "question": "What is the country of origin of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1532 ?obj . ?obj wdt:P31 wd:Q6256 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown country for sport ?obj . ?obj instance of country } "
        },
        "original": {
            "question": "What is the country of origin of George Weah",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q173139 wdt:P1532 ?obj . ?obj wdt:P31 wd:Q6256 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { George Weah country for sport ?obj . ?obj instance of country } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "George Weah",
            "choppedEntity": "Q173139"
        }
    },
    {
        "chopped": {
            "question": "What is the office of the head of the organization and the seat of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P2388 ?ans1 . ?unknown wdt:P159 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown office held by head of the organization ?ans1 . ?unknown headquarters location ?ans2 }"
        },
        "original": {
            "question": "What is the office of the head of the organization and the seat of the Commonwealth of Nations",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q7785 wdt:P2388 ?ans_1 . wd:Q7785 wdt:P159 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Commonwealth of Nations office held by head of the organization ?ans_1 . Commonwealth of Nations headquarters location ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Commonwealth of Nations",
            "choppedEntity": "Q7785"
        }
    },
    {
        "chopped": {
            "question": "Who is the president of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P2388 ?ans1 . ?unknown wdt:P159 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown office held by head of the organization ?ans1 . ?unknown headquarters location ?ans2 }"
        },
        "original": {
            "question": "Who is the president of the Commonwealth of Nations",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q7785 wdt:P2388 ?ans_1 . wd:Q7785 wdt:P159 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Commonwealth of Nations office held by head of the organization ?ans_1 . Commonwealth of Nations headquarters location ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Commonwealth of Nations",
            "choppedEntity": "Q7785"
        }
    },
    {
        "chopped": {
            "question": "Who is the composer for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P86 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 composer ?unknown}"
        },
        "original": {
            "question": "Who is the composer for Jerry Goldsmith",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P86 wd:Q235077}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer composer Jerry Goldsmith}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jerry Goldsmith",
            "choppedEntity": "Q235077"
        }
    },
    {
        "chopped": {
            "question": "What is the Patrimonio Inmueble de Andaluc\u00eda ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3318 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Patrimonio Inmueble de Andaluc\u00eda ID ?ans1}"
        },
        "original": {
            "question": "What is the Patrimonio Inmueble de Andaluc\u00eda ID for Alhambra",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q47476 wdt:P3318 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Alhambra Patrimonio Inmueble de Andaluc\u00eda ID ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Alhambra",
            "choppedEntity": "Q47476"
        }
    },
    {
        "chopped": {
            "question": "Which is the ICAA rating for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3306 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown ICAA rating ?ans1}"
        },
        "original": {
            "question": "Which is the ICAA rating for Brokeback Mountain",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q160618 wdt:P3306 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Brokeback Mountain ICAA rating ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Brokeback Mountain",
            "choppedEntity": "Q160618"
        }
    },
    {
        "chopped": {
            "question": "Which is the Theaterlexikon der Schweiz online ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1362 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Theaterlexikon der Schweiz ID ?ans1}"
        },
        "original": {
            "question": "Which is the Theaterlexikon der Schweiz online ID for Antichrist",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q174546 wdt:P1362 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Antichrist Theaterlexikon der Schweiz ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Antichrist",
            "choppedEntity": "Q174546"
        }
    },
    {
        "chopped": {
            "question": "When was Isaac stern completed his education at ",
            "query": "SELECT ?ans1 WHERE { wd:Q311317 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Isaac Stern educated at ?s . ?s educated at ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When was Isaac stern completed his education at San Francisco conservatory of Music",
            "query": "SELECT ?value WHERE { wd:Q311317 p:P69 ?s . ?s ps:P69 wd:Q2034815 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Isaac Stern educated at ?s . ?s educated at San Francisco Conservatory of Music . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "San Francisco conservatory of Music",
            "choppedEntity": "Q2034815"
        }
    },
    {
        "chopped": {
            "question": "What is the birth place of James Lind, which has the partner city of ",
            "query": "SELECT ?ans1 WHERE { wd:Q709525 wdt:P19 ?ans1 . ?ans1 wdt:P190 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { James Lind place of birth ?ans1 . ?ans1 place of birth0 ?unknown}"
        },
        "original": {
            "question": "What is the birth place of James Lind, which has the partner city of Aalborg",
            "query": "SELECT ?answer WHERE { wd:Q709525 wdt:P19 ?answer . ?answer wdt:P190 wd:Q25410}",
            "NLQuery": "SELECT ?answer WHERE { James Lind place of birth ?answer . ?answer place of birth0 Aalborg}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Aalborg",
            "choppedEntity": "Q25410"
        }
    },
    {
        "chopped": {
            "question": "What is the start location of James Lind, which has the companion city of ",
            "query": "SELECT ?ans1 WHERE { wd:Q709525 wdt:P19 ?ans1 . ?ans1 wdt:P190 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { James Lind place of birth ?ans1 . ?ans1 place of birth0 ?unknown}"
        },
        "original": {
            "question": "What is the start location of James Lind, which has the companion city of Aalborg",
            "query": "SELECT ?answer WHERE { wd:Q709525 wdt:P19 ?answer . ?answer wdt:P190 wd:Q25410}",
            "NLQuery": "SELECT ?answer WHERE { James Lind place of birth ?answer . ?answer place of birth0 Aalborg}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Aalborg",
            "choppedEntity": "Q25410"
        }
    },
    {
        "chopped": {
            "question": "What country is next to ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P27 ?X . ?X wdt:P47 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country of citizenship ?X . ?X shares border with ?ans1}"
        },
        "original": {
            "question": "What country is next to Tim Conway",
            "query": "SELECT ?answer WHERE { wd:Q1304952 wdt:P27 ?X . ?X wdt:P47 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Tim Conway country of citizenship ?X . ?X shares border with ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Tim Conway",
            "choppedEntity": "Q1304952"
        }
    },
    {
        "chopped": {
            "question": "What nation is another to ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P27 ?X . ?X wdt:P47 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country of citizenship ?X . ?X shares border with ?ans1}"
        },
        "original": {
            "question": "What nation is another to Tim Conway",
            "query": "SELECT ?answer WHERE { wd:Q1304952 wdt:P27 ?X . ?X wdt:P47 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Tim Conway country of citizenship ?X . ?X shares border with ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Tim Conway",
            "choppedEntity": "Q1304952"
        }
    },
    {
        "chopped": {
            "question": "Where is the birth city of Guo Qiru located in ",
            "query": "SELECT ?ans1 WHERE { wd:Q14624977 wdt:P19 ?ans1 . ?ans1 wdt:P131 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Guo Qiru place of birth ?ans1 . ?ans1 located in the administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "Where is the birth city of Guo Qiru located in the People's Republic of China",
            "query": "SELECT ?answer WHERE { wd:Q14624977 wdt:P19 ?answer . ?answer wdt:P131 wd:Q148}",
            "NLQuery": "SELECT ?answer WHERE { Guo Qiru place of birth ?answer . ?answer located in the administrative territorial entity People's Republic of China}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the People's Republic of China",
            "choppedEntity": "Q148"
        }
    },
    {
        "chopped": {
            "question": "Where is the beginning town of Guo Qiru positioned in ",
            "query": "SELECT ?ans1 WHERE { wd:Q14624977 wdt:P19 ?ans1 . ?ans1 wdt:P131 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Guo Qiru place of birth ?ans1 . ?ans1 located in the administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "Where is the beginning town of Guo Qiru positioned in the People's Republic of China",
            "query": "SELECT ?answer WHERE { wd:Q14624977 wdt:P19 ?answer . ?answer wdt:P131 wd:Q148}",
            "NLQuery": "SELECT ?answer WHERE { Guo Qiru place of birth ?answer . ?answer located in the administrative territorial entity People's Republic of China}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the People's Republic of China",
            "choppedEntity": "Q148"
        }
    },
    {
        "chopped": {
            "question": "when did new york shares border with ",
            "query": "SELECT ?ans1 WHERE { wd:Q1384 p:P47 ?s . ?s ps:P47 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { New York shares border with ?s . ?s shares border with ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "when did new york shares border with ontario",
            "query": "SELECT ?value WHERE { wd:Q1384 p:P47 ?s . ?s ps:P47 wd:Q1904 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { New York shares border with ?s . ?s shares border with Ontario . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "ontario",
            "choppedEntity": "Q1904"
        }
    },
    {
        "chopped": {
            "question": "What is the ideology of party member ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P102 ?X . ?X wdt:P1142 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown member of political party ?X . ?X political ideology ?ans1}"
        },
        "original": {
            "question": "What is the ideology of party member Nigel Farage",
            "query": "SELECT ?answer WHERE { wd:Q318471 wdt:P102 ?X . ?X wdt:P1142 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Nigel Farage member of political party ?X . ?X political ideology ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Nigel Farage",
            "choppedEntity": "Q318471"
        }
    },
    {
        "chopped": {
            "question": "for what position was Jimmy Carter replaced in ",
            "query": "SELECT ?ans1 WHERE { wd:Q23685 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1365 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Jimmy Carter position held ?s . ?s position held ?ans1 . ?s replaces ?unknown }"
        },
        "original": {
            "question": "for what position was Jimmy Carter replaced in Lester Maddox",
            "query": "SELECT ?obj WHERE { wd:Q23685 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q885384 }",
            "NLQuery": "SELECT ?obj WHERE { Jimmy Carter position held ?s . ?s position held ?obj . ?s replaces Lester Maddox }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Lester Maddox",
            "choppedEntity": "Q885384"
        }
    },
    {
        "chopped": {
            "question": "for what position was Jimmy Carter supplanted in ",
            "query": "SELECT ?ans1 WHERE { wd:Q23685 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1365 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Jimmy Carter position held ?s . ?s position held ?ans1 . ?s replaces ?unknown }"
        },
        "original": {
            "question": "for what position was Jimmy Carter supplanted in Lester Maddox",
            "query": "SELECT ?obj WHERE { wd:Q23685 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q885384 }",
            "NLQuery": "SELECT ?obj WHERE { Jimmy Carter position held ?s . ?s position held ?obj . ?s replaces Lester Maddox }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Lester Maddox",
            "choppedEntity": "Q885384"
        }
    },
    {
        "chopped": {
            "question": "Which SkyscraperPage building ID is of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1699 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown SkyscraperPage building ID ?ans1}"
        },
        "original": {
            "question": "Which SkyscraperPage building ID is of CN Tower",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q134883 wdt:P1699 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { CN Tower SkyscraperPage building ID ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "CN Tower",
            "choppedEntity": "Q134883"
        }
    },
    {
        "chopped": {
            "question": "What is the capital of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1376 ?unknown . ?sbj wdt:P31 wd:Q5119 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj capital of ?unknown . ?sbj instance of capital } "
        },
        "original": {
            "question": "What is the capital of the Austrian Empire",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1376 wd:Q131964 . ?sbj wdt:P31 wd:Q5119 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj capital of Austrian Empire . ?sbj instance of capital } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Austrian Empire",
            "choppedEntity": "Q131964"
        }
    },
    {
        "chopped": {
            "question": "What are the sex and the occupation of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P21 ?ans1 . ?unknown wdt:P106 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown sex or gender ?ans1 . ?unknown occupation ?ans2 }"
        },
        "original": {
            "question": "What are the sex and the occupation of Merlin",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q188044 wdt:P21 ?ans_1 . wd:Q188044 wdt:P106 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Merlin sex or gender ?ans_1 . Merlin occupation ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Merlin",
            "choppedEntity": "Q188044"
        }
    },
    {
        "chopped": {
            "question": "Is 19 the marriageable age in ",
            "query": "ASK WHERE { ?unknown wdt:P3000 ?obj FILTER(?obj = 19) } ",
            "NLQuery": "ASK WHERE { ?unknown marriageable age ?obj FILTER(?obj = 19) } "
        },
        "original": {
            "question": "Is 19 the marriageable age in Algeria",
            "query": "ASK WHERE { wd:Q262 wdt:P3000 ?obj FILTER(?obj = 19) } ",
            "NLQuery": "ASK WHERE { Algeria marriageable age ?obj FILTER(?obj = 19) } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Algeria",
            "choppedEntity": "Q262"
        }
    },
    {
        "chopped": {
            "question": "Which is the Alexa rank of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1661 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Alexa rank ?ans1}"
        },
        "original": {
            "question": "Which is the Alexa rank of The Age",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q631893 wdt:P1661 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { The Age Alexa rank ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "The Age",
            "choppedEntity": "Q631893"
        }
    },
    {
        "chopped": {
            "question": "In what town is the work location of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P937 ?X . ?X wdt:P131 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown work location ?X . ?X located in the administrative territorial entity ?ans1}"
        },
        "original": {
            "question": "In what town is the work location of Franz Wiedemann",
            "query": "SELECT ?answer WHERE { wd:Q1449452 wdt:P937 ?X . ?X wdt:P131 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Franz Wiedemann work location ?X . ?X located in the administrative territorial entity ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Franz Wiedemann",
            "choppedEntity": "Q1449452"
        }
    },
    {
        "chopped": {
            "question": "In what town is the work area of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P937 ?X . ?X wdt:P131 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown work location ?X . ?X located in the administrative territorial entity ?ans1}"
        },
        "original": {
            "question": "In what town is the work area of Franz Wiedemann",
            "query": "SELECT ?answer WHERE { wd:Q1449452 wdt:P937 ?X . ?X wdt:P131 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Franz Wiedemann work location ?X . ?X located in the administrative territorial entity ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Franz Wiedemann",
            "choppedEntity": "Q1449452"
        }
    },
    {
        "chopped": {
            "question": "How many lakes or rivers are by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P469 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub lakes on river ?unknown }"
        },
        "original": {
            "question": "How many lakes or rivers are by Lake Tanganyika",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P469 wd:Q5511 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub lakes on river Lake Tanganyika }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Lake Tanganyika",
            "choppedEntity": "Q5511"
        }
    },
    {
        "chopped": {
            "question": "Which is the number of lakes or rivers by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P469 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub lakes on river ?unknown }"
        },
        "original": {
            "question": "Which is the number of lakes or rivers by Lake Tanganyika",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P469 wd:Q5511 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub lakes on river Lake Tanganyika }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Lake Tanganyika",
            "choppedEntity": "Q5511"
        }
    },
    {
        "chopped": {
            "question": "When did the  postal service start using ID for ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1813 ?s . ?s ps:P1813 ?x FILTER(contains(?x,'ID')) . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown short name ?s . ?s short name ?x FILTER(contains(?x,'ID')) . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did the  postal service start using ID for Idaho",
            "query": "SELECT ?value WHERE { wd:Q1221 p:P1813 ?s . ?s ps:P1813 ?x FILTER(contains(?x,'ID')) . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Idaho short name ?s . ?s short name ?x FILTER(contains(?x,'ID')) . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Idaho",
            "choppedEntity": "Q1221"
        }
    },
    {
        "chopped": {
            "question": "What is the RKDlibrary ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4989 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown RKDlibrary ID ?ans1}"
        },
        "original": {
            "question": "What is the RKDlibrary ID for Henry Peach Robinson",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q574144 wdt:P4989 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Henry Peach Robinson RKDlibrary ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Henry Peach Robinson",
            "choppedEntity": "Q574144"
        }
    },
    {
        "chopped": {
            "question": "Which is the enterprise that operates ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P137 ?obj . ?obj wdt:P31 wd:Q6881511 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown operator ?obj . ?obj instance of enterprise } "
        },
        "original": {
            "question": "Which is the enterprise that operates CBS",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q43380 wdt:P137 ?obj . ?obj wdt:P31 wd:Q6881511 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { CBS operator ?obj . ?obj instance of enterprise } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "CBS",
            "choppedEntity": "Q43380"
        }
    },
    {
        "chopped": {
            "question": "Which is the undertaking that works ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P137 ?obj . ?obj wdt:P31 wd:Q6881511 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown operator ?obj . ?obj instance of enterprise } "
        },
        "original": {
            "question": "Which is the undertaking that works CBS",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q43380 wdt:P137 ?obj . ?obj wdt:P31 wd:Q6881511 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { CBS operator ?obj . ?obj instance of enterprise } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "CBS",
            "choppedEntity": "Q43380"
        }
    },
    {
        "chopped": {
            "question": "What is the number of connecting services to ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P1192 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub connecting service ?unknown }"
        },
        "original": {
            "question": "What is the number of connecting services to AVE",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P1192 wd:Q433671 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub connecting service AVE }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "AVE",
            "choppedEntity": "Q433671"
        }
    },
    {
        "chopped": {
            "question": "What did James Cagney win in the 15th ",
            "query": "SELECT ?ans1 WHERE { wd:Q94041 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { James Cagney award received ?s . ?s award received ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "What did James Cagney win in the 15th Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q94041 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q508528 }",
            "NLQuery": "SELECT ?obj WHERE { James Cagney award received ?s . ?s award received ?obj . ?s statement is subject of 15th Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q508528"
        }
    },
    {
        "chopped": {
            "question": "how many filming locations are in ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P915 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub filming location ?unknown }"
        },
        "original": {
            "question": "how many filming locations are in scotland",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P915 wd:Q22 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub filming location Scotland }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "scotland",
            "choppedEntity": "Q22"
        }
    },
    {
        "chopped": {
            "question": "What 1911 award was received by ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1911')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),'1911')) }"
        },
        "original": {
            "question": "What 1911 award was received by Jos\u00e9 Echegaray",
            "query": "SELECT ?obj WHERE { wd:Q127349 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1911')) }",
            "NLQuery": "SELECT ?obj WHERE { Jos\u00e9 Echegaray award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1911')) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jos\u00e9 Echegaray",
            "choppedEntity": "Q127349"
        }
    },
    {
        "chopped": {
            "question": "What is the name of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P674 ?obj . ?obj wdt:P31 wd:Q15632617 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown characters ?obj . ?obj instance of fictional human } "
        },
        "original": {
            "question": "What is the name of the Snow White",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q11831 wdt:P674 ?obj . ?obj wdt:P31 wd:Q15632617 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Snow White characters ?obj . ?obj instance of fictional human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "the Snow White",
            "choppedEntity": "Q11831"
        }
    },
    {
        "chopped": {
            "question": "What is the domain name for the nationality of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P27 ?X . ?X wdt:P78 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country of citizenship ?X . ?X top-level Internet domain ?ans1}"
        },
        "original": {
            "question": "What is the domain name for the nationality of Paulino Alc\u00e1ntara",
            "query": "SELECT ?answer WHERE { wd:Q277365 wdt:P27 ?X . ?X wdt:P78 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Paulino Alc\u00e1ntara country of citizenship ?X . ?X top-level Internet domain ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Paulino Alc\u00e1ntara",
            "choppedEntity": "Q277365"
        }
    },
    {
        "chopped": {
            "question": "What is the space title for the nationality of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P27 ?X . ?X wdt:P78 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country of citizenship ?X . ?X top-level Internet domain ?ans1}"
        },
        "original": {
            "question": "What is the space title for the nationality of Paulino Alc\u00e1ntara",
            "query": "SELECT ?answer WHERE { wd:Q277365 wdt:P27 ?X . ?X wdt:P78 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Paulino Alc\u00e1ntara country of citizenship ?X . ?X top-level Internet domain ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Paulino Alc\u00e1ntara",
            "choppedEntity": "Q277365"
        }
    },
    {
        "chopped": {
            "question": "Which is Sina Weibo ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3579 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Sina Weibo user ID ?ans1}"
        },
        "original": {
            "question": "Which is Sina Weibo ID for United Nations",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1065 wdt:P3579 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { United Nations Sina Weibo user ID ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "United Nations",
            "choppedEntity": "Q1065"
        }
    },
    {
        "chopped": {
            "question": "Which was the person as doctoral student of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P185 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown doctoral student ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Which was the person as doctoral student of Galileo Galilei",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q307 wdt:P185 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Galileo Galilei doctoral student ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Galileo Galilei",
            "choppedEntity": "Q307"
        }
    },
    {
        "chopped": {
            "question": "Which was the individual as doctoral understudy of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P185 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown doctoral student ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Which was the individual as doctoral understudy of Galileo Galilei",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q307 wdt:P185 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Galileo Galilei doctoral student ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Galileo Galilei",
            "choppedEntity": "Q307"
        }
    },
    {
        "chopped": {
            "question": "When did Lindsey Vonn end her marriage with ",
            "query": "SELECT ?ans1 WHERE { wd:Q10068 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Lindsey Vonn spouse ?s . ?s spouse ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did Lindsey Vonn end her marriage with Thomas Vonn",
            "query": "SELECT ?value WHERE { wd:Q10068 p:P26 ?s . ?s ps:P26 wd:Q354865 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Lindsey Vonn spouse ?s . ?s spouse Thomas Vonn . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Thomas Vonn",
            "choppedEntity": "Q354865"
        }
    },
    {
        "chopped": {
            "question": "When did Lindsey Vonn divorce ",
            "query": "SELECT ?ans1 WHERE { wd:Q10068 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Lindsey Vonn spouse ?s . ?s spouse ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did Lindsey Vonn divorce Thomas vonn",
            "query": "SELECT ?value WHERE { wd:Q10068 p:P26 ?s . ?s ps:P26 wd:Q354865 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Lindsey Vonn spouse ?s . ?s spouse Thomas Vonn . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Thomas vonn",
            "choppedEntity": "Q354865"
        }
    },
    {
        "chopped": {
            "question": "When was Le Havre in the time zone ",
            "query": "SELECT ?ans1 WHERE { wd:Q42810 p:P421 ?s . ?s ps:P421 ?unknown . ?s pq:P1264 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Le Havre located in time zone ?s . ?s located in time zone ?unknown . ?s valid in period ?ans1}"
        },
        "original": {
            "question": "When was Le Havre in the time zone UTC+01:00",
            "query": "SELECT ?value WHERE { wd:Q42810 p:P421 ?s . ?s ps:P421 wd:Q6655 . ?s pq:P1264 ?value}",
            "NLQuery": "SELECT ?value WHERE { Le Havre located in time zone ?s . ?s located in time zone UTC+01:00 . ?s valid in period ?value}"
        },
        "meta": {
            "entityTagNER": "TIME",
            "choppedText": "UTC+01:00",
            "choppedEntity": "Q6655"
        }
    },
    {
        "chopped": {
            "question": "How many architects worked on the ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P84 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown architect ?obj }"
        },
        "original": {
            "question": "How many architects worked on the Kunskamera",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q1277585 wdt:P84 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Kunstkamera architect ?obj }"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Kunskamera",
            "choppedEntity": "Q1277585"
        }
    },
    {
        "chopped": {
            "question": "What is the number of architects that worked on the ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P84 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown architect ?obj }"
        },
        "original": {
            "question": "What is the number of architects that worked on the Kunskamera",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q1277585 wdt:P84 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Kunstkamera architect ?obj }"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Kunskamera",
            "choppedEntity": "Q1277585"
        }
    },
    {
        "chopped": {
            "question": "In what borough is the capital of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P131 ?X . ?X wdt:P36 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in the administrative territorial entity ?X . ?X capital ?ans1}"
        },
        "original": {
            "question": "In what borough is the capital of Kolhar",
            "query": "SELECT ?answer WHERE { wd:Q6427234 wdt:P131 ?X . ?X wdt:P36 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Kolhar located in the administrative territorial entity ?X . ?X capital ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Kolhar",
            "choppedEntity": "Q6427234"
        }
    },
    {
        "chopped": {
            "question": "Who competed within the fight of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P607 ?X . ?X wdt:P710 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown conflict ?X . ?X participant ?ans1}"
        },
        "original": {
            "question": "Who competed within the fight of Xerxes",
            "query": "SELECT ?answer WHERE { wd:Q18217408 wdt:P607 ?X . ?X wdt:P710 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Xerxes conflict ?X . ?X participant ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Xerxes",
            "choppedEntity": "Q18217408"
        }
    },
    {
        "chopped": {
            "question": "Is it true Ayn_Rand notable work Atlas Shrugged and ",
            "query": "ASK WHERE { wd:Q132524 wdt:P800 wd:Q374098 . wd:Q132524 wdt:P800 ?unknown }",
            "NLQuery": "ASK WHERE { Ayn Rand notable work Atlas Shrugged . Ayn Rand notable work ?unknown }"
        },
        "original": {
            "question": "Is it true Ayn_Rand notable work Atlas Shrugged and Journals of Ayn Rand",
            "query": "ASK WHERE { wd:Q132524 wdt:P800 wd:Q374098 . wd:Q132524 wdt:P800 wd:Q6296278 }",
            "NLQuery": "ASK WHERE { Ayn Rand notable work Atlas Shrugged . Ayn Rand notable work Journals of Ayn Rand }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Journals of Ayn Rand",
            "choppedEntity": "Q6296278"
        }
    },
    {
        "chopped": {
            "question": "Were the Atlas Shrugged and Journals of Ayn Rand the notable works of ",
            "query": "ASK WHERE { ?unknown wdt:P800 wd:Q374098 . ?unknown wdt:P800 wd:Q6296278 }",
            "NLQuery": "ASK WHERE { ?unknown notable work Atlas Shrugged . ?unknown notable work Journals of Ayn Rand }"
        },
        "original": {
            "question": "Were the Atlas Shrugged and Journals of Ayn Rand the notable works of Ayn Rand",
            "query": "ASK WHERE { wd:Q132524 wdt:P800 wd:Q374098 . wd:Q132524 wdt:P800 wd:Q6296278 }",
            "NLQuery": "ASK WHERE { Ayn Rand notable work Atlas Shrugged . Ayn Rand notable work Journals of Ayn Rand }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ayn Rand",
            "choppedEntity": "Q132524"
        }
    },
    {
        "chopped": {
            "question": "Who is the spin-off voice actor of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P725 ?unknown . ?sbj wdt:P31 wd:Q1186399 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj voice actor ?unknown . ?sbj instance of Spin-off } "
        },
        "original": {
            "question": "Who is the spin-off voice actor of Sasha Grey",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P725 wd:Q2709 . ?sbj wdt:P31 wd:Q1186399 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj voice actor Sasha Grey . ?sbj instance of Spin-off } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Sasha Grey",
            "choppedEntity": "Q2709"
        }
    },
    {
        "chopped": {
            "question": "Who is the spin-off voice performing artist of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P725 ?unknown . ?sbj wdt:P31 wd:Q1186399 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj voice actor ?unknown . ?sbj instance of Spin-off } "
        },
        "original": {
            "question": "Who is the spin-off voice performing artist of Sasha Grey",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P725 wd:Q2709 . ?sbj wdt:P31 wd:Q1186399 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj voice actor Sasha Grey . ?sbj instance of Spin-off } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Sasha Grey",
            "choppedEntity": "Q2709"
        }
    },
    {
        "chopped": {
            "question": "When was Tiger Woods nominated for ",
            "query": "SELECT ?ans1 WHERE { wd:Q10993 p:P1411 ?s . ?s ps:P1411 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Tiger Woods nominated for ?s . ?s nominated for ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was Tiger Woods nominated for a Best Male Golfer Espy Award",
            "query": "SELECT ?value WHERE { wd:Q10993 p:P1411 ?s . ?s ps:P1411 wd:Q4896729 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Tiger Woods nominated for ?s . ?s nominated for Best Male Golfer ESPY Award . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "a Best Male Golfer Espy Award",
            "choppedEntity": "Q4896729"
        }
    },
    {
        "chopped": {
            "question": "On what year Tiger Woods was nominated for ",
            "query": "SELECT ?ans1 WHERE { wd:Q10993 p:P1411 ?s . ?s ps:P1411 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Tiger Woods nominated for ?s . ?s nominated for ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "On what year Tiger Woods was nominated for a Best Male Golfer Espy Award",
            "query": "SELECT ?value WHERE { wd:Q10993 p:P1411 ?s . ?s ps:P1411 wd:Q4896729 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Tiger Woods nominated for ?s . ?s nominated for Best Male Golfer ESPY Award . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "a Best Male Golfer Espy Award",
            "choppedEntity": "Q4896729"
        }
    },
    {
        "chopped": {
            "question": "Who is the author of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P50 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown author ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who is the author of The Bell Jar",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q1213085 wdt:P50 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { The Bell Jar author ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Bell Jar",
            "choppedEntity": "Q1213085"
        }
    },
    {
        "chopped": {
            "question": "what us the protype aircraft model with the lowest wingspan whose series is ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q15126161 . ?ans1 wdt:P2050 ?obj . ?ans1 wdt:P179 ?unknown} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of prototype aircraft model . ?ans1 wingspan ?obj . ?ans1 part of the series ?unknown} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "what us the protype aircraft model with the lowest wingspan whose series is douglas M",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q15126161 . ?ent wdt:P2050 ?obj . ?ent wdt:P179 wd:Q3714634} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of prototype aircraft model . ?ent wingspan ?obj . ?ent part of the series Douglas M} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "douglas M",
            "choppedEntity": "Q3714634"
        }
    },
    {
        "chopped": {
            "question": "How many screenwriters are by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P58 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub screenwriter ?unknown }"
        },
        "original": {
            "question": "How many screenwriters are by Aldous Huxley",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P58 wd:Q81447 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub screenwriter Aldous Huxley }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Aldous Huxley",
            "choppedEntity": "Q81447"
        }
    },
    {
        "chopped": {
            "question": "Which Democratic Republic country was involved in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P793 ?unknown . ?sbj wdt:P31 wd:Q5255892 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj significant event ?unknown . ?sbj instance of democratic republic } "
        },
        "original": {
            "question": "Which Democratic Republic country was involved in the Cuban Missile Crisis",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P793 wd:Q128160 . ?sbj wdt:P31 wd:Q5255892 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj significant event Cuban Missile Crisis . ?sbj instance of democratic republic } "
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the Cuban Missile Crisis",
            "choppedEntity": "Q128160"
        }
    },
    {
        "chopped": {
            "question": "How many attractions are there in ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P1444 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub destination point ?unknown }"
        },
        "original": {
            "question": "How many attractions are there in Grenoble",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P1444 wd:Q1289 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub destination point Grenoble }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Grenoble",
            "choppedEntity": "Q1289"
        }
    },
    {
        "chopped": {
            "question": "What is the number of places of interest to tourists in ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P1444 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub destination point ?unknown }"
        },
        "original": {
            "question": "What is the number of places of interest to tourists in Grenoble",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P1444 wd:Q1289 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub destination point Grenoble }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Grenoble",
            "choppedEntity": "Q1289"
        }
    },
    {
        "chopped": {
            "question": "Was Index of articles related to Aboriginal Canadians country ",
            "query": "ASK WHERE { wd:Q6018798 wdt:P17 ?unknown }",
            "NLQuery": "ASK WHERE { Index of articles related to Aboriginal Canadians country ?unknown }"
        },
        "original": {
            "question": "Was Index of articles related to Aboriginal Canadians country United States of America",
            "query": "ASK WHERE { wd:Q6018798 wdt:P17 wd:Q30 }",
            "NLQuery": "ASK WHERE { Index of articles related to Aboriginal Canadians country United States of America }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "United States of America",
            "choppedEntity": "Q30"
        }
    },
    {
        "chopped": {
            "question": "When did Stanislav Cherchesov start playing for ",
            "query": "SELECT ?ans1 WHERE { wd:Q699557 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Stanislav Cherchesov member of sports team ?s . ?s member of sports team ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Stanislav Cherchesov start playing for FC Lokomotiv Moscow",
            "query": "SELECT ?value WHERE { wd:Q699557 p:P54 ?s . ?s ps:P54 wd:Q29115 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Stanislav Cherchesov member of sports team ?s . ?s member of sports team FC Lokomotiv Moscow . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "FC Lokomotiv Moscow",
            "choppedEntity": "Q29115"
        }
    },
    {
        "chopped": {
            "question": "When did Stanislav Cherchesov join ",
            "query": "SELECT ?ans1 WHERE { wd:Q699557 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Stanislav Cherchesov member of sports team ?s . ?s member of sports team ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Stanislav Cherchesov join FC Lokomotiv Moscow",
            "query": "SELECT ?value WHERE { wd:Q699557 p:P54 ?s . ?s ps:P54 wd:Q29115 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Stanislav Cherchesov member of sports team ?s . ?s member of sports team FC Lokomotiv Moscow . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "FC Lokomotiv Moscow",
            "choppedEntity": "Q29115"
        }
    },
    {
        "chopped": {
            "question": "What is the elCinaema ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3136 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown elCinema person ID ?ans1}"
        },
        "original": {
            "question": "What is the elCinaema ID of Adam Sandler",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q132952 wdt:P3136 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Adam Sandler elCinema person ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Adam Sandler",
            "choppedEntity": "Q132952"
        }
    },
    {
        "chopped": {
            "question": "Is the surname of Hal David the same as ",
            "query": "SELECT ?ans1 WHERE { wd:Q449030 wdt:P734 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Hal David family name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "Is the surname of Hal David the same as D\u00e1vid",
            "query": "SELECT ?answer WHERE { wd:Q449030 wdt:P734 ?answer . ?answer wdt:P460 wd:Q12765083}",
            "NLQuery": "SELECT ?answer WHERE { Hal David family name ?answer . ?answer said to be the same as D\u00e1vid}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "D\u00e1vid",
            "choppedEntity": "Q12765083"
        }
    },
    {
        "chopped": {
            "question": "How many individuals act as editors for the magazine ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P98 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown editor ?obj }"
        },
        "original": {
            "question": "How many individuals act as editors for the magazine Vogue",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q154008 wdt:P98 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Vogue editor ?obj }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Vogue",
            "choppedEntity": "Q154008"
        }
    },
    {
        "chopped": {
            "question": "What is the musical score by Toccata and Fugue in D minor, BMV 565 who is a disciple of ",
            "query": "SELECT ?ans1 WHERE { wd:Q392734 wdt:P86 ?ans1 . ?ans1 wdt:P802 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Toccata and Fugue in D minor, BWV 565 composer ?ans1 . ?ans1 student ?unknown}"
        },
        "original": {
            "question": "What is the musical score by Toccata and Fugue in D minor, BMV 565 who is a disciple of Johanna Fiedrich Agricola",
            "query": "SELECT ?answer WHERE { wd:Q392734 wdt:P86 ?answer . ?answer wdt:P802 wd:Q60965}",
            "NLQuery": "SELECT ?answer WHERE { Toccata and Fugue in D minor, BWV 565 composer ?answer . ?answer student Johann Friedrich Agricola}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Johanna Fiedrich Agricola",
            "choppedEntity": "Q60965"
        }
    },
    {
        "chopped": {
            "question": "In 2015, what was the net income of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P2295 ?s . ?s ps:P2295 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2015')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown net profit ?s . ?s net profit ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),'2015')) }"
        },
        "original": {
            "question": "In 2015, what was the net income of the State Grid Corporation of China",
            "query": "SELECT ?obj WHERE { wd:Q209078 p:P2295 ?s . ?s ps:P2295 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2015')) }",
            "NLQuery": "SELECT ?obj WHERE { State Grid Corporation of China net profit ?s . ?s net profit ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2015')) }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the State Grid Corporation of China",
            "choppedEntity": "Q209078"
        }
    },
    {
        "chopped": {
            "question": "What is the name of the association football club whose head coach is ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P286 ?unknown . ?sbj wdt:P31 wd:Q476028 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj head coach ?unknown . ?sbj instance of association football club } "
        },
        "original": {
            "question": "What is the name of the association football club whose head coach is Clarence Seedorf",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P286 wd:Q484909 . ?sbj wdt:P31 wd:Q476028 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj head coach Clarence Seedorf . ?sbj instance of association football club } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Clarence Seedorf",
            "choppedEntity": "Q484909"
        }
    },
    {
        "chopped": {
            "question": "What is the title of the affiliation football club whose head coach is ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P286 ?unknown . ?sbj wdt:P31 wd:Q476028 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj head coach ?unknown . ?sbj instance of association football club } "
        },
        "original": {
            "question": "What is the title of the affiliation football club whose head coach is Clarence Seedorf",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P286 wd:Q484909 . ?sbj wdt:P31 wd:Q476028 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj head coach Clarence Seedorf . ?sbj instance of association football club } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Clarence Seedorf",
            "choppedEntity": "Q484909"
        }
    },
    {
        "chopped": {
            "question": "Who is the parent of the leader of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P488 ?X . ?X wdt:P25 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown chairperson ?X . ?X mother ?ans1}"
        },
        "original": {
            "question": "Who is the parent of the leader of Communist Party of China",
            "query": "SELECT ?answer WHERE { wd:Q17427 wdt:P488 ?X . ?X wdt:P25 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Communist Party of China chairperson ?X . ?X mother ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Communist Party of China",
            "choppedEntity": "Q17427"
        }
    },
    {
        "chopped": {
            "question": "Who is the parent of the pioneer of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P488 ?X . ?X wdt:P25 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown chairperson ?X . ?X mother ?ans1}"
        },
        "original": {
            "question": "Who is the parent of the pioneer of Communist Party of China",
            "query": "SELECT ?answer WHERE { wd:Q17427 wdt:P488 ?X . ?X wdt:P25 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Communist Party of China chairperson ?X . ?X mother ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Communist Party of China",
            "choppedEntity": "Q17427"
        }
    },
    {
        "chopped": {
            "question": "What business publishes ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P123 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown publisher ?obj . ?obj instance of business } "
        },
        "original": {
            "question": "What business publishes The New York Times",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q9684 wdt:P123 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { The New York Times publisher ?obj . ?obj instance of business } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "The New York Times",
            "choppedEntity": "Q9684"
        }
    },
    {
        "chopped": {
            "question": "What trade distributes ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P123 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown publisher ?obj . ?obj instance of business } "
        },
        "original": {
            "question": "What trade distributes The Unused York Times",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q9684 wdt:P123 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { The New York Times publisher ?obj . ?obj instance of business } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "The Unused York Times",
            "choppedEntity": "Q9684"
        }
    },
    {
        "chopped": {
            "question": "Who was awared star on Hollywood Walk of Fame together with ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 wd:Q17985761 . ?s pq:P1706 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received star on Hollywood Walk of Fame . ?s together with ?ans1}"
        },
        "original": {
            "question": "Who was awared star on Hollywood Walk of Fame together with Joseph Barbera",
            "query": "SELECT ?value WHERE { wd:Q190373 p:P166 ?s . ?s ps:P166 wd:Q17985761 . ?s pq:P1706 ?value}",
            "NLQuery": "SELECT ?value WHERE { Joseph Barbera award received ?s . ?s award received star on Hollywood Walk of Fame . ?s together with ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Joseph Barbera",
            "choppedEntity": "Q190373"
        }
    },
    {
        "chopped": {
            "question": "Who was awarded a star with Joseph Barbera on ",
            "query": "SELECT ?ans1 WHERE { wd:Q190373 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P1706 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Joseph Barbera award received ?s . ?s award received ?unknown . ?s together with ?ans1}"
        },
        "original": {
            "question": "Who was awarded a star with Joseph Barbera on the Hollywood Walk of Fame",
            "query": "SELECT ?value WHERE { wd:Q190373 p:P166 ?s . ?s ps:P166 wd:Q17985761 . ?s pq:P1706 ?value}",
            "NLQuery": "SELECT ?value WHERE { Joseph Barbera award received ?s . ?s award received star on Hollywood Walk of Fame . ?s together with ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Hollywood Walk of Fame",
            "choppedEntity": "Q17985761"
        }
    },
    {
        "chopped": {
            "question": "What is the user account of the author of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P676 ?X . ?X wdt:P553 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown lyrics by ?X . ?X website account on ?ans1}"
        },
        "original": {
            "question": "What is the user account of the author of Gangnam Style",
            "query": "SELECT ?answer WHERE { wd:Q890 wdt:P676 ?X . ?X wdt:P553 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Gangnam Style lyrics by ?X . ?X website account on ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Gangnam Style",
            "choppedEntity": "Q890"
        }
    },
    {
        "chopped": {
            "question": "What is the client account of the creator of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P676 ?X . ?X wdt:P553 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown lyrics by ?X . ?X website account on ?ans1}"
        },
        "original": {
            "question": "What is the client account of the creator of Gangnam Style",
            "query": "SELECT ?answer WHERE { wd:Q890 wdt:P676 ?X . ?X wdt:P553 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Gangnam Style lyrics by ?X . ?X website account on ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Gangnam Style",
            "choppedEntity": "Q890"
        }
    },
    {
        "chopped": {
            "question": "Mention the functionality and the inspirational ingredient of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P941 ?X . ?X wdt:P2868 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown inspired by ?X . ?X subject has role ?ans1}"
        },
        "original": {
            "question": "Mention the functionality and the inspirational ingredient of Link",
            "query": "SELECT ?answer WHERE { wd:Q568553 wdt:P941 ?X . ?X wdt:P2868 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Link inspired by ?X . ?X subject has role ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Link",
            "choppedEntity": "Q568553"
        }
    },
    {
        "chopped": {
            "question": "Which is the number of competition classes for ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P2094 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub competition class ?unknown }"
        },
        "original": {
            "question": "Which is the number of competition classes for the 100 metres",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P2094 wd:Q164761 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub competition class 100 metres }"
        },
        "meta": {
            "entityTagNER": "QUANTITY",
            "choppedText": "the 100 metres",
            "choppedEntity": "Q164761"
        }
    },
    {
        "chopped": {
            "question": "What is the location of birth of Berthe Morisot with a twin city of ",
            "query": "SELECT ?ans1 WHERE { wd:Q105320 wdt:P19 ?ans1 . ?ans1 wdt:P190 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Berthe Morisot place of birth ?ans1 . ?ans1 place of birth0 ?unknown}"
        },
        "original": {
            "question": "What is the location of birth of Berthe Morisot with a twin city of Koszalin",
            "query": "SELECT ?answer WHERE { wd:Q105320 wdt:P19 ?answer . ?answer wdt:P190 wd:Q62868}",
            "NLQuery": "SELECT ?answer WHERE { Berthe Morisot place of birth ?answer . ?answer place of birth0 Koszalin}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Koszalin",
            "choppedEntity": "Q62868"
        }
    },
    {
        "chopped": {
            "question": "What is the area of birth of Berthe Morisot with a twin city of ",
            "query": "SELECT ?ans1 WHERE { wd:Q105320 wdt:P19 ?ans1 . ?ans1 wdt:P190 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Berthe Morisot place of birth ?ans1 . ?ans1 place of birth0 ?unknown}"
        },
        "original": {
            "question": "What is the area of birth of Berthe Morisot with a twin city of Koszalin",
            "query": "SELECT ?answer WHERE { wd:Q105320 wdt:P19 ?answer . ?answer wdt:P190 wd:Q62868}",
            "NLQuery": "SELECT ?answer WHERE { Berthe Morisot place of birth ?answer . ?answer place of birth0 Koszalin}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Koszalin",
            "choppedEntity": "Q62868"
        }
    },
    {
        "chopped": {
            "question": "Which is signatory of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P1891 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 signatory ?unknown}"
        },
        "original": {
            "question": "Which is signatory of Millard Fillmore",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P1891 wd:Q12306}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer signatory Millard Fillmore}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Millard Fillmore",
            "choppedEntity": "Q12306"
        }
    },
    {
        "chopped": {
            "question": "Who is the suspect in conflict with Carl Gustaf and Emil Mannerheim that has lived in ",
            "query": "SELECT ?ans1 WHERE { wd:Q152306 wdt:P607 ?ans1 . ?ans1 wdt:P710 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Carl Gustaf Emil Mannerheim conflict ?ans1 . ?ans1 participant ?unknown}"
        },
        "original": {
            "question": "Who is the suspect in conflict with Carl Gustaf and Emil Mannerheim that has lived in the Soviet Union",
            "query": "SELECT ?answer WHERE { wd:Q152306 wdt:P607 ?answer . ?answer wdt:P710 wd:Q15180}",
            "NLQuery": "SELECT ?answer WHERE { Carl Gustaf Emil Mannerheim conflict ?answer . ?answer participant Soviet Union}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Soviet Union",
            "choppedEntity": "Q15180"
        }
    },
    {
        "chopped": {
            "question": "Who is the suspect in war with Carl Gustaf and Emil Mannerheim that has lived in ",
            "query": "SELECT ?ans1 WHERE { wd:Q152306 wdt:P607 ?ans1 . ?ans1 wdt:P710 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Carl Gustaf Emil Mannerheim conflict ?ans1 . ?ans1 participant ?unknown}"
        },
        "original": {
            "question": "Who is the suspect in war with Carl Gustaf and Emil Mannerheim that has lived in the Soviet Union",
            "query": "SELECT ?answer WHERE { wd:Q152306 wdt:P607 ?answer . ?answer wdt:P710 wd:Q15180}",
            "NLQuery": "SELECT ?answer WHERE { Carl Gustaf Emil Mannerheim conflict ?answer . ?answer participant Soviet Union}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Soviet Union",
            "choppedEntity": "Q15180"
        }
    },
    {
        "chopped": {
            "question": "What state is it that governs ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P6 ?unknown . ?sbj wdt:P31 wd:Q3624078 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj head of government ?unknown . ?sbj instance of sovereign state } "
        },
        "original": {
            "question": "What state is it that governs Moon Jae - in",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P6 wd:Q21001 . ?sbj wdt:P31 wd:Q3624078 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj head of government Moon Jae-in . ?sbj instance of sovereign state } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Moon Jae - in",
            "choppedEntity": "Q21001"
        }
    },
    {
        "chopped": {
            "question": "Which area in East Midlands is the burial place of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P119 ?ans1 . ?ans1 wdt:P131 wd:Q47994}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of burial ?ans1 . ?ans1 located in the administrative territorial entity East Midlands}"
        },
        "original": {
            "question": "Which area in East Midlands is the burial place of Richard Arkwright",
            "query": "SELECT ?answer WHERE { wd:Q294153 wdt:P119 ?answer . ?answer wdt:P131 wd:Q47994}",
            "NLQuery": "SELECT ?answer WHERE { Richard Arkwright place of burial ?answer . ?answer located in the administrative territorial entity East Midlands}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Richard Arkwright",
            "choppedEntity": "Q294153"
        }
    },
    {
        "chopped": {
            "question": "Which region in East Midlands is the burial location of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P119 ?ans1 . ?ans1 wdt:P131 wd:Q47994}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of burial ?ans1 . ?ans1 located in the administrative territorial entity East Midlands}"
        },
        "original": {
            "question": "Which region in East Midlands is the burial location of Richard Arkwright",
            "query": "SELECT ?answer WHERE { wd:Q294153 wdt:P119 ?answer . ?answer wdt:P131 wd:Q47994}",
            "NLQuery": "SELECT ?answer WHERE { Richard Arkwright place of burial ?answer . ?answer located in the administrative territorial entity East Midlands}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Richard Arkwright",
            "choppedEntity": "Q294153"
        }
    },
    {
        "chopped": {
            "question": "What type of patron was ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P1962 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub none ?unknown }"
        },
        "original": {
            "question": "What type of patron was Napoleon",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P1962 wd:Q517 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub none Napoleon }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Napoleon",
            "choppedEntity": "Q517"
        }
    },
    {
        "chopped": {
            "question": "What type of benefactor was ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P1962 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub none ?unknown }"
        },
        "original": {
            "question": "What type of benefactor was Napoleon",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P1962 wd:Q517 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub none Napoleon }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Napoleon",
            "choppedEntity": "Q517"
        }
    },
    {
        "chopped": {
            "question": "When did William Shakespeare live in ",
            "query": "SELECT ?ans1 WHERE { wd:Q692 p:P551 ?s . ?s ps:P551 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { William Shakespeare residence ?s . ?s residence ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did William Shakespeare live in Stratford-upon-Avon",
            "query": "SELECT ?value WHERE { wd:Q692 p:P551 ?s . ?s ps:P551 wd:Q189288 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { William Shakespeare residence ?s . ?s residence Stratford-upon-Avon . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Stratford-upon-Avon",
            "choppedEntity": "Q189288"
        }
    },
    {
        "chopped": {
            "question": "tell the time period of William Shakespeare lived in ",
            "query": "SELECT ?ans1 WHERE { wd:Q692 p:P551 ?s . ?s ps:P551 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { William Shakespeare residence ?s . ?s residence ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "tell the time period of William Shakespeare lived in Stratford-upon-Avon",
            "query": "SELECT ?value WHERE { wd:Q692 p:P551 ?s . ?s ps:P551 wd:Q189288 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { William Shakespeare residence ?s . ?s residence Stratford-upon-Avon . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Stratford-upon-Avon",
            "choppedEntity": "Q189288"
        }
    },
    {
        "chopped": {
            "question": "Who is the sister of daddy ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P22 ?X . ?X wdt:P3373 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown father ?X . ?X sibling ?ans1}"
        },
        "original": {
            "question": "Who is the sister of daddy Abaqa Khan",
            "query": "SELECT ?answer WHERE { wd:Q223239 wdt:P22 ?X . ?X wdt:P3373 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Abaqa Khan father ?X . ?X sibling ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Abaqa Khan",
            "choppedEntity": "Q223239"
        }
    },
    {
        "chopped": {
            "question": "What is an equivalent job as a ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P460 ?obj . ?obj wdt:P31 wd:Q4164871 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown said to be the same as ?obj . ?obj instance of position } "
        },
        "original": {
            "question": "What is an equivalent job as a Sultan",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q43292 wdt:P460 ?obj . ?obj wdt:P31 wd:Q4164871 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { sultan said to be the same as ?obj . ?obj instance of position } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Sultan",
            "choppedEntity": "Q43292"
        }
    },
    {
        "chopped": {
            "question": "When did Gordon S. Clinton start and finish his role as the head of government for ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P6 ?s . ?s ps:P6 wd:Q5585769 . ?s pq:P2031 ?ans1 . ?s pq:P2032 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown head of government ?s . ?s head of government Gordon Stanley Clinton . ?s work period (start) ?ans1 . ?s work period (end) ?ans2 }"
        },
        "original": {
            "question": "When did Gordon S. Clinton start and finish his role as the head of government for Seattle",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q5083 p:P6 ?s . ?s ps:P6 wd:Q5585769 . ?s pq:P2031 ?value1 . ?s pq:P2032 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Seattle head of government ?s . ?s head of government Gordon Stanley Clinton . ?s work period (start) ?value1 . ?s work period (end) ?value2 }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Seattle",
            "choppedEntity": "Q5083"
        }
    },
    {
        "chopped": {
            "question": "What is the telephone numbering plan of the head quarters of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P159 ?X . ?X wdt:P473 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown headquarters location ?X . ?X local dialing code ?ans1}"
        },
        "original": {
            "question": "What is the telephone numbering plan of the head quarters of ABC",
            "query": "SELECT ?answer WHERE { wd:Q287076 wdt:P159 ?X . ?X wdt:P473 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { ABC headquarters location ?X . ?X local dialing code ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "ABC",
            "choppedEntity": "Q287076"
        }
    },
    {
        "chopped": {
            "question": "Which telephone numbering plan is chosen by head quarters of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P159 ?X . ?X wdt:P473 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown headquarters location ?X . ?X local dialing code ?ans1}"
        },
        "original": {
            "question": "Which telephone numbering plan is chosen by head quarters of ABC",
            "query": "SELECT ?answer WHERE { wd:Q287076 wdt:P159 ?X . ?X wdt:P473 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { ABC headquarters location ?X . ?X local dialing code ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "ABC",
            "choppedEntity": "Q287076"
        }
    },
    {
        "chopped": {
            "question": "What is in the territory of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P131 ?X . ?X wdt:P706 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in the administrative territorial entity ?X . ?X located on terrain feature ?ans1}"
        },
        "original": {
            "question": "What is in the territory of Bakhtiarov",
            "query": "SELECT ?answer WHERE { wd:Q32430713 wdt:P131 ?X . ?X wdt:P706 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Bakhtiarov located in the administrative territorial entity ?X . ?X located on terrain feature ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Bakhtiarov",
            "choppedEntity": "Q32430713"
        }
    },
    {
        "chopped": {
            "question": "What is within the domain of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P131 ?X . ?X wdt:P706 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in the administrative territorial entity ?X . ?X located on terrain feature ?ans1}"
        },
        "original": {
            "question": "What is within the domain of Bakhtiarov",
            "query": "SELECT ?answer WHERE { wd:Q32430713 wdt:P131 ?X . ?X wdt:P706 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Bakhtiarov located in the administrative territorial entity ?X . ?X located on terrain feature ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Bakhtiarov",
            "choppedEntity": "Q32430713"
        }
    },
    {
        "chopped": {
            "question": "Which is the SNAC Ark ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3430 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown SNAC Ark ID ?ans1}"
        },
        "original": {
            "question": "Which is the SNAC Ark ID for Ishir\u014d Honda",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q150840 wdt:P3430 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Ishir\u014d Honda SNAC Ark ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ishir\u014d Honda",
            "choppedEntity": "Q150840"
        }
    },
    {
        "chopped": {
            "question": "What's the National Heritage List for England for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P1216 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown National Heritage List for England number ?obj }"
        },
        "original": {
            "question": "What's the National Heritage List for England for Windsor Castle",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q42646 wdt:P1216 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Windsor Castle National Heritage List for England number ?obj }"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Windsor Castle",
            "choppedEntity": "Q42646"
        }
    },
    {
        "chopped": {
            "question": "Which is the date of first performance for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1191 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown date of first performance ?ans1}"
        },
        "original": {
            "question": "Which is the date of first performance for Tannh\u00e4user",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q560619 wdt:P1191 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Tannh\u00e4user date of first performance ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Tannh\u00e4user",
            "choppedEntity": "Q560619"
        }
    },
    {
        "chopped": {
            "question": "What is the LACMA ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4611 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown LACMA ID ?ans1}"
        },
        "original": {
            "question": "What is the LACMA ID for Winslow Homer",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q344838 wdt:P4611 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Winslow Homer LACMA ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Winslow Homer",
            "choppedEntity": "Q344838"
        }
    },
    {
        "chopped": {
            "question": "What diplomatic relations take place in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P840 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown narrative location ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "What diplomatic relations take place in Fahrenheit 451",
            "query": "SELECT ?answer WHERE { wd:Q202009 wdt:P840 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Fahrenheit 451 narrative location ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Fahrenheit 451",
            "choppedEntity": "Q202009"
        }
    },
    {
        "chopped": {
            "question": "Which diplomatic relations take place in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P840 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown narrative location ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "Which diplomatic relations take place in Fahrenheit 451",
            "query": "SELECT ?answer WHERE { wd:Q202009 wdt:P840 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Fahrenheit 451 narrative location ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Fahrenheit 451",
            "choppedEntity": "Q202009"
        }
    },
    {
        "chopped": {
            "question": "What is the ISTAT ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P635 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown ISTAT ID ?ans1}"
        },
        "original": {
            "question": "What is the ISTAT ID of Rimini",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q13369 wdt:P635 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Rimini ISTAT ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Rimini",
            "choppedEntity": "Q13369"
        }
    },
    {
        "chopped": {
            "question": "Which is the notable work as a literature work of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P800 ?obj . ?obj wdt:P31 wd:Q7725634 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown notable work ?obj . ?obj instance of literary work } "
        },
        "original": {
            "question": "Which is the notable work as a literature work of William Blake",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q41513 wdt:P800 ?obj . ?obj wdt:P31 wd:Q7725634 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { William Blake notable work ?obj . ?obj instance of literary work } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "William Blake",
            "choppedEntity": "Q41513"
        }
    },
    {
        "chopped": {
            "question": "Which is the outstanding work as a writing work of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P800 ?obj . ?obj wdt:P31 wd:Q7725634 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown notable work ?obj . ?obj instance of literary work } "
        },
        "original": {
            "question": "Which is the outstanding work as a writing work of William Blake",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q41513 wdt:P800 ?obj . ?obj wdt:P31 wd:Q7725634 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { William Blake notable work ?obj . ?obj instance of literary work } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "William Blake",
            "choppedEntity": "Q41513"
        }
    },
    {
        "chopped": {
            "question": "Which is the BAG residence ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P981 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown BAG residence ID ?ans1}"
        },
        "original": {
            "question": "Which is the BAG residence ID of Groningen",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q749 wdt:P981 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Groningen BAG residence ID ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Groningen",
            "choppedEntity": "Q749"
        }
    },
    {
        "chopped": {
            "question": "Which is separated from ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P807 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 separated from ?unknown}"
        },
        "original": {
            "question": "Which is separated from the Xavier University",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P807 wd:Q1849843}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer separated from Xavier University}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Xavier University",
            "choppedEntity": "Q1849843"
        }
    },
    {
        "chopped": {
            "question": "When did Johannes V Jensen cease to reside in ",
            "query": "SELECT ?ans1 WHERE { wd:Q159552 p:P551 ?s . ?s ps:P551 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Johannes V. Jensen residence ?s . ?s residence ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did Johannes V Jensen cease to reside in Viborg",
            "query": "SELECT ?value WHERE { wd:Q159552 p:P551 ?s . ?s ps:P551 wd:Q21176 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Johannes V. Jensen residence ?s . ?s residence Viborg . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Viborg",
            "choppedEntity": "Q21176"
        }
    },
    {
        "chopped": {
            "question": "On what date did Johannes V Jensen stop residing in ",
            "query": "SELECT ?ans1 WHERE { wd:Q159552 p:P551 ?s . ?s ps:P551 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Johannes V. Jensen residence ?s . ?s residence ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "On what date did Johannes V Jensen stop residing in Viborg",
            "query": "SELECT ?value WHERE { wd:Q159552 p:P551 ?s . ?s ps:P551 wd:Q21176 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Johannes V. Jensen residence ?s . ?s residence Viborg . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Viborg",
            "choppedEntity": "Q21176"
        }
    },
    {
        "chopped": {
            "question": "What was the award given in 1985 to ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1985')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),'1985')) }"
        },
        "original": {
            "question": "What was the award given in 1985 to James D. Watson",
            "query": "SELECT ?obj WHERE { wd:Q83333 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1985')) }",
            "NLQuery": "SELECT ?obj WHERE { James D. Watson award received ?s . ?s award received ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1985')) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "James D. Watson",
            "choppedEntity": "Q83333"
        }
    },
    {
        "chopped": {
            "question": "What is the Wikimedia category for the people associated with ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1792 ?obj . ?obj wdt:P31 wd:Q4167836 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown category of associated people ?obj . ?obj instance of Wikimedia category } "
        },
        "original": {
            "question": "What is the Wikimedia category for the people associated with Calgary",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q36312 wdt:P1792 ?obj . ?obj wdt:P31 wd:Q4167836 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Calgary category of associated people ?obj . ?obj instance of Wikimedia category } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Calgary",
            "choppedEntity": "Q36312"
        }
    },
    {
        "chopped": {
            "question": "In what year was the Princess of Asturias Award for the Arts given to ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 wd:Q3319305 . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received Princess of Asturias Award for the Arts . ?s point in time ?ans1}"
        },
        "original": {
            "question": "In what year was the Princess of Asturias Award for the Arts given to Fernando Fernan Gomez",
            "query": "SELECT ?value WHERE { wd:Q318736 p:P166 ?s . ?s ps:P166 wd:Q3319305 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Fernando Fern\u00e1n G\u00f3mez award received ?s . ?s award received Princess of Asturias Award for the Arts . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Fernando Fernan Gomez",
            "choppedEntity": "Q318736"
        }
    },
    {
        "chopped": {
            "question": "Name a company whose headquarters are located in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P159 ?unknown . ?sbj wdt:P31 wd:Q6881511 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj headquarters location ?unknown . ?sbj instance of enterprise } "
        },
        "original": {
            "question": "Name a company whose headquarters are located in Lyon",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P159 wd:Q456 . ?sbj wdt:P31 wd:Q6881511 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj headquarters location Lyon . ?sbj instance of enterprise } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Lyon",
            "choppedEntity": "Q456"
        }
    },
    {
        "chopped": {
            "question": "Title a company whose base camp are found in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P159 ?unknown . ?sbj wdt:P31 wd:Q6881511 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj headquarters location ?unknown . ?sbj instance of enterprise } "
        },
        "original": {
            "question": "Title a company whose base camp are found in Lyon",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P159 wd:Q456 . ?sbj wdt:P31 wd:Q6881511 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj headquarters location Lyon . ?sbj instance of enterprise } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Lyon",
            "choppedEntity": "Q456"
        }
    },
    {
        "chopped": {
            "question": "Which is the ecclesiastical title that applies to the jurisdiction of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1001 ?unknown . ?sbj wdt:P31 wd:Q11773926 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj applies to jurisdiction ?unknown . ?sbj instance of ecclesiastical occupation } "
        },
        "original": {
            "question": "Which is the ecclesiastical title that applies to the jurisdiction of the Coptic Orthodox Church of Alexandria",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1001 wd:Q198998 . ?sbj wdt:P31 wd:Q11773926 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj applies to jurisdiction Coptic Orthodox Church of Alexandria . ?sbj instance of ecclesiastical occupation } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Coptic Orthodox Church of Alexandria",
            "choppedEntity": "Q198998"
        }
    },
    {
        "chopped": {
            "question": "Which is the religious title that applies to the locale of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1001 ?unknown . ?sbj wdt:P31 wd:Q11773926 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj applies to jurisdiction ?unknown . ?sbj instance of ecclesiastical occupation } "
        },
        "original": {
            "question": "Which is the religious title that applies to the locale of the Coptic Conventional Church of Alexandria",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1001 wd:Q198998 . ?sbj wdt:P31 wd:Q11773926 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj applies to jurisdiction Coptic Orthodox Church of Alexandria . ?sbj instance of ecclesiastical occupation } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Coptic Conventional Church of Alexandria",
            "choppedEntity": "Q198998"
        }
    },
    {
        "chopped": {
            "question": "What is the blood group of the person married to ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P26 ?X . ?X wdt:P1853 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown spouse ?X . ?X blood type ?ans1}"
        },
        "original": {
            "question": "What is the blood group of the person married to Hillary Clinton",
            "query": "SELECT ?answer WHERE { wd:Q6294 wdt:P26 ?X . ?X wdt:P1853 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Hillary Clinton spouse ?X . ?X blood type ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Hillary Clinton",
            "choppedEntity": "Q6294"
        }
    },
    {
        "chopped": {
            "question": "What is the periodical literature with the minimum publication interval such that the language of work or name is ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q1002697 . ?ans1 wdt:P2896 ?obj . ?ans1 wdt:P407 ?unknown} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of periodical . ?ans1 publication interval ?obj . ?ans1 language of work or name ?unknown} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the periodical literature with the minimum publication interval such that the language of work or name is Spanish",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q1002697 . ?ent wdt:P2896 ?obj . ?ent wdt:P407 wd:Q1321} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of periodical . ?ent publication interval ?obj . ?ent language of work or name Spanish} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Spanish",
            "choppedEntity": "Q1321"
        }
    },
    {
        "chopped": {
            "question": "What is the periodical writing with the least distribution interim such that the dialect of work or title is ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q1002697 . ?ans1 wdt:P2896 ?obj . ?ans1 wdt:P407 ?unknown} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of periodical . ?ans1 publication interval ?obj . ?ans1 language of work or name ?unknown} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the periodical writing with the least distribution interim such that the dialect of work or title is Spanish",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q1002697 . ?ent wdt:P2896 ?obj . ?ent wdt:P407 wd:Q1321} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of periodical . ?ent publication interval ?obj . ?ent language of work or name Spanish} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Spanish",
            "choppedEntity": "Q1321"
        }
    },
    {
        "chopped": {
            "question": "Which is the new religious movement for the religion of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P140 ?obj . ?obj wdt:P31 wd:Q477544 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown religion ?obj . ?obj instance of new religious movement } "
        },
        "original": {
            "question": "Which is the new religious movement for the religion of L. Ron Hubbard",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q216896 wdt:P140 ?obj . ?obj wdt:P31 wd:Q477544 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { L. Ron Hubbard religion ?obj . ?obj instance of new religious movement } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "L. Ron Hubbard",
            "choppedEntity": "Q216896"
        }
    },
    {
        "chopped": {
            "question": "Which is the modern devout development for the religion of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P140 ?obj . ?obj wdt:P31 wd:Q477544 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown religion ?obj . ?obj instance of new religious movement } "
        },
        "original": {
            "question": "Which is the modern devout development for the religion of L. Ron Hubbard",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q216896 wdt:P140 ?obj . ?obj wdt:P31 wd:Q477544 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { L. Ron Hubbard religion ?obj . ?obj instance of new religious movement } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "L. Ron Hubbard",
            "choppedEntity": "Q216896"
        }
    },
    {
        "chopped": {
            "question": "What is the track list on Michael Jackson's album ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P658 ?s . ?s ps:P658 ?ans1 . ?s pq:P162 wd:Q2831 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown tracklist ?s . ?s tracklist ?ans1 . ?s producer Michael Jackson }"
        },
        "original": {
            "question": "What is the track list on Michael Jackson's album Thriller",
            "query": "SELECT ?obj WHERE { wd:Q44320 p:P658 ?s . ?s ps:P658 ?obj . ?s pq:P162 wd:Q2831 }",
            "NLQuery": "SELECT ?obj WHERE { Thriller tracklist ?s . ?s tracklist ?obj . ?s producer Michael Jackson }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Thriller",
            "choppedEntity": "Q44320"
        }
    },
    {
        "chopped": {
            "question": "Which is the talent agency that represents ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1268 ?unknown . ?sbj wdt:P31 wd:Q5354754 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj represents ?unknown . ?sbj instance of talent agency } "
        },
        "original": {
            "question": "Which is the talent agency that represents Ronald Reagan",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1268 wd:Q9960 . ?sbj wdt:P31 wd:Q5354754 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj represents Ronald Reagan . ?sbj instance of talent agency } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ronald Reagan",
            "choppedEntity": "Q9960"
        }
    },
    {
        "chopped": {
            "question": "What talent agency represented ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1268 ?unknown . ?sbj wdt:P31 wd:Q5354754 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj represents ?unknown . ?sbj instance of talent agency } "
        },
        "original": {
            "question": "What talent agency represented Ronald Reagan",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1268 wd:Q9960 . ?sbj wdt:P31 wd:Q5354754 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj represents Ronald Reagan . ?sbj instance of talent agency } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ronald Reagan",
            "choppedEntity": "Q9960"
        }
    },
    {
        "chopped": {
            "question": "Name the character role played by Bobby Ewing as a cast memeber of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P161 ?s . ?s ps:P161 ?ans1 . ?s pq:P453 wd:Q2090662 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cast member ?s . ?s cast member ?ans1 . ?s character role Bobby Ewing }"
        },
        "original": {
            "question": "Name the character role played by Bobby Ewing as a cast memeber of Dallas",
            "query": "SELECT ?obj WHERE { wd:Q168708 p:P161 ?s . ?s ps:P161 ?obj . ?s pq:P453 wd:Q2090662 }",
            "NLQuery": "SELECT ?obj WHERE { Dallas cast member ?s . ?s cast member ?obj . ?s character role Bobby Ewing }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Dallas",
            "choppedEntity": "Q168708"
        }
    },
    {
        "chopped": {
            "question": "What is the character role played by Bobby Ewing as a cast memeber of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P161 ?s . ?s ps:P161 ?ans1 . ?s pq:P453 wd:Q2090662 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cast member ?s . ?s cast member ?ans1 . ?s character role Bobby Ewing }"
        },
        "original": {
            "question": "What is the character role played by Bobby Ewing as a cast memeber of Dallas",
            "query": "SELECT ?obj WHERE { wd:Q168708 p:P161 ?s . ?s ps:P161 ?obj . ?s pq:P453 wd:Q2090662 }",
            "NLQuery": "SELECT ?obj WHERE { Dallas cast member ?s . ?s cast member ?obj . ?s character role Bobby Ewing }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Dallas",
            "choppedEntity": "Q168708"
        }
    },
    {
        "chopped": {
            "question": "Which is the literary genre for the edition of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P629 ?obj . ?obj wdt:P31 wd:Q223393 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown edition or translation of ?obj . ?obj instance of literary genre } "
        },
        "original": {
            "question": "Which is the literary genre for the edition of Septuagint",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q29334 wdt:P629 ?obj . ?obj wdt:P31 wd:Q223393 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Septuagint edition or translation of ?obj . ?obj instance of literary genre } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Septuagint",
            "choppedEntity": "Q29334"
        }
    },
    {
        "chopped": {
            "question": "Which city contains the administrative territorial entity of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P150 ?obj . ?obj wdt:P31 wd:Q515 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown contains administrative territorial entity ?obj . ?obj instance of city } "
        },
        "original": {
            "question": "Which city contains the administrative territorial entity of Guangdong",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q15175 wdt:P150 ?obj . ?obj wdt:P31 wd:Q515 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Guangdong contains administrative territorial entity ?obj . ?obj instance of city } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Guangdong",
            "choppedEntity": "Q15175"
        }
    },
    {
        "chopped": {
            "question": "What is the LNH id for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4192 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown LNH player ID ?ans1}"
        },
        "original": {
            "question": "What is the LNH id for Nikola Karabati\u0107",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q157809 wdt:P4192 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Nikola Karabati\u0107 LNH player ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Nikola Karabati\u0107",
            "choppedEntity": "Q157809"
        }
    },
    {
        "chopped": {
            "question": "Which is the National Library of Wales ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2966 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown National Library of Wales Authority ID ?ans1}"
        },
        "original": {
            "question": "Which is the National Library of Wales ID for George Bernard Shaw",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q19185 wdt:P2966 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { George Bernard Shaw National Library of Wales Authority ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "George Bernard Shaw",
            "choppedEntity": "Q19185"
        }
    },
    {
        "chopped": {
            "question": "What was the German Footballer of the Year award given to ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 wd:Q311830 . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received Footballer of the Year . ?s point in time ?ans1}"
        },
        "original": {
            "question": "What was the German Footballer of the Year award given to Lothar Matthaus",
            "query": "SELECT ?value WHERE { wd:Q36386 p:P166 ?s . ?s ps:P166 wd:Q311830 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Lothar Matth\u00e4us award received ?s . ?s award received Footballer of the Year . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Lothar Matthaus",
            "choppedEntity": "Q36386"
        }
    },
    {
        "chopped": {
            "question": "During what time period was ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P2348 ?unknown . ?sbj wdt:P31 wd:Q178561 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj time period ?unknown . ?sbj instance of battle } "
        },
        "original": {
            "question": "During what time period was World War II",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P2348 wd:Q362 . ?sbj wdt:P31 wd:Q178561 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj time period World War II . ?sbj instance of battle } "
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "World War II",
            "choppedEntity": "Q362"
        }
    },
    {
        "chopped": {
            "question": "Which was the time period for ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P2348 ?unknown . ?sbj wdt:P31 wd:Q178561 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj time period ?unknown . ?sbj instance of battle } "
        },
        "original": {
            "question": "Which was the time period for World War II",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P2348 wd:Q362 . ?sbj wdt:P31 wd:Q178561 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj time period World War II . ?sbj instance of battle } "
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "World War II",
            "choppedEntity": "Q362"
        }
    },
    {
        "chopped": {
            "question": "Who is manager of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P664 ?X . ?X wdt:P1037 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown organizer ?X . ?X director / manager ?ans1}"
        },
        "original": {
            "question": "Who is manager of Youth Olympic Games",
            "query": "SELECT ?answer WHERE { wd:Q186196 wdt:P664 ?X . ?X wdt:P1037 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Youth Olympic Games organizer ?X . ?X director / manager ?answer}"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "Youth Olympic Games",
            "choppedEntity": "Q186196"
        }
    },
    {
        "chopped": {
            "question": "Who is chief of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P664 ?X . ?X wdt:P1037 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown organizer ?X . ?X director / manager ?ans1}"
        },
        "original": {
            "question": "Who is chief of Youth Olympic Games",
            "query": "SELECT ?answer WHERE { wd:Q186196 wdt:P664 ?X . ?X wdt:P1037 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Youth Olympic Games organizer ?X . ?X director / manager ?answer}"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "Youth Olympic Games",
            "choppedEntity": "Q186196"
        }
    },
    {
        "chopped": {
            "question": "When was Rafael Leonidas Trujillo buried at ",
            "query": "SELECT ?ans1 WHERE { wd:Q152474 p:P119 ?s . ?s ps:P119 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Rafael Leonidas Trujillo place of burial ?s . ?s place of burial ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When was Rafael Leonidas Trujillo buried at P\u00e8re Lachaise Cemetery",
            "query": "SELECT ?value WHERE { wd:Q152474 p:P119 ?s . ?s ps:P119 wd:Q311 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Rafael Leonidas Trujillo place of burial ?s . ?s place of burial P\u00e8re Lachaise Cemetery . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "P\u00e8re Lachaise Cemetery",
            "choppedEntity": "Q311"
        }
    },
    {
        "chopped": {
            "question": "When was Rafael Leonidas Trujillo covered at ",
            "query": "SELECT ?ans1 WHERE { wd:Q152474 p:P119 ?s . ?s ps:P119 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Rafael Leonidas Trujillo place of burial ?s . ?s place of burial ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When was Rafael Leonidas Trujillo covered at P\u00e8re Lachaise Cemetery",
            "query": "SELECT ?value WHERE { wd:Q152474 p:P119 ?s . ?s ps:P119 wd:Q311 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Rafael Leonidas Trujillo place of burial ?s . ?s place of burial P\u00e8re Lachaise Cemetery . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "P\u00e8re Lachaise Cemetery",
            "choppedEntity": "Q311"
        }
    },
    {
        "chopped": {
            "question": "What is the central bank of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1304 ?obj . ?obj wdt:P31 wd:Q66344 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown central bank ?obj . ?obj instance of central bank } "
        },
        "original": {
            "question": "What is the central bank of Czechoslovakia",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q33946 wdt:P1304 ?obj . ?obj wdt:P31 wd:Q66344 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Czechoslovakia central bank ?obj . ?obj instance of central bank } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Czechoslovakia",
            "choppedEntity": "Q33946"
        }
    },
    {
        "chopped": {
            "question": "What award did Robert Zemeckis receive for his work in ",
            "query": "SELECT ?ans1 WHERE { wd:Q187364 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Robert Zemeckis award received ?s . ?s award received ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "What award did Robert Zemeckis receive for his work in Forrest Gump",
            "query": "SELECT ?obj WHERE { wd:Q187364 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q134773 }",
            "NLQuery": "SELECT ?obj WHERE { Robert Zemeckis award received ?s . ?s award received ?obj . ?s for work Forrest Gump }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Forrest Gump",
            "choppedEntity": "Q134773"
        }
    },
    {
        "chopped": {
            "question": "Robert Zemeckis received which award for his work in ",
            "query": "SELECT ?ans1 WHERE { wd:Q187364 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Robert Zemeckis award received ?s . ?s award received ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "Robert Zemeckis received which award for his work in Forrest Gump",
            "query": "SELECT ?obj WHERE { wd:Q187364 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q134773 }",
            "NLQuery": "SELECT ?obj WHERE { Robert Zemeckis award received ?s . ?s award received ?obj . ?s for work Forrest Gump }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Forrest Gump",
            "choppedEntity": "Q134773"
        }
    },
    {
        "chopped": {
            "question": "What is the British Territory for ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P155 ?obj . ?obj wdt:P31 wd:Q15379753 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown follows ?obj . ?obj instance of British Dependent Territory } "
        },
        "original": {
            "question": "What is the British Territory for Hong Kong",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q8646 wdt:P155 ?obj . ?obj wdt:P31 wd:Q15379753 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Hong Kong follows ?obj . ?obj instance of British Dependent Territory } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Hong Kong",
            "choppedEntity": "Q8646"
        }
    },
    {
        "chopped": {
            "question": "What is the British Region for ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P155 ?obj . ?obj wdt:P31 wd:Q15379753 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown follows ?obj . ?obj instance of British Dependent Territory } "
        },
        "original": {
            "question": "What is the British Region for Hong Kong",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q8646 wdt:P155 ?obj . ?obj wdt:P31 wd:Q15379753 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Hong Kong follows ?obj . ?obj instance of British Dependent Territory } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Hong Kong",
            "choppedEntity": "Q8646"
        }
    },
    {
        "chopped": {
            "question": "What is the history of the people of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P2184 ?ans1 . ?unknown wdt:P1792 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown history of topic ?ans1 . ?unknown category of associated people ?ans2 }"
        },
        "original": {
            "question": "What is the history of the people of Cairo",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q85 wdt:P2184 ?ans_1 . wd:Q85 wdt:P1792 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Cairo history of topic ?ans_1 . Cairo category of associated people ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Cairo",
            "choppedEntity": "Q85"
        }
    },
    {
        "chopped": {
            "question": "What is the Open Secrets Organization I.D. for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4691 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown OpenSecrets organization ID ?ans1}"
        },
        "original": {
            "question": "What is the Open Secrets Organization I.D. for the National Association of Broadcasters",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1759624 wdt:P4691 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { National Association of Broadcasters OpenSecrets organization ID ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the National Association of Broadcasters",
            "choppedEntity": "Q1759624"
        }
    },
    {
        "chopped": {
            "question": "What is the Goratings ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2805 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Goratings ID ?ans1}"
        },
        "original": {
            "question": "What is the Goratings ID for Go Seigen",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q541005 wdt:P2805 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Go Seigen Goratings ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Go Seigen",
            "choppedEntity": "Q541005"
        }
    },
    {
        "chopped": {
            "question": "What bus station is owned by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P127 ?unknown . ?sbj wdt:P31 wd:Q494829 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj owned by ?unknown . ?sbj instance of bus station } "
        },
        "original": {
            "question": "What bus station is owned by Lend-Lease",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P127 wd:Q207637 . ?sbj wdt:P31 wd:Q494829 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj owned by Lend-Lease . ?sbj instance of bus station } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Lend-Lease",
            "choppedEntity": "Q207637"
        }
    },
    {
        "chopped": {
            "question": "Since when was Artie Shaw married to ",
            "query": "SELECT ?ans1 WHERE { wd:Q320065 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Artie Shaw spouse ?s . ?s spouse ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "Since when was Artie Shaw married to Evelyn Keyes",
            "query": "SELECT ?value WHERE { wd:Q320065 p:P26 ?s . ?s ps:P26 wd:Q253328 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Artie Shaw spouse ?s . ?s spouse Evelyn Keyes . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Evelyn Keyes",
            "choppedEntity": "Q253328"
        }
    },
    {
        "chopped": {
            "question": "What was the date Artie Shaw married ",
            "query": "SELECT ?ans1 WHERE { wd:Q320065 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Artie Shaw spouse ?s . ?s spouse ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "What was the date Artie Shaw married Evelyn Keyes",
            "query": "SELECT ?value WHERE { wd:Q320065 p:P26 ?s . ?s ps:P26 wd:Q253328 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Artie Shaw spouse ?s . ?s spouse Evelyn Keyes . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Evelyn Keyes",
            "choppedEntity": "Q253328"
        }
    },
    {
        "chopped": {
            "question": "Is Manitoba's highest point of elevation ",
            "query": "SELECT ?ans1 WHERE { wd:Q1948 p:P610 ?s . ?s ps:P610 ?unknown . ?s pq:P2044 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Manitoba highest point ?s . ?s highest point ?unknown . ?s elevation above sea level ?ans1}"
        },
        "original": {
            "question": "Is Manitoba's highest point of elevation Baldy Mountain",
            "query": "SELECT ?value WHERE { wd:Q1948 p:P610 ?s . ?s ps:P610 wd:Q3321683 . ?s pq:P2044 ?value}",
            "NLQuery": "SELECT ?value WHERE { Manitoba highest point ?s . ?s highest point Baldy Mountain . ?s elevation above sea level ?value}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Baldy Mountain",
            "choppedEntity": "Q3321683"
        }
    },
    {
        "chopped": {
            "question": "Is Baldy Mountain the highest elevation in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P610 ?s . ?s ps:P610 wd:Q3321683 . ?s pq:P2044 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown highest point ?s . ?s highest point Baldy Mountain . ?s elevation above sea level ?ans1}"
        },
        "original": {
            "question": "Is Baldy Mountain the highest elevation in Manitoba",
            "query": "SELECT ?value WHERE { wd:Q1948 p:P610 ?s . ?s ps:P610 wd:Q3321683 . ?s pq:P2044 ?value}",
            "NLQuery": "SELECT ?value WHERE { Manitoba highest point ?s . ?s highest point Baldy Mountain . ?s elevation above sea level ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Manitoba",
            "choppedEntity": "Q1948"
        }
    },
    {
        "chopped": {
            "question": "Emperor of Austria Ferninand I took over what position from ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1365 wd:Q183579 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown position held ?s . ?s position held ?ans1 . ?s replaces Ferdinand I, Emperor of Austria }"
        },
        "original": {
            "question": "Emperor of Austria Ferninand I took over what position from Franz Joseph I",
            "query": "SELECT ?obj WHERE { wd:Q51056 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q183579 }",
            "NLQuery": "SELECT ?obj WHERE { Franz Joseph I of Austria position held ?s . ?s position held ?obj . ?s replaces Ferdinand I, Emperor of Austria }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Franz Joseph I",
            "choppedEntity": "Q51056"
        }
    },
    {
        "chopped": {
            "question": "When did Dominik Ha\u0161ek become a citizen of ",
            "query": "SELECT ?ans1 WHERE { wd:Q312695 p:P27 ?s . ?s ps:P27 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Dominik Ha\u0161ek country of citizenship ?s . ?s country of citizenship ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Dominik Ha\u0161ek become a citizen of Czechoslovakia",
            "query": "SELECT ?value WHERE { wd:Q312695 p:P27 ?s . ?s ps:P27 wd:Q33946 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Dominik Ha\u0161ek country of citizenship ?s . ?s country of citizenship Czechoslovakia . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Czechoslovakia",
            "choppedEntity": "Q33946"
        }
    },
    {
        "chopped": {
            "question": "When was the population 223734 in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'223734.0')) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown population ?s . ?s population ?x FILTER(contains(?x,'223734.0')) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was the population 223734 in French Polynesia",
            "query": "SELECT ?value WHERE { wd:Q30971 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'223734.0')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { French Polynesia population ?s . ?s population ?x FILTER(contains(?x,'223734.0')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "French Polynesia",
            "choppedEntity": "Q30971"
        }
    },
    {
        "chopped": {
            "question": "Is it true that Al-Qaeda had divisions in the territories of Houthis and ",
            "query": "ASK WHERE { wd:Q34490 wdt:P199 wd:Q3042087 . wd:Q34490 wdt:P199 ?unknown }",
            "NLQuery": "ASK WHERE { Al-Qaeda business division Houthis . Al-Qaeda business division ?unknown }"
        },
        "original": {
            "question": "Is it true that Al-Qaeda had divisions in the territories of Houthis and the Islamic Maghreb",
            "query": "ASK WHERE { wd:Q34490 wdt:P199 wd:Q3042087 . wd:Q34490 wdt:P199 wd:Q2635966 }",
            "NLQuery": "ASK WHERE { Al-Qaeda business division Houthis . Al-Qaeda business division al-Qaeda in the Islamic Maghreb }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Islamic Maghreb",
            "choppedEntity": "Q2635966"
        }
    },
    {
        "chopped": {
            "question": "What is the Peakbagger mountain ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3109 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Peakbagger mountain ID ?ans1}"
        },
        "original": {
            "question": "What is the Peakbagger mountain ID of Mont Blanc",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q583 wdt:P3109 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Mont Blanc Peakbagger mountain ID ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Mont Blanc",
            "choppedEntity": "Q583"
        }
    },
    {
        "chopped": {
            "question": "Who is the manager/director of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1037 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown director / manager ?ans1}"
        },
        "original": {
            "question": "Who is the manager/director of Schutzstaffel",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q44687 wdt:P1037 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Schutzstaffel director / manager ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Schutzstaffel",
            "choppedEntity": "Q44687"
        }
    },
    {
        "chopped": {
            "question": "What was Morgan Freeman nominated for in the 32nd ",
            "query": "SELECT ?ans1 WHERE { wd:Q48337 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Morgan Freeman nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "What was Morgan Freeman nominated for in the 32nd Tony Awards",
            "query": "SELECT ?obj WHERE { wd:Q48337 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q4635113 }",
            "NLQuery": "SELECT ?obj WHERE { Morgan Freeman nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 32nd Tony Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Tony Awards",
            "choppedEntity": "Q4635113"
        }
    },
    {
        "chopped": {
            "question": "Name a book written by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P50 ?unknown . ?sbj wdt:P31 wd:Q571 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj author ?unknown . ?sbj instance of book } "
        },
        "original": {
            "question": "Name a book written by Rachel Carson",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P50 wd:Q100948 . ?sbj wdt:P31 wd:Q571 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj author Rachel Carson . ?sbj instance of book } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Rachel Carson",
            "choppedEntity": "Q100948"
        }
    },
    {
        "chopped": {
            "question": "Name a book composed by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P50 ?unknown . ?sbj wdt:P31 wd:Q571 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj author ?unknown . ?sbj instance of book } "
        },
        "original": {
            "question": "Name a book composed by Rachel Carson",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P50 wd:Q100948 . ?sbj wdt:P31 wd:Q571 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj author Rachel Carson . ?sbj instance of book } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Rachel Carson",
            "choppedEntity": "Q100948"
        }
    },
    {
        "chopped": {
            "question": "Who are the indigenous people of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P2341 ?obj . ?obj wdt:P31 wd:Q2472587 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown indigenous to ?obj . ?obj instance of people } "
        },
        "original": {
            "question": "Who are the indigenous people of Russia",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q7737 wdt:P2341 ?obj . ?obj wdt:P31 wd:Q2472587 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Russian indigenous to ?obj . ?obj instance of people } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Russia",
            "choppedEntity": "Q7737"
        }
    },
    {
        "chopped": {
            "question": "Who are the inborn individuals of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P2341 ?obj . ?obj wdt:P31 wd:Q2472587 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown indigenous to ?obj . ?obj instance of people } "
        },
        "original": {
            "question": "Who are the inborn individuals of Russia",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q7737 wdt:P2341 ?obj . ?obj wdt:P31 wd:Q2472587 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Russian indigenous to ?obj . ?obj instance of people } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Russia",
            "choppedEntity": "Q7737"
        }
    },
    {
        "chopped": {
            "question": "Which is the currency for the country of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P17 ?unknown . ?sbj wdt:P31 wd:Q8142 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country ?unknown . ?sbj instance of currency } "
        },
        "original": {
            "question": "Which is the currency for the country of Biafra",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P17 wd:Q178469 . ?sbj wdt:P31 wd:Q8142 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country Biafra . ?sbj instance of currency } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Biafra",
            "choppedEntity": "Q178469"
        }
    },
    {
        "chopped": {
            "question": "what currency is established ofr the country of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P17 ?unknown . ?sbj wdt:P31 wd:Q8142 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country ?unknown . ?sbj instance of currency } "
        },
        "original": {
            "question": "what currency is established ofr the country of biafra",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P17 wd:Q178469 . ?sbj wdt:P31 wd:Q8142 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country Biafra . ?sbj instance of currency } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "biafra",
            "choppedEntity": "Q178469"
        }
    },
    {
        "chopped": {
            "question": "What is the end time for Muttiah Muralitharan, a member of the sports team, ",
            "query": "SELECT ?ans1 WHERE { wd:Q379709 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Muttiah Muralitharan member of sports team ?s . ?s member of sports team ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "What is the end time for Muttiah Muralitharan, a member of the sports team, Kent County Cricket Club",
            "query": "SELECT ?value WHERE { wd:Q379709 p:P54 ?s . ?s ps:P54 wd:Q3195284 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Muttiah Muralitharan member of sports team ?s . ?s member of sports team Kent County Cricket Club . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Kent County Cricket Club",
            "choppedEntity": "Q3195284"
        }
    },
    {
        "chopped": {
            "question": "Which is MycoBank taxon name ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P962 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown MycoBank taxon name ID ?ans1}"
        },
        "original": {
            "question": "Which is MycoBank taxon name ID of Oomycetes",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q223597 wdt:P962 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Oomycetes MycoBank taxon name ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Oomycetes",
            "choppedEntity": "Q223597"
        }
    },
    {
        "chopped": {
            "question": "On what date did F-16 Fighting Falcon end to operate in ",
            "query": "SELECT ?ans1 WHERE { wd:Q100026 p:P137 ?s . ?s ps:P137 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { F-16 Fighting Falcon operator ?s . ?s operator ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "On what date did F-16 Fighting Falcon end to operate in Italian Air Force",
            "query": "SELECT ?value WHERE { wd:Q100026 p:P137 ?s . ?s ps:P137 wd:Q381576 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { F-16 Fighting Falcon operator ?s . ?s operator Italian Air Force . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Italian Air Force",
            "choppedEntity": "Q381576"
        }
    },
    {
        "chopped": {
            "question": "What happens in rural cities of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P131 ?X . ?X wdt:P150 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in the administrative territorial entity ?X . ?X contains administrative territorial entity ?ans1}"
        },
        "original": {
            "question": "What happens in rural cities of Zhongshi Korean International School",
            "query": "SELECT ?answer WHERE { wd:Q12609605 wdt:P131 ?X . ?X wdt:P150 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Zhongshi Korean International School located in the administrative territorial entity ?X . ?X contains administrative territorial entity ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Zhongshi Korean International School",
            "choppedEntity": "Q12609605"
        }
    },
    {
        "chopped": {
            "question": "Which is the takeoff and landing capability of Airbus ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1956 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown takeoff and landing capability ?ans1}"
        },
        "original": {
            "question": "Which is the takeoff and landing capability of Airbus A380",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q5830 wdt:P1956 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { A380 takeoff and landing capability ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "A380",
            "choppedEntity": "Q5830"
        }
    },
    {
        "chopped": {
            "question": "Did L. Ron Hubbard own a place of residence in Montana and ",
            "query": "ASK WHERE { wd:Q216896 wdt:P551 wd:Q1212 . wd:Q216896 wdt:P551 ?unknown }",
            "NLQuery": "ASK WHERE { L. Ron Hubbard residence Montana . L. Ron Hubbard residence ?unknown }"
        },
        "original": {
            "question": "Did L. Ron Hubbard own a place of residence in Montana and Nebraska",
            "query": "ASK WHERE { wd:Q216896 wdt:P551 wd:Q1212 . wd:Q216896 wdt:P551 wd:Q1553 }",
            "NLQuery": "ASK WHERE { L. Ron Hubbard residence Montana . L. Ron Hubbard residence Nebraska }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Nebraska",
            "choppedEntity": "Q1553"
        }
    },
    {
        "chopped": {
            "question": "Which is the American National Biography ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4823 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown American National Biography ID ?ans1}"
        },
        "original": {
            "question": "Which is the American National Biography ID of Henry Cabot Lodge",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q174037 wdt:P4823 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Henry Cabot Lodge American National Biography ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Henry Cabot Lodge",
            "choppedEntity": "Q174037"
        }
    },
    {
        "chopped": {
            "question": "How do you say ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4239 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown vocalized name ?ans1}"
        },
        "original": {
            "question": "How do you say Haifa",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q41621 wdt:P4239 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Haifa vocalized name ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Haifa",
            "choppedEntity": "Q41621"
        }
    },
    {
        "chopped": {
            "question": "What is awarded to the winner of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1346 ?unknown . ?sbj wdt:P31 wd:Q618779 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj winner ?unknown . ?sbj instance of award } "
        },
        "original": {
            "question": "What is awarded to the winner of The Weekend",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1346 wd:Q2121062 . ?sbj wdt:P31 wd:Q618779 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj winner The Weeknd . ?sbj instance of award } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Weekend",
            "choppedEntity": "Q2121062"
        }
    },
    {
        "chopped": {
            "question": "Did Neymar participate in the 2004 ",
            "query": "ASK WHERE { wd:Q142794 wdt:P1344 ?unknown }",
            "NLQuery": "ASK WHERE { Neymar participant in ?unknown }"
        },
        "original": {
            "question": "Did Neymar participate in the 2004 Summer Olympics",
            "query": "ASK WHERE { wd:Q142794 wdt:P1344 wd:Q8558 }",
            "NLQuery": "ASK WHERE { Neymar participant in 2004 Summer Olympics }"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "Summer Olympics",
            "choppedEntity": "Q8558"
        }
    },
    {
        "chopped": {
            "question": "Was Neymar a participant in the 2004 ",
            "query": "ASK WHERE { wd:Q142794 wdt:P1344 ?unknown }",
            "NLQuery": "ASK WHERE { Neymar participant in ?unknown }"
        },
        "original": {
            "question": "Was Neymar a participant in the 2004 Summer Olympics",
            "query": "ASK WHERE { wd:Q142794 wdt:P1344 wd:Q8558 }",
            "NLQuery": "ASK WHERE { Neymar participant in 2004 Summer Olympics }"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "Summer Olympics",
            "choppedEntity": "Q8558"
        }
    },
    {
        "chopped": {
            "question": "What Mus\u00e9e d'Orsay artist ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2268 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Mus\u00e9e d'Orsay artist ID ?ans1}"
        },
        "original": {
            "question": "What Mus\u00e9e d'Orsay artist ID for Lewis Hine",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q347194 wdt:P2268 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Lewis Hine Mus\u00e9e d'Orsay artist ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Lewis Hine",
            "choppedEntity": "Q347194"
        }
    },
    {
        "chopped": {
            "question": "Who was killed by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P157 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj killed by ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who was killed by Constantine the Great",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P157 wd:Q8413 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj killed by Constantine the Great . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Constantine the Great",
            "choppedEntity": "Q8413"
        }
    },
    {
        "chopped": {
            "question": "What is John Glenn's first name that is the same as ",
            "query": "SELECT ?ans1 WHERE { wd:Q182642 wdt:P735 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { John Glenn given name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "What is John Glenn's first name that is the same as Jen\u0151",
            "query": "SELECT ?answer WHERE { wd:Q182642 wdt:P735 ?answer . ?answer wdt:P460 wd:Q15729621}",
            "NLQuery": "SELECT ?answer WHERE { John Glenn given name ?answer . ?answer said to be the same as Jen\u0151}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jen\u0151",
            "choppedEntity": "Q15729621"
        }
    },
    {
        "chopped": {
            "question": "What is John Glenn's to begin with title that's the same as ",
            "query": "SELECT ?ans1 WHERE { wd:Q182642 wdt:P735 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { John Glenn given name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "What is John Glenn's to begin with title that's the same as Jen\u0151",
            "query": "SELECT ?answer WHERE { wd:Q182642 wdt:P735 ?answer . ?answer wdt:P460 wd:Q15729621}",
            "NLQuery": "SELECT ?answer WHERE { John Glenn given name ?answer . ?answer said to be the same as Jen\u0151}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jen\u0151",
            "choppedEntity": "Q15729621"
        }
    },
    {
        "chopped": {
            "question": "Which is the Luminous-Lint ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4759 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Luminous-Lint ID ?ans1}"
        },
        "original": {
            "question": "Which is the Luminous-Lint ID for John Frederick William Herschel",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q14278 wdt:P4759 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { John Frederick William Herschel Luminous-Lint ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "John Frederick William Herschel",
            "choppedEntity": "Q14278"
        }
    },
    {
        "chopped": {
            "question": "What was the location of Petro Konashevych-Sahaidachny's death that is a partner town of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1306345 wdt:P20 ?ans1 . ?ans1 wdt:P190 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Petro Konashevych-Sahaidachny place of death ?ans1 . ?ans1 twinned administrative body ?unknown}"
        },
        "original": {
            "question": "What was the location of Petro Konashevych-Sahaidachny's death that is a partner town of Amsterdam",
            "query": "SELECT ?answer WHERE { wd:Q1306345 wdt:P20 ?answer . ?answer wdt:P190 wd:Q9899}",
            "NLQuery": "SELECT ?answer WHERE { Petro Konashevych-Sahaidachny place of death ?answer . ?answer twinned administrative body Amsterdam}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Amsterdam",
            "choppedEntity": "Q9899"
        }
    },
    {
        "chopped": {
            "question": "What was the area of Petro Konashevych-Sahaidachny's passing that's a accomplice town of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1306345 wdt:P20 ?ans1 . ?ans1 wdt:P190 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Petro Konashevych-Sahaidachny place of death ?ans1 . ?ans1 twinned administrative body ?unknown}"
        },
        "original": {
            "question": "What was the area of Petro Konashevych-Sahaidachny's passing that's a accomplice town of Amsterdam",
            "query": "SELECT ?answer WHERE { wd:Q1306345 wdt:P20 ?answer . ?answer wdt:P190 wd:Q9899}",
            "NLQuery": "SELECT ?answer WHERE { Petro Konashevych-Sahaidachny place of death ?answer . ?answer twinned administrative body Amsterdam}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Amsterdam",
            "choppedEntity": "Q9899"
        }
    },
    {
        "chopped": {
            "question": "When did Chiang Mai become the sister city of ",
            "query": "SELECT ?ans1 WHERE { wd:Q52028 p:P190 ?s . ?s ps:P190 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Chiang Mai twinned administrative body ?s . ?s twinned administrative body ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Chiang Mai become the sister city of Saitama Prefecture",
            "query": "SELECT ?value WHERE { wd:Q52028 p:P190 ?s . ?s ps:P190 wd:Q128186 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Chiang Mai twinned administrative body ?s . ?s twinned administrative body Saitama Prefecture . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Saitama Prefecture",
            "choppedEntity": "Q128186"
        }
    },
    {
        "chopped": {
            "question": "When did Chiang Mai gotten to be the sister city of ",
            "query": "SELECT ?ans1 WHERE { wd:Q52028 p:P190 ?s . ?s ps:P190 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Chiang Mai twinned administrative body ?s . ?s twinned administrative body ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Chiang Mai gotten to be the sister city of Saitama Prefecture",
            "query": "SELECT ?value WHERE { wd:Q52028 p:P190 ?s . ?s ps:P190 wd:Q128186 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Chiang Mai twinned administrative body ?s . ?s twinned administrative body Saitama Prefecture . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Saitama Prefecture",
            "choppedEntity": "Q128186"
        }
    },
    {
        "chopped": {
            "question": "Which talent agency represents ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1268 ?unknown . ?sbj wdt:P31 wd:Q5354754 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj represents ?unknown . ?sbj instance of talent agency } "
        },
        "original": {
            "question": "Which talent agency represents Henry Fonda",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1268 wd:Q19155 . ?sbj wdt:P31 wd:Q5354754 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj represents Henry Fonda . ?sbj instance of talent agency } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Henry Fonda",
            "choppedEntity": "Q19155"
        }
    },
    {
        "chopped": {
            "question": "Which is the twinned administrative body for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P190 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 twinned administrative body ?unknown}"
        },
        "original": {
            "question": "Which is the twinned administrative body for Liaoning",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P190 wd:Q43934}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer twinned administrative body Liaoning}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Liaoning",
            "choppedEntity": "Q43934"
        }
    },
    {
        "chopped": {
            "question": "What is  the  fictional universe described in ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1445 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown fictional universe described in ?ans1}"
        },
        "original": {
            "question": "What is  the  fictional universe described in Marvel Cinematic Universe",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q642878 wdt:P1445 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Marvel Cinematic Universe fictional universe described in ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Marvel Cinematic Universe",
            "choppedEntity": "Q642878"
        }
    },
    {
        "chopped": {
            "question": "Which book in the trilogy is ",
            "query": "SELECT ?ans1 WHERE { wd:Q846870 p:P747 ?s . ?s ps:P747 ?unknown . ?s pq:P407 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Prometheus Bound edition ?s . ?s edition ?unknown . ?s language of work or name ?ans1}"
        },
        "original": {
            "question": "Which book in the trilogy is The Prometheus Bound of \u00c6schylus",
            "query": "SELECT ?value WHERE { wd:Q846870 p:P747 ?s . ?s ps:P747 wd:Q42012786 . ?s pq:P407 ?value}",
            "NLQuery": "SELECT ?value WHERE { Prometheus Bound edition ?s . ?s edition The Prometheus Bound of \u00c6schylus . ?s language of work or name ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Prometheus Bound of \u00c6schylus",
            "choppedEntity": "Q42012786"
        }
    },
    {
        "chopped": {
            "question": "What are the executive body and the legislative body of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P208 ?ans1 . ?unknown wdt:P194 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown executive body ?ans1 . ?unknown legislative body ?ans2 }"
        },
        "original": {
            "question": "What are the executive body and the legislative body of Himachal Pradesh",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q1177 wdt:P208 ?ans_1 . wd:Q1177 wdt:P194 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Himachal Pradesh executive body ?ans_1 . Himachal Pradesh legislative body ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Himachal Pradesh",
            "choppedEntity": "Q1177"
        }
    },
    {
        "chopped": {
            "question": "Which terrorist group pledges allegiance to ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P945 ?obj . ?obj wdt:P31 wd:Q4456236 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown allegiance ?obj . ?obj instance of terrorist group } "
        },
        "original": {
            "question": "Which terrorist group pledges allegiance to Abu Musab al-Zarqawir",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q181049 wdt:P945 ?obj . ?obj wdt:P31 wd:Q4456236 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Abu Musab al-Zarqawi allegiance ?obj . ?obj instance of terrorist group } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Abu Musab al-Zarqawir",
            "choppedEntity": "Q181049"
        }
    },
    {
        "chopped": {
            "question": "Which group of terrorists promises loyalty to ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P945 ?obj . ?obj wdt:P31 wd:Q4456236 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown allegiance ?obj . ?obj instance of terrorist group } "
        },
        "original": {
            "question": "Which group of terrorists promises loyalty to Abu Musab al - Zarqawir",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q181049 wdt:P945 ?obj . ?obj wdt:P31 wd:Q4456236 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Abu Musab al-Zarqawi allegiance ?obj . ?obj instance of terrorist group } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Abu Musab al - Zarqawir",
            "choppedEntity": "Q181049"
        }
    },
    {
        "chopped": {
            "question": "Which bank issued ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P562 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown central bank/issuer ?obj . ?obj instance of business } "
        },
        "original": {
            "question": "Which bank issued the Russian ruble",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q41044 wdt:P562 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Russian ruble central bank/issuer ?obj . ?obj instance of business } "
        },
        "meta": {
            "entityTagNER": "MONEY",
            "choppedText": "the Russian ruble",
            "choppedEntity": "Q41044"
        }
    },
    {
        "chopped": {
            "question": "What is Emperor Anastasius I position in ",
            "query": "SELECT ?ans1 WHERE { wd:Q173470 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1365 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Anastasius I position held ?s . ?s position held ?ans1 . ?s replaces ?unknown }"
        },
        "original": {
            "question": "What is Emperor Anastasius I position in Zeno",
            "query": "SELECT ?obj WHERE { wd:Q173470 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q183452 }",
            "NLQuery": "SELECT ?obj WHERE { Anastasius I position held ?s . ?s position held ?obj . ?s replaces Zeno }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Zeno",
            "choppedEntity": "Q183452"
        }
    },
    {
        "chopped": {
            "question": "Which is the position of Emperor Anastasius in ",
            "query": "SELECT ?ans1 WHERE { wd:Q173470 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1365 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Anastasius I position held ?s . ?s position held ?ans1 . ?s replaces ?unknown }"
        },
        "original": {
            "question": "Which is the position of Emperor Anastasius in Zeno",
            "query": "SELECT ?obj WHERE { wd:Q173470 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q183452 }",
            "NLQuery": "SELECT ?obj WHERE { Anastasius I position held ?s . ?s position held ?obj . ?s replaces Zeno }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Zeno",
            "choppedEntity": "Q183452"
        }
    },
    {
        "chopped": {
            "question": "Which is the building that is commissioned by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P88 ?unknown . ?sbj wdt:P31 wd:Q41176 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj commissioned by ?unknown . ?sbj instance of building } "
        },
        "original": {
            "question": "Which is the building that is commissioned by University of Notre Dame",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P88 wd:Q178848 . ?sbj wdt:P31 wd:Q41176 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj commissioned by University of Notre Dame . ?sbj instance of building } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "University of Notre Dame",
            "choppedEntity": "Q178848"
        }
    },
    {
        "chopped": {
            "question": "When was Garth Brooks nominated for ",
            "query": "SELECT ?ans1 WHERE { wd:Q216288 p:P1411 ?s . ?s ps:P1411 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Garth Brooks nominated for ?s . ?s nominated for ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was Garth Brooks nominated for the Country Music Association Entertainer of the Year Award",
            "query": "SELECT ?value WHERE { wd:Q216288 p:P1411 ?s . ?s ps:P1411 wd:Q18149622 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Garth Brooks nominated for ?s . ?s nominated for Country Music Association Award for Entertainer of the Year . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Country Music Association Entertainer of the Year Award",
            "choppedEntity": "Q18149622"
        }
    },
    {
        "chopped": {
            "question": "who academic major for field of work of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P101 ?obj . ?obj wdt:P31 wd:Q4671286 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown field of work ?obj . ?obj instance of academic major } "
        },
        "original": {
            "question": "who academic major for field of work of Noam Chomsky",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q9049 wdt:P101 ?obj . ?obj wdt:P31 wd:Q4671286 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Noam Chomsky field of work ?obj . ?obj instance of academic major } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Noam Chomsky",
            "choppedEntity": "Q9049"
        }
    },
    {
        "chopped": {
            "question": "who scholastic major for field of work of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P101 ?obj . ?obj wdt:P31 wd:Q4671286 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown field of work ?obj . ?obj instance of academic major } "
        },
        "original": {
            "question": "who scholastic major for field of work of Noam Chomsky",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q9049 wdt:P101 ?obj . ?obj wdt:P31 wd:Q4671286 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Noam Chomsky field of work ?obj . ?obj instance of academic major } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Noam Chomsky",
            "choppedEntity": "Q9049"
        }
    },
    {
        "chopped": {
            "question": "When did Giuseppe Verdi divorce ",
            "query": "SELECT ?ans1 WHERE { wd:Q7317 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Giuseppe Verdi spouse ?s . ?s spouse ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did Giuseppe Verdi divorce Margherita Barezzi",
            "query": "SELECT ?value WHERE { wd:Q7317 p:P26 ?s . ?s ps:P26 wd:Q3290593 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Giuseppe Verdi spouse ?s . ?s spouse Margherita Barezzi . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Margherita Barezzi",
            "choppedEntity": "Q3290593"
        }
    },
    {
        "chopped": {
            "question": "At which point in time did Giuseppe Verdi divorce ",
            "query": "SELECT ?ans1 WHERE { wd:Q7317 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Giuseppe Verdi spouse ?s . ?s spouse ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "At which point in time did Giuseppe Verdi divorce Margherita Barezzi",
            "query": "SELECT ?value WHERE { wd:Q7317 p:P26 ?s . ?s ps:P26 wd:Q3290593 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Giuseppe Verdi spouse ?s . ?s spouse Margherita Barezzi . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Margherita Barezzi",
            "choppedEntity": "Q3290593"
        }
    },
    {
        "chopped": {
            "question": "When did Astrakhan become a twinned town with ",
            "query": "SELECT ?ans1 WHERE { wd:Q3927 p:P190 ?s . ?s ps:P190 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Astrakhan twinned administrative body ?s . ?s twinned administrative body ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Astrakhan become a twinned town with Brest",
            "query": "SELECT ?value WHERE { wd:Q3927 p:P190 ?s . ?s ps:P190 wd:Q140147 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Astrakhan twinned administrative body ?s . ?s twinned administrative body Brest . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Brest",
            "choppedEntity": "Q140147"
        }
    },
    {
        "chopped": {
            "question": "At what time did Astrakhan join as a twin town with ",
            "query": "SELECT ?ans1 WHERE { wd:Q3927 p:P190 ?s . ?s ps:P190 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Astrakhan twinned administrative body ?s . ?s twinned administrative body ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "At what time did Astrakhan join as a twin town with Brest",
            "query": "SELECT ?value WHERE { wd:Q3927 p:P190 ?s . ?s ps:P190 wd:Q140147 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Astrakhan twinned administrative body ?s . ?s twinned administrative body Brest . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Brest",
            "choppedEntity": "Q140147"
        }
    },
    {
        "chopped": {
            "question": "What is the first name of Juan Vucetich, who has the same name as ",
            "query": "SELECT ?ans1 WHERE { wd:Q1284975 wdt:P735 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Juan Vucetich given name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "What is the first name of Juan Vucetich, who has the same name as Ivo",
            "query": "SELECT ?answer WHERE { wd:Q1284975 wdt:P735 ?answer . ?answer wdt:P460 wd:Q686532}",
            "NLQuery": "SELECT ?answer WHERE { Juan Vucetich given name ?answer . ?answer said to be the same as Ivo}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ivo",
            "choppedEntity": "Q686532"
        }
    },
    {
        "chopped": {
            "question": "What is the primary title of Juan Vucetich, who has the same title as ",
            "query": "SELECT ?ans1 WHERE { wd:Q1284975 wdt:P735 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Juan Vucetich given name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "What is the primary title of Juan Vucetich, who has the same title as Ivo",
            "query": "SELECT ?answer WHERE { wd:Q1284975 wdt:P735 ?answer . ?answer wdt:P460 wd:Q686532}",
            "NLQuery": "SELECT ?answer WHERE { Juan Vucetich given name ?answer . ?answer said to be the same as Ivo}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ivo",
            "choppedEntity": "Q686532"
        }
    },
    {
        "chopped": {
            "question": "What country is adjacent to Poland that has states including ",
            "query": "SELECT ?ans1 WHERE { wd:Q36 wdt:P47 ?ans1 . ?ans1 wdt:P150 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Poland shares border with ?ans1 . ?ans1 contains administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "What country is adjacent to Poland that has states including the Suhl District",
            "query": "SELECT ?answer WHERE { wd:Q36 wdt:P47 ?answer . ?answer wdt:P150 wd:Q48106}",
            "NLQuery": "SELECT ?answer WHERE { Poland shares border with ?answer . ?answer contains administrative territorial entity Suhl District}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Suhl District",
            "choppedEntity": "Q48106"
        }
    },
    {
        "chopped": {
            "question": "When did Josef Bican start playing for ",
            "query": "SELECT ?ans1 WHERE { wd:Q352017 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Josef Bican member of sports team ?s . ?s member of sports team ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Josef Bican start playing for FC Admira Wacker M\u00f6dling",
            "query": "SELECT ?value WHERE { wd:Q352017 p:P54 ?s . ?s ps:P54 wd:Q698702 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Josef Bican member of sports team ?s . ?s member of sports team FC Admira Wacker M\u00f6dling . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "FC Admira Wacker M\u00f6dling",
            "choppedEntity": "Q698702"
        }
    },
    {
        "chopped": {
            "question": "What season did Josef Bican join ",
            "query": "SELECT ?ans1 WHERE { wd:Q352017 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Josef Bican member of sports team ?s . ?s member of sports team ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "What season did Josef Bican join FC Admira Wacker M\u00f6dling",
            "query": "SELECT ?value WHERE { wd:Q352017 p:P54 ?s . ?s ps:P54 wd:Q698702 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Josef Bican member of sports team ?s . ?s member of sports team FC Admira Wacker M\u00f6dling . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "FC Admira Wacker M\u00f6dling",
            "choppedEntity": "Q698702"
        }
    },
    {
        "chopped": {
            "question": "Did Freddie Mercury record for ",
            "query": "ASK WHERE { wd:Q15869 wdt:P264 ?unknown }",
            "NLQuery": "ASK WHERE { Freddie Mercury record label ?unknown }"
        },
        "original": {
            "question": "Did Freddie Mercury record for Capital Records",
            "query": "ASK WHERE { wd:Q15869 wdt:P264 wd:Q193023 }",
            "NLQuery": "ASK WHERE { Freddie Mercury record label Capitol Records }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Capital Records",
            "choppedEntity": "Q193023"
        }
    },
    {
        "chopped": {
            "question": "Did Freddie Mercury ever have a label with ",
            "query": "ASK WHERE { wd:Q15869 wdt:P264 ?unknown }",
            "NLQuery": "ASK WHERE { Freddie Mercury record label ?unknown }"
        },
        "original": {
            "question": "Did Freddie Mercury ever have a label with Capital Records",
            "query": "ASK WHERE { wd:Q15869 wdt:P264 wd:Q193023 }",
            "NLQuery": "ASK WHERE { Freddie Mercury record label Capitol Records }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Capital Records",
            "choppedEntity": "Q193023"
        }
    },
    {
        "chopped": {
            "question": "What was degree and major of Jawaharlal Nehru of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q1047 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P812 ?ans1 . ?s pq:P512 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Jawaharlal Nehru educated at ?s . ?s educated at ?unknown . ?s academic major ?ans1 . ?s academic degree ?ans2 }"
        },
        "original": {
            "question": "What was degree and major of Jawaharlal Nehru of Trinity College",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q1047 p:P69 ?s . ?s ps:P69 wd:Q332342 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Jawaharlal Nehru educated at ?s . ?s educated at Trinity College . ?s academic major ?value1 . ?s academic degree ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Trinity College",
            "choppedEntity": "Q332342"
        }
    },
    {
        "chopped": {
            "question": "Are the assets under management equal to 2400000000000 at ",
            "query": "ASK WHERE { ?unknown wdt:P4103 ?obj FILTER(?obj = 2400000000000) } ",
            "NLQuery": "ASK WHERE { ?unknown assets under management ?obj FILTER(?obj = 2400000000000) } "
        },
        "original": {
            "question": "Are the assets under management equal to 2400000000000 at Fidelity Investments",
            "query": "ASK WHERE { wd:Q1411292 wdt:P4103 ?obj FILTER(?obj = 2400000000000) } ",
            "NLQuery": "ASK WHERE { Fidelity Investments assets under management ?obj FILTER(?obj = 2400000000000) } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Fidelity Investments",
            "choppedEntity": "Q1411292"
        }
    },
    {
        "chopped": {
            "question": "Is Marcus Aurelius a child of Commodus and ",
            "query": "ASK WHERE { wd:Q1430 wdt:P40 wd:Q1434 . wd:Q1430 wdt:P40 ?unknown }",
            "NLQuery": "ASK WHERE { Marcus Aurelius child Commodus . Marcus Aurelius child ?unknown }"
        },
        "original": {
            "question": "Is Marcus Aurelius a child of Commodus and Annia Aurelia Galeria Faustina",
            "query": "ASK WHERE { wd:Q1430 wdt:P40 wd:Q1434 . wd:Q1430 wdt:P40 wd:Q3655950 }",
            "NLQuery": "ASK WHERE { Marcus Aurelius child Commodus . Marcus Aurelius child Annia Aurelia Galeria Faustina }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Annia Aurelia Galeria Faustina",
            "choppedEntity": "Q3655950"
        }
    },
    {
        "chopped": {
            "question": "Is it true that Marcus Aurelius is a child of Commodus and ",
            "query": "ASK WHERE { wd:Q1430 wdt:P40 wd:Q1434 . wd:Q1430 wdt:P40 ?unknown }",
            "NLQuery": "ASK WHERE { Marcus Aurelius child Commodus . Marcus Aurelius child ?unknown }"
        },
        "original": {
            "question": "Is it true that Marcus Aurelius is a child of Commodus and Annia Aurelia Galeria Faustina",
            "query": "ASK WHERE { wd:Q1430 wdt:P40 wd:Q1434 . wd:Q1430 wdt:P40 wd:Q3655950 }",
            "NLQuery": "ASK WHERE { Marcus Aurelius child Commodus . Marcus Aurelius child Annia Aurelia Galeria Faustina }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Annia Aurelia Galeria Faustina",
            "choppedEntity": "Q3655950"
        }
    },
    {
        "chopped": {
            "question": "Was torture the cause of death for ",
            "query": "ASK WHERE { ?unknown wdt:P1196 wd:Q132781 }",
            "NLQuery": "ASK WHERE { ?unknown manner of death torture }"
        },
        "original": {
            "question": "Was torture the cause of death for Anthony Bourdain",
            "query": "ASK WHERE { wd:Q426582 wdt:P1196 wd:Q132781 }",
            "NLQuery": "ASK WHERE { Anthony Bourdain manner of death torture }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Anthony Bourdain",
            "choppedEntity": "Q426582"
        }
    },
    {
        "chopped": {
            "question": "When did Hawaii become a state in ",
            "query": "SELECT ?ans1 WHERE { wd:Q782 p:P31 ?s . ?s ps:P31 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Hawaii instance of ?s . ?s instance of ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Hawaii become a state in the United States",
            "query": "SELECT ?value WHERE { wd:Q782 p:P31 ?s . ?s ps:P31 wd:Q35657 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Hawaii instance of ?s . ?s instance of state of the United States . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the United States",
            "choppedEntity": "Q35657"
        }
    },
    {
        "chopped": {
            "question": "when did coordinate location for university has headquaters location as ",
            "query": "SELECT ?ans1 WHERE { wd:Q156598 p:P159 ?s . ?s ps:P159 ?unknown . ?s pq:P625 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Leiden University headquarters location ?s . ?s headquarters location ?unknown . ?s coordinate location ?ans1}"
        },
        "original": {
            "question": "when did coordinate location for university has headquaters location as leiden",
            "query": "SELECT ?value WHERE { wd:Q156598 p:P159 ?s . ?s ps:P159 wd:Q43631 . ?s pq:P625 ?value}",
            "NLQuery": "SELECT ?value WHERE { Leiden University headquarters location ?s . ?s headquarters location Leiden . ?s coordinate location ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "leiden",
            "choppedEntity": "Q43631"
        }
    },
    {
        "chopped": {
            "question": "When did the university headquarters move to ",
            "query": "SELECT ?ans1 WHERE { wd:Q156598 p:P159 ?s . ?s ps:P159 ?unknown . ?s pq:P625 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Leiden University headquarters location ?s . ?s headquarters location ?unknown . ?s coordinate location ?ans1}"
        },
        "original": {
            "question": "When did the university headquarters move to Leiden",
            "query": "SELECT ?value WHERE { wd:Q156598 p:P159 ?s . ?s ps:P159 wd:Q43631 . ?s pq:P625 ?value}",
            "NLQuery": "SELECT ?value WHERE { Leiden University headquarters location ?s . ?s headquarters location Leiden . ?s coordinate location ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Leiden",
            "choppedEntity": "Q43631"
        }
    },
    {
        "chopped": {
            "question": "What is the character played by cast member Kate Ritchie in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P161 ?s . ?s ps:P161 wd:Q1797489 . ?s pq:P453 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cast member ?s . ?s cast member Kate Ritchie . ?s character role ?ans1}"
        },
        "original": {
            "question": "What is the character played by cast member Kate Ritchie in Home and Away",
            "query": "SELECT ?value WHERE { wd:Q1324189 p:P161 ?s . ?s ps:P161 wd:Q1797489 . ?s pq:P453 ?value}",
            "NLQuery": "SELECT ?value WHERE { Home and Away cast member ?s . ?s cast member Kate Ritchie . ?s character role ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Home and Away",
            "choppedEntity": "Q1324189"
        }
    },
    {
        "chopped": {
            "question": "What 3D film features the voice actress ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P725 ?unknown . ?sbj wdt:P31 wd:Q229390 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj voice actor ?unknown . ?sbj instance of 3D film } "
        },
        "original": {
            "question": "What 3D film features the voice actress Ellen DeGeneres",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P725 wd:Q483325 . ?sbj wdt:P31 wd:Q229390 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj voice actor Ellen DeGeneres . ?sbj instance of 3D film } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ellen DeGeneres",
            "choppedEntity": "Q483325"
        }
    },
    {
        "chopped": {
            "question": "Which is the KDG Komponisten der Gegenwart for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1287 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown KDG Komponisten der Gegenwart ID ?ans1}"
        },
        "original": {
            "question": "Which is the KDG Komponisten der Gegenwart for Anthony Braxton",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q572924 wdt:P1287 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Anthony Braxton KDG Komponisten der Gegenwart ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Anthony Braxton",
            "choppedEntity": "Q572924"
        }
    },
    {
        "chopped": {
            "question": "Which is the maritime identification digits of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2979 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown maritime identification digits ?ans1}"
        },
        "original": {
            "question": "Which is the maritime identification digits of Tonga",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q678 wdt:P2979 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Tonga maritime identification digits ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Tonga",
            "choppedEntity": "Q678"
        }
    },
    {
        "chopped": {
            "question": "What position does \u00d3lafur Ragnar Gr\u00edmsson hold that replaces the one of ",
            "query": "SELECT ?ans1 WHERE { wd:Q57284 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1365 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { \u00d3lafur Ragnar Gr\u00edmsson position held ?s . ?s position held ?ans1 . ?s replaces ?unknown }"
        },
        "original": {
            "question": "What position does \u00d3lafur Ragnar Gr\u00edmsson hold that replaces the one of Vigd\u00eds Finnbogad\u00f3ttir",
            "query": "SELECT ?obj WHERE { wd:Q57284 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q189797 }",
            "NLQuery": "SELECT ?obj WHERE { \u00d3lafur Ragnar Gr\u00edmsson position held ?s . ?s position held ?obj . ?s replaces Vigd\u00eds Finnbogad\u00f3ttir }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Vigd\u00eds Finnbogad\u00f3ttir",
            "choppedEntity": "Q189797"
        }
    },
    {
        "chopped": {
            "question": "Who is the chairman of the center airplane terminal of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P137 ?X . ?X wdt:P113 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown operator ?X . ?X airline hub ?ans1}"
        },
        "original": {
            "question": "Who is the chairman of the center airplane terminal of Skillet Am Flight 841",
            "query": "SELECT ?answer WHERE { wd:Q24039782 wdt:P137 ?X . ?X wdt:P113 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Pan Am Flight 841 operator ?X . ?X airline hub ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Skillet Am Flight 841",
            "choppedEntity": "Q24039782"
        }
    },
    {
        "chopped": {
            "question": "Which city, twinned with Steinhagan, is the place of residence of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P551 ?ans1 . ?ans1 wdt:P190 wd:Q225002}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown residence ?ans1 . ?ans1 twinned administrative body Steinhagen}"
        },
        "original": {
            "question": "Which city, twinned with Steinhagan, is the place of residence of Esther Vergeer",
            "query": "SELECT ?answer WHERE { wd:Q259606 wdt:P551 ?answer . ?answer wdt:P190 wd:Q225002}",
            "NLQuery": "SELECT ?answer WHERE { Esther Vergeer residence ?answer . ?answer twinned administrative body Steinhagen}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Esther Vergeer",
            "choppedEntity": "Q259606"
        }
    },
    {
        "chopped": {
            "question": "Which city, twinned with Steinhagan, is the location of residence of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P551 ?ans1 . ?ans1 wdt:P190 wd:Q225002}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown residence ?ans1 . ?ans1 twinned administrative body Steinhagen}"
        },
        "original": {
            "question": "Which city, twinned with Steinhagan, is the location of residence of Esther Vergeer",
            "query": "SELECT ?answer WHERE { wd:Q259606 wdt:P551 ?answer . ?answer wdt:P190 wd:Q225002}",
            "NLQuery": "SELECT ?answer WHERE { Esther Vergeer residence ?answer . ?answer twinned administrative body Steinhagen}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Esther Vergeer",
            "choppedEntity": "Q259606"
        }
    },
    {
        "chopped": {
            "question": "How many doctoral advisors are determined for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P184 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown doctoral advisor ?obj }"
        },
        "original": {
            "question": "How many doctoral advisors are determined for Gottfried Wilhelm Leibniz",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q9047 wdt:P184 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Gottfried Wilhelm Leibniz doctoral advisor ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Gottfried Wilhelm Leibniz",
            "choppedEntity": "Q9047"
        }
    },
    {
        "chopped": {
            "question": "Which is the number of the doctoral advisers that are determined for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P184 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown doctoral advisor ?obj }"
        },
        "original": {
            "question": "Which is the number of the doctoral advisers that are determined for Gottfried Wilhelm Leibniz",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q9047 wdt:P184 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Gottfried Wilhelm Leibniz doctoral advisor ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Gottfried Wilhelm Leibniz",
            "choppedEntity": "Q9047"
        }
    },
    {
        "chopped": {
            "question": "In 2016, how many people visited ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1174 ?s . ?s ps:P1174 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2016')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown visitors per year ?s . ?s visitors per year ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),'2016')) }"
        },
        "original": {
            "question": "In 2016, how many people visited the British Museum",
            "query": "SELECT ?obj WHERE { wd:Q6373 p:P1174 ?s . ?s ps:P1174 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2016')) }",
            "NLQuery": "SELECT ?obj WHERE { British Museum visitors per year ?s . ?s visitors per year ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2016')) }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the British Museum",
            "choppedEntity": "Q6373"
        }
    },
    {
        "chopped": {
            "question": "What is the gravity dam with the most hydraulic head whose located on terrain feature is ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q3497167 . ?ans1 wdt:P4441 ?obj . ?ans1 wdt:P706 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of gravity dam . ?ans1 hydraulic head ?obj . ?ans1 located on terrain feature ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the gravity dam with the most hydraulic head whose located on terrain feature is Columbia River",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q3497167 . ?ent wdt:P4441 ?obj . ?ent wdt:P706 wd:Q2251 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of gravity dam . ?ent hydraulic head ?obj . ?ent located on terrain feature Columbia River } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Columbia River",
            "choppedEntity": "Q2251"
        }
    },
    {
        "chopped": {
            "question": "What is the dam with the largest hydraulic head located on the earthern features of ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q3497167 . ?ans1 wdt:P4441 ?obj . ?ans1 wdt:P706 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of gravity dam . ?ans1 hydraulic head ?obj . ?ans1 located on terrain feature ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the dam with the largest hydraulic head located on the earthern features of the Columbia River",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q3497167 . ?ent wdt:P4441 ?obj . ?ent wdt:P706 wd:Q2251 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of gravity dam . ?ent hydraulic head ?obj . ?ent located on terrain feature Columbia River } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Columbia River",
            "choppedEntity": "Q2251"
        }
    },
    {
        "chopped": {
            "question": "What was Piers Anthony nominated for that's work is ",
            "query": "SELECT ?ans1 WHERE { wd:Q559409 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Piers Anthony nominated for ?s . ?s nominated for ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "What was Piers Anthony nominated for that's work is the Crewel Lye: A Caustic Yarn",
            "query": "SELECT ?obj WHERE { wd:Q559409 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q5184847 }",
            "NLQuery": "SELECT ?obj WHERE { Piers Anthony nominated for ?s . ?s nominated for ?obj . ?s for work Crewel Lye: A Caustic Yarn }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Crewel Lye: A Caustic Yarn",
            "choppedEntity": "Q5184847"
        }
    },
    {
        "chopped": {
            "question": "which award piers anthony short listed for that's work is ",
            "query": "SELECT ?ans1 WHERE { wd:Q559409 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Piers Anthony nominated for ?s . ?s nominated for ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "which award piers anthony short listed for that's work is the Crewel Lye: A Caustic Yarn",
            "query": "SELECT ?obj WHERE { wd:Q559409 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q5184847 }",
            "NLQuery": "SELECT ?obj WHERE { Piers Anthony nominated for ?s . ?s nominated for ?obj . ?s for work Crewel Lye: A Caustic Yarn }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Crewel Lye: A Caustic Yarn",
            "choppedEntity": "Q5184847"
        }
    },
    {
        "chopped": {
            "question": "In 2008 what award was given to ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2008')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),'2008')) }"
        },
        "original": {
            "question": "In 2008 what award was given to Trondheim",
            "query": "SELECT ?obj WHERE { wd:Q25804 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2008')) }",
            "NLQuery": "SELECT ?obj WHERE { Trondheim award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2008')) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Trondheim",
            "choppedEntity": "Q25804"
        }
    },
    {
        "chopped": {
            "question": "Who are the characters that appear in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1441 ?X . ?X wdt:P674 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown present in work ?X . ?X characters ?ans1}"
        },
        "original": {
            "question": "Who are the characters that appear in Olivia Flaversham",
            "query": "SELECT ?answer WHERE { wd:Q20822895 wdt:P1441 ?X . ?X wdt:P674 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Olivia Flaversham present in work ?X . ?X characters ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Olivia Flaversham",
            "choppedEntity": "Q20822895"
        }
    },
    {
        "chopped": {
            "question": "Who is the oldest citizen of ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q5 . ?ans1 wdt:P3629 ?obj . ?ans1 wdt:P27 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of human . ?ans1 age at event ?obj . ?ans1 country of citizenship ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "Who is the oldest citizen of Morocco",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q5 . ?ent wdt:P3629 ?obj . ?ent wdt:P27 wd:Q1028 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of human . ?ent age at event ?obj . ?ent country of citizenship Morocco } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Morocco",
            "choppedEntity": "Q1028"
        }
    },
    {
        "chopped": {
            "question": "What is the name of the oldest citizen of ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q5 . ?ans1 wdt:P3629 ?obj . ?ans1 wdt:P27 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of human . ?ans1 age at event ?obj . ?ans1 country of citizenship ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the name of the oldest citizen of Morocco",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q5 . ?ent wdt:P3629 ?obj . ?ent wdt:P27 wd:Q1028 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of human . ?ent age at event ?obj . ?ent country of citizenship Morocco } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Morocco",
            "choppedEntity": "Q1028"
        }
    },
    {
        "chopped": {
            "question": "What is the B.R.A.H.M.S artist ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P5226 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown BRAHMS artist ID ?ans1}"
        },
        "original": {
            "question": "What is the B.R.A.H.M.S artist ID of Lou Harrison",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q590911 wdt:P5226 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Lou Harrison BRAHMS artist ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Lou Harrison",
            "choppedEntity": "Q590911"
        }
    },
    {
        "chopped": {
            "question": "Who is the narrator of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P2438 ?obj . ?obj wdt:P31 wd:Q3658341 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown narrator ?obj . ?obj instance of literary character } "
        },
        "original": {
            "question": "Who is the narrator of Lolita",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q127149 wdt:P2438 ?obj . ?obj wdt:P31 wd:Q3658341 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Lolita narrator ?obj . ?obj instance of literary character } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Lolita",
            "choppedEntity": "Q127149"
        }
    },
    {
        "chopped": {
            "question": "Who is the storyteller of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P2438 ?obj . ?obj wdt:P31 wd:Q3658341 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown narrator ?obj . ?obj instance of literary character } "
        },
        "original": {
            "question": "Who is the storyteller of Lolita",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q127149 wdt:P2438 ?obj . ?obj wdt:P31 wd:Q3658341 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Lolita narrator ?obj . ?obj instance of literary character } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Lolita",
            "choppedEntity": "Q127149"
        }
    },
    {
        "chopped": {
            "question": "Which is the Justia Patents inventor ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3874 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Justia Patents inventor ID ?ans1}"
        },
        "original": {
            "question": "Which is the Justia Patents inventor ID for Steve Jobs",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q19837 wdt:P3874 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Steve Jobs Justia Patents inventor ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Steve Jobs",
            "choppedEntity": "Q19837"
        }
    },
    {
        "chopped": {
            "question": "What medium is preceded by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P437 ?X . ?X wdt:P155 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown distribution format ?X . ?X follows ?ans1}"
        },
        "original": {
            "question": "What medium is preceded by Grand Theft Auto V",
            "query": "SELECT ?answer WHERE { wd:Q17452 wdt:P437 ?X . ?X wdt:P155 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Grand Theft Auto V distribution format ?X . ?X follows ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Grand Theft Auto V",
            "choppedEntity": "Q17452"
        }
    },
    {
        "chopped": {
            "question": "What is lake of of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P159 ?X . ?X wdt:P206 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown headquarters location ?X . ?X located in or next to body of water ?ans1}"
        },
        "original": {
            "question": "What is lake of of Doordarshan",
            "query": "SELECT ?answer WHERE { wd:Q1763315 wdt:P159 ?X . ?X wdt:P206 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Doordarshan headquarters location ?X . ?X located in or next to body of water ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Doordarshan",
            "choppedEntity": "Q1763315"
        }
    },
    {
        "chopped": {
            "question": "When was Ganja a part of ",
            "query": "SELECT ?ans1 WHERE { wd:Q131290 p:P131 ?s . ?s ps:P131 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ganja located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When was Ganja a part of Azerbaijan",
            "query": "SELECT ?value WHERE { wd:Q131290 p:P131 ?s . ?s ps:P131 wd:Q227 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ganja located in the administrative territorial entity ?s . ?s located in the administrative territorial entity Azerbaijan . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Azerbaijan",
            "choppedEntity": "Q227"
        }
    },
    {
        "chopped": {
            "question": "During which time period was Ganja a part of ",
            "query": "SELECT ?ans1 WHERE { wd:Q131290 p:P131 ?s . ?s ps:P131 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ganja located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "During which time period was Ganja a part of Azerbaijan",
            "query": "SELECT ?value WHERE { wd:Q131290 p:P131 ?s . ?s ps:P131 wd:Q227 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ganja located in the administrative territorial entity ?s . ?s located in the administrative territorial entity Azerbaijan . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Azerbaijan",
            "choppedEntity": "Q227"
        }
    },
    {
        "chopped": {
            "question": "Which town in India share a border wth ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P47 ?obj . ?obj wdt:P31 wd:Q58339518 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown shares border with ?obj . ?obj instance of town in India } "
        },
        "original": {
            "question": "Which town in India share a border wth Bangalore",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q1355 wdt:P47 ?obj . ?obj wdt:P31 wd:Q58339518 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Bangalore shares border with ?obj . ?obj instance of town in India } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Bangalore",
            "choppedEntity": "Q1355"
        }
    },
    {
        "chopped": {
            "question": "Which is the Wikimedia category of the category for employees of the organization of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P4195 ?obj . ?obj wdt:P31 wd:Q4167836 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown category for employees of the organization ?obj . ?obj instance of Wikimedia category } "
        },
        "original": {
            "question": "Which is the Wikimedia category of the category for employees of the organization of Harvard University",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q13371 wdt:P4195 ?obj . ?obj wdt:P31 wd:Q4167836 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Harvard University category for employees of the organization ?obj . ?obj instance of Wikimedia category } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Harvard University",
            "choppedEntity": "Q13371"
        }
    },
    {
        "chopped": {
            "question": "What Wikimedia category shows the Employees of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P4195 ?obj . ?obj wdt:P31 wd:Q4167836 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown category for employees of the organization ?obj . ?obj instance of Wikimedia category } "
        },
        "original": {
            "question": "What Wikimedia category shows the Employees of Harvard University",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q13371 wdt:P4195 ?obj . ?obj wdt:P31 wd:Q4167836 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Harvard University category for employees of the organization ?obj . ?obj instance of Wikimedia category } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Harvard University",
            "choppedEntity": "Q13371"
        }
    },
    {
        "chopped": {
            "question": "What is the extended from of the inspiration of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P941 ?X . ?X wdt:P144 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown inspired by ?X . ?X based on ?ans1}"
        },
        "original": {
            "question": "What is the extended from of the inspiration of Winnie the Pooh",
            "query": "SELECT ?answer WHERE { wd:Q8025665 wdt:P941 ?X . ?X wdt:P144 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Winnie the Pooh inspired by ?X . ?X based on ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Winnie the Pooh",
            "choppedEntity": "Q8025665"
        }
    },
    {
        "chopped": {
            "question": "What is the amplified from of the motivation of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P941 ?X . ?X wdt:P144 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown inspired by ?X . ?X based on ?ans1}"
        },
        "original": {
            "question": "What is the amplified from of the motivation of Winnie the Pooh",
            "query": "SELECT ?answer WHERE { wd:Q8025665 wdt:P941 ?X . ?X wdt:P144 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Winnie the Pooh inspired by ?X . ?X based on ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Winnie the Pooh",
            "choppedEntity": "Q8025665"
        }
    },
    {
        "chopped": {
            "question": "In 1937, what award was given to ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1937')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),'1937')) }"
        },
        "original": {
            "question": "In 1937, what award was given to Peter Debye",
            "query": "SELECT ?obj WHERE { wd:Q103835 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1937')) }",
            "NLQuery": "SELECT ?obj WHERE { Peter Debye award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1937')) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Peter Debye",
            "choppedEntity": "Q103835"
        }
    },
    {
        "chopped": {
            "question": "What is the subsidiary of the business ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P355 ?unknown . ?sbj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj subsidiary ?unknown . ?sbj instance of business } "
        },
        "original": {
            "question": "What is the subsidiary of the business Cathay Pacific",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P355 wd:Q32141 . ?sbj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj subsidiary Cathay Pacific . ?sbj instance of business } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Cathay Pacific",
            "choppedEntity": "Q32141"
        }
    },
    {
        "chopped": {
            "question": "What is the auxiliary of the commerce ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P355 ?unknown . ?sbj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj subsidiary ?unknown . ?sbj instance of business } "
        },
        "original": {
            "question": "What is the auxiliary of the commerce Cathay Pacific",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P355 wd:Q32141 . ?sbj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj subsidiary Cathay Pacific . ?sbj instance of business } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Cathay Pacific",
            "choppedEntity": "Q32141"
        }
    },
    {
        "chopped": {
            "question": "What is the postcode of the county seat of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P36 ?X . ?X wdt:P281 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown capital ?X . ?X postal code ?ans1}"
        },
        "original": {
            "question": "What is the postcode of the county seat of the Province of Georgia",
            "query": "SELECT ?answer WHERE { wd:Q785035 wdt:P36 ?X . ?X wdt:P281 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Province of Georgia capital ?X . ?X postal code ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Province of Georgia",
            "choppedEntity": "Q785035"
        }
    },
    {
        "chopped": {
            "question": "Is 15893 the PPP GDP per capita of ",
            "query": "ASK WHERE { ?unknown wdt:P2299 ?obj FILTER(?obj = 15893) } ",
            "NLQuery": "ASK WHERE { ?unknown PPP GDP per capita ?obj FILTER(?obj = 15893) } "
        },
        "original": {
            "question": "Is 15893 the PPP GDP per capita of Brazil",
            "query": "ASK WHERE { wd:Q155 wdt:P2299 ?obj FILTER(?obj = 15893) } ",
            "NLQuery": "ASK WHERE { Brazil PPP GDP per capita ?obj FILTER(?obj = 15893) } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Brazil",
            "choppedEntity": "Q155"
        }
    },
    {
        "chopped": {
            "question": "How many editors are by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P98 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub editor ?unknown }"
        },
        "original": {
            "question": "How many editors are by Friedrich Schiller",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P98 wd:Q22670 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub editor Friedrich Schiller }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Friedrich Schiller",
            "choppedEntity": "Q22670"
        }
    },
    {
        "chopped": {
            "question": "What commemorates ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P547 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown commemorates ?ans1}"
        },
        "original": {
            "question": "What commemorates Christmas",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q19809 wdt:P547 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Christmas commemorates ?answer}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "Christmas",
            "choppedEntity": "Q19809"
        }
    },
    {
        "chopped": {
            "question": "Name the football club associated with the Head coach as ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P286 ?unknown . ?sbj wdt:P31 wd:Q476028 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj head coach ?unknown . ?sbj instance of association football club } "
        },
        "original": {
            "question": "Name the football club associated with the Head coach as Alex Ferguson",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P286 wd:Q44980 . ?sbj wdt:P31 wd:Q476028 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj head coach Alex Ferguson . ?sbj instance of association football club } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Alex Ferguson",
            "choppedEntity": "Q44980"
        }
    },
    {
        "chopped": {
            "question": "Title the football club related with the Head coach as ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P286 ?unknown . ?sbj wdt:P31 wd:Q476028 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj head coach ?unknown . ?sbj instance of association football club } "
        },
        "original": {
            "question": "Title the football club related with the Head coach as Alex Ferguson",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P286 wd:Q44980 . ?sbj wdt:P31 wd:Q476028 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj head coach Alex Ferguson . ?sbj instance of association football club } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Alex Ferguson",
            "choppedEntity": "Q44980"
        }
    },
    {
        "chopped": {
            "question": "What is the administrative body of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P190 ?unknown . ?sbj wdt:P31 wd:Q5119 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj twinned administrative body ?unknown . ?sbj instance of capital } "
        },
        "original": {
            "question": "What is the administrative body of Bilbao",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P190 wd:Q8692 . ?sbj wdt:P31 wd:Q5119 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj twinned administrative body Bilbao . ?sbj instance of capital } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Bilbao",
            "choppedEntity": "Q8692"
        }
    },
    {
        "chopped": {
            "question": "What is the authoritative body of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P190 ?unknown . ?sbj wdt:P31 wd:Q5119 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj twinned administrative body ?unknown . ?sbj instance of capital } "
        },
        "original": {
            "question": "What is the authoritative body of Bilbao",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P190 wd:Q8692 . ?sbj wdt:P31 wd:Q5119 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj twinned administrative body Bilbao . ?sbj instance of capital } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Bilbao",
            "choppedEntity": "Q8692"
        }
    },
    {
        "chopped": {
            "question": "Which is the FFA ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3767 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown French Athletics Federation athlete ID ?ans1}"
        },
        "original": {
            "question": "Which is the FFA ID for Marie-Jos\u00e9 P\u00e9rec",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q228808 wdt:P3767 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Marie-Jos\u00e9 P\u00e9rec French Athletics Federation athlete ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Marie-Jos\u00e9 P\u00e9rec",
            "choppedEntity": "Q228808"
        }
    },
    {
        "chopped": {
            "question": "Which is the MAC Address Block Large ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4776 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown MAC Address Block Large ID ?ans1}"
        },
        "original": {
            "question": "Which is the MAC Address Block Large ID for Nokia",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1418 wdt:P4776 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Nokia MAC Address Block Large ID ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Nokia",
            "choppedEntity": "Q1418"
        }
    },
    {
        "chopped": {
            "question": "What is Paul's deathplace, which his bordered by ",
            "query": "SELECT ?ans1 WHERE { wd:Q9200 wdt:P20 ?ans1 . ?ans1 wdt:P47 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Paul place of death ?ans1 . ?ans1 shares border with ?unknown}"
        },
        "original": {
            "question": "What is Paul's deathplace, which his bordered by Formello",
            "query": "SELECT ?answer WHERE { wd:Q9200 wdt:P20 ?answer . ?answer wdt:P47 wd:Q242645}",
            "NLQuery": "SELECT ?answer WHERE { Paul place of death ?answer . ?answer shares border with Formello}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Formello",
            "choppedEntity": "Q242645"
        }
    },
    {
        "chopped": {
            "question": "What is the deathplace of Paul, bordered by ",
            "query": "SELECT ?ans1 WHERE { wd:Q9200 wdt:P20 ?ans1 . ?ans1 wdt:P47 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Paul place of death ?ans1 . ?ans1 shares border with ?unknown}"
        },
        "original": {
            "question": "What is the deathplace of Paul, bordered by Formello",
            "query": "SELECT ?answer WHERE { wd:Q9200 wdt:P20 ?answer . ?answer wdt:P47 wd:Q242645}",
            "NLQuery": "SELECT ?answer WHERE { Paul place of death ?answer . ?answer shares border with Formello}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Formello",
            "choppedEntity": "Q242645"
        }
    },
    {
        "chopped": {
            "question": "What is the lake inflow and the drainage basin of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P200 ?ans1 . ?unknown wdt:P4614 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown inflows ?ans1 . ?unknown drainage basin ?ans2 }"
        },
        "original": {
            "question": "What is the lake inflow and the drainage basin of the Hoover Dam",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q172822 wdt:P200 ?ans_1 . wd:Q172822 wdt:P4614 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Hoover Dam inflows ?ans_1 . Hoover Dam drainage basin ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "the Hoover Dam",
            "choppedEntity": "Q172822"
        }
    },
    {
        "chopped": {
            "question": "Name the written work followed by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P155 ?unknown . ?sbj wdt:P31 wd:Q47461344 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj follows ?unknown . ?sbj instance of written work } "
        },
        "original": {
            "question": "Name the written work followed by Pride and Prejudice",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P155 wd:Q170583 . ?sbj wdt:P31 wd:Q47461344 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj follows Pride and Prejudice . ?sbj instance of written work } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Pride and Prejudice",
            "choppedEntity": "Q170583"
        }
    },
    {
        "chopped": {
            "question": "Title the composed work taken after by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P155 ?unknown . ?sbj wdt:P31 wd:Q47461344 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj follows ?unknown . ?sbj instance of written work } "
        },
        "original": {
            "question": "Title the composed work taken after by Pride and Prejudice",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P155 wd:Q170583 . ?sbj wdt:P31 wd:Q47461344 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj follows Pride and Prejudice . ?sbj instance of written work } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Pride and Prejudice",
            "choppedEntity": "Q170583"
        }
    },
    {
        "chopped": {
            "question": "Is j.m.g. le clezio the real name of ",
            "query": "SELECT ?ans1 WHERE { wd:Q42037 p:P735 ?s . ?s ps:P735 ?unknown . ?s pq:P1545 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Jean-Marie Gustave Le Cl\u00e9zio given name ?s . ?s given name ?unknown . ?s series ordinal ?ans1}"
        },
        "original": {
            "question": "Is j.m.g. le clezio the real name of Gustave",
            "query": "SELECT ?value WHERE { wd:Q42037 p:P735 ?s . ?s ps:P735 wd:Q18020453 . ?s pq:P1545 ?value}",
            "NLQuery": "SELECT ?value WHERE { Jean-Marie Gustave Le Cl\u00e9zio given name ?s . ?s given name Gustave . ?s series ordinal ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Gustave",
            "choppedEntity": "Q18020453"
        }
    },
    {
        "chopped": {
            "question": "Where is the campus located for ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P276 ?unknown . ?sbj wdt:P31 wd:Q209465 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj location ?unknown . ?sbj instance of campus } "
        },
        "original": {
            "question": "Where is the campus located for Yale University",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P276 wd:Q49112 . ?sbj wdt:P31 wd:Q209465 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj location Yale University . ?sbj instance of campus } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Yale University",
            "choppedEntity": "Q49112"
        }
    },
    {
        "chopped": {
            "question": "Did the Foo Fighters record with RCA Records and ",
            "query": "ASK WHERE { wd:Q483718 wdt:P264 wd:Q202585 . wd:Q483718 wdt:P264 ?unknown }",
            "NLQuery": "ASK WHERE { Foo Fighters record label RCA Records . Foo Fighters record label ?unknown }"
        },
        "original": {
            "question": "Did the Foo Fighters record with RCA Records and Capitol Music Group",
            "query": "ASK WHERE { wd:Q483718 wdt:P264 wd:Q202585 . wd:Q483718 wdt:P264 wd:Q2937480 }",
            "NLQuery": "ASK WHERE { Foo Fighters record label RCA Records . Foo Fighters record label Capitol Music Group }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Capitol Music Group",
            "choppedEntity": "Q2937480"
        }
    },
    {
        "chopped": {
            "question": "Did RCA Records or Capitol Music Group record ",
            "query": "ASK WHERE { ?unknown wdt:P264 wd:Q202585 . ?unknown wdt:P264 wd:Q2937480 }",
            "NLQuery": "ASK WHERE { ?unknown record label RCA Records . ?unknown record label Capitol Music Group }"
        },
        "original": {
            "question": "Did RCA Records or Capitol Music Group record the Foo Fighters",
            "query": "ASK WHERE { wd:Q483718 wdt:P264 wd:Q202585 . wd:Q483718 wdt:P264 wd:Q2937480 }",
            "NLQuery": "ASK WHERE { Foo Fighters record label RCA Records . Foo Fighters record label Capitol Music Group }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Foo Fighters",
            "choppedEntity": "Q483718"
        }
    },
    {
        "chopped": {
            "question": "where is the office held by head of government and head of state of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P1313 ?ans1 . ?unknown wdt:P35 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown office held by head of government ?ans1 . ?unknown head of state ?ans2 }"
        },
        "original": {
            "question": "where is the office held by head of government and head of state of Himachal_Pradesh",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q1177 wdt:P1313 ?ans_1 . wd:Q1177 wdt:P35 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Himachal Pradesh office held by head of government ?ans_1 . Himachal Pradesh head of state ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Himachal_Pradesh",
            "choppedEntity": "Q1177"
        }
    },
    {
        "chopped": {
            "question": "Where is the head of government and state office held in ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P1313 ?ans1 . ?unknown wdt:P35 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown office held by head of government ?ans1 . ?unknown head of state ?ans2 }"
        },
        "original": {
            "question": "Where is the head of government and state office held in Himachal Pradesh",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q1177 wdt:P1313 ?ans_1 . wd:Q1177 wdt:P35 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Himachal Pradesh office held by head of government ?ans_1 . Himachal Pradesh head of state ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Himachal Pradesh",
            "choppedEntity": "Q1177"
        }
    },
    {
        "chopped": {
            "question": "What position that Kurt Georg Kiesinger held was replaced by ",
            "query": "SELECT ?ans1 WHERE { wd:Q2512 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1365 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Kurt Georg Kiesinger position held ?s . ?s position held ?ans1 . ?s replaces ?unknown }"
        },
        "original": {
            "question": "What position that Kurt Georg Kiesinger held was replaced by Hans Ehard",
            "query": "SELECT ?obj WHERE { wd:Q2512 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q67597 }",
            "NLQuery": "SELECT ?obj WHERE { Kurt Georg Kiesinger position held ?s . ?s position held ?obj . ?s replaces Hans Ehard }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Hans Ehard",
            "choppedEntity": "Q67597"
        }
    },
    {
        "chopped": {
            "question": "What position of Kurt Georg Kiesinger's was replaced by ",
            "query": "SELECT ?ans1 WHERE { wd:Q2512 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1365 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Kurt Georg Kiesinger position held ?s . ?s position held ?ans1 . ?s replaces ?unknown }"
        },
        "original": {
            "question": "What position of Kurt Georg Kiesinger's was replaced by Hans Ehard",
            "query": "SELECT ?obj WHERE { wd:Q2512 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q67597 }",
            "NLQuery": "SELECT ?obj WHERE { Kurt Georg Kiesinger position held ?s . ?s position held ?obj . ?s replaces Hans Ehard }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Hans Ehard",
            "choppedEntity": "Q67597"
        }
    },
    {
        "chopped": {
            "question": "Where is the place of publication of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P291 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 place of publication ?unknown}"
        },
        "original": {
            "question": "Where is the place of publication of Trujillo",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P291 wd:Q214173}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer place of publication Trujillo}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Trujillo",
            "choppedEntity": "Q214173"
        }
    },
    {
        "chopped": {
            "question": "Which is the nomination for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1411 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown nominated for ?ans1}"
        },
        "original": {
            "question": "Which is the nomination for Jagjit Singh",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q107067 wdt:P1411 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Jagjit Singh nominated for ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jagjit Singh",
            "choppedEntity": "Q107067"
        }
    },
    {
        "chopped": {
            "question": "How many doctoral advisors are determined for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P184 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown doctoral advisor ?obj }"
        },
        "original": {
            "question": "How many doctoral advisors are determined for Gottfried Wilhelm Leibniz",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q9047 wdt:P184 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Gottfried Wilhelm Leibniz doctoral advisor ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Gottfried Wilhelm Leibniz",
            "choppedEntity": "Q9047"
        }
    },
    {
        "chopped": {
            "question": "Which is the number of the doctoral advisers that are determined for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P184 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown doctoral advisor ?obj }"
        },
        "original": {
            "question": "Which is the number of the doctoral advisers that are determined for Gottfried Wilhelm Leibniz",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q9047 wdt:P184 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Gottfried Wilhelm Leibniz doctoral advisor ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Gottfried Wilhelm Leibniz",
            "choppedEntity": "Q9047"
        }
    },
    {
        "chopped": {
            "question": "What is the surname of Keiko Matsuzaka, whose audio language is ",
            "query": "SELECT ?ans1 WHERE { wd:Q717819 wdt:P734 ?ans1 . ?ans1 wdt:P407 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Keiko Matsuzaka family name ?ans1 . ?ans1 language of work or name ?unknown}"
        },
        "original": {
            "question": "What is the surname of Keiko Matsuzaka, whose audio language is Japanese",
            "query": "SELECT ?answer WHERE { wd:Q717819 wdt:P734 ?answer . ?answer wdt:P407 wd:Q5287}",
            "NLQuery": "SELECT ?answer WHERE { Keiko Matsuzaka family name ?answer . ?answer language of work or name Japanese}"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Japanese",
            "choppedEntity": "Q5287"
        }
    },
    {
        "chopped": {
            "question": "What is the surname of Keiko Matsuzaka, whose sound dialect is ",
            "query": "SELECT ?ans1 WHERE { wd:Q717819 wdt:P734 ?ans1 . ?ans1 wdt:P407 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Keiko Matsuzaka family name ?ans1 . ?ans1 language of work or name ?unknown}"
        },
        "original": {
            "question": "What is the surname of Keiko Matsuzaka, whose sound dialect is Japanese",
            "query": "SELECT ?answer WHERE { wd:Q717819 wdt:P734 ?answer . ?answer wdt:P407 wd:Q5287}",
            "NLQuery": "SELECT ?answer WHERE { Keiko Matsuzaka family name ?answer . ?answer language of work or name Japanese}"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Japanese",
            "choppedEntity": "Q5287"
        }
    },
    {
        "chopped": {
            "question": "What was Laurie Metcalf nominated for at the 62nd ",
            "query": "SELECT ?ans1 WHERE { wd:Q236711 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Laurie Metcalf nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "What was Laurie Metcalf nominated for at the 62nd Tony Awards",
            "query": "SELECT ?obj WHERE { wd:Q236711 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q1536397 }",
            "NLQuery": "SELECT ?obj WHERE { Laurie Metcalf nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 62nd Tony Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Tony Awards",
            "choppedEntity": "Q1536397"
        }
    },
    {
        "chopped": {
            "question": "What award was Laurie Metcalf nominated for at the 62nd ",
            "query": "SELECT ?ans1 WHERE { wd:Q236711 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Laurie Metcalf nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "What award was Laurie Metcalf nominated for at the 62nd Tony Awards",
            "query": "SELECT ?obj WHERE { wd:Q236711 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q1536397 }",
            "NLQuery": "SELECT ?obj WHERE { Laurie Metcalf nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 62nd Tony Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Tony Awards",
            "choppedEntity": "Q1536397"
        }
    },
    {
        "chopped": {
            "question": "How many conflicts were in ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P607 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub conflict ?unknown }"
        },
        "original": {
            "question": "How many conflicts were in the Korean War",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P607 wd:Q8663 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub conflict Korean War }"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the Korean War",
            "choppedEntity": "Q8663"
        }
    },
    {
        "chopped": {
            "question": "What number of contentions were in ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P607 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub conflict ?unknown }"
        },
        "original": {
            "question": "What number of contentions were in the Korean war",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P607 wd:Q8663 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub conflict Korean War }"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the Korean war",
            "choppedEntity": "Q8663"
        }
    },
    {
        "chopped": {
            "question": "What is FINA athlete ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3408 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown FINA athlete ID ?ans1}"
        },
        "original": {
            "question": "What is FINA athlete ID for Ryan Lochte",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q201517 wdt:P3408 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Ryan Lochte FINA athlete ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ryan Lochte",
            "choppedEntity": "Q201517"
        }
    },
    {
        "chopped": {
            "question": "What is the profession of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P106 ?X . ?X wdt:P425 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown occupation ?X . ?X field of this occupation ?ans1}"
        },
        "original": {
            "question": "What is the profession of Oleg Deripaska",
            "query": "SELECT ?answer WHERE { wd:Q315514 wdt:P106 ?X . ?X wdt:P425 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Oleg Deripaska occupation ?X . ?X field of this occupation ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Oleg Deripaska",
            "choppedEntity": "Q315514"
        }
    },
    {
        "chopped": {
            "question": "when did David Attenborough become the member of ",
            "query": "SELECT ?ans1 WHERE { wd:Q183337 p:P463 ?s . ?s ps:P463 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { David Attenborough member of ?s . ?s member of ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "when did David Attenborough become the member of the Royal Society",
            "query": "SELECT ?value WHERE { wd:Q183337 p:P463 ?s . ?s ps:P463 wd:Q123885 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { David Attenborough member of ?s . ?s member of Royal Society . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Royal Society",
            "choppedEntity": "Q123885"
        }
    },
    {
        "chopped": {
            "question": "What is studied in the plays of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P641 ?X . ?X wdt:P3095 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown sport ?X . ?X practiced by ?ans1}"
        },
        "original": {
            "question": "What is studied in the plays of Ian Rush",
            "query": "SELECT ?answer WHERE { wd:Q219354 wdt:P641 ?X . ?X wdt:P3095 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Ian Rush sport ?X . ?X practiced by ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ian Rush",
            "choppedEntity": "Q219354"
        }
    },
    {
        "chopped": {
            "question": "Are there 1.942 employees at ",
            "query": "ASK WHERE { ?unknown wdt:P1128 ?obj FILTER(?obj = 1.942) } ",
            "NLQuery": "ASK WHERE { ?unknown employees ?obj FILTER(?obj = 1.942) } "
        },
        "original": {
            "question": "Are there 1.942 employees at Fu Jen Catholic University",
            "query": "ASK WHERE { wd:Q685664 wdt:P1128 ?obj FILTER(?obj = 1.942) } ",
            "NLQuery": "ASK WHERE { Fu Jen Catholic University employees ?obj FILTER(?obj = 1.942) } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Fu Jen Catholic University",
            "choppedEntity": "Q685664"
        }
    },
    {
        "chopped": {
            "question": "How many employees are there at ",
            "query": "ASK WHERE { ?unknown wdt:P1128 ?obj FILTER(?obj = 1.942) } ",
            "NLQuery": "ASK WHERE { ?unknown employees ?obj FILTER(?obj = 1.942) } "
        },
        "original": {
            "question": "How many employees are there at Fu Jen Catholic University",
            "query": "ASK WHERE { wd:Q685664 wdt:P1128 ?obj FILTER(?obj = 1.942) } ",
            "NLQuery": "ASK WHERE { Fu Jen Catholic University employees ?obj FILTER(?obj = 1.942) } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Fu Jen Catholic University",
            "choppedEntity": "Q685664"
        }
    },
    {
        "chopped": {
            "question": "As Member of the 27th Parliament of the United Kingdom, what position was held by ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P39 ?s . ?s ps:P39 wd:Q41582575 . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown position held ?s . ?s position held Member of the 27th Parliament of the United Kingdom . ?s start time ?ans1}"
        },
        "original": {
            "question": "As Member of the 27th Parliament of the United Kingdom, what position was held by Joseph Chamberlain",
            "query": "SELECT ?value WHERE { wd:Q315999 p:P39 ?s . ?s ps:P39 wd:Q41582575 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Joseph Chamberlain position held ?s . ?s position held Member of the 27th Parliament of the United Kingdom . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Joseph Chamberlain",
            "choppedEntity": "Q315999"
        }
    },
    {
        "chopped": {
            "question": "What is the position of Thomas Jefferson that is by ",
            "query": "SELECT ?ans1 WHERE { wd:Q11812 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1365 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Thomas Jefferson position held ?s . ?s position held ?ans1 . ?s replaces ?unknown }"
        },
        "original": {
            "question": "What is the position of Thomas Jefferson that is by Benjamin Franklin",
            "query": "SELECT ?obj WHERE { wd:Q11812 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q34969 }",
            "NLQuery": "SELECT ?obj WHERE { Thomas Jefferson position held ?s . ?s position held ?obj . ?s replaces Benjamin Franklin }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Benjamin Franklin",
            "choppedEntity": "Q34969"
        }
    },
    {
        "chopped": {
            "question": "What is partnered with ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2652 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown partnership with ?ans1}"
        },
        "original": {
            "question": "What is partnered with W.S. Gilbert",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q348513 wdt:P2652 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { W. S. Gilbert partnership with ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "W.S. Gilbert",
            "choppedEntity": "Q348513"
        }
    },
    {
        "chopped": {
            "question": "In Germany, who owns the copyright to ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P3931 ?obj . ?obj wdt:P31 wd:Q1221156 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown copyright holder ?obj . ?obj instance of state of Germany } "
        },
        "original": {
            "question": "In Germany, who owns the copyright to Mein Kampf",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q48244 wdt:P3931 ?obj . ?obj wdt:P31 wd:Q1221156 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Mein Kampf copyright holder ?obj . ?obj instance of state of Germany } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mein Kampf",
            "choppedEntity": "Q48244"
        }
    },
    {
        "chopped": {
            "question": "What was co-founded by alumnus ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P69 ?X . ?X wdt:P112 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown educated at ?X . ?X founded by ?ans1}"
        },
        "original": {
            "question": "What was co-founded by alumnus Guido Bertolaso",
            "query": "SELECT ?answer WHERE { wd:Q3119409 wdt:P69 ?X . ?X wdt:P112 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Guido Bertolaso educated at ?X . ?X founded by ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Guido Bertolaso",
            "choppedEntity": "Q3119409"
        }
    },
    {
        "chopped": {
            "question": "How many software engines are used to play ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P408 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown software engine ?obj }"
        },
        "original": {
            "question": "How many software engines are used to play Wolfenstein",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q4357563 wdt:P408 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Wolfenstein software engine ?obj }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Wolfenstein",
            "choppedEntity": "Q4357563"
        }
    },
    {
        "chopped": {
            "question": "How many game engines are need to run ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P408 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown software engine ?obj }"
        },
        "original": {
            "question": "How many game engines are need to run Wolfenstein",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q4357563 wdt:P408 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Wolfenstein software engine ?obj }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Wolfenstein",
            "choppedEntity": "Q4357563"
        }
    },
    {
        "chopped": {
            "question": "Who graduated from Ratan Tata whose parent company is ",
            "query": "SELECT ?ans1 WHERE { wd:Q333460 wdt:P69 ?ans1 . ?ans1 wdt:P355 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Ratan Tata educated at ?ans1 . ?ans1 subsidiary ?unknown}"
        },
        "original": {
            "question": "Who graduated from Ratan Tata whose parent company is Sleep and Human Health Institute",
            "query": "SELECT ?answer WHERE { wd:Q333460 wdt:P69 ?answer . ?answer wdt:P355 wd:Q30280744}",
            "NLQuery": "SELECT ?answer WHERE { Ratan Tata educated at ?answer . ?answer subsidiary Sleep and Human Health Institute}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Sleep and Human Health Institute",
            "choppedEntity": "Q30280744"
        }
    },
    {
        "chopped": {
            "question": "How many are indigenous to ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P2341 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub indigenous to ?unknown }"
        },
        "original": {
            "question": "How many are indigenous to Quebec",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P2341 wd:Q176 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub indigenous to Quebec }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Quebec",
            "choppedEntity": "Q176"
        }
    },
    {
        "chopped": {
            "question": "Who is the student of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1066 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown student of ?ans1}"
        },
        "original": {
            "question": "Who is the student of Raphael",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q5597 wdt:P1066 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Raphael student of ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Raphael",
            "choppedEntity": "Q5597"
        }
    },
    {
        "chopped": {
            "question": "What is difference from Tsardom of Russia,that the official language is ",
            "query": "SELECT ?ans1 WHERE { wd:Q186096 wdt:P1889 ?ans1 . ?ans1 wdt:P37 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Tsardom of Russia different from ?ans1 . ?ans1 official language ?unknown}"
        },
        "original": {
            "question": "What is difference from Tsardom of Russia,that the official language is Nogai",
            "query": "SELECT ?answer WHERE { wd:Q186096 wdt:P1889 ?answer . ?answer wdt:P37 wd:Q33871}",
            "NLQuery": "SELECT ?answer WHERE { Tsardom of Russia different from ?answer . ?answer official language Nogai}"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Nogai",
            "choppedEntity": "Q33871"
        }
    },
    {
        "chopped": {
            "question": "What is difference from Tsardom of Russia,that the reputable language is ",
            "query": "SELECT ?ans1 WHERE { wd:Q186096 wdt:P1889 ?ans1 . ?ans1 wdt:P37 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Tsardom of Russia different from ?ans1 . ?ans1 official language ?unknown}"
        },
        "original": {
            "question": "What is difference from Tsardom of Russia,that the reputable language is Nogai",
            "query": "SELECT ?answer WHERE { wd:Q186096 wdt:P1889 ?answer . ?answer wdt:P37 wd:Q33871}",
            "NLQuery": "SELECT ?answer WHERE { Tsardom of Russia different from ?answer . ?answer official language Nogai}"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Nogai",
            "choppedEntity": "Q33871"
        }
    },
    {
        "chopped": {
            "question": "When did Eduard Kohlrausch begin as rector at ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1075 ?s . ?s ps:P1075 wd:Q103919 . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown rector ?s . ?s rector Eduard Kohlrausch . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Eduard Kohlrausch begin as rector at Humboldt University of Berlin",
            "query": "SELECT ?value WHERE { wd:Q152087 p:P1075 ?s . ?s ps:P1075 wd:Q103919 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Humboldt University of Berlin rector ?s . ?s rector Eduard Kohlrausch . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Humboldt University of Berlin",
            "choppedEntity": "Q152087"
        }
    },
    {
        "chopped": {
            "question": "When did Eduard Kohlrausch start as minister at ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1075 ?s . ?s ps:P1075 wd:Q103919 . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown rector ?s . ?s rector Eduard Kohlrausch . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Eduard Kohlrausch start as minister at Humboldt College of Berlin",
            "query": "SELECT ?value WHERE { wd:Q152087 p:P1075 ?s . ?s ps:P1075 wd:Q103919 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Humboldt University of Berlin rector ?s . ?s rector Eduard Kohlrausch . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Humboldt College of Berlin",
            "choppedEntity": "Q152087"
        }
    },
    {
        "chopped": {
            "question": "Which is the enterprise for the manufacturer of the ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P176 ?obj . ?obj wdt:P31 wd:Q6881511 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown manufacturer ?obj . ?obj instance of enterprise } "
        },
        "original": {
            "question": "Which is the enterprise for the manufacturer of the Minigun",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q864060 wdt:P176 ?obj . ?obj wdt:P31 wd:Q6881511 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Minigun manufacturer ?obj . ?obj instance of enterprise } "
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Minigun",
            "choppedEntity": "Q864060"
        }
    },
    {
        "chopped": {
            "question": "Who was King of spain before ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P39 ?s . ?s ps:P39 wd:Q3847454 . ?s pq:P1366 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown position held ?s . ?s position held King of Spain . ?s replaced by ?ans1}"
        },
        "original": {
            "question": "Who was King of spain before Joseph Buonaparte",
            "query": "SELECT ?value WHERE { wd:Q7726 p:P39 ?s . ?s ps:P39 wd:Q3847454 . ?s pq:P1366 ?value}",
            "NLQuery": "SELECT ?value WHERE { Joseph Bonaparte position held ?s . ?s position held King of Spain . ?s replaced by ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Joseph Buonaparte",
            "choppedEntity": "Q7726"
        }
    },
    {
        "chopped": {
            "question": "Which is treaty location of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P276 ?unknown . ?sbj wdt:P31 wd:Q131569 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj location ?unknown . ?sbj instance of treaty } "
        },
        "original": {
            "question": "Which is treaty location of Soviet Union",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P276 wd:Q15180 . ?sbj wdt:P31 wd:Q131569 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj location Soviet Union . ?sbj instance of treaty } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Soviet Union",
            "choppedEntity": "Q15180"
        }
    },
    {
        "chopped": {
            "question": "Which is settlement area of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P276 ?unknown . ?sbj wdt:P31 wd:Q131569 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj location ?unknown . ?sbj instance of treaty } "
        },
        "original": {
            "question": "Which is settlement area of Soviet Union",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P276 wd:Q15180 . ?sbj wdt:P31 wd:Q131569 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj location Soviet Union . ?sbj instance of treaty } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Soviet Union",
            "choppedEntity": "Q15180"
        }
    },
    {
        "chopped": {
            "question": "In the start time of 992-0-0, what is the twinned administrative body of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P190 ?s . ?s ps:P190 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1992')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown twinned administrative body ?s . ?s twinned administrative body ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),'1992')) }"
        },
        "original": {
            "question": "In the start time of 992-0-0, what is the twinned administrative body of Salzburg",
            "query": "SELECT ?obj WHERE { wd:Q34713 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1992')) }",
            "NLQuery": "SELECT ?obj WHERE { Salzburg twinned administrative body ?s . ?s twinned administrative body ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1992')) }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Salzburg",
            "choppedEntity": "Q34713"
        }
    },
    {
        "chopped": {
            "question": "What is the Google Arts & Culture ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4702 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Google Arts & Culture partner ID ?ans1}"
        },
        "original": {
            "question": "What is the Google Arts & Culture ID for Hangzhou",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q4970 wdt:P4702 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Hangzhou Google Arts & Culture partner ID ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Hangzhou",
            "choppedEntity": "Q4970"
        }
    },
    {
        "chopped": {
            "question": "Was the bodhran played by ",
            "query": "ASK WHERE { ?unknown wdt:P1303 wd:Q244976 }",
            "NLQuery": "ASK WHERE { ?unknown instrument bodhr\u00e1n }"
        },
        "original": {
            "question": "Was the bodhran played by Jim Morrison",
            "query": "ASK WHERE { wd:Q44301 wdt:P1303 wd:Q244976 }",
            "NLQuery": "ASK WHERE { Jim Morrison instrument bodhr\u00e1n }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jim Morrison",
            "choppedEntity": "Q44301"
        }
    },
    {
        "chopped": {
            "question": "What is the Lemon 64 identifier of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4816 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Lemon 64 identifier ?ans1}"
        },
        "original": {
            "question": "What is the Lemon 64 identifier of Frogger",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q524267 wdt:P4816 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Frogger Lemon 64 identifier ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Frogger",
            "choppedEntity": "Q524267"
        }
    },
    {
        "chopped": {
            "question": "Who is the choreographer for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P1809 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 choreographer ?unknown}"
        },
        "original": {
            "question": "Who is the choreographer for Maurice Be'jart",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P1809 wd:Q217764}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer choreographer Maurice B\u00e9jart}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Maurice Be'jart",
            "choppedEntity": "Q217764"
        }
    },
    {
        "chopped": {
            "question": "Which is the mosque commissioned by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P88 ?unknown . ?sbj wdt:P31 wd:Q32815 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj commissioned by ?unknown . ?sbj instance of mosque } "
        },
        "original": {
            "question": "Which is the mosque commissioned by Suleiman the Magnificent",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P88 wd:Q8474 . ?sbj wdt:P31 wd:Q32815 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj commissioned by Suleiman the Magnificent . ?sbj instance of mosque } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Suleiman the Magnificent",
            "choppedEntity": "Q8474"
        }
    },
    {
        "chopped": {
            "question": "When and after the series of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P179 ?s . ?s ps:P179 ?ans2 . ?s pq:P155 ?ans1 . }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown part of the series ?s . ?s part of the series ?ans2 . ?s follows ?ans1 . }"
        },
        "original": {
            "question": "When and after the series of 1",
            "query": "SELECT ?value1 ?obj WHERE { wd:Q199 p:P179 ?s . ?s ps:P179 ?obj . ?s pq:P155 ?value1 . }",
            "NLQuery": "SELECT ?value1 ?obj WHERE { 1 part of the series ?s . ?s part of the series ?obj . ?s follows ?value1 . }"
        },
        "meta": {
            "entityTagNER": "CARDINAL",
            "choppedText": "1",
            "choppedEntity": "Q199"
        }
    },
    {
        "chopped": {
            "question": "What is the name of the Queen in ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P674 ?obj . ?obj wdt:P31 wd:Q16658194 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown characters ?obj . ?obj instance of fictional queen } "
        },
        "original": {
            "question": "What is the name of the Queen in Snow White",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q11831 wdt:P674 ?obj . ?obj wdt:P31 wd:Q16658194 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Snow White characters ?obj . ?obj instance of fictional queen } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Snow White",
            "choppedEntity": "Q11831"
        }
    },
    {
        "chopped": {
            "question": "What is the title of the Ruler in ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P674 ?obj . ?obj wdt:P31 wd:Q16658194 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown characters ?obj . ?obj instance of fictional queen } "
        },
        "original": {
            "question": "What is the title of the Ruler in Snow White",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q11831 wdt:P674 ?obj . ?obj wdt:P31 wd:Q16658194 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Snow White characters ?obj . ?obj instance of fictional queen } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Snow White",
            "choppedEntity": "Q11831"
        }
    },
    {
        "chopped": {
            "question": "Who is the honours of James Cameron, whose administrative territorial entity is ",
            "query": "SELECT ?ans1 WHERE { wd:Q42574 wdt:P166 ?ans1 . ?ans1 wdt:P131 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { James Cameron award received ?ans1 . ?ans1 located in the administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "Who is the honours of James Cameron, whose administrative territorial entity is California",
            "query": "SELECT ?answer WHERE { wd:Q42574 wdt:P166 ?answer . ?answer wdt:P131 wd:Q99}",
            "NLQuery": "SELECT ?answer WHERE { James Cameron award received ?answer . ?answer located in the administrative territorial entity California}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "California",
            "choppedEntity": "Q99"
        }
    },
    {
        "chopped": {
            "question": "Who is the respects of James Cameron, whose regulatory regional substance is ",
            "query": "SELECT ?ans1 WHERE { wd:Q42574 wdt:P166 ?ans1 . ?ans1 wdt:P131 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { James Cameron award received ?ans1 . ?ans1 located in the administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "Who is the respects of James Cameron, whose regulatory regional substance is California",
            "query": "SELECT ?answer WHERE { wd:Q42574 wdt:P166 ?answer . ?answer wdt:P131 wd:Q99}",
            "NLQuery": "SELECT ?answer WHERE { James Cameron award received ?answer . ?answer located in the administrative territorial entity California}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "California",
            "choppedEntity": "Q99"
        }
    },
    {
        "chopped": {
            "question": "What is the etymology of Fourier optics, discovered by doctoral student, ",
            "query": "SELECT ?ans1 WHERE { wd:Q1003236 wdt:P138 ?ans1 . ?ans1 wdt:P185 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Fourier optics named after ?ans1 . ?ans1 doctoral student ?unknown}"
        },
        "original": {
            "question": "What is the etymology of Fourier optics, discovered by doctoral student, Claude-Louis Navier",
            "query": "SELECT ?answer WHERE { wd:Q1003236 wdt:P138 ?answer . ?answer wdt:P185 wd:Q313512}",
            "NLQuery": "SELECT ?answer WHERE { Fourier optics named after ?answer . ?answer doctoral student Claude-Louis Navier}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Claude-Louis Navier",
            "choppedEntity": "Q313512"
        }
    },
    {
        "chopped": {
            "question": "What is the etymology of Fourier optics, determined by means of doctoral student, ",
            "query": "SELECT ?ans1 WHERE { wd:Q1003236 wdt:P138 ?ans1 . ?ans1 wdt:P185 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Fourier optics named after ?ans1 . ?ans1 doctoral student ?unknown}"
        },
        "original": {
            "question": "What is the etymology of Fourier optics, determined by means of doctoral student, Claude-Louis Navier",
            "query": "SELECT ?answer WHERE { wd:Q1003236 wdt:P138 ?answer . ?answer wdt:P185 wd:Q313512}",
            "NLQuery": "SELECT ?answer WHERE { Fourier optics named after ?answer . ?answer doctoral student Claude-Louis Navier}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Claude-Louis Navier",
            "choppedEntity": "Q313512"
        }
    },
    {
        "chopped": {
            "question": "How many directors of photography are there for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P344 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown director of photography ?obj }"
        },
        "original": {
            "question": "How many directors of photography are there for Triumph of the Will",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q156497 wdt:P344 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Triumph of the Will director of photography ?obj }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Triumph of the Will",
            "choppedEntity": "Q156497"
        }
    },
    {
        "chopped": {
            "question": "What's the number of photography directors for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P344 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown director of photography ?obj }"
        },
        "original": {
            "question": "What's the number of photography directors for Triumph of the Will",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q156497 wdt:P344 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Triumph of the Will director of photography ?obj }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Triumph of the Will",
            "choppedEntity": "Q156497"
        }
    },
    {
        "chopped": {
            "question": "What is the date of death for Kim Young-sook, the wife of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P26 ?s . ?s ps:P26 wd:Q714481 . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown spouse ?s . ?s spouse Kim Young-sook . ?s end time ?ans1}"
        },
        "original": {
            "question": "What is the date of death for Kim Young-sook, the wife of Kim Jong-il",
            "query": "SELECT ?value WHERE { wd:Q10665 p:P26 ?s . ?s ps:P26 wd:Q714481 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Kim Jong-il spouse ?s . ?s spouse Kim Young-sook . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Kim Jong-il",
            "choppedEntity": "Q10665"
        }
    },
    {
        "chopped": {
            "question": "Who uses ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P400 ?X . ?X wdt:P1414 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown platform ?X . ?X GUI toolkit or framework ?ans1}"
        },
        "original": {
            "question": "Who uses Pro Evolution Soccer",
            "query": "SELECT ?answer WHERE { wd:Q467374 wdt:P400 ?X . ?X wdt:P1414 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Pro Evolution Soccer platform ?X . ?X GUI toolkit or framework ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Pro Evolution Soccer",
            "choppedEntity": "Q467374"
        }
    },
    {
        "chopped": {
            "question": "What is the fashion house of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P108 ?obj . ?obj wdt:P31 wd:Q3661311 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown employer ?obj . ?obj instance of fashion house } "
        },
        "original": {
            "question": "What is the fashion house of Alexander McQueen",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q207939 wdt:P108 ?obj . ?obj wdt:P31 wd:Q3661311 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Alexander McQueen employer ?obj . ?obj instance of fashion house } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Alexander McQueen",
            "choppedEntity": "Q207939"
        }
    },
    {
        "chopped": {
            "question": "Which municipality of Germany has an agreement with ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P190 ?obj . ?obj wdt:P31 wd:Q262166 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown twinned administrative body ?obj . ?obj instance of municipality of Germany } "
        },
        "original": {
            "question": "Which municipality of Germany has an agreement with Cardiff",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q10690 wdt:P190 ?obj . ?obj wdt:P31 wd:Q262166 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Cardiff twinned administrative body ?obj . ?obj instance of municipality of Germany } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Cardiff",
            "choppedEntity": "Q10690"
        }
    },
    {
        "chopped": {
            "question": "In what region that has a Jinan as a twin city was ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P276 ?ans1 . ?ans1 wdt:P190 wd:Q170247}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown location ?ans1 . ?ans1 twinned administrative body Jinan}"
        },
        "original": {
            "question": "In what region that has a Jinan as a twin city was the Peace of Augsburg",
            "query": "SELECT ?answer WHERE { wd:Q154577 wdt:P276 ?answer . ?answer wdt:P190 wd:Q170247}",
            "NLQuery": "SELECT ?answer WHERE { Peace of Augsburg location ?answer . ?answer twinned administrative body Jinan}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Peace of Augsburg",
            "choppedEntity": "Q154577"
        }
    },
    {
        "chopped": {
            "question": "In what locale that includes a Jinan as a twin city was ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P276 ?ans1 . ?ans1 wdt:P190 wd:Q170247}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown location ?ans1 . ?ans1 twinned administrative body Jinan}"
        },
        "original": {
            "question": "In what locale that includes a Jinan as a twin city was the Peace of Augsburge.",
            "query": "SELECT ?answer WHERE { wd:Q154577 wdt:P276 ?answer . ?answer wdt:P190 wd:Q170247}",
            "NLQuery": "SELECT ?answer WHERE { Peace of Augsburg location ?answer . ?answer twinned administrative body Jinan}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Peace of Augsburg?e",
            "choppedEntity": "Q154577"
        }
    },
    {
        "chopped": {
            "question": "Which is the agglutinative language for the country of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P495 ?unknown . ?sbj wdt:P31 wd:Q171263 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country of origin ?unknown . ?sbj instance of agglutinative language } "
        },
        "original": {
            "question": "Which is the agglutinative language for the country of the Russian Empire",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P495 wd:Q34266 . ?sbj wdt:P31 wd:Q171263 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country of origin Russian Empire . ?sbj instance of agglutinative language } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Russian Empire",
            "choppedEntity": "Q34266"
        }
    },
    {
        "chopped": {
            "question": "Which is the BOLD Systems taxon ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3606 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown BOLD Systems taxon ID ?ans1}"
        },
        "original": {
            "question": "Which is the BOLD Systems taxon ID for Ascomycota",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q174726 wdt:P3606 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Ascomycota BOLD Systems taxon ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Ascomycota",
            "choppedEntity": "Q174726"
        }
    },
    {
        "chopped": {
            "question": "Which is the enterprise that was the publisher of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P123 ?obj . ?obj wdt:P31 wd:Q6881511 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown publisher ?obj . ?obj instance of enterprise } "
        },
        "original": {
            "question": "Which is the enterprise that was the publisher of Space Invaders",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q220665 wdt:P123 ?obj . ?obj wdt:P31 wd:Q6881511 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Space Invaders publisher ?obj . ?obj instance of enterprise } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Space Invaders",
            "choppedEntity": "Q220665"
        }
    },
    {
        "chopped": {
            "question": "In which country is Ivano-Frankivsk, the birthplace of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P19 ?s . ?s ps:P19 wd:Q156726 . ?s pq:P131 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of birth ?s . ?s place of birth Ivano-Frankivsk . ?s located in the administrative territorial entity ?ans1}"
        },
        "original": {
            "question": "In which country is Ivano-Frankivsk, the birthplace of Svetlana Aleksievich",
            "query": "SELECT ?value WHERE { wd:Q274334 p:P19 ?s . ?s ps:P19 wd:Q156726 . ?s pq:P131 ?value}",
            "NLQuery": "SELECT ?value WHERE { Svetlana Aleksievich place of birth ?s . ?s place of birth Ivano-Frankivsk . ?s located in the administrative territorial entity ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Svetlana Aleksievich",
            "choppedEntity": "Q274334"
        }
    },
    {
        "chopped": {
            "question": "How many islands are around ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P5130 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub none ?unknown }"
        },
        "original": {
            "question": "How many islands are around Great Britain",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P5130 wd:Q23666 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub none Great Britain }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Great Britain",
            "choppedEntity": "Q23666"
        }
    },
    {
        "chopped": {
            "question": "What is the number of islands around ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P5130 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub none ?unknown }"
        },
        "original": {
            "question": "What is the number of islands around Great Britain",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P5130 wd:Q23666 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub none Great Britain }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Great Britain",
            "choppedEntity": "Q23666"
        }
    },
    {
        "chopped": {
            "question": "Who is affiliated with ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1416 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj affiliation ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who is affiliated with Columbia University",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1416 wd:Q49088 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj affiliation Columbia University . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Columbia University",
            "choppedEntity": "Q49088"
        }
    },
    {
        "chopped": {
            "question": "Who is subsidiary with ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1416 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj affiliation ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who is subsidiary with Columbia University",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1416 wd:Q49088 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj affiliation Columbia University . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Columbia University",
            "choppedEntity": "Q49088"
        }
    },
    {
        "chopped": {
            "question": "Is 4.8 the residence time of the water in ",
            "query": "ASK WHERE { ?unknown wdt:P3020 ?obj FILTER(?obj = 4.8) } ",
            "NLQuery": "ASK WHERE { ?unknown residence time of water ?obj FILTER(?obj = 4.8) } "
        },
        "original": {
            "question": "Is 4.8 the residence time of the water in Lake Maggiore",
            "query": "ASK WHERE { wd:Q14379 wdt:P3020 ?obj FILTER(?obj = 4.8) } ",
            "NLQuery": "ASK WHERE { Lake Maggiore residence time of water ?obj FILTER(?obj = 4.8) } "
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Lake Maggiore",
            "choppedEntity": "Q14379"
        }
    },
    {
        "chopped": {
            "question": "Which company created ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P178 ?unknown . ?sbj wdt:P31 wd:Q431289 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj developer ?unknown . ?sbj instance of brand } "
        },
        "original": {
            "question": "Which company created Space X",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P178 wd:Q193701 . ?sbj wdt:P31 wd:Q431289 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj developer SpaceX . ?sbj instance of brand } "
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Space X",
            "choppedEntity": "Q193701"
        }
    },
    {
        "chopped": {
            "question": "Was Georg Wilhelm Friedrich Hegel write ",
            "query": "ASK WHERE { wd:Q9235 wdt:P800 ?unknown }",
            "NLQuery": "ASK WHERE { Georg Wilhelm Friedrich Hegel notable work ?unknown }"
        },
        "original": {
            "question": "Was Georg Wilhelm Friedrich Hegel write Timaeus",
            "query": "ASK WHERE { wd:Q9235 wdt:P800 wd:Q371884 }",
            "NLQuery": "ASK WHERE { Georg Wilhelm Friedrich Hegel notable work Timaeus }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Timaeus",
            "choppedEntity": "Q371884"
        }
    },
    {
        "chopped": {
            "question": "Was Georg Wilhelm Friedrich Hegel the author of ",
            "query": "ASK WHERE { wd:Q9235 wdt:P800 ?unknown }",
            "NLQuery": "ASK WHERE { Georg Wilhelm Friedrich Hegel notable work ?unknown }"
        },
        "original": {
            "question": "Was Georg Wilhelm Friedrich Hegel the author of Timaeus",
            "query": "ASK WHERE { wd:Q9235 wdt:P800 wd:Q371884 }",
            "NLQuery": "ASK WHERE { Georg Wilhelm Friedrich Hegel notable work Timaeus }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Timaeus",
            "choppedEntity": "Q371884"
        }
    },
    {
        "chopped": {
            "question": "Which is the relief location map for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1944 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown relief location map ?ans1}"
        },
        "original": {
            "question": "Which is the relief location map for Serbia",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q403 wdt:P1944 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Serbia relief location map ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Serbia",
            "choppedEntity": "Q403"
        }
    },
    {
        "chopped": {
            "question": "What is the river with the lowest slope that is located in ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q4022 . ?ans1 wdt:P4184 ?obj . ?ans1 wdt:P131 ?unknown} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of river . ?ans1 slope ?obj . ?ans1 located in the administrative territorial entity ?unknown} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the river with the lowest slope that is located in Malyn Raion",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q4022 . ?ent wdt:P4184 ?obj . ?ent wdt:P131 wd:Q2620713} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of river . ?ent slope ?obj . ?ent located in the administrative territorial entity Malyn Raion} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Malyn Raion",
            "choppedEntity": "Q2620713"
        }
    },
    {
        "chopped": {
            "question": "What is the stream with the least slant that's found in ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q4022 . ?ans1 wdt:P4184 ?obj . ?ans1 wdt:P131 ?unknown} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of river . ?ans1 slope ?obj . ?ans1 located in the administrative territorial entity ?unknown} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the stream with the least slant that's found in Malyn Raion",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q4022 . ?ent wdt:P4184 ?obj . ?ent wdt:P131 wd:Q2620713} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of river . ?ent slope ?obj . ?ent located in the administrative territorial entity Malyn Raion} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Malyn Raion",
            "choppedEntity": "Q2620713"
        }
    },
    {
        "chopped": {
            "question": "Which Award did Jane Wyman receive at the 21st ",
            "query": "SELECT ?ans1 WHERE { wd:Q95055 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Jane Wyman award received ?s . ?s award received ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "Which Award did Jane Wyman receive at the 21st Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q95055 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q917170 }",
            "NLQuery": "SELECT ?obj WHERE { Jane Wyman award received ?s . ?s award received ?obj . ?s statement is subject of 21st Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q917170"
        }
    },
    {
        "chopped": {
            "question": "Jane Wyman accepted what honor at the 21st ",
            "query": "SELECT ?ans1 WHERE { wd:Q95055 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Jane Wyman award received ?s . ?s award received ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "Jane Wyman accepted what honor at the 21st Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q95055 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q917170 }",
            "NLQuery": "SELECT ?obj WHERE { Jane Wyman award received ?s . ?s award received ?obj . ?s statement is subject of 21st Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q917170"
        }
    },
    {
        "chopped": {
            "question": "What is the title in the official language of an employee of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P108 ?X . ?X wdt:P1705 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown employer ?X . ?X native label ?ans1}"
        },
        "original": {
            "question": "What is the title in the official language of an employee of Leo Baekeland",
            "query": "SELECT ?answer WHERE { wd:Q243442 wdt:P108 ?X . ?X wdt:P1705 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Leo Baekeland employer ?X . ?X native label ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Leo Baekeland",
            "choppedEntity": "Q243442"
        }
    },
    {
        "chopped": {
            "question": "What is the  country and heritage designation for ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P17 ?ans1 . ?unknown wdt:P1435 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown country ?ans1 . ?unknown heritage designation ?ans2 }"
        },
        "original": {
            "question": "What is the  country and heritage designation for the Battle of Hastings",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q83224 wdt:P17 ?ans_1 . wd:Q83224 wdt:P1435 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Battle of Hastings country ?ans_1 . Battle of Hastings heritage designation ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the Battle of Hastings",
            "choppedEntity": "Q83224"
        }
    },
    {
        "chopped": {
            "question": "How much lake inflows to ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P200 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub inflows ?unknown }"
        },
        "original": {
            "question": "How much lake inflows to the Missouri River",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P200 wd:Q5419 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub inflows Missouri River }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Missouri River",
            "choppedEntity": "Q5419"
        }
    },
    {
        "chopped": {
            "question": "Who does the voice for the Mayor of Townsville in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P725 ?s . ?s ps:P725 ?ans1 . ?s pq:P453 wd:Q55740461 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown voice actor ?s . ?s voice actor ?ans1 . ?s character role Mayor of Townsville }"
        },
        "original": {
            "question": "Who does the voice for the Mayor of Townsville in The Powerpuff Girls",
            "query": "SELECT ?obj WHERE { wd:Q1236206 p:P725 ?s . ?s ps:P725 ?obj . ?s pq:P453 wd:Q55740461 }",
            "NLQuery": "SELECT ?obj WHERE { The Powerpuff Girls voice actor ?s . ?s voice actor ?obj . ?s character role Mayor of Townsville }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Powerpuff Girls",
            "choppedEntity": "Q1236206"
        }
    },
    {
        "chopped": {
            "question": "What is helium surname, which has cohabitant is ",
            "query": "SELECT ?ans1 WHERE { wd:Q560 wdt:P138 ?ans1 . ?ans1 wdt:P451 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { helium named after ?ans1 . ?ans1 unmarried partner ?unknown}"
        },
        "original": {
            "question": "What is helium surname, which has cohabitant is Perse",
            "query": "SELECT ?answer WHERE { wd:Q560 wdt:P138 ?answer . ?answer wdt:P451 wd:Q1333108}",
            "NLQuery": "SELECT ?answer WHERE { helium named after ?answer . ?answer unmarried partner Perse}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Perse",
            "choppedEntity": "Q1333108"
        }
    },
    {
        "chopped": {
            "question": "Did David Carrandine name John and ",
            "query": "ASK WHERE { wd:Q187038 wdt:P735 wd:Q4925477 . wd:Q187038 wdt:P735 ?unknown }",
            "NLQuery": "ASK WHERE { David Carradine given name John . David Carradine given name ?unknown }"
        },
        "original": {
            "question": "Did David Carrandine name John and Robert",
            "query": "ASK WHERE { wd:Q187038 wdt:P735 wd:Q4925477 . wd:Q187038 wdt:P735 wd:Q4927937 }",
            "NLQuery": "ASK WHERE { David Carradine given name John . David Carradine given name Robert }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Robert",
            "choppedEntity": "Q4927937"
        }
    },
    {
        "chopped": {
            "question": "Is John and Robert named by ",
            "query": "ASK WHERE { ?unknown wdt:P735 wd:Q4925477 . ?unknown wdt:P735 wd:Q4927937 }",
            "NLQuery": "ASK WHERE { ?unknown given name John . ?unknown given name Robert }"
        },
        "original": {
            "question": "Is John and Robert named by David Carrandine",
            "query": "ASK WHERE { wd:Q187038 wdt:P735 wd:Q4925477 . wd:Q187038 wdt:P735 wd:Q4927937 }",
            "NLQuery": "ASK WHERE { David Carradine given name John . David Carradine given name Robert }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "David Carrandine",
            "choppedEntity": "Q187038"
        }
    },
    {
        "chopped": {
            "question": "What borders ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P276 ?X . ?X wdt:P47 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown location ?X . ?X shares border with ?ans1}"
        },
        "original": {
            "question": "What borders the Israel Museum",
            "query": "SELECT ?answer WHERE { wd:Q46815 wdt:P276 ?X . ?X wdt:P47 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Israel Museum location ?X . ?X shares border with ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Israel Museum",
            "choppedEntity": "Q46815"
        }
    },
    {
        "chopped": {
            "question": "How many stock exchange are by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P414 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub stock exchange ?unknown }"
        },
        "original": {
            "question": "How many stock exchange are by NASDAQ",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P414 wd:Q82059 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub stock exchange NASDAQ }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "NASDAQ",
            "choppedEntity": "Q82059"
        }
    },
    {
        "chopped": {
            "question": "Let me know the number of stocks exchanged by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P414 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub stock exchange ?unknown }"
        },
        "original": {
            "question": "Let me know the number of stocks exchanged by NASDAQ",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P414 wd:Q82059 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub stock exchange NASDAQ }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "NASDAQ",
            "choppedEntity": "Q82059"
        }
    },
    {
        "chopped": {
            "question": "Was Stan Lee born in ",
            "query": "ASK WHERE { wd:Q181900 wdt:P19 ?unknown }",
            "NLQuery": "ASK WHERE { Stan Lee place of birth ?unknown }"
        },
        "original": {
            "question": "Was Stan Lee born in Manhattan",
            "query": "ASK WHERE { wd:Q181900 wdt:P19 wd:Q11299 }",
            "NLQuery": "ASK WHERE { Stan Lee place of birth Manhattan }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Manhattan",
            "choppedEntity": "Q11299"
        }
    },
    {
        "chopped": {
            "question": "Is Manhattan the birth place of ",
            "query": "ASK WHERE { ?unknown wdt:P19 wd:Q11299 }",
            "NLQuery": "ASK WHERE { ?unknown place of birth Manhattan }"
        },
        "original": {
            "question": "Is Manhattan the birth place of Stan Lee",
            "query": "ASK WHERE { wd:Q181900 wdt:P19 wd:Q11299 }",
            "NLQuery": "ASK WHERE { Stan Lee place of birth Manhattan }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Stan Lee",
            "choppedEntity": "Q181900"
        }
    },
    {
        "chopped": {
            "question": "How is the main electricity voltage divided in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P150 ?X . ?X wdt:P2884 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown contains administrative territorial entity ?X . ?X mains voltage ?ans1}"
        },
        "original": {
            "question": "How is the main electricity voltage divided in Metro Manila",
            "query": "SELECT ?answer WHERE { wd:Q13580 wdt:P150 ?X . ?X wdt:P2884 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Metro Manila contains administrative territorial entity ?X . ?X mains voltage ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Metro Manila",
            "choppedEntity": "Q13580"
        }
    },
    {
        "chopped": {
            "question": "What space agency's official language is ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P37 ?unknown . ?sbj wdt:P31 wd:Q17505024 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj official language ?unknown . ?sbj instance of space agency } "
        },
        "original": {
            "question": "What space agency's official language is Hebrew",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P37 wd:Q9288 . ?sbj wdt:P31 wd:Q17505024 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj official language Hebrew . ?sbj instance of space agency } "
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Hebrew",
            "choppedEntity": "Q9288"
        }
    },
    {
        "chopped": {
            "question": "What space agency's official dialect is ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P37 ?unknown . ?sbj wdt:P31 wd:Q17505024 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj official language ?unknown . ?sbj instance of space agency } "
        },
        "original": {
            "question": "What space agency's official dialect is Hebrew",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P37 wd:Q9288 . ?sbj wdt:P31 wd:Q17505024 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj official language Hebrew . ?sbj instance of space agency } "
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Hebrew",
            "choppedEntity": "Q9288"
        }
    },
    {
        "chopped": {
            "question": "Which is Trismegistos Geo ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1958 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Trismegistos Geo ID ?ans1}"
        },
        "original": {
            "question": "Which is Trismegistos Geo ID for Canterbury",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q29303 wdt:P1958 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Canterbury Trismegistos Geo ID ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Canterbury",
            "choppedEntity": "Q29303"
        }
    },
    {
        "chopped": {
            "question": "Who is the son of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P22 ?X . ?X wdt:P40 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown father ?X . ?X child ?ans1}"
        },
        "original": {
            "question": "Who is the son of Hydra",
            "query": "SELECT ?answer WHERE { wd:Q170379 wdt:P22 ?X . ?X wdt:P40 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Hydra father ?X . ?X child ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Hydra",
            "choppedEntity": "Q170379"
        }
    },
    {
        "chopped": {
            "question": "What position did Sean MacBride hold in the parliamentary group called ",
            "query": "SELECT ?ans1 WHERE { wd:Q244395 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P4100 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Se\u00e1n MacBride position held ?s . ?s position held ?ans1 . ?s parliamentary group ?unknown }"
        },
        "original": {
            "question": "What position did Sean MacBride hold in the parliamentary group called Clann na Poblachta",
            "query": "SELECT ?obj WHERE { wd:Q244395 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P4100 wd:Q548562 }",
            "NLQuery": "SELECT ?obj WHERE { Se\u00e1n MacBride position held ?s . ?s position held ?obj . ?s parliamentary group Clann na Poblachta }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Clann na Poblachta",
            "choppedEntity": "Q548562"
        }
    },
    {
        "chopped": {
            "question": "In the parliamentary group called Clann na Poblachta, what position was ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P4100 wd:Q548562 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown position held ?s . ?s position held ?ans1 . ?s parliamentary group Clann na Poblachta }"
        },
        "original": {
            "question": "In the parliamentary group called Clann na Poblachta, what position was Sean MacBride",
            "query": "SELECT ?obj WHERE { wd:Q244395 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P4100 wd:Q548562 }",
            "NLQuery": "SELECT ?obj WHERE { Se\u00e1n MacBride position held ?s . ?s position held ?obj . ?s parliamentary group Clann na Poblachta }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Sean MacBride",
            "choppedEntity": "Q244395"
        }
    },
    {
        "chopped": {
            "question": "Who edited the film ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1040 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown film editor ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who edited the film Seven Samurai",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q189540 wdt:P1040 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Seven Samurai film editor ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Seven Samurai",
            "choppedEntity": "Q189540"
        }
    },
    {
        "chopped": {
            "question": "Who altered the film ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1040 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown film editor ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who altered the film Seven Samurai",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q189540 wdt:P1040 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Seven Samurai film editor ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Seven Samurai",
            "choppedEntity": "Q189540"
        }
    },
    {
        "chopped": {
            "question": "What are the statistics Canada geographic code of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3012 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Statistics Canada Geographic code ?ans1}"
        },
        "original": {
            "question": "What are the statistics Canada geographic code of New Brunswick",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1965 wdt:P3012 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { New Brunswick Statistics Canada Geographic code ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "New Brunswick",
            "choppedEntity": "Q1965"
        }
    },
    {
        "chopped": {
            "question": "Tell me the domain of saint or deities for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P2925 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown domain of saint or deity ?obj }"
        },
        "original": {
            "question": "Tell me the domain of saint or deities for Santo Tomas de Aquinas",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q9438 wdt:P2925 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Thomas Aquinas domain of saint or deity ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Santo Tomas de Aquinas",
            "choppedEntity": "Q9438"
        }
    },
    {
        "chopped": {
            "question": "Which is the domain of saint or deities for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P2925 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown domain of saint or deity ?obj }"
        },
        "original": {
            "question": "Which is the domain of saint or deities for Santo Tomas de Aquinas",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q9438 wdt:P2925 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Thomas Aquinas domain of saint or deity ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Santo Tomas de Aquinas",
            "choppedEntity": "Q9438"
        }
    },
    {
        "chopped": {
            "question": "What was Rick Baker nominated for for ",
            "query": "SELECT ?ans1 WHERE { wd:Q495321 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Rick Baker nominated for ?s . ?s nominated for ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "What was Rick Baker nominated for for Coming to America",
            "query": "SELECT ?obj WHERE { wd:Q495321 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q493755 }",
            "NLQuery": "SELECT ?obj WHERE { Rick Baker nominated for ?s . ?s nominated for ?obj . ?s for work Coming to America }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Coming to America",
            "choppedEntity": "Q493755"
        }
    },
    {
        "chopped": {
            "question": "What is the former venue for ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P115 ?obj . ?obj wdt:P31 wd:Q19860854 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown home venue ?obj . ?obj instance of destroyed building or structure } "
        },
        "original": {
            "question": "What is the former venue for the Boston Celtics",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q131371 wdt:P115 ?obj . ?obj wdt:P31 wd:Q19860854 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Boston Celtics home venue ?obj . ?obj instance of destroyed building or structure } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Boston Celtics",
            "choppedEntity": "Q131371"
        }
    },
    {
        "chopped": {
            "question": "What is the previous scene for ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P115 ?obj . ?obj wdt:P31 wd:Q19860854 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown home venue ?obj . ?obj instance of destroyed building or structure } "
        },
        "original": {
            "question": "What is the previous scene for the Boston Celtics",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q131371 wdt:P115 ?obj . ?obj wdt:P31 wd:Q19860854 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Boston Celtics home venue ?obj . ?obj instance of destroyed building or structure } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Boston Celtics",
            "choppedEntity": "Q131371"
        }
    },
    {
        "chopped": {
            "question": "What is the transfer location for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P113 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 airline hub ?unknown}"
        },
        "original": {
            "question": "What is the transfer location for Tokyo International Airport",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P113 wd:Q204853}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer airline hub Tokyo International Airport}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Tokyo International Airport",
            "choppedEntity": "Q204853"
        }
    },
    {
        "chopped": {
            "question": "What award was received by ",
            "query": "SELECT ?ans1 WHERE { wd:Q155653 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P1346 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Spirited Away award received ?s . ?s award received ?ans1 . ?s winner ?unknown }"
        },
        "original": {
            "question": "What award was received by Hayao Miyazaju",
            "query": "SELECT ?obj WHERE { wd:Q155653 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1346 wd:Q55400 }",
            "NLQuery": "SELECT ?obj WHERE { Spirited Away award received ?s . ?s award received ?obj . ?s winner Hayao Miyazaki }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Hayao Miyazaju",
            "choppedEntity": "Q55400"
        }
    },
    {
        "chopped": {
            "question": "What's the trend of students from ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P802 ?X . ?X wdt:P135 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown student ?X . ?X movement ?ans1}"
        },
        "original": {
            "question": "What's the trend of students from Epictetus",
            "query": "SELECT ?answer WHERE { wd:Q183144 wdt:P802 ?X . ?X wdt:P135 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Epictetus student ?X . ?X movement ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Epictetus",
            "choppedEntity": "Q183144"
        }
    },
    {
        "chopped": {
            "question": "What was and is the currency of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P38 ?obj . ?obj wdt:P31 wd:Q28783456 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown currency ?obj . ?obj instance of obsolete currency } "
        },
        "original": {
            "question": "What was and is the currency of the Soviet Union",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q15180 wdt:P38 ?obj . ?obj wdt:P31 wd:Q28783456 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Soviet Union currency ?obj . ?obj instance of obsolete currency } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Soviet Union",
            "choppedEntity": "Q15180"
        }
    },
    {
        "chopped": {
            "question": "What was and is the cash of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P38 ?obj . ?obj wdt:P31 wd:Q28783456 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown currency ?obj . ?obj instance of obsolete currency } "
        },
        "original": {
            "question": "What was and is the cash of the Soviet Union",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q15180 wdt:P38 ?obj . ?obj wdt:P31 wd:Q28783456 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Soviet Union currency ?obj . ?obj instance of obsolete currency } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Soviet Union",
            "choppedEntity": "Q15180"
        }
    },
    {
        "chopped": {
            "question": "Who is the husband of the child of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P25 ?X . ?X wdt:P26 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown mother ?X . ?X spouse ?ans1}"
        },
        "original": {
            "question": "Who is the husband of the child of Emmanuel Bourdieu",
            "query": "SELECT ?answer WHERE { wd:Q1338188 wdt:P25 ?X . ?X wdt:P26 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Emmanuel Bourdieu mother ?X . ?X spouse ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Emmanuel Bourdieu",
            "choppedEntity": "Q1338188"
        }
    },
    {
        "chopped": {
            "question": "Who is the spouse of the child of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P25 ?X . ?X wdt:P26 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown mother ?X . ?X spouse ?ans1}"
        },
        "original": {
            "question": "Who is the spouse of the child of Emmanuel Bourdieu",
            "query": "SELECT ?answer WHERE { wd:Q1338188 wdt:P25 ?X . ?X wdt:P26 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Emmanuel Bourdieu mother ?X . ?X spouse ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Emmanuel Bourdieu",
            "choppedEntity": "Q1338188"
        }
    },
    {
        "chopped": {
            "question": "Was Zayn Malik a member of ",
            "query": "ASK WHERE { wd:Q3626950 wdt:P463 ?unknown }",
            "NLQuery": "ASK WHERE { Zayn Malik member of ?unknown }"
        },
        "original": {
            "question": "Was Zayn Malik a member of Manic Street Preachers",
            "query": "ASK WHERE { wd:Q3626950 wdt:P463 wd:Q217025 }",
            "NLQuery": "ASK WHERE { Zayn Malik member of Manic Street Preachers }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Manic Street Preachers",
            "choppedEntity": "Q217025"
        }
    },
    {
        "chopped": {
            "question": "What number is succeeded by a binary number with a radix of ",
            "query": "SELECT ?ans1 WHERE { wd:Q3913 wdt:P156 ?ans1 . ?ans1 wdt:P3264 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { binary numeral system followed by ?ans1 . ?ans1 radix ?unknown}"
        },
        "original": {
            "question": "What number is succeeded by a binary number with a radix of 3",
            "query": "SELECT ?answer WHERE { wd:Q3913 wdt:P156 ?answer . ?answer wdt:P3264 wd:Q201}",
            "NLQuery": "SELECT ?answer WHERE { binary numeral system followed by ?answer . ?answer radix 3}"
        },
        "meta": {
            "entityTagNER": "CARDINAL",
            "choppedText": "3",
            "choppedEntity": "Q201"
        }
    },
    {
        "chopped": {
            "question": "What wide variety is succeeded with the aid of a binary wide variety with a radix of ",
            "query": "SELECT ?ans1 WHERE { wd:Q3913 wdt:P156 ?ans1 . ?ans1 wdt:P3264 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { binary numeral system followed by ?ans1 . ?ans1 radix ?unknown}"
        },
        "original": {
            "question": "What wide variety is succeeded with the aid of a binary wide variety with a radix of 3",
            "query": "SELECT ?answer WHERE { wd:Q3913 wdt:P156 ?answer . ?answer wdt:P3264 wd:Q201}",
            "NLQuery": "SELECT ?answer WHERE { binary numeral system followed by ?answer . ?answer radix 3}"
        },
        "meta": {
            "entityTagNER": "CARDINAL",
            "choppedText": "3",
            "choppedEntity": "Q201"
        }
    },
    {
        "chopped": {
            "question": "Tell me me a association football league  whose name consist of the word \"slovenian\" and whose season starts ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15991303 . ?ans1 wdt:P4794 ?unknown . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), 'slovenian')) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of association football league . ?ans1 season starts ?unknown . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), 'slovenian')) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me me a association football league  whose name consist of the word \"slovenian\" and whose season starts august",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15991303 . ?sbj wdt:P4794 wd:Q122 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'slovenian')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of association football league . ?sbj season starts August . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'slovenian')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "august",
            "choppedEntity": "Q122"
        }
    },
    {
        "chopped": {
            "question": "Tell me a football association whose name is \"Slovenian\" and whose season begins in ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15991303 . ?ans1 wdt:P4794 ?unknown . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), 'slovenian')) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of association football league . ?ans1 season starts ?unknown . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), 'slovenian')) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me a football association whose name is \"Slovenian\" and whose season begins in August",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15991303 . ?sbj wdt:P4794 wd:Q122 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'slovenian')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of association football league . ?sbj season starts August . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'slovenian')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "August",
            "choppedEntity": "Q122"
        }
    },
    {
        "chopped": {
            "question": "How is the diplomatic relation between the basin countries of the ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P205 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown basin country ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "How is the diplomatic relation between the basin countries of the Euphrates",
            "query": "SELECT ?answer WHERE { wd:Q34589 wdt:P205 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Euphrates basin country ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Euphrates",
            "choppedEntity": "Q34589"
        }
    },
    {
        "chopped": {
            "question": "How is the conciliatory connection between the bowl nations of the ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P205 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown basin country ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "How is the conciliatory connection between the bowl nations of the Euphrates",
            "query": "SELECT ?answer WHERE { wd:Q34589 wdt:P205 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Euphrates basin country ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Euphrates",
            "choppedEntity": "Q34589"
        }
    },
    {
        "chopped": {
            "question": "Who is a doctoral student of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P185 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown doctoral student ?ans1}"
        },
        "original": {
            "question": "Who is a doctoral student of William Vickrey",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q295673 wdt:P185 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { William Vickrey doctoral student ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "William Vickrey",
            "choppedEntity": "Q295673"
        }
    },
    {
        "chopped": {
            "question": "Which is the GRIN URL for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1421 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown GRIN URL ?ans1}"
        },
        "original": {
            "question": "Which is the GRIN URL for Hypericum",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q156935 wdt:P1421 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Hypericum GRIN URL ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Hypericum",
            "choppedEntity": "Q156935"
        }
    },
    {
        "chopped": {
            "question": "What is the Jewish Encyclopedia ID (Russian) for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1438 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Jewish Encyclopedia ID (Russian) ?ans1}"
        },
        "original": {
            "question": "What is the Jewish Encyclopedia ID (Russian) for Erich Mendelsohn",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q76730 wdt:P1438 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Erich Mendelsohn Jewish Encyclopedia ID (Russian) ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Erich Mendelsohn",
            "choppedEntity": "Q76730"
        }
    },
    {
        "chopped": {
            "question": "What date did Niue become a member of the ",
            "query": "SELECT ?ans1 WHERE { wd:Q34020 p:P463 ?s . ?s ps:P463 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Niue member of ?s . ?s member of ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "What date did Niue become a member of the UNESCO",
            "query": "SELECT ?value WHERE { wd:Q34020 p:P463 ?s . ?s ps:P463 wd:Q7809 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Niue member of ?s . ?s member of UNESCO . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "UNESCO",
            "choppedEntity": "Q7809"
        }
    },
    {
        "chopped": {
            "question": "What tress are ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P19 ?X . ?X wdt:P1990 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of birth ?X . ?X species kept ?ans1}"
        },
        "original": {
            "question": "What tress are Germina",
            "query": "SELECT ?answer WHERE { wd:Q5530615 wdt:P19 ?X . ?X wdt:P1990 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Gemina place of birth ?X . ?X species kept ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Germina",
            "choppedEntity": "Q5530615"
        }
    },
    {
        "chopped": {
            "question": "What is the Fogis ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P5038 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Fogis.se player ID ?ans1}"
        },
        "original": {
            "question": "What is the Fogis ID of Zlatan Ibrahimovic",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q46896 wdt:P5038 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Zlatan Ibrahimovi\u0107 Fogis.se player ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Zlatan Ibrahimovic",
            "choppedEntity": "Q46896"
        }
    },
    {
        "chopped": {
            "question": "Who is the voice actor for ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P725 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown voice actor ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who is the voice actor for Futurama",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q73622 wdt:P725 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Futurama voice actor ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Futurama",
            "choppedEntity": "Q73622"
        }
    },
    {
        "chopped": {
            "question": "Who is the voice performer for ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P725 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown voice actor ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who is the voice performer for Futurama",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q73622 wdt:P725 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Futurama voice actor ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Futurama",
            "choppedEntity": "Q73622"
        }
    },
    {
        "chopped": {
            "question": "Who's the chairperson of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P488 ?ans1 . ?unknown wdt:P463 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown chairperson ?ans1 . ?unknown member of ?ans2 }"
        },
        "original": {
            "question": "Who's the chairperson of Yale University",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q49112 wdt:P488 ?ans_1 . wd:Q49112 wdt:P463 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Yale University chairperson ?ans_1 . Yale University member of ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Yale University",
            "choppedEntity": "Q49112"
        }
    },
    {
        "chopped": {
            "question": "What is the location of English Civil War, that has coat of arms in ",
            "query": "SELECT ?ans1 WHERE { wd:Q80330 wdt:P276 ?ans1 . ?ans1 wdt:P237 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { English Civil War location ?ans1 . ?ans1 coat of arms ?unknown}"
        },
        "original": {
            "question": "What is the location of English Civil War, that has coat of arms in Royal Arms of England",
            "query": "SELECT ?answer WHERE { wd:Q80330 wdt:P276 ?answer . ?answer wdt:P237 wd:Q643999}",
            "NLQuery": "SELECT ?answer WHERE { English Civil War location ?answer . ?answer coat of arms Royal Arms of England}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Royal Arms of England",
            "choppedEntity": "Q643999"
        }
    },
    {
        "chopped": {
            "question": "What date was the Order of Survorov, 2nd class given to ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 wd:Q21292821 . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received Order of Suvorov, 2nd class . ?s point in time ?ans1}"
        },
        "original": {
            "question": "What date was the Order of Survorov, 2nd class given to Fedor Tokarev",
            "query": "SELECT ?value WHERE { wd:Q535597 p:P166 ?s . ?s ps:P166 wd:Q21292821 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Fedor Tokarev award received ?s . ?s award received Order of Suvorov, 2nd class . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Fedor Tokarev",
            "choppedEntity": "Q535597"
        }
    },
    {
        "chopped": {
            "question": "Which is the run time of the play of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P641 ?X . ?X wdt:P2047 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown sport ?X . ?X duration ?ans1}"
        },
        "original": {
            "question": "Which is the run time of the play of Toronto Maple Leafs",
            "query": "SELECT ?answer WHERE { wd:Q203384 wdt:P641 ?X . ?X wdt:P2047 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Toronto Maple Leafs sport ?X . ?X duration ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Toronto Maple Leafs",
            "choppedEntity": "Q203384"
        }
    },
    {
        "chopped": {
            "question": "why  the animal species are in location of  ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P276 ?X . ?X wdt:P1990 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown location ?X . ?X species kept ?ans1}"
        },
        "original": {
            "question": "why  the animal species are in location of  ken allen",
            "query": "SELECT ?answer WHERE { wd:Q6387229 wdt:P276 ?X . ?X wdt:P1990 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Ken Allen location ?X . ?X species kept ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "ken allen",
            "choppedEntity": "Q6387229"
        }
    },
    {
        "chopped": {
            "question": "When was Christopher Walken received ",
            "query": "SELECT ?ans1 WHERE { wd:Q185051 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Christopher Walken award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was Christopher Walken received the Theatre World Award",
            "query": "SELECT ?value WHERE { wd:Q185051 p:P166 ?s . ?s ps:P166 wd:Q1131356 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Christopher Walken award received ?s . ?s award received Theatre World Award . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Theatre World Award",
            "choppedEntity": "Q1131356"
        }
    },
    {
        "chopped": {
            "question": "What year did Christopher Walken receive ",
            "query": "SELECT ?ans1 WHERE { wd:Q185051 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Christopher Walken award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "What year did Christopher Walken receive the Theatre World Award",
            "query": "SELECT ?value WHERE { wd:Q185051 p:P166 ?s . ?s ps:P166 wd:Q1131356 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Christopher Walken award received ?s . ?s award received Theatre World Award . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Theatre World Award",
            "choppedEntity": "Q1131356"
        }
    },
    {
        "chopped": {
            "question": "What is the administrative territorial entity for Mikhail Glinka's birthplace, ",
            "query": "SELECT ?ans1 WHERE { wd:Q181885 p:P19 ?s . ?s ps:P19 ?unknown . ?s pq:P131 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Mikhail Glinka place of birth ?s . ?s place of birth ?unknown . ?s located in the administrative territorial entity ?ans1}"
        },
        "original": {
            "question": "What is the administrative territorial entity for Mikhail Glinka's birthplace, Novospasskoye",
            "query": "SELECT ?value WHERE { wd:Q181885 p:P19 ?s . ?s ps:P19 wd:Q4325584 . ?s pq:P131 ?value}",
            "NLQuery": "SELECT ?value WHERE { Mikhail Glinka place of birth ?s . ?s place of birth Novospasskoye . ?s located in the administrative territorial entity ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Novospasskoye",
            "choppedEntity": "Q4325584"
        }
    },
    {
        "chopped": {
            "question": "What government controls Novospasskoye, the birthplace of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P19 ?s . ?s ps:P19 wd:Q4325584 . ?s pq:P131 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of birth ?s . ?s place of birth Novospasskoye . ?s located in the administrative territorial entity ?ans1}"
        },
        "original": {
            "question": "What government controls Novospasskoye, the birthplace of Mikhail Glinka",
            "query": "SELECT ?value WHERE { wd:Q181885 p:P19 ?s . ?s ps:P19 wd:Q4325584 . ?s pq:P131 ?value}",
            "NLQuery": "SELECT ?value WHERE { Mikhail Glinka place of birth ?s . ?s place of birth Novospasskoye . ?s located in the administrative territorial entity ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mikhail Glinka",
            "choppedEntity": "Q181885"
        }
    },
    {
        "chopped": {
            "question": "What global city is described in ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P840 ?obj . ?obj wdt:P31 wd:Q208511 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown narrative location ?obj . ?obj instance of global city } "
        },
        "original": {
            "question": "What global city is described in Twenty Thousand Leagues Under the Sea",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q183565 wdt:P840 ?obj . ?obj wdt:P31 wd:Q208511 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Twenty Thousand Leagues Under the Sea narrative location ?obj . ?obj instance of global city } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Twenty Thousand Leagues Under the Sea",
            "choppedEntity": "Q183565"
        }
    },
    {
        "chopped": {
            "question": "Which is the mountain pass in the location of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P276 ?obj . ?obj wdt:P31 wd:Q133056 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown location ?obj . ?obj instance of mountain pass } "
        },
        "original": {
            "question": "Which is the mountain pass in the location of the Lewis and Clark Expedition",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q505802 wdt:P276 ?obj . ?obj wdt:P31 wd:Q133056 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { The Lewis and Clark Expedition location ?obj . ?obj instance of mountain pass } "
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the Lewis and Clark Expedition",
            "choppedEntity": "Q505802"
        }
    },
    {
        "chopped": {
            "question": "What role does manager/director Tony Hall, Baron of Birkenhead, play at ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1037 ?s . ?s ps:P1037 wd:Q80390 . ?s pq:P3831 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown director / manager ?s . ?s director / manager Tony Hall, Baron Hall of Birkenhead . ?s object has role ?ans1}"
        },
        "original": {
            "question": "What role does manager/director Tony Hall, Baron of Birkenhead, play at BBC",
            "query": "SELECT ?value WHERE { wd:Q9531 p:P1037 ?s . ?s ps:P1037 wd:Q80390 . ?s pq:P3831 ?value}",
            "NLQuery": "SELECT ?value WHERE { BBC director / manager ?s . ?s director / manager Tony Hall, Baron Hall of Birkenhead . ?s object has role ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "BBC",
            "choppedEntity": "Q9531"
        }
    },
    {
        "chopped": {
            "question": "What is the number of copyright owners for ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P3931 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub copyright holder ?unknown }"
        },
        "original": {
            "question": "What is the number of copyright owners for Nintendo",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P3931 wd:Q8093 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub copyright holder Nintendo }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Nintendo",
            "choppedEntity": "Q8093"
        }
    },
    {
        "chopped": {
            "question": "which sculpture depicted by ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1299 ?obj . ?obj wdt:P31 wd:Q860861 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown depicted by ?obj . ?obj instance of sculpture } "
        },
        "original": {
            "question": "which sculpture depicted by lroquois",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q68518 wdt:P1299 ?obj . ?obj wdt:P31 wd:Q860861 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Iroquois depicted by ?obj . ?obj instance of sculpture } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "lroquois",
            "choppedEntity": "Q68518"
        }
    },
    {
        "chopped": {
            "question": "Which research institute is affiliated with ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1416 ?obj . ?obj wdt:P31 wd:Q31855 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown affiliation ?obj . ?obj instance of research institute } "
        },
        "original": {
            "question": "Which research institute is affiliated with Niels Bohr",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q7085 wdt:P1416 ?obj . ?obj wdt:P31 wd:Q31855 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Niels Bohr affiliation ?obj . ?obj instance of research institute } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Niels Bohr",
            "choppedEntity": "Q7085"
        }
    },
    {
        "chopped": {
            "question": "What is the discography for ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P358 ?obj . ?obj wdt:P31 wd:Q273057 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown discography ?obj . ?obj instance of discography } "
        },
        "original": {
            "question": "What is the discography for My Chemical Romance",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q483285 wdt:P358 ?obj . ?obj wdt:P31 wd:Q273057 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { My Chemical Romance discography ?obj . ?obj instance of discography } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "My Chemical Romance",
            "choppedEntity": "Q483285"
        }
    },
    {
        "chopped": {
            "question": "Tell me the series ordinal for John Greenleaf Whittier has given name as ",
            "query": "SELECT ?ans1 WHERE { wd:Q458372 p:P735 ?s . ?s ps:P735 ?unknown . ?s pq:P1545 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { John Greenleaf Whittier given name ?s . ?s given name ?unknown . ?s series ordinal ?ans1}"
        },
        "original": {
            "question": "Tell me the series ordinal for John Greenleaf Whittier has given name as Greenleaf",
            "query": "SELECT ?value WHERE { wd:Q458372 p:P735 ?s . ?s ps:P735 wd:Q42302286 . ?s pq:P1545 ?value}",
            "NLQuery": "SELECT ?value WHERE { John Greenleaf Whittier given name ?s . ?s given name Greenleaf . ?s series ordinal ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Greenleaf",
            "choppedEntity": "Q42302286"
        }
    },
    {
        "chopped": {
            "question": "What music genre is ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P264 ?X . ?X wdt:P136 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown record label ?X . ?X genre ?ans1}"
        },
        "original": {
            "question": "What music genre is Song to Woody",
            "query": "SELECT ?answer WHERE { wd:Q2457751 wdt:P264 ?X . ?X wdt:P136 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Song to Woody record label ?X . ?X genre ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Song to Woody",
            "choppedEntity": "Q2457751"
        }
    },
    {
        "chopped": {
            "question": "Who is the editor of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P98 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown editor ?ans1}"
        },
        "original": {
            "question": "Who is the editor of Out",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q951591 wdt:P98 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Out editor ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Out",
            "choppedEntity": "Q951591"
        }
    },
    {
        "chopped": {
            "question": "What guns are classified as ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q15142894 . ?ans1 wdt:P2077 ?obj . ?ans1 wdt:P279 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of weapon model . ?ans1 pressure ?obj . ?ans1 subclass of ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What guns are classified as 76 mm",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q15142894 . ?ent wdt:P2077 ?obj . ?ent wdt:P279 wd:Q47518821 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of weapon model . ?ent pressure ?obj . ?ent subclass of 76 mm gun } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "QUANTITY",
            "choppedText": "76 mm",
            "choppedEntity": "Q47518821"
        }
    },
    {
        "chopped": {
            "question": "Which guns are ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q15142894 . ?ans1 wdt:P2077 ?obj . ?ans1 wdt:P279 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of weapon model . ?ans1 pressure ?obj . ?ans1 subclass of ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "Which guns are 76 mm",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q15142894 . ?ent wdt:P2077 ?obj . ?ent wdt:P279 wd:Q47518821 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of weapon model . ?ent pressure ?obj . ?ent subclass of 76 mm gun } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "QUANTITY",
            "choppedText": "76 mm",
            "choppedEntity": "Q47518821"
        }
    },
    {
        "chopped": {
            "question": "What is on of the is in the commune of '",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P131 ?X . ?X wdt:P706 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in the administrative territorial entity ?X . ?X located on terrain feature ?ans1}"
        },
        "original": {
            "question": "What is on of the is in the commune of 'Aio",
            "query": "SELECT ?answer WHERE { wd:Q31865255 wdt:P131 ?X . ?X wdt:P706 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { 'Aio located in the administrative territorial entity ?X . ?X located on terrain feature ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Aio",
            "choppedEntity": "Q31865255"
        }
    },
    {
        "chopped": {
            "question": "What is on of the is in the cooperative of '",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P131 ?X . ?X wdt:P706 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown located in the administrative territorial entity ?X . ?X located on terrain feature ?ans1}"
        },
        "original": {
            "question": "What is on of the is in the cooperative of 'Aio",
            "query": "SELECT ?answer WHERE { wd:Q31865255 wdt:P131 ?X . ?X wdt:P706 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { 'Aio located in the administrative territorial entity ?X . ?X located on terrain feature ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Aio",
            "choppedEntity": "Q31865255"
        }
    },
    {
        "chopped": {
            "question": "What is World Bridge Federation ID   for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3172 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown World Bridge Federation ID ?ans1}"
        },
        "original": {
            "question": "What is World Bridge Federation ID   for Omar Sharif",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q170515 wdt:P3172 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Omar Sharif World Bridge Federation ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Omar Sharif",
            "choppedEntity": "Q170515"
        }
    },
    {
        "chopped": {
            "question": "Get the academic assembly of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P101 ?X . ?X wdt:P2079 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown field of work ?X . ?X fabrication method ?ans1}"
        },
        "original": {
            "question": "Get the academic assembly of R\u00fcdiger Zarnekow",
            "query": "SELECT ?answer WHERE { wd:Q35010324 wdt:P101 ?X . ?X wdt:P2079 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { R\u00fcdiger Zarnekow field of work ?X . ?X fabrication method ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "R\u00fcdiger Zarnekow",
            "choppedEntity": "Q35010324"
        }
    },
    {
        "chopped": {
            "question": "Which award was given to ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P166 ?s . ?s ps:P166 ?ans2 . ?s pq:P585 ?ans1 . }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown award received ?s . ?s award received ?ans2 . ?s point in time ?ans1 . }"
        },
        "original": {
            "question": "Which award was given to Mick Jagger",
            "query": "SELECT ?value1 ?obj WHERE { wd:Q128121 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?value1 . }",
            "NLQuery": "SELECT ?value1 ?obj WHERE { Mick Jagger award received ?s . ?s award received ?obj . ?s point in time ?value1 . }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mick Jagger",
            "choppedEntity": "Q128121"
        }
    },
    {
        "chopped": {
            "question": "What is the filmography and discography of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P1283 ?ans1 . ?unknown wdt:P358 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown filmography ?ans1 . ?unknown discography ?ans2 }"
        },
        "original": {
            "question": "What is the filmography and discography of Kylie Minogue",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q11998 wdt:P1283 ?ans_1 . wd:Q11998 wdt:P358 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Kylie Minogue filmography ?ans_1 . Kylie Minogue discography ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Kylie Minogue",
            "choppedEntity": "Q11998"
        }
    },
    {
        "chopped": {
            "question": "Which is Ready64 identifier for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4916 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Ready64 ID ?ans1}"
        },
        "original": {
            "question": "Which is Ready64 identifier for Frogger",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q524267 wdt:P4916 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Frogger Ready64 ID ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Frogger",
            "choppedEntity": "Q524267"
        }
    },
    {
        "chopped": {
            "question": "What was constructed out of or the systems of mountains to ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P4552 ?X . ?X wdt:P186 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown mountain range ?X . ?X material used ?ans1}"
        },
        "original": {
            "question": "What was constructed out of or the systems of mountains to Septimer Pass",
            "query": "SELECT ?answer WHERE { wd:Q667166 wdt:P4552 ?X . ?X wdt:P186 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Septimer Pass mountain range ?X . ?X material used ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Septimer Pass",
            "choppedEntity": "Q667166"
        }
    },
    {
        "chopped": {
            "question": "What used to be constructed out of or the systems of mountains to ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P4552 ?X . ?X wdt:P186 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown mountain range ?X . ?X material used ?ans1}"
        },
        "original": {
            "question": "What used to be constructed out of or the systems of mountains to Septimer Pass",
            "query": "SELECT ?answer WHERE { wd:Q667166 wdt:P4552 ?X . ?X wdt:P186 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Septimer Pass mountain range ?X . ?X material used ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Septimer Pass",
            "choppedEntity": "Q667166"
        }
    },
    {
        "chopped": {
            "question": "What areas are located in or next to a body of water and are located in the time zone of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P206 ?ans1 . ?unknown wdt:P421 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown located in or next to body of water ?ans1 . ?unknown located in time zone ?ans2 }"
        },
        "original": {
            "question": "What areas are located in or next to a body of water and are located in the time zone of Seoul",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q8684 wdt:P206 ?ans_1 . wd:Q8684 wdt:P421 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Seoul located in or next to body of water ?ans_1 . Seoul located in time zone ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Seoul",
            "choppedEntity": "Q8684"
        }
    },
    {
        "chopped": {
            "question": "What is the railway station owned by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P127 ?unknown . ?sbj wdt:P31 wd:Q55488 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj owned by ?unknown . ?sbj instance of railway station } "
        },
        "original": {
            "question": "What is the railway station owned by Amtrak",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P127 wd:Q23239 . ?sbj wdt:P31 wd:Q55488 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj owned by Amtrak . ?sbj instance of railway station } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Amtrak",
            "choppedEntity": "Q23239"
        }
    },
    {
        "chopped": {
            "question": "What is in the voivodeship of New York Post whose states is ",
            "query": "SELECT ?ans1 WHERE { wd:Q211374 wdt:P131 ?ans1 . ?ans1 wdt:P150 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { New York Post located in the administrative territorial entity ?ans1 . ?ans1 contains administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "What is in the voivodeship of New York Post whose states is Tompkins County",
            "query": "SELECT ?answer WHERE { wd:Q211374 wdt:P131 ?answer . ?answer wdt:P150 wd:Q56153}",
            "NLQuery": "SELECT ?answer WHERE { New York Post located in the administrative territorial entity ?answer . ?answer contains administrative territorial entity Tompkins County}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Tompkins County",
            "choppedEntity": "Q56153"
        }
    },
    {
        "chopped": {
            "question": "Which is the Swedish Academy member ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P5325 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Swedish Academy member ID ?ans1}"
        },
        "original": {
            "question": "Which is the Swedish Academy member ID for Selma Lagerl\u00f6f",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q44519 wdt:P5325 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Selma Lagerl\u00f6f Swedish Academy member ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Selma Lagerl\u00f6f",
            "choppedEntity": "Q44519"
        }
    },
    {
        "chopped": {
            "question": "Until when was the capital of the Grand Duchy of Finland ",
            "query": "SELECT ?ans1 WHERE { wd:Q62633 p:P36 ?s . ?s ps:P36 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Grand Duchy of Finland capital ?s . ?s capital ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "Until when was the capital of the Grand Duchy of Finland Turku",
            "query": "SELECT ?value WHERE { wd:Q62633 p:P36 ?s . ?s ps:P36 wd:Q38511 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Grand Duchy of Finland capital ?s . ?s capital Turku . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Turku",
            "choppedEntity": "Q38511"
        }
    },
    {
        "chopped": {
            "question": "What stars are closest to ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P397 ?obj . ?obj wdt:P31 wd:Q5864 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown parent astronomical body ?obj . ?obj instance of G-type main-sequence star } "
        },
        "original": {
            "question": "What stars are closest to Neptune",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q332 wdt:P397 ?obj . ?obj wdt:P31 wd:Q5864 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Neptune parent astronomical body ?obj . ?obj instance of G-type main-sequence star } "
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Neptune",
            "choppedEntity": "Q332"
        }
    },
    {
        "chopped": {
            "question": "What is Lady Gaga's significant works with record producer ",
            "query": "SELECT ?ans1 WHERE { wd:Q19848 wdt:P800 ?ans1 . ?ans1 wdt:P162 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Lady Gaga notable work ?ans1 . ?ans1 producer ?unknown}"
        },
        "original": {
            "question": "What is Lady Gaga's significant works with record producer RedOne",
            "query": "SELECT ?answer WHERE { wd:Q19848 wdt:P800 ?answer . ?answer wdt:P162 wd:Q323470}",
            "NLQuery": "SELECT ?answer WHERE { Lady Gaga notable work ?answer . ?answer producer RedOne}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "RedOne",
            "choppedEntity": "Q323470"
        }
    },
    {
        "chopped": {
            "question": "What is the name of someone who is educated at ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P69 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj educated at ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "What is the name of someone who is educated at Yale University",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P69 wd:Q49112 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj educated at Yale University . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Yale University",
            "choppedEntity": "Q49112"
        }
    },
    {
        "chopped": {
            "question": "At what point in time did Rigoberta Menchu tum receive ",
            "query": "SELECT ?ans1 WHERE { wd:Q188620 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Rigoberta Mench\u00fa award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "At what point in time did Rigoberta Menchu tum receive the Nobel Peace Prize",
            "query": "SELECT ?value WHERE { wd:Q188620 p:P166 ?s . ?s ps:P166 wd:Q35637 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Rigoberta Mench\u00fa award received ?s . ?s award received Nobel Peace Prize . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Nobel Peace Prize",
            "choppedEntity": "Q35637"
        }
    },
    {
        "chopped": {
            "question": "In which year did Rigoberta Menchu tum receive ",
            "query": "SELECT ?ans1 WHERE { wd:Q188620 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Rigoberta Mench\u00fa award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "In which year did Rigoberta Menchu tum receive the Nobel Peace Prize",
            "query": "SELECT ?value WHERE { wd:Q188620 p:P166 ?s . ?s ps:P166 wd:Q35637 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Rigoberta Mench\u00fa award received ?s . ?s award received Nobel Peace Prize . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Nobel Peace Prize",
            "choppedEntity": "Q35637"
        }
    },
    {
        "chopped": {
            "question": "Which is the ORCID iD of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P496 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown ORCID iD ?ans1}"
        },
        "original": {
            "question": "Which is the ORCID iD of Steven Pinker",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q212730 wdt:P496 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Steven Pinker ORCID iD ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Steven Pinker",
            "choppedEntity": "Q212730"
        }
    },
    {
        "chopped": {
            "question": "What country bordered ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P47 ?obj . ?obj wdt:P31 wd:Q48349 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown shares border with ?obj . ?obj instance of empire } "
        },
        "original": {
            "question": "What country bordered the Roman Empire",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q2277 wdt:P47 ?obj . ?obj wdt:P31 wd:Q48349 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Roman Empire shares border with ?obj . ?obj instance of empire } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Roman Empire",
            "choppedEntity": "Q2277"
        }
    },
    {
        "chopped": {
            "question": "What nation flanked ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P47 ?obj . ?obj wdt:P31 wd:Q48349 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown shares border with ?obj . ?obj instance of empire } "
        },
        "original": {
            "question": "What nation flanked the Roman Empire",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q2277 wdt:P47 ?obj . ?obj wdt:P31 wd:Q48349 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Roman Empire shares border with ?obj . ?obj instance of empire } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Roman Empire",
            "choppedEntity": "Q2277"
        }
    },
    {
        "chopped": {
            "question": "Which is the fictional universe that takes place in the fictional universe of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1434 ?obj . ?obj wdt:P31 wd:Q559618 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown takes place in fictional universe ?obj . ?obj instance of fictional universe } "
        },
        "original": {
            "question": "Which is the fictional universe that takes place in the fictional universe of Grand Theft Auto",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q132730 wdt:P1434 ?obj . ?obj wdt:P31 wd:Q559618 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Grand Theft Auto takes place in fictional universe ?obj . ?obj instance of fictional universe } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Grand Theft Auto",
            "choppedEntity": "Q132730"
        }
    },
    {
        "chopped": {
            "question": "Who is the county seat of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P159 ?X . ?X wdt:P1376 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown headquarters location ?X . ?X capital of ?ans1}"
        },
        "original": {
            "question": "Who is the county seat of the Nordic Council",
            "query": "SELECT ?answer WHERE { wd:Q146165 wdt:P159 ?X . ?X wdt:P1376 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Nordic Council headquarters location ?X . ?X capital of ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Nordic Council",
            "choppedEntity": "Q146165"
        }
    },
    {
        "chopped": {
            "question": "Was Marilyn_Manson genre ",
            "query": "ASK WHERE { wd:Q186327 wdt:P136 ?unknown }",
            "NLQuery": "ASK WHERE { Marilyn Manson genre ?unknown }"
        },
        "original": {
            "question": "Was Marilyn_Manson genre Deathrock",
            "query": "ASK WHERE { wd:Q186327 wdt:P136 wd:Q1164252 }",
            "NLQuery": "ASK WHERE { Marilyn Manson genre Death rock }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Deathrock",
            "choppedEntity": "Q1164252"
        }
    },
    {
        "chopped": {
            "question": "Is Marilyn Manson's music ",
            "query": "ASK WHERE { wd:Q186327 wdt:P136 ?unknown }",
            "NLQuery": "ASK WHERE { Marilyn Manson genre ?unknown }"
        },
        "original": {
            "question": "Is Marilyn Manson's music Deathrock",
            "query": "ASK WHERE { wd:Q186327 wdt:P136 wd:Q1164252 }",
            "NLQuery": "ASK WHERE { Marilyn Manson genre Death rock }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Deathrock",
            "choppedEntity": "Q1164252"
        }
    },
    {
        "chopped": {
            "question": "In 1866 what was the population for ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1866')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),'1866')) }"
        },
        "original": {
            "question": "In 1866 what was the population for Caen",
            "query": "SELECT ?obj WHERE { wd:Q41185 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1866')) }",
            "NLQuery": "SELECT ?obj WHERE { Caen population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1866')) }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Caen",
            "choppedEntity": "Q41185"
        }
    },
    {
        "chopped": {
            "question": "What was the last residence of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P551 ?s . ?s ps:P551 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1885')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown residence ?s . ?s residence ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),'1885')) }"
        },
        "original": {
            "question": "What was the last residence of Paul Gauguin",
            "query": "SELECT ?obj WHERE { wd:Q37693 p:P551 ?s . ?s ps:P551 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1885')) }",
            "NLQuery": "SELECT ?obj WHERE { Paul Gauguin residence ?s . ?s residence ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1885')) }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Paul Gauguin",
            "choppedEntity": "Q37693"
        }
    },
    {
        "chopped": {
            "question": "Did Jeremy Clarkson work on Top Gear and ",
            "query": "ASK WHERE { wd:Q216160 wdt:P800 wd:Q3040066 . wd:Q216160 wdt:P800 ?unknown }",
            "NLQuery": "ASK WHERE { Jeremy Clarkson notable work Top Gear . Jeremy Clarkson notable work ?unknown }"
        },
        "original": {
            "question": "Did Jeremy Clarkson work on Top Gear and The Grand Tour",
            "query": "ASK WHERE { wd:Q216160 wdt:P800 wd:Q3040066 . wd:Q216160 wdt:P800 wd:Q21980653 }",
            "NLQuery": "ASK WHERE { Jeremy Clarkson notable work Top Gear . Jeremy Clarkson notable work The Grand Tour }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Grand Tour",
            "choppedEntity": "Q21980653"
        }
    },
    {
        "chopped": {
            "question": "Was Jeremy Clarkson a worker on Top Gear and ",
            "query": "ASK WHERE { wd:Q216160 wdt:P800 wd:Q3040066 . wd:Q216160 wdt:P800 ?unknown }",
            "NLQuery": "ASK WHERE { Jeremy Clarkson notable work Top Gear . Jeremy Clarkson notable work ?unknown }"
        },
        "original": {
            "question": "Was Jeremy Clarkson a worker on Top Gear and The Grand Tour",
            "query": "ASK WHERE { wd:Q216160 wdt:P800 wd:Q3040066 . wd:Q216160 wdt:P800 wd:Q21980653 }",
            "NLQuery": "ASK WHERE { Jeremy Clarkson notable work Top Gear . Jeremy Clarkson notable work The Grand Tour }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Grand Tour",
            "choppedEntity": "Q21980653"
        }
    },
    {
        "chopped": {
            "question": "Tell me about democratic republic for diplomatic relation of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P530 ?obj . ?obj wdt:P31 wd:Q5255892 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown diplomatic relation ?obj . ?obj instance of democratic republic } "
        },
        "original": {
            "question": "Tell me about democratic republic for diplomatic relation of Russian Empire",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q34266 wdt:P530 ?obj . ?obj wdt:P31 wd:Q5255892 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Russian Empire diplomatic relation ?obj . ?obj instance of democratic republic } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Russian Empire",
            "choppedEntity": "Q34266"
        }
    },
    {
        "chopped": {
            "question": "What is the series that comes before the 37th ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P156 ?X . ?X wdt:P179 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown followed by ?X . ?X part of the series ?ans1}"
        },
        "original": {
            "question": "What is the series that comes before the 37th Venice International Film Festival",
            "query": "SELECT ?answer WHERE { wd:Q1748253 wdt:P156 ?X . ?X wdt:P179 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { 37th Venice International Film Festival followed by ?X . ?X part of the series ?answer}"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "Venice International Film Festival",
            "choppedEntity": "Q1748253"
        }
    },
    {
        "chopped": {
            "question": "George Burns was born in which city in ",
            "query": "SELECT ?ans1 WHERE { wd:Q344793 p:P19 ?s . ?s ps:P19 ?ans1 . ?s pq:P131 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { George Burns place of birth ?s . ?s place of birth ?ans1 . ?s located in the administrative territorial entity ?unknown }"
        },
        "original": {
            "question": "George Burns was born in which city in New York",
            "query": "SELECT ?obj WHERE { wd:Q344793 p:P19 ?s . ?s ps:P19 ?obj . ?s pq:P131 wd:Q1384 }",
            "NLQuery": "SELECT ?obj WHERE { George Burns place of birth ?s . ?s place of birth ?obj . ?s located in the administrative territorial entity New York }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "New York",
            "choppedEntity": "Q1384"
        }
    },
    {
        "chopped": {
            "question": "What are the municipalities of the sovereign state of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P17 ?X . ?X wdt:P150 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country ?X . ?X contains administrative territorial entity ?ans1}"
        },
        "original": {
            "question": "What are the municipalities of the sovereign state of Guarulhos",
            "query": "SELECT ?answer WHERE { wd:Q184409 wdt:P17 ?X . ?X wdt:P150 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Guarulhos country ?X . ?X contains administrative territorial entity ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Guarulhos",
            "choppedEntity": "Q184409"
        }
    },
    {
        "chopped": {
            "question": "What are the districts of the imperial state of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P17 ?X . ?X wdt:P150 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country ?X . ?X contains administrative territorial entity ?ans1}"
        },
        "original": {
            "question": "What are the districts of the imperial state of Guarulhos",
            "query": "SELECT ?answer WHERE { wd:Q184409 wdt:P17 ?X . ?X wdt:P150 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Guarulhos country ?X . ?X contains administrative territorial entity ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Guarulhos",
            "choppedEntity": "Q184409"
        }
    },
    {
        "chopped": {
            "question": "What was the year and the qualifying degree  obtained by Park Geun-hye in ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q138048 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P582 ?ans1 . ?s pq:P512 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Park Geun-hye educated at ?s . ?s educated at ?unknown . ?s end time ?ans1 . ?s academic degree ?ans2 }"
        },
        "original": {
            "question": "What was the year and the qualifying degree  obtained by Park Geun-hye in the Sogang University",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q138048 p:P69 ?s . ?s ps:P69 wd:Q374457 . ?s pq:P582 ?value1 . ?s pq:P512 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Park Geun-hye educated at ?s . ?s educated at Sogang University . ?s end time ?value1 . ?s academic degree ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Sogang University",
            "choppedEntity": "Q374457"
        }
    },
    {
        "chopped": {
            "question": "What was the year and the passing degree gotten by Park Geun-hye in ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q138048 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P582 ?ans1 . ?s pq:P512 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Park Geun-hye educated at ?s . ?s educated at ?unknown . ?s end time ?ans1 . ?s academic degree ?ans2 }"
        },
        "original": {
            "question": "What was the year and the passing degree gotten by Park Geun-hye in the Sogang University",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q138048 p:P69 ?s . ?s ps:P69 wd:Q374457 . ?s pq:P582 ?value1 . ?s pq:P512 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Park Geun-hye educated at ?s . ?s educated at Sogang University . ?s end time ?value1 . ?s academic degree ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Sogang University",
            "choppedEntity": "Q374457"
        }
    },
    {
        "chopped": {
            "question": "Which is the FilmTv.it person ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P5254 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown FilmTv.it person ID ?ans1}"
        },
        "original": {
            "question": "Which is the FilmTv.it person ID of George Harrison",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q2643 wdt:P5254 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { George Harrison FilmTv.it person ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "George Harrison",
            "choppedEntity": "Q2643"
        }
    },
    {
        "chopped": {
            "question": "When was Larry Bird received award for ",
            "query": "SELECT ?ans1 WHERE { wd:Q190152 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Larry Bird award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was Larry Bird received award for AII-NBA Team",
            "query": "SELECT ?value WHERE { wd:Q190152 p:P166 ?s . ?s ps:P166 wd:Q674359 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Larry Bird award received ?s . ?s award received All-NBA Team . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "AII-NBA Team",
            "choppedEntity": "Q674359"
        }
    },
    {
        "chopped": {
            "question": "What is the country of citizenship for the people of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P27 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country of citizenship ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "What is the country of citizenship for the people of the Incan Empire",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P27 wd:Q28573 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country of citizenship Inca Empire . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Incan Empire",
            "choppedEntity": "Q28573"
        }
    },
    {
        "chopped": {
            "question": "When was construction completed on ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P4661 ?obj . ?obj wdt:P31 wd:Q131681 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown reservoir created ?obj . ?obj instance of reservoir } "
        },
        "original": {
            "question": "When was construction completed on the Oroville Dam",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q1425594 wdt:P4661 ?obj . ?obj wdt:P31 wd:Q131681 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Oroville Dam reservoir created ?obj . ?obj instance of reservoir } "
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "the Oroville Dam",
            "choppedEntity": "Q1425594"
        }
    },
    {
        "chopped": {
            "question": "Was United States Declaration of Independence signed in ",
            "query": "ASK WHERE { wd:Q127912 wdt:P276 ?unknown }",
            "NLQuery": "ASK WHERE { United States Declaration of Independence location ?unknown }"
        },
        "original": {
            "question": "Was United States Declaration of Independence signed in Philadelphia",
            "query": "ASK WHERE { wd:Q127912 wdt:P276 wd:Q1345 }",
            "NLQuery": "ASK WHERE { United States Declaration of Independence location Philadelphia }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Philadelphia",
            "choppedEntity": "Q1345"
        }
    },
    {
        "chopped": {
            "question": "What is the enterprise of the developer of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P178 ?obj . ?obj wdt:P31 wd:Q6881511 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown developer ?obj . ?obj instance of enterprise } "
        },
        "original": {
            "question": "What is the enterprise of the developer of Skype",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q40984 wdt:P178 ?obj . ?obj wdt:P31 wd:Q6881511 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Skype developer ?obj . ?obj instance of enterprise } "
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Skype",
            "choppedEntity": "Q40984"
        }
    },
    {
        "chopped": {
            "question": "What is the venture of the engineer of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P178 ?obj . ?obj wdt:P31 wd:Q6881511 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown developer ?obj . ?obj instance of enterprise } "
        },
        "original": {
            "question": "What is the venture of the engineer of Skype",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q40984 wdt:P178 ?obj . ?obj wdt:P31 wd:Q6881511 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Skype developer ?obj . ?obj instance of enterprise } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Skype",
            "choppedEntity": "Q40984"
        }
    },
    {
        "chopped": {
            "question": "Is Robert Zemeckis is the director of ",
            "query": "ASK WHERE { ?unknown wdt:P57 wd:Q187364 }",
            "NLQuery": "ASK WHERE { ?unknown director Robert Zemeckis }"
        },
        "original": {
            "question": "Is Robert Zemeckis is the director of The Forest Gump",
            "query": "ASK WHERE { wd:Q134773 wdt:P57 wd:Q187364 }",
            "NLQuery": "ASK WHERE { Forrest Gump director Robert Zemeckis }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Forest Gump",
            "choppedEntity": "Q134773"
        }
    },
    {
        "chopped": {
            "question": "Did Robert Zemeckis direct ",
            "query": "ASK WHERE { ?unknown wdt:P57 wd:Q187364 }",
            "NLQuery": "ASK WHERE { ?unknown director Robert Zemeckis }"
        },
        "original": {
            "question": "Did Robert Zemeckis direct Forest Gump",
            "query": "ASK WHERE { wd:Q134773 wdt:P57 wd:Q187364 }",
            "NLQuery": "ASK WHERE { Forrest Gump director Robert Zemeckis }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Forest Gump",
            "choppedEntity": "Q134773"
        }
    },
    {
        "chopped": {
            "question": "Which Australian Prime Minister followed ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P39 ?s . ?s ps:P39 wd:Q319145 . ?s pq:P1365 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown position held ?s . ?s position held Prime Minister of Australia . ?s replaces ?ans1}"
        },
        "original": {
            "question": "Which Australian Prime Minister followed Chris Watson",
            "query": "SELECT ?value WHERE { wd:Q23347 p:P39 ?s . ?s ps:P39 wd:Q319145 . ?s pq:P1365 ?value}",
            "NLQuery": "SELECT ?value WHERE { Chris Watson position held ?s . ?s position held Prime Minister of Australia . ?s replaces ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Chris Watson",
            "choppedEntity": "Q23347"
        }
    },
    {
        "chopped": {
            "question": "How many ancestral homes are in ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P66 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub ancestral home ?unknown }"
        },
        "original": {
            "question": "How many ancestral homes are in England",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P66 wd:Q21 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub ancestral home England }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "England",
            "choppedEntity": "Q21"
        }
    },
    {
        "chopped": {
            "question": "What is the number of ancestral homes in ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P66 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub ancestral home ?unknown }"
        },
        "original": {
            "question": "What is the number of ancestral homes in England",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P66 wd:Q21 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub ancestral home England }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "England",
            "choppedEntity": "Q21"
        }
    },
    {
        "chopped": {
            "question": "Which is the number of the roles of ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P453 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown character role ?obj }"
        },
        "original": {
            "question": "Which is the number of the roles of Anna Netrebko",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q78516 wdt:P453 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Anna Netrebko character role ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Anna Netrebko",
            "choppedEntity": "Q78516"
        }
    },
    {
        "chopped": {
            "question": "Which is the person as a significant person of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P3342 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown significant person ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Which is the person as a significant person of Carl Gustav Jung",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q41532 wdt:P3342 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Carl Gustav Jung significant person ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Carl Gustav Jung",
            "choppedEntity": "Q41532"
        }
    },
    {
        "chopped": {
            "question": "What individual is considered to have played the most significant role in the life of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P3342 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown significant person ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "What individual is considered to have played the most significant role in the life of Carl Gustav Jung",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q41532 wdt:P3342 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Carl Gustav Jung significant person ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Carl Gustav Jung",
            "choppedEntity": "Q41532"
        }
    },
    {
        "chopped": {
            "question": "What are the capitals of ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P36 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub capital ?unknown }"
        },
        "original": {
            "question": "What are the capitals of Kassel",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P36 wd:Q2865 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub capital Kassel }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Kassel",
            "choppedEntity": "Q2865"
        }
    },
    {
        "chopped": {
            "question": "Is the Empire State Building located on Fifth Avenue and ",
            "query": "ASK WHERE { wd:Q9188 wdt:P669 wd:Q109858 . wd:Q9188 wdt:P669 ?unknown }",
            "NLQuery": "ASK WHERE { Empire State Building located on street Fifth Avenue . Empire State Building located on street ?unknown }"
        },
        "original": {
            "question": "Is the Empire State Building located on Fifth Avenue and 34th street",
            "query": "ASK WHERE { wd:Q9188 wdt:P669 wd:Q109858 . wd:Q9188 wdt:P669 wd:Q110049 }",
            "NLQuery": "ASK WHERE { Empire State Building located on street Fifth Avenue . Empire State Building located on street 34th Street }"
        },
        "meta": {
            "entityTagNER": "QUANTITY",
            "choppedText": "34th street",
            "choppedEntity": "Q110049"
        }
    },
    {
        "chopped": {
            "question": "Is the Empire State Building situated near Fifth Avenue and ",
            "query": "ASK WHERE { wd:Q9188 wdt:P669 wd:Q109858 . wd:Q9188 wdt:P669 ?unknown }",
            "NLQuery": "ASK WHERE { Empire State Building located on street Fifth Avenue . Empire State Building located on street ?unknown }"
        },
        "original": {
            "question": "Is the Empire State Building situated near Fifth Avenue and 34th street",
            "query": "ASK WHERE { wd:Q9188 wdt:P669 wd:Q109858 . wd:Q9188 wdt:P669 wd:Q110049 }",
            "NLQuery": "ASK WHERE { Empire State Building located on street Fifth Avenue . Empire State Building located on street 34th Street }"
        },
        "meta": {
            "entityTagNER": "QUANTITY",
            "choppedText": "34th street",
            "choppedEntity": "Q110049"
        }
    },
    {
        "chopped": {
            "question": "which is the secular state with the highest total reserves whose diplomatic relation is ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q859563 . ?ans1 wdt:P2134 ?obj . ?ans1 wdt:P530 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of secular state . ?ans1 total reserves ?obj . ?ans1 diplomatic relation ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "which is the secular state with the highest total reserves whose diplomatic relation is eduador",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q859563 . ?ent wdt:P2134 ?obj . ?ent wdt:P530 wd:Q736 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of secular state . ?ent total reserves ?obj . ?ent diplomatic relation Ecuador } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "eduador",
            "choppedEntity": "Q736"
        }
    },
    {
        "chopped": {
            "question": "Was James Franco a student of ",
            "query": "ASK WHERE { wd:Q306403 wdt:P1066 ?unknown }",
            "NLQuery": "ASK WHERE { James Franco student of ?unknown }"
        },
        "original": {
            "question": "Was James Franco a student of Sanford Meisner",
            "query": "ASK WHERE { wd:Q306403 wdt:P1066 wd:Q1358028 }",
            "NLQuery": "ASK WHERE { James Franco student of Sanford Meisner }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Sanford Meisner",
            "choppedEntity": "Q1358028"
        }
    },
    {
        "chopped": {
            "question": "How many educated people are with ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P69 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown educated at ?obj }"
        },
        "original": {
            "question": "How many educated people are with Wendy Wasserstein",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q450050 wdt:P69 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Wendy Wasserstein educated at ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Wendy Wasserstein",
            "choppedEntity": "Q450050"
        }
    },
    {
        "chopped": {
            "question": "How many transport hubs are there to ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P931 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub place served by transport hub ?unknown }"
        },
        "original": {
            "question": "How many transport hubs are there to Buenos Aires",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P931 wd:Q1486 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub place served by transport hub Buenos Aires }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Buenos Aires",
            "choppedEntity": "Q1486"
        }
    },
    {
        "chopped": {
            "question": "What is the number of transport hubs serving ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P931 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub place served by transport hub ?unknown }"
        },
        "original": {
            "question": "What is the number of transport hubs serving Buenos Aires",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P931 wd:Q1486 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub place served by transport hub Buenos Aires }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Buenos Aires",
            "choppedEntity": "Q1486"
        }
    },
    {
        "chopped": {
            "question": "Was the Reichstag the legislative body of ",
            "query": "ASK WHERE { ?unknown wdt:P194 wd:Q878525 }",
            "NLQuery": "ASK WHERE { ?unknown legislative body Reichstag }"
        },
        "original": {
            "question": "Was the Reichstag the legislative body of Nazi Germany",
            "query": "ASK WHERE { wd:Q7318 wdt:P194 wd:Q878525 }",
            "NLQuery": "ASK WHERE { Nazi Germany legislative body Reichstag }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Nazi Germany",
            "choppedEntity": "Q7318"
        }
    },
    {
        "chopped": {
            "question": "Which administrative unit is adjacent to ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P47 ?X . ?X wdt:P131 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown shares border with ?X . ?X located in the administrative territorial entity ?ans1}"
        },
        "original": {
            "question": "Which administrative unit is adjacent to Clementi, Singapore",
            "query": "SELECT ?answer WHERE { wd:Q4259064 wdt:P47 ?X . ?X wdt:P131 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Clementi, Singapore shares border with ?X . ?X located in the administrative territorial entity ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Clementi, Singapore",
            "choppedEntity": "Q4259064"
        }
    },
    {
        "chopped": {
            "question": "What is the birthplace of Ahmad al-Mansur whose twin city is ",
            "query": "SELECT ?ans1 WHERE { wd:Q400911 wdt:P19 ?ans1 . ?ans1 wdt:P190 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Ahmad al-Mansur place of birth ?ans1 . ?ans1 place of birth0 ?unknown}"
        },
        "original": {
            "question": "What is the birthplace of Ahmad al-Mansur whose twin city is Trarza Region",
            "query": "SELECT ?answer WHERE { wd:Q400911 wdt:P19 ?answer . ?answer wdt:P190 wd:Q859581}",
            "NLQuery": "SELECT ?answer WHERE { Ahmad al-Mansur place of birth ?answer . ?answer place of birth0 Trarza Region}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Trarza Region",
            "choppedEntity": "Q859581"
        }
    },
    {
        "chopped": {
            "question": "What is the record label and genre of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P264 ?ans1 . ?unknown wdt:P136 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown record label ?ans1 . ?unknown genre ?ans2 }"
        },
        "original": {
            "question": "What is the record label and genre of the Backstreet Boys",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q17140 wdt:P264 ?ans_1 . wd:Q17140 wdt:P136 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Backstreet Boys record label ?ans_1 . Backstreet Boys genre ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Backstreet Boys",
            "choppedEntity": "Q17140"
        }
    },
    {
        "chopped": {
            "question": "When was the birth of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P793 ?s . ?s ps:P793 ?ans2 . ?s pq:P585 ?ans1 . }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown significant event ?s . ?s significant event ?ans2 . ?s point in time ?ans1 . }"
        },
        "original": {
            "question": "When was the birth of Sandra Bernhardt",
            "query": "SELECT ?value1 ?obj WHERE { wd:Q4605 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P585 ?value1 . }",
            "NLQuery": "SELECT ?value1 ?obj WHERE { Sarah Bernhardt significant event ?s . ?s significant event ?obj . ?s point in time ?value1 . }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Sandra Bernhardt",
            "choppedEntity": "Q4605"
        }
    },
    {
        "chopped": {
            "question": "What is the diplomatic relation that originates at ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P495 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country of origin ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "What is the diplomatic relation that originates at The Age of Innocence",
            "query": "SELECT ?answer WHERE { wd:Q1045464 wdt:P495 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Age of Innocence country of origin ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "The Age of Innocence",
            "choppedEntity": "Q1045464"
        }
    },
    {
        "chopped": {
            "question": "What is the discretionary connection that starts at ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P495 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country of origin ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "What is the discretionary connection that starts at The Age of Innocence",
            "query": "SELECT ?answer WHERE { wd:Q1045464 wdt:P495 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Age of Innocence country of origin ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Age of Innocence",
            "choppedEntity": "Q1045464"
        }
    },
    {
        "chopped": {
            "question": "What it the Swedish portrait archive for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4819 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Swedish Portrait Archive ID ?ans1}"
        },
        "original": {
            "question": "What it the Swedish portrait archive for Jons Jacob Berzelius",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q151911 wdt:P4819 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { J\u00f6ns Jacob Berzelius Swedish Portrait Archive ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jons Jacob Berzelius",
            "choppedEntity": "Q151911"
        }
    },
    {
        "chopped": {
            "question": "Who is in charge of the burial place of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P119 ?X . ?X wdt:P6 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of burial ?X . ?X head of government ?ans1}"
        },
        "original": {
            "question": "Who is in charge of the burial place of Ebenezer Cobb Morley",
            "query": "SELECT ?answer WHERE { wd:Q2425484 wdt:P119 ?X . ?X wdt:P6 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Ebenezer Cobb Morley place of burial ?X . ?X head of government ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ebenezer Cobb Morley",
            "choppedEntity": "Q2425484"
        }
    },
    {
        "chopped": {
            "question": "Who is in charge of the burial put of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P119 ?X . ?X wdt:P6 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of burial ?X . ?X head of government ?ans1}"
        },
        "original": {
            "question": "Who is in charge of the burial put of Ebenezer Cobb Morley",
            "query": "SELECT ?answer WHERE { wd:Q2425484 wdt:P119 ?X . ?X wdt:P6 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Ebenezer Cobb Morley place of burial ?X . ?X head of government ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ebenezer Cobb Morley",
            "choppedEntity": "Q2425484"
        }
    },
    {
        "chopped": {
            "question": "How many positions are held by ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P39 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown position held ?obj }"
        },
        "original": {
            "question": "How many positions are held by Helmut Schmidt",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q2516 wdt:P39 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Helmut Schmidt position held ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Helmut Schmidt",
            "choppedEntity": "Q2516"
        }
    },
    {
        "chopped": {
            "question": "What is the hometown of shareholder ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P551 ?X . ?X wdt:P127 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown residence ?X . ?X owned by ?ans1}"
        },
        "original": {
            "question": "What is the hometown of shareholder Paul Boyer de Bouillane",
            "query": "SELECT ?answer WHERE { wd:Q26706865 wdt:P551 ?X . ?X wdt:P127 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Paul Boyer de Bouillane residence ?X . ?X owned by ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Paul Boyer de Bouillane",
            "choppedEntity": "Q26706865"
        }
    },
    {
        "chopped": {
            "question": "When was Nancy Reagan married to ",
            "query": "SELECT ?ans1 WHERE { wd:Q193426 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Nancy Reagan spouse ?s . ?s spouse ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When was Nancy Reagan married to Ronald Reagan",
            "query": "SELECT ?value WHERE { wd:Q193426 p:P26 ?s . ?s ps:P26 wd:Q9960 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Nancy Reagan spouse ?s . ?s spouse Ronald Reagan . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ronald Reagan",
            "choppedEntity": "Q9960"
        }
    },
    {
        "chopped": {
            "question": "At what time did Nancy Reagan marry to ",
            "query": "SELECT ?ans1 WHERE { wd:Q193426 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Nancy Reagan spouse ?s . ?s spouse ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "At what time did Nancy Reagan marry to Ronald Reagan",
            "query": "SELECT ?value WHERE { wd:Q193426 p:P26 ?s . ?s ps:P26 wd:Q9960 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Nancy Reagan spouse ?s . ?s spouse Ronald Reagan . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ronald Reagan",
            "choppedEntity": "Q9960"
        }
    },
    {
        "chopped": {
            "question": "What is the name of a film located in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P840 ?unknown . ?sbj wdt:P31 wd:Q11424 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj narrative location ?unknown . ?sbj instance of film } "
        },
        "original": {
            "question": "What is the name of a film located in Montreal",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P840 wd:Q340 . ?sbj wdt:P31 wd:Q11424 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj narrative location Montreal . ?sbj instance of film } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Montreal",
            "choppedEntity": "Q340"
        }
    },
    {
        "chopped": {
            "question": "Which is the commander of of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P598 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown commander of (DEPRECATED) ?ans1}"
        },
        "original": {
            "question": "Which is the commander of of Pyotr Bagration",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q239260 wdt:P598 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Pyotr Bagration commander of (DEPRECATED) ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Pyotr Bagration",
            "choppedEntity": "Q239260"
        }
    },
    {
        "chopped": {
            "question": "What dialect is commonly used in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P4913 ?unknown . ?sbj wdt:P31 wd:Q2121919 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj dialect of ?unknown . ?sbj instance of Russian dialect } "
        },
        "original": {
            "question": "What dialect is commonly used in Russia",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P4913 wd:Q7737 . ?sbj wdt:P31 wd:Q2121919 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj dialect of Russian . ?sbj instance of Russian dialect } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Russia",
            "choppedEntity": "Q7737"
        }
    },
    {
        "chopped": {
            "question": "What is the genre and who are the main characters of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P674 ?ans1 . ?unknown wdt:P136 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown characters ?ans1 . ?unknown genre ?ans2 }"
        },
        "original": {
            "question": "What is the genre and who are the main characters of Paradise Lost",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q28754 wdt:P674 ?ans_1 . wd:Q28754 wdt:P136 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Paradise Lost characters ?ans_1 . Paradise Lost genre ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Paradise Lost",
            "choppedEntity": "Q28754"
        }
    },
    {
        "chopped": {
            "question": "What is the office of the head of government and head of state in ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P1313 ?ans1 . ?unknown wdt:P35 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown office held by head of government ?ans1 . ?unknown head of state ?ans2 }"
        },
        "original": {
            "question": "What is the office of the head of government and head of state in Arunachal Pradesh",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q1162 wdt:P1313 ?ans_1 . wd:Q1162 wdt:P35 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Arunachal Pradesh office held by head of government ?ans_1 . Arunachal Pradesh head of state ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Arunachal Pradesh",
            "choppedEntity": "Q1162"
        }
    },
    {
        "chopped": {
            "question": "name he office of the head of government and head of state in ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P1313 ?ans1 . ?unknown wdt:P35 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown office held by head of government ?ans1 . ?unknown head of state ?ans2 }"
        },
        "original": {
            "question": "name he office of the head of government and head of state in Arunachal Pradesh",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q1162 wdt:P1313 ?ans_1 . wd:Q1162 wdt:P35 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Arunachal Pradesh office held by head of government ?ans_1 . Arunachal Pradesh head of state ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Arunachal Pradesh",
            "choppedEntity": "Q1162"
        }
    },
    {
        "chopped": {
            "question": "Which is the branch distributed by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P750 ?X . ?X wdt:P452 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown distributed by ?X . ?X industry ?ans1}"
        },
        "original": {
            "question": "Which is the branch distributed by You Never Can Tell",
            "query": "SELECT ?answer WHERE { wd:Q8057440 wdt:P750 ?X . ?X wdt:P452 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { You Never Can Tell distributed by ?X . ?X industry ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "You Never Can Tell",
            "choppedEntity": "Q8057440"
        }
    },
    {
        "chopped": {
            "question": "Which is the department conveyed by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P750 ?X . ?X wdt:P452 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown distributed by ?X . ?X industry ?ans1}"
        },
        "original": {
            "question": "Which is the department conveyed by You Never Can Tell",
            "query": "SELECT ?answer WHERE { wd:Q8057440 wdt:P750 ?X . ?X wdt:P452 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { You Never Can Tell distributed by ?X . ?X industry ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "You Never Can Tell",
            "choppedEntity": "Q8057440"
        }
    },
    {
        "chopped": {
            "question": "Which is the book that is published by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P123 ?unknown . ?sbj wdt:P31 wd:Q571 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj publisher ?unknown . ?sbj instance of book } "
        },
        "original": {
            "question": "Which is the book that is published by Rolling Stone",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P123 wd:Q33511 . ?sbj wdt:P31 wd:Q571 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj publisher Rolling Stone . ?sbj instance of book } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Rolling Stone",
            "choppedEntity": "Q33511"
        }
    },
    {
        "chopped": {
            "question": "What is the population of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'148908')) . ?s pq:P459 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown population ?s . ?s population ?x FILTER(contains(?x,'148908')) . ?s determination method ?ans1}"
        },
        "original": {
            "question": "What is the population of Rimini",
            "query": "SELECT ?value WHERE { wd:Q13369 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'148908')) . ?s pq:P459 ?value}",
            "NLQuery": "SELECT ?value WHERE { Rimini population ?s . ?s population ?x FILTER(contains(?x,'148908')) . ?s determination method ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Rimini",
            "choppedEntity": "Q13369"
        }
    },
    {
        "chopped": {
            "question": "How many people live in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'148908')) . ?s pq:P459 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown population ?s . ?s population ?x FILTER(contains(?x,'148908')) . ?s determination method ?ans1}"
        },
        "original": {
            "question": "How many people live in Rimini",
            "query": "SELECT ?value WHERE { wd:Q13369 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'148908')) . ?s pq:P459 ?value}",
            "NLQuery": "SELECT ?value WHERE { Rimini population ?s . ?s population ?x FILTER(contains(?x,'148908')) . ?s determination method ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Rimini",
            "choppedEntity": "Q13369"
        }
    },
    {
        "chopped": {
            "question": "What is the honorific title of Salman of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P511 ?obj . ?obj wdt:P31 wd:Q5737899 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown honorific prefix ?obj . ?obj instance of hereditary title } "
        },
        "original": {
            "question": "What is the honorific title of Salman of Saudi Arabia",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q367825 wdt:P511 ?obj . ?obj wdt:P31 wd:Q5737899 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Salman of Saudi Arabia honorific prefix ?obj . ?obj instance of hereditary title } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Saudi Arabia",
            "choppedEntity": "Q367825"
        }
    },
    {
        "chopped": {
            "question": "When did Khadija Ismayilova receive ",
            "query": "SELECT ?ans1 WHERE { wd:Q14561644 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Khadija Ismayilova award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Khadija Ismayilova receive the Global Shining Light Award",
            "query": "SELECT ?value WHERE { wd:Q14561644 p:P166 ?s . ?s ps:P166 wd:Q20971444 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Khadija Ismayilova award received ?s . ?s award received Global Shining Light Award . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Global Shining Light Award",
            "choppedEntity": "Q20971444"
        }
    },
    {
        "chopped": {
            "question": "What business manufactures the ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P176 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown manufacturer ?obj . ?obj instance of business } "
        },
        "original": {
            "question": "What business manufactures the Minigun",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q864060 wdt:P176 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Minigun manufacturer ?obj . ?obj instance of business } "
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Minigun",
            "choppedEntity": "Q864060"
        }
    },
    {
        "chopped": {
            "question": "What trade fabricates the ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P176 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown manufacturer ?obj . ?obj instance of business } "
        },
        "original": {
            "question": "What trade fabricates the Minigun",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q864060 wdt:P176 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Minigun manufacturer ?obj . ?obj instance of business } "
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Minigun",
            "choppedEntity": "Q864060"
        }
    },
    {
        "chopped": {
            "question": "Name the person who developed the game platform ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P400 ?X . ?X wdt:P156 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown platform ?X . ?X followed by ?ans1}"
        },
        "original": {
            "question": "Name the person who developed the game platform Insector X",
            "query": "SELECT ?answer WHERE { wd:Q2081247 wdt:P400 ?X . ?X wdt:P156 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Insector X platform ?X . ?X followed by ?answer}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Insector X",
            "choppedEntity": "Q2081247"
        }
    },
    {
        "chopped": {
            "question": "What is the population of the birthplace of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P19 ?X . ?X wdt:P1383 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of birth ?X . ?X contains settlement ?ans1}"
        },
        "original": {
            "question": "What is the population of the birthplace of Gerty Cori",
            "query": "SELECT ?answer WHERE { wd:Q204733 wdt:P19 ?X . ?X wdt:P1383 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Gerty Cori place of birth ?X . ?X contains settlement ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Gerty Cori",
            "choppedEntity": "Q204733"
        }
    },
    {
        "chopped": {
            "question": "What is the populace of the origin of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P19 ?X . ?X wdt:P1383 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of birth ?X . ?X contains settlement ?ans1}"
        },
        "original": {
            "question": "What is the populace of the origin of Gerty Cori",
            "query": "SELECT ?answer WHERE { wd:Q204733 wdt:P19 ?X . ?X wdt:P1383 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Gerty Cori place of birth ?X . ?X contains settlement ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Gerty Cori",
            "choppedEntity": "Q204733"
        }
    },
    {
        "chopped": {
            "question": "Which is first described of subject for ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P101 ?X . ?X wdt:P61 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown field of work ?X . ?X discoverer or inventor ?ans1}"
        },
        "original": {
            "question": "Which is first described of subject for Fedor Yevgenyevich Korsh",
            "query": "SELECT ?answer WHERE { wd:Q4234544 wdt:P101 ?X . ?X wdt:P61 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Fyodor Yevgenyevich Korsh field of work ?X . ?X discoverer or inventor ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Fedor Yevgenyevich Korsh",
            "choppedEntity": "Q4234544"
        }
    },
    {
        "chopped": {
            "question": "Does  Leeds University Library website contain the archives of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P485 ?s . ?s ps:P485 wd:Q24568958 . ?s pq:P856 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown archives at ?s . ?s archives at Leeds University Library . ?s official website ?ans1}"
        },
        "original": {
            "question": "Does  Leeds University Library website contain the archives of George Meredith",
            "query": "SELECT ?value WHERE { wd:Q90238 p:P485 ?s . ?s ps:P485 wd:Q24568958 . ?s pq:P856 ?value}",
            "NLQuery": "SELECT ?value WHERE { George Meredith archives at ?s . ?s archives at Leeds University Library . ?s official website ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "George Meredith",
            "choppedEntity": "Q90238"
        }
    },
    {
        "chopped": {
            "question": "for what walker percy was bominated in the work is ",
            "query": "SELECT ?ans1 WHERE { wd:Q176909 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Walker Percy nominated for ?s . ?s nominated for ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "for what walker percy was bominated in the work is moviegoer",
            "query": "SELECT ?obj WHERE { wd:Q176909 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q7752560 }",
            "NLQuery": "SELECT ?obj WHERE { Walker Percy nominated for ?s . ?s nominated for ?obj . ?s for work The Moviegoer }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "moviegoer",
            "choppedEntity": "Q7752560"
        }
    },
    {
        "chopped": {
            "question": "What is the deepest point headland of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P1589 ?obj . ?obj wdt:P31 wd:Q191992 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown lowest point ?obj . ?obj instance of headland } "
        },
        "original": {
            "question": "What is the deepest point headland of Bonn",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q586 wdt:P1589 ?obj . ?obj wdt:P31 wd:Q191992 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Bonn lowest point ?obj . ?obj instance of headland } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Bonn",
            "choppedEntity": "Q586"
        }
    },
    {
        "chopped": {
            "question": "What Alex Haley received for his work in ",
            "query": "SELECT ?ans1 WHERE { wd:Q296069 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Alex Haley award received ?s . ?s award received ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "What Alex Haley received for his work in The Autobiography of Malcolm X",
            "query": "SELECT ?obj WHERE { wd:Q296069 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q2281600 }",
            "NLQuery": "SELECT ?obj WHERE { Alex Haley award received ?s . ?s award received ?obj . ?s for work The Autobiography of Malcolm X }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Autobiography of Malcolm X",
            "choppedEntity": "Q2281600"
        }
    },
    {
        "chopped": {
            "question": "Did  Alex Haley receive anything for his work in ",
            "query": "SELECT ?ans1 WHERE { wd:Q296069 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Alex Haley award received ?s . ?s award received ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "Did  Alex Haley receive anything for his work in The Autobiography of Malcolm X",
            "query": "SELECT ?obj WHERE { wd:Q296069 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q2281600 }",
            "NLQuery": "SELECT ?obj WHERE { Alex Haley award received ?s . ?s award received ?obj . ?s for work The Autobiography of Malcolm X }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Autobiography of Malcolm X",
            "choppedEntity": "Q2281600"
        }
    },
    {
        "chopped": {
            "question": "What is the parent organization and owner of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P749 ?ans1 . ?unknown wdt:P1830 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown parent organization ?ans1 . ?unknown owner of ?ans2 }"
        },
        "original": {
            "question": "What is the parent organization and owner of UNICEF",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q740308 wdt:P749 ?ans_1 . wd:Q740308 wdt:P1830 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { UNICEF parent organization ?ans_1 . UNICEF owner of ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "UNICEF",
            "choppedEntity": "Q740308"
        }
    },
    {
        "chopped": {
            "question": "Which is the MeSH ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P486 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown MeSH descriptor ID ?ans1}"
        },
        "original": {
            "question": "Which is the MeSH ID for Arctic",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q25322 wdt:P486 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Arctic MeSH descriptor ID ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Arctic",
            "choppedEntity": "Q25322"
        }
    },
    {
        "chopped": {
            "question": "Who plays Bill Potts on ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P161 ?s . ?s ps:P161 ?ans1 . ?s pq:P453 wd:Q23908728 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cast member ?s . ?s cast member ?ans1 . ?s character role Bill Potts }"
        },
        "original": {
            "question": "Who plays Bill Potts on Doctor Who",
            "query": "SELECT ?obj WHERE { wd:Q34316 p:P161 ?s . ?s ps:P161 ?obj . ?s pq:P453 wd:Q23908728 }",
            "NLQuery": "SELECT ?obj WHERE { Doctor Who cast member ?s . ?s cast member ?obj . ?s character role Bill Potts }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Doctor Who",
            "choppedEntity": "Q34316"
        }
    },
    {
        "chopped": {
            "question": "What character did Bill Potts play in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P161 ?s . ?s ps:P161 ?ans1 . ?s pq:P453 wd:Q23908728 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cast member ?s . ?s cast member ?ans1 . ?s character role Bill Potts }"
        },
        "original": {
            "question": "What character did Bill Potts play in Doctor Who",
            "query": "SELECT ?obj WHERE { wd:Q34316 p:P161 ?s . ?s ps:P161 ?obj . ?s pq:P453 wd:Q23908728 }",
            "NLQuery": "SELECT ?obj WHERE { Doctor Who cast member ?s . ?s cast member ?obj . ?s character role Bill Potts }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Doctor Who",
            "choppedEntity": "Q34316"
        }
    },
    {
        "chopped": {
            "question": "Which is the biosafety level of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P1604 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 biosafety level ?unknown}"
        },
        "original": {
            "question": "Which is the biosafety level of 1",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P1604 wd:Q199}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer biosafety level 1}"
        },
        "meta": {
            "entityTagNER": "CARDINAL",
            "choppedText": "1",
            "choppedEntity": "Q199"
        }
    },
    {
        "chopped": {
            "question": "What is the World Rugby Hall of Fame ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4604 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown World Rugby Hall of Fame ID ?ans1}"
        },
        "original": {
            "question": "What is the World Rugby Hall of Fame ID for Colin Meads",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q642380 wdt:P4604 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Colin Meads World Rugby Hall of Fame ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Colin Meads",
            "choppedEntity": "Q642380"
        }
    },
    {
        "chopped": {
            "question": "What is the value of ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P38 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub currency ?unknown }"
        },
        "original": {
            "question": "What is the value of the Russian ruble",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P38 wd:Q41044 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub currency Russian ruble }"
        },
        "meta": {
            "entityTagNER": "MONEY",
            "choppedText": "the Russian ruble",
            "choppedEntity": "Q41044"
        }
    },
    {
        "chopped": {
            "question": "What is the Brazilian sister city of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P190 ?obj . ?obj wdt:P31 wd:Q3184121 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown twinned administrative body ?obj . ?obj instance of municipality of Brazil } "
        },
        "original": {
            "question": "What is the Brazilian sister city of Vancouver",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q24639 wdt:P190 ?obj . ?obj wdt:P31 wd:Q3184121 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Vancouver twinned administrative body ?obj . ?obj instance of municipality of Brazil } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Vancouver",
            "choppedEntity": "Q24639"
        }
    },
    {
        "chopped": {
            "question": "Who is the person that is influenced by ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P737 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown influenced by ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who is the person that is influenced by Michael Faraday",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q8750 wdt:P737 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Michael Faraday influenced by ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Michael Faraday",
            "choppedEntity": "Q8750"
        }
    },
    {
        "chopped": {
            "question": "Who is the founder and namesake of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P112 ?ans1 . ?unknown wdt:P138 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown founded by ?ans1 . ?unknown named after ?ans2 }"
        },
        "original": {
            "question": "Who is the founder and namesake of Walt Disney World",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q206859 wdt:P112 ?ans_1 . wd:Q206859 wdt:P138 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Walt Disney World Resort founded by ?ans_1 . Walt Disney World Resort named after ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Walt Disney World",
            "choppedEntity": "Q206859"
        }
    },
    {
        "chopped": {
            "question": "What voice actor in Neon Genesis Evangelion uses a working language of ",
            "query": "SELECT ?ans1 WHERE { wd:Q662 p:P725 ?s . ?s ps:P725 ?ans1 . ?s pq:P407 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Neon Genesis Evangelion voice actor ?s . ?s voice actor ?ans1 . ?s language of work or name ?unknown }"
        },
        "original": {
            "question": "What voice actor in Neon Genesis Evangelion uses a working language of Japanese",
            "query": "SELECT ?obj WHERE { wd:Q662 p:P725 ?s . ?s ps:P725 ?obj . ?s pq:P407 wd:Q5287 }",
            "NLQuery": "SELECT ?obj WHERE { Neon Genesis Evangelion voice actor ?s . ?s voice actor ?obj . ?s language of work or name Japanese }"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Japanese",
            "choppedEntity": "Q5287"
        }
    },
    {
        "chopped": {
            "question": "Which is the Cairn author ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4369 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Cairn author ID ?ans1}"
        },
        "original": {
            "question": "Which is the Cairn author ID of Fran\u00e7ois Hollande",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q157 wdt:P4369 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Fran\u00e7ois Hollande Cairn author ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Fran\u00e7ois Hollande",
            "choppedEntity": "Q157"
        }
    },
    {
        "chopped": {
            "question": "Were bass guitar and violin both instruments played by ",
            "query": "ASK WHERE { ?unknown wdt:P1303 wd:Q46185 . ?unknown wdt:P1303 wd:Q8355 }",
            "NLQuery": "ASK WHERE { ?unknown instrument bass guitar . ?unknown instrument violin }"
        },
        "original": {
            "question": "Were bass guitar and violin both instruments played by Syd Barrett",
            "query": "ASK WHERE { wd:Q173061 wdt:P1303 wd:Q46185 . wd:Q173061 wdt:P1303 wd:Q8355 }",
            "NLQuery": "ASK WHERE { Syd Barrett instrument bass guitar . Syd Barrett instrument violin }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Syd Barrett",
            "choppedEntity": "Q173061"
        }
    },
    {
        "chopped": {
            "question": "When did Quincy Jones receive ",
            "query": "SELECT ?ans1 WHERE { wd:Q193645 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Quincy Jones award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Quincy Jones receive the Marian Anderson Award",
            "query": "SELECT ?value WHERE { wd:Q193645 p:P166 ?s . ?s ps:P166 wd:Q6761828 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Quincy Jones award received ?s . ?s award received Marian Anderson Award . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Marian Anderson Award",
            "choppedEntity": "Q6761828"
        }
    },
    {
        "chopped": {
            "question": "On what date was the Marian Anderson Award awarded to ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 wd:Q6761828 . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received Marian Anderson Award . ?s point in time ?ans1}"
        },
        "original": {
            "question": "On what date was the Marian Anderson Award awarded to Quincy Jones",
            "query": "SELECT ?value WHERE { wd:Q193645 p:P166 ?s . ?s ps:P166 wd:Q6761828 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Quincy Jones award received ?s . ?s award received Marian Anderson Award . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Quincy Jones",
            "choppedEntity": "Q193645"
        }
    },
    {
        "chopped": {
            "question": "When did Bonnie and Clyde receive the award for ",
            "query": "SELECT ?ans1 WHERE { wd:Q181776 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Bonnie and Clyde award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Bonnie and Clyde receive the award for the National Film Registry",
            "query": "SELECT ?value WHERE { wd:Q181776 p:P166 ?s . ?s ps:P166 wd:Q823422 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Bonnie and Clyde award received ?s . ?s award received National Film Registry . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the National Film Registry",
            "choppedEntity": "Q823422"
        }
    },
    {
        "chopped": {
            "question": "What is the Astronaut's mission with ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P450 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown astronaut mission ?ans1}"
        },
        "original": {
            "question": "What is the Astronaut's mission with Sally Ride",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q49285 wdt:P450 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Sally Ride astronaut mission ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Sally Ride",
            "choppedEntity": "Q49285"
        }
    },
    {
        "chopped": {
            "question": "Which of Joachim Murat's Kids wrote language in ",
            "query": "SELECT ?ans1 WHERE { wd:Q151173 wdt:P40 ?ans1 . ?ans1 wdt:P1412 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Joachim Murat child ?ans1 . ?ans1 languages spoken, written or signed ?unknown}"
        },
        "original": {
            "question": "Which of Joachim Murat's Kids wrote language in French",
            "query": "SELECT ?answer WHERE { wd:Q151173 wdt:P40 ?answer . ?answer wdt:P1412 wd:Q150}",
            "NLQuery": "SELECT ?answer WHERE { Joachim Murat child ?answer . ?answer languages spoken, written or signed French}"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "French",
            "choppedEntity": "Q150"
        }
    },
    {
        "chopped": {
            "question": "Which of Joachim Murat's Kids composed dialect in ",
            "query": "SELECT ?ans1 WHERE { wd:Q151173 wdt:P40 ?ans1 . ?ans1 wdt:P1412 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Joachim Murat child ?ans1 . ?ans1 languages spoken, written or signed ?unknown}"
        },
        "original": {
            "question": "Which of Joachim Murat's Kids composed dialect in French",
            "query": "SELECT ?answer WHERE { wd:Q151173 wdt:P40 ?answer . ?answer wdt:P1412 wd:Q150}",
            "NLQuery": "SELECT ?answer WHERE { Joachim Murat child ?answer . ?answer languages spoken, written or signed French}"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "French",
            "choppedEntity": "Q150"
        }
    },
    {
        "chopped": {
            "question": "What is the location of birth of Jose Maria Aznar which also bordered by ",
            "query": "SELECT ?ans1 WHERE { wd:Q55637 wdt:P19 ?ans1 . ?ans1 wdt:P47 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Jos\u00e9 Mar\u00eda Aznar place of birth ?ans1 . ?ans1 shares border with ?unknown}"
        },
        "original": {
            "question": "What is the location of birth of Jose Maria Aznar which also bordered by Las Rozas de Madrid",
            "query": "SELECT ?answer WHERE { wd:Q55637 wdt:P19 ?answer . ?answer wdt:P47 wd:Q592747}",
            "NLQuery": "SELECT ?answer WHERE { Jos\u00e9 Mar\u00eda Aznar place of birth ?answer . ?answer shares border with Las Rozas de Madrid}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Las Rozas de Madrid",
            "choppedEntity": "Q592747"
        }
    },
    {
        "chopped": {
            "question": "What is the area of birth of Jose Maria Aznar which too bordered by ",
            "query": "SELECT ?ans1 WHERE { wd:Q55637 wdt:P19 ?ans1 . ?ans1 wdt:P47 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Jos\u00e9 Mar\u00eda Aznar place of birth ?ans1 . ?ans1 shares border with ?unknown}"
        },
        "original": {
            "question": "What is the area of birth of Jose Maria Aznar which too bordered by Las Rozas de Madrid",
            "query": "SELECT ?answer WHERE { wd:Q55637 wdt:P19 ?answer . ?answer wdt:P47 wd:Q592747}",
            "NLQuery": "SELECT ?answer WHERE { Jos\u00e9 Mar\u00eda Aznar place of birth ?answer . ?answer shares border with Las Rozas de Madrid}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Las Rozas de Madrid",
            "choppedEntity": "Q592747"
        }
    },
    {
        "chopped": {
            "question": "Who was the winner of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P155 ?X . ?X wdt:P161 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown follows ?X . ?X cast member ?ans1}"
        },
        "original": {
            "question": "Who was the winner of WrestleMania III",
            "query": "SELECT ?answer WHERE { wd:Q50846 wdt:P155 ?X . ?X wdt:P161 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { WrestleMania IV follows ?X . ?X cast member ?answer}"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "WrestleMania III",
            "choppedEntity": "Q50846"
        }
    },
    {
        "chopped": {
            "question": "Who was the victor of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P155 ?X . ?X wdt:P161 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown follows ?X . ?X cast member ?ans1}"
        },
        "original": {
            "question": "Who was the victor of WrestleMania III",
            "query": "SELECT ?answer WHERE { wd:Q50846 wdt:P155 ?X . ?X wdt:P161 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { WrestleMania IV follows ?X . ?X cast member ?answer}"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "WrestleMania III",
            "choppedEntity": "Q50846"
        }
    },
    {
        "chopped": {
            "question": "What awards of Jerry Herman'a had a leader in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1363692 wdt:P166 ?ans1 . ?ans1 wdt:P1346 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Jerry Herman award received ?ans1 . ?ans1 winner ?unknown}"
        },
        "original": {
            "question": "What awards of Jerry Herman'a had a leader in Lillian Gish",
            "query": "SELECT ?answer WHERE { wd:Q1363692 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q104183}",
            "NLQuery": "SELECT ?answer WHERE { Jerry Herman award received ?answer . ?answer winner Lillian Gish}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Lillian Gish",
            "choppedEntity": "Q104183"
        }
    },
    {
        "chopped": {
            "question": "What awards did Jerry Herman receive while playing the lead in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1363692 wdt:P166 ?ans1 . ?ans1 wdt:P1346 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Jerry Herman award received ?ans1 . ?ans1 winner ?unknown}"
        },
        "original": {
            "question": "What awards did Jerry Herman receive while playing the lead in Lillian Gish",
            "query": "SELECT ?answer WHERE { wd:Q1363692 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q104183}",
            "NLQuery": "SELECT ?answer WHERE { Jerry Herman award received ?answer . ?answer winner Lillian Gish}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Lillian Gish",
            "choppedEntity": "Q104183"
        }
    },
    {
        "chopped": {
            "question": "Which is the memoir that is the notable work of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P800 ?obj . ?obj wdt:P31 wd:Q112983 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown notable work ?obj . ?obj instance of memoir } "
        },
        "original": {
            "question": "Which is the memoir that is the notable work of Hillary Clinton",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q6294 wdt:P800 ?obj . ?obj wdt:P31 wd:Q112983 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Hillary Clinton notable work ?obj . ?obj instance of memoir } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Hillary Clinton",
            "choppedEntity": "Q6294"
        }
    },
    {
        "chopped": {
            "question": "Which is the diary that's the outstanding work of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P800 ?obj . ?obj wdt:P31 wd:Q112983 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown notable work ?obj . ?obj instance of memoir } "
        },
        "original": {
            "question": "Which is the diary that's the outstanding work of Hillary Clinton",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q6294 wdt:P800 ?obj . ?obj wdt:P31 wd:Q112983 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Hillary Clinton notable work ?obj . ?obj instance of memoir } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Hillary Clinton",
            "choppedEntity": "Q6294"
        }
    },
    {
        "chopped": {
            "question": "Where are the administrative headquarters of the Johor Sultanate, who's sister city is ",
            "query": "SELECT ?ans1 WHERE { wd:Q1150344 wdt:P36 ?ans1 . ?ans1 wdt:P190 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Johor Sultanate capital ?ans1 . ?ans1 twinned administrative body ?unknown}"
        },
        "original": {
            "question": "Where are the administrative headquarters of the Johor Sultanate, who's sister city is Istanbul",
            "query": "SELECT ?answer WHERE { wd:Q1150344 wdt:P36 ?answer . ?answer wdt:P190 wd:Q406}",
            "NLQuery": "SELECT ?answer WHERE { Johor Sultanate capital ?answer . ?answer twinned administrative body Istanbul}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Istanbul",
            "choppedEntity": "Q406"
        }
    },
    {
        "chopped": {
            "question": "Where are the regulatory central station of the Johor Sultanate, who's sister city is ",
            "query": "SELECT ?ans1 WHERE { wd:Q1150344 wdt:P36 ?ans1 . ?ans1 wdt:P190 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Johor Sultanate capital ?ans1 . ?ans1 twinned administrative body ?unknown}"
        },
        "original": {
            "question": "Where are the regulatory central station of the Johor Sultanate, who's sister city is Istanbul",
            "query": "SELECT ?answer WHERE { wd:Q1150344 wdt:P36 ?answer . ?answer wdt:P190 wd:Q406}",
            "NLQuery": "SELECT ?answer WHERE { Johor Sultanate capital ?answer . ?answer twinned administrative body Istanbul}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Istanbul",
            "choppedEntity": "Q406"
        }
    },
    {
        "chopped": {
            "question": "Who is the participant of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P1344 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 participant in ?unknown}"
        },
        "original": {
            "question": "Who is the participant of Beer Hall Putsch",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P1344 wd:Q36749}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer participant in Beer Hall Putsch}"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "Beer Hall Putsch",
            "choppedEntity": "Q36749"
        }
    },
    {
        "chopped": {
            "question": "What genre of music is ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P136 ?X . ?X wdt:P2184 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown genre ?X . ?X history of topic ?ans1}"
        },
        "original": {
            "question": "What genre of music is Vito Acconci",
            "query": "SELECT ?answer WHERE { wd:Q433471 wdt:P136 ?X . ?X wdt:P2184 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Vito Acconci genre ?X . ?X history of topic ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Vito Acconci",
            "choppedEntity": "Q433471"
        }
    },
    {
        "chopped": {
            "question": "What sort of music is ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P136 ?X . ?X wdt:P2184 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown genre ?X . ?X history of topic ?ans1}"
        },
        "original": {
            "question": "What sort of music is Vito Acconci",
            "query": "SELECT ?answer WHERE { wd:Q433471 wdt:P136 ?X . ?X wdt:P2184 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Vito Acconci genre ?X . ?X history of topic ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Vito Acconci",
            "choppedEntity": "Q433471"
        }
    },
    {
        "chopped": {
            "question": "What is the watercolor painting with the  maximum height whose collection is ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q18761202 . ?ans1 wdt:P2048 ?obj . ?ans1 wdt:P195 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of watercolor painting . ?ans1 height ?obj . ?ans1 collection ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the watercolor painting with the  maximum height whose collection is Rijksmuseum",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q18761202 . ?ent wdt:P2048 ?obj . ?ent wdt:P195 wd:Q190804 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of watercolor painting . ?ent height ?obj . ?ent collection Rijksmuseum } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Rijksmuseum",
            "choppedEntity": "Q190804"
        }
    },
    {
        "chopped": {
            "question": "What is the highest water color painting in the ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q18761202 . ?ans1 wdt:P2048 ?obj . ?ans1 wdt:P195 ?unknown } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of watercolor painting . ?ans1 height ?obj . ?ans1 collection ?unknown } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the highest water color painting in the Rijksmuseum",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q18761202 . ?ent wdt:P2048 ?obj . ?ent wdt:P195 wd:Q190804 } ORDER BY DESC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of watercolor painting . ?ent height ?obj . ?ent collection Rijksmuseum } ORDER BY DESC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Rijksmuseum",
            "choppedEntity": "Q190804"
        }
    },
    {
        "chopped": {
            "question": "What forename compared to George Burns is equivalent to ",
            "query": "SELECT ?ans1 WHERE { wd:Q344793 wdt:P735 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { George Burns given name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "What forename compared to George Burns is equivalent to J\u00f8rn",
            "query": "SELECT ?answer WHERE { wd:Q344793 wdt:P735 ?answer . ?answer wdt:P460 wd:Q16511246}",
            "NLQuery": "SELECT ?answer WHERE { George Burns given name ?answer . ?answer said to be the same as J\u00f8rn}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "J\u00f8rn",
            "choppedEntity": "Q16511246"
        }
    },
    {
        "chopped": {
            "question": "For what subject did Zero Mostel receive the 19th ",
            "query": "SELECT ?ans1 WHERE { wd:Q191952 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Zero Mostel award received ?s . ?s award received ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "For what subject did Zero Mostel receive the 19th Tony Awards",
            "query": "SELECT ?obj WHERE { wd:Q191952 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q4595828 }",
            "NLQuery": "SELECT ?obj WHERE { Zero Mostel award received ?s . ?s award received ?obj . ?s statement is subject of 19th Tony Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Tony Awards",
            "choppedEntity": "Q4595828"
        }
    },
    {
        "chopped": {
            "question": "What is the recognition title of Max Planck, that was won by ",
            "query": "SELECT ?ans1 WHERE { wd:Q9021 wdt:P166 ?ans1 . ?ans1 wdt:P1346 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Max Planck award received ?ans1 . ?ans1 winner ?unknown}"
        },
        "original": {
            "question": "What is the recognition title of Max Planck, that was won by George Shuckburgh-Evelyn",
            "query": "SELECT ?answer WHERE { wd:Q9021 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q3300195}",
            "NLQuery": "SELECT ?answer WHERE { Max Planck award received ?answer . ?answer winner George Shuckburgh-Evelyn}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "George Shuckburgh-Evelyn",
            "choppedEntity": "Q3300195"
        }
    },
    {
        "chopped": {
            "question": "What is the consciousness title of Max Planck, that used to be received via ",
            "query": "SELECT ?ans1 WHERE { wd:Q9021 wdt:P166 ?ans1 . ?ans1 wdt:P1346 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Max Planck award received ?ans1 . ?ans1 winner ?unknown}"
        },
        "original": {
            "question": "What is the consciousness title of Max Planck, that used to be received via George Shuckburgh-Evelyn",
            "query": "SELECT ?answer WHERE { wd:Q9021 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q3300195}",
            "NLQuery": "SELECT ?answer WHERE { Max Planck award received ?answer . ?answer winner George Shuckburgh-Evelyn}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "George Shuckburgh-Evelyn",
            "choppedEntity": "Q3300195"
        }
    },
    {
        "chopped": {
            "question": "Do you know what human incluenced ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P737 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj influenced by ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Do you know what human incluenced JRR Tolkien",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P737 wd:Q892 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj influenced by J. R. R. Tolkien . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "JRR Tolkien",
            "choppedEntity": "Q892"
        }
    },
    {
        "chopped": {
            "question": "Who was the founder of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P112 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown founded by ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who was the founder of UNICEF",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q740308 wdt:P112 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { UNICEF founded by ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "UNICEF",
            "choppedEntity": "Q740308"
        }
    },
    {
        "chopped": {
            "question": "Who was the author of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P112 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown founded by ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who was the author of UNICEF",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q740308 wdt:P112 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { UNICEF founded by ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "UNICEF",
            "choppedEntity": "Q740308"
        }
    },
    {
        "chopped": {
            "question": "What is the coordinate location of Nestl\u00e9 with its headquarter at ",
            "query": "SELECT ?ans1 WHERE { wd:Q160746 p:P159 ?s . ?s ps:P159 ?unknown . ?s pq:P625 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Nestl\u00e9 headquarters location ?s . ?s headquarters location ?unknown . ?s coordinate location ?ans1}"
        },
        "original": {
            "question": "What is the coordinate location of Nestl\u00e9 with its headquarter at Vevey",
            "query": "SELECT ?value WHERE { wd:Q160746 p:P159 ?s . ?s ps:P159 wd:Q68160 . ?s pq:P625 ?value}",
            "NLQuery": "SELECT ?value WHERE { Nestl\u00e9 headquarters location ?s . ?s headquarters location Vevey . ?s coordinate location ?value}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Vevey",
            "choppedEntity": "Q68160"
        }
    },
    {
        "chopped": {
            "question": "Nestle's corporate offices are located in Vevey. Where is ",
            "query": "SELECT ?ans1 WHERE { wd:Q160746 p:P159 ?s . ?s ps:P159 ?unknown . ?s pq:P625 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Nestl\u00e9 headquarters location ?s . ?s headquarters location ?unknown . ?s coordinate location ?ans1}"
        },
        "original": {
            "question": "Nestle's corporate offices are located in Vevey. Where is Vevey",
            "query": "SELECT ?value WHERE { wd:Q160746 p:P159 ?s . ?s ps:P159 wd:Q68160 . ?s pq:P625 ?value}",
            "NLQuery": "SELECT ?value WHERE { Nestl\u00e9 headquarters location ?s . ?s headquarters location Vevey . ?s coordinate location ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Vevey",
            "choppedEntity": "Q68160"
        }
    },
    {
        "chopped": {
            "question": "When did Noam Chomsky finish his education at ",
            "query": "SELECT ?ans1 WHERE { wd:Q9049 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Noam Chomsky educated at ?s . ?s educated at ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did Noam Chomsky finish his education at Harvard University",
            "query": "SELECT ?value WHERE { wd:Q9049 p:P69 ?s . ?s ps:P69 wd:Q13371 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Noam Chomsky educated at ?s . ?s educated at Harvard University . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Harvard University",
            "choppedEntity": "Q13371"
        }
    },
    {
        "chopped": {
            "question": "At what time did Noam Chomsky complete his education at ",
            "query": "SELECT ?ans1 WHERE { wd:Q9049 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Noam Chomsky educated at ?s . ?s educated at ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "At what time did Noam Chomsky complete his education at Harvard University",
            "query": "SELECT ?value WHERE { wd:Q9049 p:P69 ?s . ?s ps:P69 wd:Q13371 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Noam Chomsky educated at ?s . ?s educated at Harvard University . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Harvard University",
            "choppedEntity": "Q13371"
        }
    },
    {
        "chopped": {
            "question": "What was Michael Curtiz nominated for regarding his work with ",
            "query": "SELECT ?ans1 WHERE { wd:Q51491 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Michael Curtiz nominated for ?s . ?s nominated for ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "What was Michael Curtiz nominated for regarding his work with Angels with Dirty Faces",
            "query": "SELECT ?obj WHERE { wd:Q51491 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q524997 }",
            "NLQuery": "SELECT ?obj WHERE { Michael Curtiz nominated for ?s . ?s nominated for ?obj . ?s for work Angels with Dirty Faces }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Angels with Dirty Faces",
            "choppedEntity": "Q524997"
        }
    },
    {
        "chopped": {
            "question": "Which award was Michael Curtiz nominated for regarding ",
            "query": "SELECT ?ans1 WHERE { wd:Q51491 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Michael Curtiz nominated for ?s . ?s nominated for ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "Which award was Michael Curtiz nominated for regarding Angels with Dirty Faces",
            "query": "SELECT ?obj WHERE { wd:Q51491 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q524997 }",
            "NLQuery": "SELECT ?obj WHERE { Michael Curtiz nominated for ?s . ?s nominated for ?obj . ?s for work Angels with Dirty Faces }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Angels with Dirty Faces",
            "choppedEntity": "Q524997"
        }
    },
    {
        "chopped": {
            "question": "Are Basra and Kitwe twinned administrative bodies in ",
            "query": "ASK WHERE { ?unknown wdt:P190 wd:Q48195 . ?unknown wdt:P190 wd:Q239580 }",
            "NLQuery": "ASK WHERE { ?unknown twinned administrative body Basra . ?unknown twinned administrative body Kitwe }"
        },
        "original": {
            "question": "Are Basra and Kitwe twinned administrative bodies in Detroit",
            "query": "ASK WHERE { wd:Q12439 wdt:P190 wd:Q48195 . wd:Q12439 wdt:P190 wd:Q239580 }",
            "NLQuery": "ASK WHERE { Detroit twinned administrative body Basra . Detroit twinned administrative body Kitwe }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Detroit",
            "choppedEntity": "Q12439"
        }
    },
    {
        "chopped": {
            "question": "Do Basra and Kitwe reside in ",
            "query": "ASK WHERE { ?unknown wdt:P190 wd:Q48195 . ?unknown wdt:P190 wd:Q239580 }",
            "NLQuery": "ASK WHERE { ?unknown twinned administrative body Basra . ?unknown twinned administrative body Kitwe }"
        },
        "original": {
            "question": "Do Basra and Kitwe reside in Detroit",
            "query": "ASK WHERE { wd:Q12439 wdt:P190 wd:Q48195 . wd:Q12439 wdt:P190 wd:Q239580 }",
            "NLQuery": "ASK WHERE { Detroit twinned administrative body Basra . Detroit twinned administrative body Kitwe }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Detroit",
            "choppedEntity": "Q12439"
        }
    },
    {
        "chopped": {
            "question": "What was the date of the wedding of Rufina Pukhova and ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P26 ?s . ?s ps:P26 wd:Q7377949 . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown spouse ?s . ?s spouse Rufina Pukhova . ?s start time ?ans1}"
        },
        "original": {
            "question": "What was the date of the wedding of Rufina Pukhova and Kim Philby",
            "query": "SELECT ?value WHERE { wd:Q296313 p:P26 ?s . ?s ps:P26 wd:Q7377949 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Kim Philby spouse ?s . ?s spouse Rufina Pukhova . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Kim Philby",
            "choppedEntity": "Q296313"
        }
    },
    {
        "chopped": {
            "question": "What is the location of the area of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P2633 ?obj . ?obj wdt:P31 wd:Q46865913 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown geography of topic ?obj . ?obj instance of geography of geographic location } "
        },
        "original": {
            "question": "What is the location of the area of Kinshasa",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q3838 wdt:P2633 ?obj . ?obj wdt:P31 wd:Q46865913 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Kinshasa geography of topic ?obj . ?obj instance of geography of geographic location } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Kinshasa",
            "choppedEntity": "Q3838"
        }
    },
    {
        "chopped": {
            "question": "What is the location of the region of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P2633 ?obj . ?obj wdt:P31 wd:Q46865913 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown geography of topic ?obj . ?obj instance of geography of geographic location } "
        },
        "original": {
            "question": "What is the location of the region of Kinshasa",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q3838 wdt:P2633 ?obj . ?obj wdt:P31 wd:Q46865913 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Kinshasa geography of topic ?obj . ?obj instance of geography of geographic location } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Kinshasa",
            "choppedEntity": "Q3838"
        }
    },
    {
        "chopped": {
            "question": "Is 116.19 the quantity of buried in ",
            "query": "ASK WHERE { ?unknown wdt:P2324 ?obj FILTER(?obj = 11619) } ",
            "NLQuery": "ASK WHERE { ?unknown quantity buried ?obj FILTER(?obj = 11619) } "
        },
        "original": {
            "question": "Is 116.19 the quantity of buried in the Marigny German War Cemetary",
            "query": "ASK WHERE { wd:Q1203262 wdt:P2324 ?obj FILTER(?obj = 11619) } ",
            "NLQuery": "ASK WHERE { Marigny German War Cemetery quantity buried ?obj FILTER(?obj = 11619) } "
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "the Marigny German War Cemetary",
            "choppedEntity": "Q1203262"
        }
    },
    {
        "chopped": {
            "question": "Is the piano as an instrument by ",
            "query": "ASK WHERE { ?unknown wdt:P1303 wd:Q5994 }",
            "NLQuery": "ASK WHERE { ?unknown instrument piano }"
        },
        "original": {
            "question": "Is the piano as an instrument by Chris Martin",
            "query": "ASK WHERE { wd:Q712860 wdt:P1303 wd:Q5994 }",
            "NLQuery": "ASK WHERE { Chris Martin instrument piano }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Chris Martin",
            "choppedEntity": "Q712860"
        }
    },
    {
        "chopped": {
            "question": "For what category did Angela Lansbury receive ",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q206856 wdt:P166 ?obj . ?obj wdt:P31 ?unknown } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Angela Lansbury award received ?obj . ?obj instance of ?unknown } "
        },
        "original": {
            "question": "For what category did Angela Lansbury receive a Golden Globe",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q206856 wdt:P166 ?obj . ?obj wdt:P31 wd:Q1011547 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Angela Lansbury award received ?obj . ?obj instance of Golden Globe Award } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "a Golden Globe",
            "choppedEntity": "Q1011547"
        }
    },
    {
        "chopped": {
            "question": "What is the postal code for Seoul National University in ",
            "query": "SELECT ?ans1 WHERE { wd:Q39913 p:P159 ?s . ?s ps:P159 ?unknown . ?s pq:P281 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Seoul National University headquarters location ?s . ?s headquarters location ?unknown . ?s postal code ?ans1}"
        },
        "original": {
            "question": "What is the postal code for Seoul National University in Seoul",
            "query": "SELECT ?value WHERE { wd:Q39913 p:P159 ?s . ?s ps:P159 wd:Q8684 . ?s pq:P281 ?value}",
            "NLQuery": "SELECT ?value WHERE { Seoul National University headquarters location ?s . ?s headquarters location Seoul . ?s postal code ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Seoul",
            "choppedEntity": "Q8684"
        }
    },
    {
        "chopped": {
            "question": "What is the postal code for Seoul National College in ",
            "query": "SELECT ?ans1 WHERE { wd:Q39913 p:P159 ?s . ?s ps:P159 ?unknown . ?s pq:P281 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Seoul National University headquarters location ?s . ?s headquarters location ?unknown . ?s postal code ?ans1}"
        },
        "original": {
            "question": "What is the postal code for Seoul National College in Seoul",
            "query": "SELECT ?value WHERE { wd:Q39913 p:P159 ?s . ?s ps:P159 wd:Q8684 . ?s pq:P281 ?value}",
            "NLQuery": "SELECT ?value WHERE { Seoul National University headquarters location ?s . ?s headquarters location Seoul . ?s postal code ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Seoul",
            "choppedEntity": "Q8684"
        }
    },
    {
        "chopped": {
            "question": "What is the name of the credit institution owned by ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P127 ?obj . ?obj wdt:P31 wd:Q730038 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown owned by ?obj . ?obj instance of credit institution } "
        },
        "original": {
            "question": "What is the name of the credit institution owned by Walmart",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q483551 wdt:P127 ?obj . ?obj wdt:P31 wd:Q730038 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Walmart owned by ?obj . ?obj instance of credit institution } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Walmart",
            "choppedEntity": "Q483551"
        }
    },
    {
        "chopped": {
            "question": "What is the title of the credit institution claimed by ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P127 ?obj . ?obj wdt:P31 wd:Q730038 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown owned by ?obj . ?obj instance of credit institution } "
        },
        "original": {
            "question": "What is the title of the credit institution claimed by Walmart",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q483551 wdt:P127 ?obj . ?obj wdt:P31 wd:Q730038 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Walmart owned by ?obj . ?obj instance of credit institution } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Walmart",
            "choppedEntity": "Q483551"
        }
    },
    {
        "chopped": {
            "question": "What is the space group for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P690 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown space group ?ans1}"
        },
        "original": {
            "question": "What is the space group for talc",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q134583 wdt:P690 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { talc space group ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "talc",
            "choppedEntity": "Q134583"
        }
    },
    {
        "chopped": {
            "question": "Which is the ITU triathlete ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3604 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown ITU triathlete ID ?ans1}"
        },
        "original": {
            "question": "Which is the ITU triathlete ID for Emma Snowsill",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q257049 wdt:P3604 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Emma Snowsill ITU triathlete ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Emma Snowsill",
            "choppedEntity": "Q257049"
        }
    },
    {
        "chopped": {
            "question": "Which lake inflows to ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P200 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown inflows ?obj }"
        },
        "original": {
            "question": "Which lake inflows to Lake Urmia",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q199551 wdt:P200 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Lake Urmia inflows ?obj }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Lake Urmia",
            "choppedEntity": "Q199551"
        }
    },
    {
        "chopped": {
            "question": "When did Nan Goldin receive ",
            "query": "SELECT ?ans1 WHERE { wd:Q234279 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Nan Goldin award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Nan Goldin receive the Hasseblad Award",
            "query": "SELECT ?value WHERE { wd:Q234279 p:P166 ?s . ?s ps:P166 wd:Q1324112 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Nan Goldin award received ?s . ?s award received Hasselblad Award . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Hasseblad Award",
            "choppedEntity": "Q1324112"
        }
    },
    {
        "chopped": {
            "question": "What year was the Hasseblad Award given to ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 wd:Q1324112 . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received Hasselblad Award . ?s point in time ?ans1}"
        },
        "original": {
            "question": "What year was the Hasseblad Award given to Nan Goldin",
            "query": "SELECT ?value WHERE { wd:Q234279 p:P166 ?s . ?s ps:P166 wd:Q1324112 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Nan Goldin award received ?s . ?s award received Hasselblad Award . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Nan Goldin",
            "choppedEntity": "Q234279"
        }
    },
    {
        "chopped": {
            "question": "When was Heinrich B\u00f6ll nominated for ",
            "query": "SELECT ?ans1 WHERE { wd:Q42747 p:P1411 ?s . ?s ps:P1411 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Heinrich B\u00f6ll nominated for ?s . ?s nominated for ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was Heinrich B\u00f6ll nominated for the Nobel Prize in Literature",
            "query": "SELECT ?value WHERE { wd:Q42747 p:P1411 ?s . ?s ps:P1411 wd:Q37922 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Heinrich B\u00f6ll nominated for ?s . ?s nominated for Nobel Prize in Literature . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Nobel Prize in Literature",
            "choppedEntity": "Q37922"
        }
    },
    {
        "chopped": {
            "question": "Can Lana Del Rey speak ",
            "query": "ASK WHERE { wd:Q37150 wdt:P1412 ?unknown }",
            "NLQuery": "ASK WHERE { Lana Del Rey languages spoken, written or signed ?unknown }"
        },
        "original": {
            "question": "Can Lana Del Rey speak Icelandic",
            "query": "ASK WHERE { wd:Q37150 wdt:P1412 wd:Q294 }",
            "NLQuery": "ASK WHERE { Lana Del Rey languages spoken, written or signed Icelandic }"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "Icelandic",
            "choppedEntity": "Q294"
        }
    },
    {
        "chopped": {
            "question": "What are the boys names of William Wilberforce, that were born in ",
            "query": "SELECT ?ans1 WHERE { wd:Q207672 wdt:P40 ?ans1 . ?ans1 wdt:P19 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { William Wilberforce child ?ans1 . ?ans1 place of birth ?unknown}"
        },
        "original": {
            "question": "What are the boys names of William Wilberforce, that were born in Clapham",
            "query": "SELECT ?answer WHERE { wd:Q207672 wdt:P40 ?answer . ?answer wdt:P19 wd:Q146659}",
            "NLQuery": "SELECT ?answer WHERE { William Wilberforce child ?answer . ?answer place of birth Clapham}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Clapham",
            "choppedEntity": "Q146659"
        }
    },
    {
        "chopped": {
            "question": "Who got first ",
            "query": "SELECT ?ans1 WHERE { wd:Q33817 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P101 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Edmund Hillary award received ?s . ?s award received ?unknown . ?s field of work ?ans1}"
        },
        "original": {
            "question": "Who got first Padma Bhushan Award",
            "query": "SELECT ?value WHERE { wd:Q33817 p:P166 ?s . ?s ps:P166 wd:Q672392 . ?s pq:P101 ?value}",
            "NLQuery": "SELECT ?value WHERE { Edmund Hillary award received ?s . ?s award received Padma Vibhushan . ?s field of work ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Padma Bhushan Award",
            "choppedEntity": "Q672392"
        }
    },
    {
        "chopped": {
            "question": "What nomination  received from Bradley Cooper having victor as ",
            "query": "SELECT ?ans1 WHERE { wd:Q205707 wdt:P1411 ?ans1 . ?ans1 wdt:P1346 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Bradley Cooper nominated for ?ans1 . ?ans1 winner ?unknown}"
        },
        "original": {
            "question": "What nomination  received from Bradley Cooper having victor as Robert Donat",
            "query": "SELECT ?answer WHERE { wd:Q205707 wdt:P1411 ?answer . ?answer wdt:P1346 wd:Q116983}",
            "NLQuery": "SELECT ?answer WHERE { Bradley Cooper nominated for ?answer . ?answer winner Robert Donat}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Robert Donat",
            "choppedEntity": "Q116983"
        }
    },
    {
        "chopped": {
            "question": "What nomination obtained from Bradley Cooper having victor as ",
            "query": "SELECT ?ans1 WHERE { wd:Q205707 wdt:P1411 ?ans1 . ?ans1 wdt:P1346 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Bradley Cooper nominated for ?ans1 . ?ans1 winner ?unknown}"
        },
        "original": {
            "question": "What nomination obtained from Bradley Cooper having victor as Robert Donat",
            "query": "SELECT ?answer WHERE { wd:Q205707 wdt:P1411 ?answer . ?answer wdt:P1346 wd:Q116983}",
            "NLQuery": "SELECT ?answer WHERE { Bradley Cooper nominated for ?answer . ?answer winner Robert Donat}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Robert Donat",
            "choppedEntity": "Q116983"
        }
    },
    {
        "chopped": {
            "question": "Who are the alumna of painters of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P170 ?X . ?X wdt:P69 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown creator ?X . ?X educated at ?ans1}"
        },
        "original": {
            "question": "Who are the alumna of painters of King Kong",
            "query": "SELECT ?answer WHERE { wd:Q216810 wdt:P170 ?X . ?X wdt:P69 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { King Kong creator ?X . ?X educated at ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "King Kong",
            "choppedEntity": "Q216810"
        }
    },
    {
        "chopped": {
            "question": "Are there 662 vehicles per thousand people in ",
            "query": "ASK WHERE { ?unknown wdt:P5167 ?obj FILTER(?obj = 662) } ",
            "NLQuery": "ASK WHERE { ?unknown vehicles per thousand people ?obj FILTER(?obj = 662) } "
        },
        "original": {
            "question": "Are there 662 vehicles per thousand people in Luxembourg",
            "query": "ASK WHERE { wd:Q32 wdt:P5167 ?obj FILTER(?obj = 662) } ",
            "NLQuery": "ASK WHERE { Luxembourg vehicles per thousand people ?obj FILTER(?obj = 662) } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Luxembourg",
            "choppedEntity": "Q32"
        }
    },
    {
        "chopped": {
            "question": "When did the European Union begin and what became of it in ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q458 p:P155 ?s . ?s ps:P155 ?unknown . ?s pq:P571 ?ans1 . ?s pq:P576 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { European Union follows ?s . ?s follows ?unknown . ?s inception ?ans1 . ?s dissolved, abolished or demolished date ?ans2 }"
        },
        "original": {
            "question": "When did the European Union begin and what became of it in the European Coal and Steel Community",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q458 p:P155 ?s . ?s ps:P155 wd:Q161549 . ?s pq:P571 ?value1 . ?s pq:P576 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { European Union follows ?s . ?s follows European Coal and Steel Community . ?s inception ?value1 . ?s dissolved, abolished or demolished date ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the European Coal and Steel Community",
            "choppedEntity": "Q161549"
        }
    },
    {
        "chopped": {
            "question": "When did the European Union start and what became of it in ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q458 p:P155 ?s . ?s ps:P155 ?unknown . ?s pq:P571 ?ans1 . ?s pq:P576 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { European Union follows ?s . ?s follows ?unknown . ?s inception ?ans1 . ?s dissolved, abolished or demolished date ?ans2 }"
        },
        "original": {
            "question": "When did the European Union start and what became of it in the European Coal and Steel Community",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q458 p:P155 ?s . ?s ps:P155 wd:Q161549 . ?s pq:P571 ?value1 . ?s pq:P576 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { European Union follows ?s . ?s follows European Coal and Steel Community . ?s inception ?value1 . ?s dissolved, abolished or demolished date ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the European Coal and Steel Community",
            "choppedEntity": "Q161549"
        }
    },
    {
        "chopped": {
            "question": "When did Vincent Price marry ",
            "query": "SELECT ?ans1 WHERE { wd:Q219640 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Vincent Price spouse ?s . ?s spouse ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Vincent Price marry Mary Grant Price",
            "query": "SELECT ?value WHERE { wd:Q219640 p:P26 ?s . ?s ps:P26 wd:Q6779667 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Vincent Price spouse ?s . ?s spouse Mary Grant Price . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mary Grant Price",
            "choppedEntity": "Q6779667"
        }
    },
    {
        "chopped": {
            "question": "In what year did Vincent Price marry ",
            "query": "SELECT ?ans1 WHERE { wd:Q219640 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Vincent Price spouse ?s . ?s spouse ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "In what year did Vincent Price marry Maty Grant Price",
            "query": "SELECT ?value WHERE { wd:Q219640 p:P26 ?s . ?s ps:P26 wd:Q6779667 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Vincent Price spouse ?s . ?s spouse Mary Grant Price . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Maty Grant Price",
            "choppedEntity": "Q6779667"
        }
    },
    {
        "chopped": {
            "question": "Who is the musical artist of Dr. John Watson that has a forename of ",
            "query": "SELECT ?ans1 WHERE { wd:Q187349 wdt:P175 ?ans1 . ?ans1 wdt:P735 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Dr. John Watson performer ?ans1 . ?ans1 given name ?unknown}"
        },
        "original": {
            "question": "Who is the musical artist of Dr. John Watson that has a forename of Roland",
            "query": "SELECT ?answer WHERE { wd:Q187349 wdt:P175 ?answer . ?answer wdt:P735 wd:Q1068487}",
            "NLQuery": "SELECT ?answer WHERE { Dr. John Watson performer ?answer . ?answer given name Roland}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Roland",
            "choppedEntity": "Q1068487"
        }
    },
    {
        "chopped": {
            "question": "What is the canonization status of Thomas More whose feast day is ",
            "query": "SELECT ?ans1 WHERE { wd:Q42544 p:P411 ?s . ?s ps:P411 ?ans1 . ?s pq:P841 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Thomas More canonization status ?s . ?s canonization status ?ans1 . ?s feast day ?unknown }"
        },
        "original": {
            "question": "What is the canonization status of Thomas More whose feast day is June 22",
            "query": "SELECT ?obj WHERE { wd:Q42544 p:P411 ?s . ?s ps:P411 ?obj . ?s pq:P841 wd:Q2663 }",
            "NLQuery": "SELECT ?obj WHERE { Thomas More canonization status ?s . ?s canonization status ?obj . ?s feast day June 22 }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "June 22",
            "choppedEntity": "Q2663"
        }
    },
    {
        "chopped": {
            "question": "Which is the league level below ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2500 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown league level below ?ans1}"
        },
        "original": {
            "question": "Which is the league level below the Premier League",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q9448 wdt:P2500 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Premier League league level below ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Premier League",
            "choppedEntity": "Q9448"
        }
    },
    {
        "chopped": {
            "question": "Which is the Theatricalia play ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1242 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Theatricalia play ID ?ans1}"
        },
        "original": {
            "question": "Which is the Theatricalia play ID of The Marriage of Figaro",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q201873 wdt:P1242 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { The Marriage of Figaro Theatricalia play ID ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Marriage of Figaro",
            "choppedEntity": "Q201873"
        }
    },
    {
        "chopped": {
            "question": "How many directors are there for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P1037 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown director / manager ?obj }"
        },
        "original": {
            "question": "How many directors are there for Schutzstaffel",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q44687 wdt:P1037 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Schutzstaffel director / manager ?obj }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Schutzstaffel",
            "choppedEntity": "Q44687"
        }
    },
    {
        "chopped": {
            "question": "\"Who was the painter of the equivalence principle, whose tutor was ",
            "query": "SELECT ?ans1 WHERE { wd:Q210546 wdt:P170 ?ans1 . ?ans1 wdt:P1066 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { equivalence principle creator ?ans1 . ?ans1 student of ?unknown}"
        },
        "original": {
            "question": "\"Who was the painter of the equivalence principle, whose tutor was Heinrich Friedrich Weber",
            "query": "SELECT ?answer WHERE { wd:Q210546 wdt:P170 ?answer . ?answer wdt:P1066 wd:Q116635}",
            "NLQuery": "SELECT ?answer WHERE { equivalence principle creator ?answer . ?answer student of Heinrich Friedrich Weber}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Heinrich Friedrich Weber",
            "choppedEntity": "Q116635"
        }
    },
    {
        "chopped": {
            "question": "\"Who was the painter of the comparability rule, whose mentor was ",
            "query": "SELECT ?ans1 WHERE { wd:Q210546 wdt:P170 ?ans1 . ?ans1 wdt:P1066 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { equivalence principle creator ?ans1 . ?ans1 student of ?unknown}"
        },
        "original": {
            "question": "\"Who was the painter of the comparability rule, whose mentor was Heinrich Friedrich Weber",
            "query": "SELECT ?answer WHERE { wd:Q210546 wdt:P170 ?answer . ?answer wdt:P1066 wd:Q116635}",
            "NLQuery": "SELECT ?answer WHERE { equivalence principle creator ?answer . ?answer student of Heinrich Friedrich Weber}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Heinrich Friedrich Weber",
            "choppedEntity": "Q116635"
        }
    },
    {
        "chopped": {
            "question": "Were 25 points scored during the 2009 ",
            "query": "ASK WHERE { ?unknown wdt:P1351 ?obj FILTER(?obj = 25) } ",
            "NLQuery": "ASK WHERE { ?unknown number of points/goals/set scored ?obj FILTER(?obj = 25) } "
        },
        "original": {
            "question": "Were 25 points scored during the 2009 FIFA Club World Cup",
            "query": "ASK WHERE { wd:Q137920 wdt:P1351 ?obj FILTER(?obj = 25) } ",
            "NLQuery": "ASK WHERE { 2009 FIFA Club World Cup number of points/goals/set scored ?obj FILTER(?obj = 25) } "
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "FIFA Club World Cup",
            "choppedEntity": "Q137920"
        }
    },
    {
        "chopped": {
            "question": "What is the unit of time that has the slightest Wikidata time accuracy at ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q1790144 . ?ans1 wdt:P2803 ?obj . ?ans1 wdt:P361 ?unknown. } ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of unit of time . ?ans1 Wikidata time precision ?obj . ?ans1 part of ?unknown. } ORDER BY ASC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What is the unit of time that has the slightest Wikidata time accuracy at night",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q1790144 . ?ent wdt:P2803 ?obj . ?ent wdt:P361 wd:Q575. } ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of unit of time . ?ent Wikidata time precision ?obj . ?ent part of Night. } ORDER BY ASC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "TIME",
            "choppedText": "night",
            "choppedEntity": "Q575"
        }
    },
    {
        "chopped": {
            "question": "Who is the person as the head of government of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P6 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown head of government ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who is the person as the head of government of Lviv",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q36036 wdt:P6 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Lviv head of government ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Lviv",
            "choppedEntity": "Q36036"
        }
    },
    {
        "chopped": {
            "question": "What is the name of the head of government in ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P6 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown head of government ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "What is the name of the head of government in Lviv",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q36036 wdt:P6 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Lviv head of government ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Lviv",
            "choppedEntity": "Q36036"
        }
    },
    {
        "chopped": {
            "question": "Who is the co-founder of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P108 ?X . ?X wdt:P112 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown employer ?X . ?X founded by ?ans1}"
        },
        "original": {
            "question": "Who is the co-founder of Louis Stanley",
            "query": "SELECT ?answer WHERE { wd:Q17711307 wdt:P108 ?X . ?X wdt:P112 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Louis Stanley employer ?X . ?X founded by ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Louis Stanley",
            "choppedEntity": "Q17711307"
        }
    },
    {
        "chopped": {
            "question": "Is Jim Rathmann and Steve Clare cast members of ",
            "query": "ASK WHERE { ?unknown wdt:P161 wd:Q172510 . ?unknown wdt:P161 wd:Q1370741 }",
            "NLQuery": "ASK WHERE { ?unknown cast member Jim Rathmann . ?unknown cast member Steve Clark }"
        },
        "original": {
            "question": "Is Jim Rathmann and Steve Clare cast members of Mad Max",
            "query": "ASK WHERE { wd:Q248775 wdt:P161 wd:Q172510 . wd:Q248775 wdt:P161 wd:Q1370741 }",
            "NLQuery": "ASK WHERE { Mad Max cast member Jim Rathmann . Mad Max cast member Steve Clark }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Mad Max",
            "choppedEntity": "Q248775"
        }
    },
    {
        "chopped": {
            "question": "Max Max have the Cast Members of Jim Rathmann and ",
            "query": "ASK WHERE { wd:Q248775 wdt:P161 wd:Q172510 . wd:Q248775 wdt:P161 ?unknown }",
            "NLQuery": "ASK WHERE { Mad Max cast member Jim Rathmann . Mad Max cast member ?unknown }"
        },
        "original": {
            "question": "Max Max have the Cast Members of Jim Rathmann and Steve Clare",
            "query": "ASK WHERE { wd:Q248775 wdt:P161 wd:Q172510 . wd:Q248775 wdt:P161 wd:Q1370741 }",
            "NLQuery": "ASK WHERE { Mad Max cast member Jim Rathmann . Mad Max cast member Steve Clark }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Steve Clare",
            "choppedEntity": "Q1370741"
        }
    },
    {
        "chopped": {
            "question": "What was the birth name of ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P1477 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown birth name ?obj }"
        },
        "original": {
            "question": "What was the birth name of Ayn Rand",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q132524 wdt:P1477 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Ayn Rand birth name ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ayn Rand",
            "choppedEntity": "Q132524"
        }
    },
    {
        "chopped": {
            "question": "When did noble family for family of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P53 ?obj . ?obj wdt:P31 wd:Q13417114 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown family ?obj . ?obj instance of noble family } "
        },
        "original": {
            "question": "When did noble family for family of Genghis Khan",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q720 wdt:P53 ?obj . ?obj wdt:P31 wd:Q13417114 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Genghis Khan family ?obj . ?obj instance of noble family } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Genghis Khan",
            "choppedEntity": "Q720"
        }
    },
    {
        "chopped": {
            "question": "What is the name of the business that is owned by ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P127 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown owned by ?obj . ?obj instance of business } "
        },
        "original": {
            "question": "What is the name of the business that is owned by The Economist",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q180089 wdt:P127 ?obj . ?obj wdt:P31 wd:Q4830453 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { The Economist owned by ?obj . ?obj instance of business } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "The Economist",
            "choppedEntity": "Q180089"
        }
    },
    {
        "chopped": {
            "question": "How many school children of continent of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P30 ?X . ?X wdt:P2573 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown continent ?X . ?X number of out-of-school children ?ans1}"
        },
        "original": {
            "question": "How many school children of continent of Missouri River",
            "query": "SELECT ?answer WHERE { wd:Q5419 wdt:P30 ?X . ?X wdt:P2573 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Missouri River continent ?X . ?X number of out-of-school children ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Missouri River",
            "choppedEntity": "Q5419"
        }
    },
    {
        "chopped": {
            "question": "Whic taxon is the parent taxon of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P171 ?unknown . ?sbj wdt:P31 wd:Q16521 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj parent taxon ?unknown . ?sbj instance of taxon } "
        },
        "original": {
            "question": "Whic taxon is the parent taxon of Durio",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P171 wd:Q2309085 . ?sbj wdt:P31 wd:Q16521 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj parent taxon Durio . ?sbj instance of taxon } "
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Durio",
            "choppedEntity": "Q2309085"
        }
    },
    {
        "chopped": {
            "question": "What is Fukuoka's sister city in the continent of ",
            "query": "SELECT ?ans1 WHERE { wd:Q26600 wdt:P190 ?ans1 . ?ans1 wdt:P30 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Fukuoka twinned administrative body ?ans1 . ?ans1 continent ?unknown}"
        },
        "original": {
            "question": "What is Fukuoka's sister city in the continent of Oceania",
            "query": "SELECT ?answer WHERE { wd:Q26600 wdt:P190 ?answer . ?answer wdt:P30 wd:Q538}",
            "NLQuery": "SELECT ?answer WHERE { Fukuoka twinned administrative body ?answer . ?answer continent Oceania}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Oceania",
            "choppedEntity": "Q538"
        }
    },
    {
        "chopped": {
            "question": "What is Fukuoka's sister city within the landmass of ",
            "query": "SELECT ?ans1 WHERE { wd:Q26600 wdt:P190 ?ans1 . ?ans1 wdt:P30 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Fukuoka twinned administrative body ?ans1 . ?ans1 continent ?unknown}"
        },
        "original": {
            "question": "What is Fukuoka's sister city within the landmass of Oceania",
            "query": "SELECT ?answer WHERE { wd:Q26600 wdt:P190 ?answer . ?answer wdt:P30 wd:Q538}",
            "NLQuery": "SELECT ?answer WHERE { Fukuoka twinned administrative body ?answer . ?answer continent Oceania}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Oceania",
            "choppedEntity": "Q538"
        }
    },
    {
        "chopped": {
            "question": "Which is the Internet Book Database of Fiction writer ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P5365 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Internet Book Database of Fiction writer ID ?ans1}"
        },
        "original": {
            "question": "Which is the Internet Book Database of Fiction writer ID for Frank Herbert",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q7934 wdt:P5365 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Frank Herbert Internet Book Database of Fiction writer ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Frank Herbert",
            "choppedEntity": "Q7934"
        }
    },
    {
        "chopped": {
            "question": "Who lives in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P551 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj residence ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who lives in Manhattan",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P551 wd:Q11299 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj residence Manhattan . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Manhattan",
            "choppedEntity": "Q11299"
        }
    },
    {
        "chopped": {
            "question": "Where was the birthplace of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P19 ?X . ?X wdt:P112 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of birth ?X . ?X founded by ?ans1}"
        },
        "original": {
            "question": "Where was the birthplace of Suphot Panich",
            "query": "SELECT ?answer WHERE { wd:Q16977577 wdt:P19 ?X . ?X wdt:P112 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Suphot Panich place of birth ?X . ?X founded by ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Suphot Panich",
            "choppedEntity": "Q16977577"
        }
    },
    {
        "chopped": {
            "question": "Where was the origin of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P19 ?X . ?X wdt:P112 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of birth ?X . ?X founded by ?ans1}"
        },
        "original": {
            "question": "Where was the origin of Suphot Panich",
            "query": "SELECT ?answer WHERE { wd:Q16977577 wdt:P19 ?X . ?X wdt:P112 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Suphot Panich place of birth ?X . ?X founded by ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Suphot Panich",
            "choppedEntity": "Q16977577"
        }
    },
    {
        "chopped": {
            "question": "How many people were involved in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P276 ?X . ?X wdt:P1082 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown location ?X . ?X population ?ans1}"
        },
        "original": {
            "question": "How many people were involved in the Siege of Sevastopol",
            "query": "SELECT ?answer WHERE { wd:Q815216 wdt:P276 ?X . ?X wdt:P1082 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Siege of Sevastopol location ?X . ?X population ?answer}"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the Siege of Sevastopol",
            "choppedEntity": "Q815216"
        }
    },
    {
        "chopped": {
            "question": "What is the source of claim of the house of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P53 ?X . ?X wdt:P248 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown family ?X . ?X stated in ?ans1}"
        },
        "original": {
            "question": "What is the source of claim of the house of L\u00ea Th\u00e1nh T\u00f4ng",
            "query": "SELECT ?answer WHERE { wd:Q1771050 wdt:P53 ?X . ?X wdt:P248 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { L\u00ea Th\u00e1nh T\u00f4ng family ?X . ?X stated in ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "L\u00ea Th\u00e1nh T\u00f4ng",
            "choppedEntity": "Q1771050"
        }
    },
    {
        "chopped": {
            "question": "Which is the PhDTree person ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3708 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown PhDTree person ID ?ans1}"
        },
        "original": {
            "question": "Which is the PhDTree person ID for Noam Chomsky",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q9049 wdt:P3708 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Noam Chomsky PhDTree person ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Noam Chomsky",
            "choppedEntity": "Q9049"
        }
    },
    {
        "chopped": {
            "question": "Which YouPorn ID belongs to ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P5267 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown YouPorn ID ?ans1}"
        },
        "original": {
            "question": "Which YouPorn ID belongs to Rocco Siffredi",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q56219 wdt:P5267 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Rocco Siffredi YouPorn ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Rocco Siffredi",
            "choppedEntity": "Q56219"
        }
    },
    {
        "chopped": {
            "question": "Who is the mother of William Michael Rossetti who was buried in ",
            "query": "SELECT ?ans1 WHERE { wd:Q719428 wdt:P25 ?ans1 . ?ans1 wdt:P119 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { William Michael Rossetti mother ?ans1 . ?ans1 place of burial ?unknown}"
        },
        "original": {
            "question": "Who is the mother of William Michael Rossetti who was buried in Highgate Cemetery",
            "query": "SELECT ?answer WHERE { wd:Q719428 wdt:P25 ?answer . ?answer wdt:P119 wd:Q533697}",
            "NLQuery": "SELECT ?answer WHERE { William Michael Rossetti mother ?answer . ?answer place of burial Highgate Cemetery}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Highgate Cemetery",
            "choppedEntity": "Q533697"
        }
    },
    {
        "chopped": {
            "question": "When Standard Oil ended to be the headquarters location of ",
            "query": "SELECT ?ans1 WHERE { wd:Q375791 p:P159 ?s . ?s ps:P159 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Standard Oil headquarters location ?s . ?s headquarters location ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When Standard Oil ended to be the headquarters location of New York City",
            "query": "SELECT ?value WHERE { wd:Q375791 p:P159 ?s . ?s ps:P159 wd:Q60 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Standard Oil headquarters location ?s . ?s headquarters location New York City . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "New York City",
            "choppedEntity": "Q60"
        }
    },
    {
        "chopped": {
            "question": "How many narrators are in ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P2438 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown narrator ?obj }"
        },
        "original": {
            "question": "How many narrators are in Dracula",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q41542 wdt:P2438 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Dracula narrator ?obj }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Dracula",
            "choppedEntity": "Q41542"
        }
    },
    {
        "chopped": {
            "question": "What is the number of narrators in ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P2438 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown narrator ?obj }"
        },
        "original": {
            "question": "What is the number of narrators in Dracula",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q41542 wdt:P2438 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Dracula narrator ?obj }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Dracula",
            "choppedEntity": "Q41542"
        }
    },
    {
        "chopped": {
            "question": "Who was the founder of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P61 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown discoverer or inventor ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who was the founder of Impressionism",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q40415 wdt:P61 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Impressionism discoverer or inventor ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Impressionism",
            "choppedEntity": "Q40415"
        }
    },
    {
        "chopped": {
            "question": "What person founded ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P61 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown discoverer or inventor ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "What person founded Impressionism",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q40415 wdt:P61 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Impressionism discoverer or inventor ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Impressionism",
            "choppedEntity": "Q40415"
        }
    },
    {
        "chopped": {
            "question": "Which is the FSK film rating for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1981 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown FSK film rating ?ans1}"
        },
        "original": {
            "question": "Which is the FSK film rating for RoboCop",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q372514 wdt:P1981 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { RoboCop FSK film rating ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "RoboCop",
            "choppedEntity": "Q372514"
        }
    },
    {
        "chopped": {
            "question": "How many conflicts took place at ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P607 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown conflict ?obj }"
        },
        "original": {
            "question": "How many conflicts took place at Zhu De",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q22513 wdt:P607 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Zhu De conflict ?obj }"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Zhu De",
            "choppedEntity": "Q22513"
        }
    },
    {
        "chopped": {
            "question": "When Douglas MacArthur was awarded ",
            "query": "SELECT ?ans1 WHERE { wd:Q127417 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Douglas MacArthur award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When Douglas MacArthur was awarded Order of the White Lion",
            "query": "SELECT ?value WHERE { wd:Q127417 p:P166 ?s . ?s ps:P166 wd:Q93728 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Douglas MacArthur award received ?s . ?s award received Order of the White Lion . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Order of the White Lion",
            "choppedEntity": "Q93728"
        }
    },
    {
        "chopped": {
            "question": "What is not in cooperation with the branch of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P241 ?X . ?X wdt:P607 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown military branch ?X . ?X conflict ?ans1}"
        },
        "original": {
            "question": "What is not in cooperation with the branch of Jonathan Winters",
            "query": "SELECT ?answer WHERE { wd:Q4538 wdt:P241 ?X . ?X wdt:P607 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Jonathan Winters military branch ?X . ?X conflict ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Jonathan Winters",
            "choppedEntity": "Q4538"
        }
    },
    {
        "chopped": {
            "question": "Which is the Mountain Project ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4592 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Mountain Project ID ?ans1}"
        },
        "original": {
            "question": "Which is the Mountain Project ID for Joshua Tree National Park",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q735202 wdt:P4592 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Joshua Tree National Park Mountain Project ID ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Joshua Tree National Park",
            "choppedEntity": "Q735202"
        }
    },
    {
        "chopped": {
            "question": "What is the Bridgeman artist ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3965 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Bridgeman artist ID ?ans1}"
        },
        "original": {
            "question": "What is the Bridgeman artist ID of John Dryden",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q213355 wdt:P3965 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { John Dryden Bridgeman artist ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "John Dryden",
            "choppedEntity": "Q213355"
        }
    },
    {
        "chopped": {
            "question": "What is Varg Vikernes' birth location that borders with ",
            "query": "SELECT ?ans1 WHERE { wd:Q207824 wdt:P19 ?ans1 . ?ans1 wdt:P47 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Varg Vikernes place of birth ?ans1 . ?ans1 shares border with ?unknown}"
        },
        "original": {
            "question": "What is Varg Vikernes' birth location that borders with Sund",
            "query": "SELECT ?answer WHERE { wd:Q207824 wdt:P19 ?answer . ?answer wdt:P47 wd:Q507509}",
            "NLQuery": "SELECT ?answer WHERE { Varg Vikernes place of birth ?answer . ?answer shares border with Sund}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Sund",
            "choppedEntity": "Q507509"
        }
    },
    {
        "chopped": {
            "question": "What is the birthplace of Varg Vikernes bordering on ",
            "query": "SELECT ?ans1 WHERE { wd:Q207824 wdt:P19 ?ans1 . ?ans1 wdt:P47 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Varg Vikernes place of birth ?ans1 . ?ans1 shares border with ?unknown}"
        },
        "original": {
            "question": "What is the birthplace of Varg Vikernes bordering on Sund",
            "query": "SELECT ?answer WHERE { wd:Q207824 wdt:P19 ?answer . ?answer wdt:P47 wd:Q507509}",
            "NLQuery": "SELECT ?answer WHERE { Varg Vikernes place of birth ?answer . ?answer shares border with Sund}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Sund",
            "choppedEntity": "Q507509"
        }
    },
    {
        "chopped": {
            "question": "Is English the official language of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P37 wd:Q1860 . ?sbj wdt:P31 ?unknown } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj official language English . ?sbj instance of ?unknown } "
        },
        "original": {
            "question": "Is English the official language of the United States",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P37 wd:Q1860 . ?sbj wdt:P31 wd:Q35657 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj official language English . ?sbj instance of state of the United States } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the United States",
            "choppedEntity": "Q35657"
        }
    },
    {
        "chopped": {
            "question": "Who replaced Ernst Labin as chair of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P488 ?s . ?s ps:P488 ?ans1 . ?s pq:P1366 wd:Q3057355 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown chairperson ?s . ?s chairperson ?ans1 . ?s replaced by Ernst Labin }"
        },
        "original": {
            "question": "Who replaced Ernst Labin as chair of the International Skating Union",
            "query": "SELECT ?obj WHERE { wd:Q543115 p:P488 ?s . ?s ps:P488 ?obj . ?s pq:P1366 wd:Q3057355 }",
            "NLQuery": "SELECT ?obj WHERE { International Skating Union chairperson ?s . ?s chairperson ?obj . ?s replaced by Ernst Labin }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the International Skating Union",
            "choppedEntity": "Q543115"
        }
    },
    {
        "chopped": {
            "question": "Name the curent leader of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P488 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown chairperson ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Name the curent leader of UNESCO",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q7809 wdt:P488 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { UNESCO chairperson ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "UNESCO",
            "choppedEntity": "Q7809"
        }
    },
    {
        "chopped": {
            "question": "Title the curent pioneer of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P488 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown chairperson ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Title the curent pioneer of UNESCO",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q7809 wdt:P488 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { UNESCO chairperson ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "UNESCO",
            "choppedEntity": "Q7809"
        }
    },
    {
        "chopped": {
            "question": "What town is the birthplace of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P19 ?X . ?X wdt:P190 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of birth ?X . ?X place of birth0 ?ans1}"
        },
        "original": {
            "question": "What town is the birthplace of Joseph Greenberg",
            "query": "SELECT ?answer WHERE { wd:Q309997 wdt:P19 ?X . ?X wdt:P190 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Joseph Greenberg place of birth ?X . ?X place of birth0 ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Joseph Greenberg",
            "choppedEntity": "Q309997"
        }
    },
    {
        "chopped": {
            "question": "When did Pina Bausch receive ",
            "query": "SELECT ?ans1 WHERE { wd:Q155538 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Pina Bausch award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Pina Bausch receive the Goethe Prize",
            "query": "SELECT ?value WHERE { wd:Q155538 p:P166 ?s . ?s ps:P166 wd:Q159909 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Pina Bausch award received ?s . ?s award received Goethe Prize . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Goethe Prize",
            "choppedEntity": "Q159909"
        }
    },
    {
        "chopped": {
            "question": "When was Pina Bausch given ",
            "query": "SELECT ?ans1 WHERE { wd:Q155538 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Pina Bausch award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was Pina Bausch given the Goethe Prize",
            "query": "SELECT ?value WHERE { wd:Q155538 p:P166 ?s . ?s ps:P166 wd:Q159909 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Pina Bausch award received ?s . ?s award received Goethe Prize . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Goethe Prize",
            "choppedEntity": "Q159909"
        }
    },
    {
        "chopped": {
            "question": "Is 1760 greater than the precipitation height of ",
            "query": "ASK WHERE { ?unknown wdt:P3036 ?obj FILTER(?obj < 1760.0) } ",
            "NLQuery": "ASK WHERE { ?unknown precipitation height ?obj FILTER(?obj < 1760.0) } "
        },
        "original": {
            "question": "Is 1760 greater than the precipitation height of the Kenting National Forest Recreation Area",
            "query": "ASK WHERE { wd:Q10931418 wdt:P3036 ?obj FILTER(?obj < 1760.0) } ",
            "NLQuery": "ASK WHERE { Kenting National Forest Recreation Area precipitation height ?obj FILTER(?obj < 1760.0) } "
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Kenting National Forest Recreation Area",
            "choppedEntity": "Q10931418"
        }
    },
    {
        "chopped": {
            "question": "What is the colour of the rapid transit line at ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P81 ?X . ?X wdt:P462 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown connecting line ?X . ?X color ?ans1}"
        },
        "original": {
            "question": "What is the colour of the rapid transit line at Nij\u014d Station",
            "query": "SELECT ?answer WHERE { wd:Q1130699 wdt:P81 ?X . ?X wdt:P462 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Nij\u014d Station connecting line ?X . ?X color ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Nij\u014d Station",
            "choppedEntity": "Q1130699"
        }
    },
    {
        "chopped": {
            "question": "What is the color of the speedy transit line at ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P81 ?X . ?X wdt:P462 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown connecting line ?X . ?X color ?ans1}"
        },
        "original": {
            "question": "What is the color of the speedy transit line at Nij\u014d Station",
            "query": "SELECT ?answer WHERE { wd:Q1130699 wdt:P81 ?X . ?X wdt:P462 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Nij\u014d Station connecting line ?X . ?X color ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Nij\u014d Station",
            "choppedEntity": "Q1130699"
        }
    },
    {
        "chopped": {
            "question": "What is some of the weork of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P108 ?X . ?X wdt:P749 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown employer ?X . ?X parent organization ?ans1}"
        },
        "original": {
            "question": "What is some of the weork of Jeffrey Nick",
            "query": "SELECT ?answer WHERE { wd:Q6176188 wdt:P108 ?X . ?X wdt:P749 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Jeffrey Nick employer ?X . ?X parent organization ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jeffrey Nick",
            "choppedEntity": "Q6176188"
        }
    },
    {
        "chopped": {
            "question": "What is the nomer of George Cayley that has the disputed equivalence to ",
            "query": "SELECT ?ans1 WHERE { wd:Q319362 wdt:P735 ?ans1 . ?ans1 wdt:P460 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { George Cayley given name ?ans1 . ?ans1 said to be the same as ?unknown}"
        },
        "original": {
            "question": "What is the nomer of George Cayley that has the disputed equivalence to Gorch",
            "query": "SELECT ?answer WHERE { wd:Q319362 wdt:P735 ?answer . ?answer wdt:P460 wd:Q13188334}",
            "NLQuery": "SELECT ?answer WHERE { George Cayley given name ?answer . ?answer said to be the same as Gorch}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Gorch",
            "choppedEntity": "Q13188334"
        }
    },
    {
        "chopped": {
            "question": "Name the person who led to the production of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P162 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown producer ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Name the person who led to the production of The Birth of a Nation",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q220394 wdt:P162 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { The Birth of a Nation producer ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Birth of a Nation",
            "choppedEntity": "Q220394"
        }
    },
    {
        "chopped": {
            "question": "Title the individual who driven to the generation of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P162 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown producer ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Title the individual who driven to the generation of The Birth of a Nation",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q220394 wdt:P162 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { The Birth of a Nation producer ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Birth of a Nation",
            "choppedEntity": "Q220394"
        }
    },
    {
        "chopped": {
            "question": "Where are tennis leagues in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P276 ?unknown . ?sbj wdt:P31 wd:Q47443726 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj location ?unknown . ?sbj instance of recurring tennis tournament } "
        },
        "original": {
            "question": "Where are tennis leagues in Indore",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P276 wd:Q66616 . ?sbj wdt:P31 wd:Q47443726 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj location Indore . ?sbj instance of recurring tennis tournament } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Indore",
            "choppedEntity": "Q66616"
        }
    },
    {
        "chopped": {
            "question": "Where are tennis alliances in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P276 ?unknown . ?sbj wdt:P31 wd:Q47443726 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj location ?unknown . ?sbj instance of recurring tennis tournament } "
        },
        "original": {
            "question": "Where are tennis alliances in Indore",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P276 wd:Q66616 . ?sbj wdt:P31 wd:Q47443726 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj location Indore . ?sbj instance of recurring tennis tournament } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Indore",
            "choppedEntity": "Q66616"
        }
    },
    {
        "chopped": {
            "question": "Who is the person that owns ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1830 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj owner of ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who is the person that owns the Dallas Cowboys",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1830 wd:Q204862 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj owner of Dallas Cowboys . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Dallas Cowboys",
            "choppedEntity": "Q204862"
        }
    },
    {
        "chopped": {
            "question": "Who owns ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1830 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj owner of ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "Who owns the Dallas Cowboys",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1830 wd:Q204862 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj owner of Dallas Cowboys . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Dallas Cowboys",
            "choppedEntity": "Q204862"
        }
    },
    {
        "chopped": {
            "question": "What are the most famous books of the architecture firm ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P84 ?X . ?X wdt:P800 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown architect ?X . ?X notable work ?ans1}"
        },
        "original": {
            "question": "What are the most famous books of the architecture firm Ben Rebhuhn House",
            "query": "SELECT ?answer WHERE { wd:Q4886332 wdt:P84 ?X . ?X wdt:P800 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Ben Rebhuhn House architect ?X . ?X notable work ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Ben Rebhuhn House",
            "choppedEntity": "Q4886332"
        }
    },
    {
        "chopped": {
            "question": "How come the position of Member of the 54th Parliament of the United Kingdom was held by ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P39 ?s . ?s ps:P39 wd:Q35647955 . ?s pq:P1534 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown position held ?s . ?s position held Member of the 54th Parliament of the United Kingdom . ?s end cause ?ans1}"
        },
        "original": {
            "question": "How come the position of Member of the 54th Parliament of the United Kingdom was held by Jeremy Corbyn",
            "query": "SELECT ?value WHERE { wd:Q291169 p:P39 ?s . ?s ps:P39 wd:Q35647955 . ?s pq:P1534 ?value}",
            "NLQuery": "SELECT ?value WHERE { Jeremy Corbyn position held ?s . ?s position held Member of the 54th Parliament of the United Kingdom . ?s end cause ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jeremy Corbyn",
            "choppedEntity": "Q291169"
        }
    },
    {
        "chopped": {
            "question": "What film is based on a work by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1877 ?unknown . ?sbj wdt:P31 wd:Q11424 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj after a work by ?unknown . ?sbj instance of film } "
        },
        "original": {
            "question": "What film is based on a work by Rachel Carson",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1877 wd:Q100948 . ?sbj wdt:P31 wd:Q11424 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj after a work by Rachel Carson . ?sbj instance of film } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Rachel Carson",
            "choppedEntity": "Q100948"
        }
    },
    {
        "chopped": {
            "question": "which animals have been filmed in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P915 ?X . ?X wdt:P1990 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown filming location ?X . ?X species kept ?ans1}"
        },
        "original": {
            "question": "which animals have been filmed in the Jennie Project",
            "query": "SELECT ?answer WHERE { wd:Q1763791 wdt:P915 ?X . ?X wdt:P1990 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Jennie Project filming location ?X . ?X species kept ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Jennie Project",
            "choppedEntity": "Q1763791"
        }
    },
    {
        "chopped": {
            "question": "which creatures have been shot within ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P915 ?X . ?X wdt:P1990 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown filming location ?X . ?X species kept ?ans1}"
        },
        "original": {
            "question": "which creatures have been shot within the Jennie Project",
            "query": "SELECT ?answer WHERE { wd:Q1763791 wdt:P915 ?X . ?X wdt:P1990 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Jennie Project filming location ?X . ?X species kept ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Jennie Project",
            "choppedEntity": "Q1763791"
        }
    },
    {
        "chopped": {
            "question": "Which co-founder works for ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P108 ?X . ?X wdt:P112 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown employer ?X . ?X founded by ?ans1}"
        },
        "original": {
            "question": "Which co-founder works for Christine Jones",
            "query": "SELECT ?answer WHERE { wd:Q5111073 wdt:P108 ?X . ?X wdt:P112 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Christine Jones employer ?X . ?X founded by ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Christine Jones",
            "choppedEntity": "Q5111073"
        }
    },
    {
        "chopped": {
            "question": "Are there .8 spans at ",
            "query": "ASK WHERE { ?unknown wdt:P1314 ?obj FILTER(?obj < 0.8) } ",
            "NLQuery": "ASK WHERE { ?unknown number of spans ?obj FILTER(?obj < 0.8) } "
        },
        "original": {
            "question": "Are there .8 spans at the Charles River Bridge",
            "query": "ASK WHERE { wd:Q267924 wdt:P1314 ?obj FILTER(?obj < 0.8) } ",
            "NLQuery": "ASK WHERE { Charles River Bridge number of spans ?obj FILTER(?obj < 0.8) } "
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "the Charles River Bridge",
            "choppedEntity": "Q267924"
        }
    },
    {
        "chopped": {
            "question": "Who is the discoverer of radiocarbon dating and also the member of ",
            "query": "SELECT ?ans1 WHERE { wd:Q173412 wdt:P61 ?ans1 . ?ans1 wdt:P463 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { radiocarbon dating discoverer or inventor ?ans1 . ?ans1 member of ?unknown}"
        },
        "original": {
            "question": "Who is the discoverer of radiocarbon dating and also the member of Heidelberg Academy for Sciences and Humanities",
            "query": "SELECT ?answer WHERE { wd:Q173412 wdt:P61 ?answer . ?answer wdt:P463 wd:Q833738}",
            "NLQuery": "SELECT ?answer WHERE { radiocarbon dating discoverer or inventor ?answer . ?answer member of Heidelberg Academy for Sciences and Humanities}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Heidelberg Academy for Sciences and Humanities",
            "choppedEntity": "Q833738"
        }
    },
    {
        "chopped": {
            "question": "Who is the discoverer of radiocarbon courting and also the member of ",
            "query": "SELECT ?ans1 WHERE { wd:Q173412 wdt:P61 ?ans1 . ?ans1 wdt:P463 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { radiocarbon dating discoverer or inventor ?ans1 . ?ans1 member of ?unknown}"
        },
        "original": {
            "question": "Who is the discoverer of radiocarbon courting and also the member of Heidelberg Academy for Sciences and Humanities",
            "query": "SELECT ?answer WHERE { wd:Q173412 wdt:P61 ?answer . ?answer wdt:P463 wd:Q833738}",
            "NLQuery": "SELECT ?answer WHERE { radiocarbon dating discoverer or inventor ?answer . ?answer member of Heidelberg Academy for Sciences and Humanities}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Heidelberg Academy for Sciences and Humanities",
            "choppedEntity": "Q833738"
        }
    },
    {
        "chopped": {
            "question": "Which character in Theogony has its hometown in ",
            "query": "SELECT ?ans1 WHERE { wd:Q156498 wdt:P674 ?ans1 . ?ans1 wdt:P551 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Theogony characters ?ans1 . ?ans1 residence ?unknown}"
        },
        "original": {
            "question": "Which character in Theogony has its hometown in Mount Olympus",
            "query": "SELECT ?answer WHERE { wd:Q156498 wdt:P674 ?answer . ?answer wdt:P551 wd:Q80344}",
            "NLQuery": "SELECT ?answer WHERE { Theogony characters ?answer . ?answer residence Mount Olympus}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Mount Olympus",
            "choppedEntity": "Q80344"
        }
    },
    {
        "chopped": {
            "question": "What is the nominal voltage in the ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2884 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown mains voltage ?ans1}"
        },
        "original": {
            "question": "What is the nominal voltage in the Maldives",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q826 wdt:P2884 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Maldives mains voltage ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Maldives",
            "choppedEntity": "Q826"
        }
    },
    {
        "chopped": {
            "question": "Did Liza Minnelli win the Tony Award for Best Actress in a Musical and the Drama Desk Award for ",
            "query": "ASK WHERE { wd:Q14441 wdt:P166 wd:Q1537996 . wd:Q14441 wdt:P166 ?unknown }",
            "NLQuery": "ASK WHERE { Liza Minnelli award received Tony Award for Best Actress in a Musical . Liza Minnelli award received ?unknown }"
        },
        "original": {
            "question": "Did Liza Minnelli win the Tony Award for Best Actress in a Musical and the Drama Desk Award for Outstanding Actor in a Musical",
            "query": "ASK WHERE { wd:Q14441 wdt:P166 wd:Q1537996 . wd:Q14441 wdt:P166 wd:Q5305702 }",
            "NLQuery": "ASK WHERE { Liza Minnelli award received Tony Award for Best Actress in a Musical . Liza Minnelli award received Drama Desk Award for Outstanding Actor in a Musical }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Outstanding Actor in a Musical",
            "choppedEntity": "Q5305702"
        }
    },
    {
        "chopped": {
            "question": "Were the Tony Award for Best Actress in a Musical and the Drama Desk Award for Outstanding Actor in a Musical presented to ",
            "query": "ASK WHERE { ?unknown wdt:P166 wd:Q1537996 . ?unknown wdt:P166 wd:Q5305702 }",
            "NLQuery": "ASK WHERE { ?unknown award received Tony Award for Best Actress in a Musical . ?unknown award received Drama Desk Award for Outstanding Actor in a Musical }"
        },
        "original": {
            "question": "Were the Tony Award for Best Actress in a Musical and the Drama Desk Award for Outstanding Actor in a Musical presented to Liza Minnelli",
            "query": "ASK WHERE { wd:Q14441 wdt:P166 wd:Q1537996 . wd:Q14441 wdt:P166 wd:Q5305702 }",
            "NLQuery": "ASK WHERE { Liza Minnelli award received Tony Award for Best Actress in a Musical . Liza Minnelli award received Drama Desk Award for Outstanding Actor in a Musical }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Liza Minnelli",
            "choppedEntity": "Q14441"
        }
    },
    {
        "chopped": {
            "question": "When was Thelonious Monk awarded ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q109612 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1 . ?s pq:P1346 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Thelonious Monk award received ?s . ?s award received ?unknown . ?s point in time ?ans1 . ?s winner ?ans2 }"
        },
        "original": {
            "question": "When was Thelonious Monk awarded the Grammy Hall of Fame",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q109612 p:P166 ?s . ?s ps:P166 wd:Q81180 . ?s pq:P585 ?value1 . ?s pq:P1346 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Thelonious Monk award received ?s . ?s award received Grammy Hall of Fame . ?s point in time ?value1 . ?s winner ?value2 }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Grammy Hall of Fame",
            "choppedEntity": "Q81180"
        }
    },
    {
        "chopped": {
            "question": "What number month of the year is ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P2922 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub month of the year ?unknown }"
        },
        "original": {
            "question": "What number month of the year is December",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P2922 wd:Q126 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub month of the year December }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "December",
            "choppedEntity": "Q126"
        }
    },
    {
        "chopped": {
            "question": "What is the number that represents ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P2922 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub month of the year ?unknown }"
        },
        "original": {
            "question": "What is the number that represents December",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P2922 wd:Q126 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub month of the year December }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "December",
            "choppedEntity": "Q126"
        }
    },
    {
        "chopped": {
            "question": "When did Ottmar Hitzfeld start as head coach for ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P286 ?s . ?s ps:P286 wd:Q44478 . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown head coach ?s . ?s head coach Ottmar Hitzfeld . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Ottmar Hitzfeld start as head coach for Borussia Dortmund",
            "query": "SELECT ?value WHERE { wd:Q41420 p:P286 ?s . ?s ps:P286 wd:Q44478 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Borussia Dortmund head coach ?s . ?s head coach Ottmar Hitzfeld . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Borussia Dortmund",
            "choppedEntity": "Q41420"
        }
    },
    {
        "chopped": {
            "question": "When did Ottmar Hitzfeld begin as head mentor for ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P286 ?s . ?s ps:P286 wd:Q44478 . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown head coach ?s . ?s head coach Ottmar Hitzfeld . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Ottmar Hitzfeld begin as head mentor for Borussia Dortmund",
            "query": "SELECT ?value WHERE { wd:Q41420 p:P286 ?s . ?s ps:P286 wd:Q44478 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Borussia Dortmund head coach ?s . ?s head coach Ottmar Hitzfeld . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Borussia Dortmund",
            "choppedEntity": "Q41420"
        }
    },
    {
        "chopped": {
            "question": "Which is the Cin\u00e9-Ressources film ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3203 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Cin\u00e9-Ressources film ID ?ans1}"
        },
        "original": {
            "question": "Which is the Cin\u00e9-Ressources film ID of Persona",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q695255 wdt:P3203 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Persona Cin\u00e9-Ressources film ID ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Persona",
            "choppedEntity": "Q695255"
        }
    },
    {
        "chopped": {
            "question": "When did Luhansk start when he was in ",
            "query": "SELECT ?ans1 WHERE { wd:Q134279 p:P131 ?s . ?s ps:P131 ?unknown . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Luhansk located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?unknown . ?s start time ?ans1}"
        },
        "original": {
            "question": "When did Luhansk start when he was in the Luhansk People's Republic",
            "query": "SELECT ?value WHERE { wd:Q134279 p:P131 ?s . ?s ps:P131 wd:Q16746854 . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Luhansk located in the administrative territorial entity ?s . ?s located in the administrative territorial entity Luhansk People's Republic . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Luhansk People's Republic",
            "choppedEntity": "Q16746854"
        }
    },
    {
        "chopped": {
            "question": "Which is the ISzDb person ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3114 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown ISzDb person ID ?ans1}"
        },
        "original": {
            "question": "Which is the ISzDb person ID for Scarlett Johansson",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q34436 wdt:P3114 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Scarlett Johansson ISzDb person ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Scarlett Johansson",
            "choppedEntity": "Q34436"
        }
    },
    {
        "chopped": {
            "question": "Which is the business cluster for the capital of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P36 ?obj . ?obj wdt:P31 wd:Q745456 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown capital ?obj . ?obj instance of business cluster } "
        },
        "original": {
            "question": "Which is the business cluster for the capital of Karnataka",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q1185 wdt:P36 ?obj . ?obj wdt:P31 wd:Q745456 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Karnataka capital ?obj . ?obj instance of business cluster } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Karnataka",
            "choppedEntity": "Q1185"
        }
    },
    {
        "chopped": {
            "question": "Which is the Todotango.com person ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4931 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Todotango.com person ID ?ans1}"
        },
        "original": {
            "question": "Which is the Todotango.com person ID for Carmencita Calder\u00f3n",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q5752733 wdt:P4931 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Carmencita Calder\u00f3n Todotango.com person ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Carmencita Calder\u00f3n",
            "choppedEntity": "Q5752733"
        }
    },
    {
        "chopped": {
            "question": "How many people die in ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P20 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub place of death ?unknown }"
        },
        "original": {
            "question": "How many people die in Salt Lake City",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P20 wd:Q23337 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub place of death Salt Lake City }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Salt Lake City",
            "choppedEntity": "Q23337"
        }
    },
    {
        "chopped": {
            "question": "What is the mortality rate in ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P20 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub place of death ?unknown }"
        },
        "original": {
            "question": "What is the mortality rate in Salt Lake City",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P20 wd:Q23337 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub place of death Salt Lake City }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Salt Lake City",
            "choppedEntity": "Q23337"
        }
    },
    {
        "chopped": {
            "question": "Which is the Parsons code for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1236 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Parsons code ?ans1}"
        },
        "original": {
            "question": "Which is the Parsons code for Spiegel im Spiegel",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q517901 wdt:P1236 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Spiegel im Spiegel Parsons code ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Spiegel im Spiegel",
            "choppedEntity": "Q517901"
        }
    },
    {
        "chopped": {
            "question": "What are the lyrics for the hit single by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P676 ?unknown . ?sbj wdt:P31 wd:Q134556 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj lyrics by ?unknown . ?sbj instance of single } "
        },
        "original": {
            "question": "What are the lyrics for the hit single by The Big Bopper",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P676 wd:Q366207 . ?sbj wdt:P31 wd:Q134556 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj lyrics by The Big Bopper . ?sbj instance of single } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "The Big Bopper",
            "choppedEntity": "Q366207"
        }
    },
    {
        "chopped": {
            "question": "Who married the actor in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P161 ?X . ?X wdt:P26 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cast member ?X . ?X spouse ?ans1}"
        },
        "original": {
            "question": "Who married the actor in Shadow of the Thin Man",
            "query": "SELECT ?answer WHERE { wd:Q1196637 wdt:P161 ?X . ?X wdt:P26 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Shadow of the Thin Man cast member ?X . ?X spouse ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Shadow of the Thin Man",
            "choppedEntity": "Q1196637"
        }
    },
    {
        "chopped": {
            "question": "Who is the spouse of an actor from ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P161 ?X . ?X wdt:P26 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown cast member ?X . ?X spouse ?ans1}"
        },
        "original": {
            "question": "Who is the spouse of an actor from Shadow of the Thin Man",
            "query": "SELECT ?answer WHERE { wd:Q1196637 wdt:P161 ?X . ?X wdt:P26 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Shadow of the Thin Man cast member ?X . ?X spouse ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Shadow of the Thin Man",
            "choppedEntity": "Q1196637"
        }
    },
    {
        "chopped": {
            "question": "According to determination method of census what is the population of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P459 wd:Q39825 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown population ?s . ?s population ?ans1 . ?s determination method census }"
        },
        "original": {
            "question": "According to determination method of census what is the population of Oregon",
            "query": "SELECT ?obj WHERE { wd:Q824 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q39825 }",
            "NLQuery": "SELECT ?obj WHERE { Oregon population ?s . ?s population ?obj . ?s determination method census }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Oregon",
            "choppedEntity": "Q824"
        }
    },
    {
        "chopped": {
            "question": "Which is the audio for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P51 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown audio ?ans1}"
        },
        "original": {
            "question": "Which is the audio for Neil Armstrong",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1615 wdt:P51 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Neil Armstrong audio ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Neil Armstrong",
            "choppedEntity": "Q1615"
        }
    },
    {
        "chopped": {
            "question": "What is language for ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P364 ?ans1 . ?unknown wdt:P407 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown original language of film or TV show ?ans1 . ?unknown language of work or name ?ans2 }"
        },
        "original": {
            "question": "What is language for The Daily Show",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q824192 wdt:P364 ?ans_1 . wd:Q824192 wdt:P407 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { The Daily Show original language of film or TV show ?ans_1 . The Daily Show language of work or name ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Daily Show",
            "choppedEntity": "Q824192"
        }
    },
    {
        "chopped": {
            "question": "Which is the deepest point of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1589 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown lowest point ?ans1}"
        },
        "original": {
            "question": "Which is the deepest point of Tajikistan",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q863 wdt:P1589 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Tajikistan lowest point ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Tajikistan",
            "choppedEntity": "Q863"
        }
    },
    {
        "chopped": {
            "question": "What language and edition is ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P407 ?ans1 . ?unknown wdt:P747 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown language of work or name ?ans1 . ?unknown edition ?ans2 }"
        },
        "original": {
            "question": "What language and edition is Pied Piper of Hamelin's Work",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q111502 wdt:P407 ?ans_1 . wd:Q111502 wdt:P747 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Pied Piper of Hamelin language of work or name ?ans_1 . Pied Piper of Hamelin edition ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Pied Piper of Hamelin's Work",
            "choppedEntity": "Q111502"
        }
    },
    {
        "chopped": {
            "question": "Where and what studied ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P69 ?s . ?s ps:P69 ?ans2 . ?s pq:P812 ?ans1 . }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown educated at ?s . ?s educated at ?ans2 . ?s academic major ?ans1 . }"
        },
        "original": {
            "question": "Where and what studied Milton Babbitt",
            "query": "SELECT ?value1 ?obj WHERE { wd:Q318518 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }",
            "NLQuery": "SELECT ?value1 ?obj WHERE { Milton Babbitt educated at ?s . ?s educated at ?obj . ?s academic major ?value1 . }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Milton Babbitt",
            "choppedEntity": "Q318518"
        }
    },
    {
        "chopped": {
            "question": "What is the person is use researchgate of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2038 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown ResearchGate profile ID ?ans1}"
        },
        "original": {
            "question": "What is the person is use researchgate of James Hanson",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q724095 wdt:P2038 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { James Edward Hansen ResearchGate profile ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "James Hanson",
            "choppedEntity": "Q724095"
        }
    },
    {
        "chopped": {
            "question": "What are the native and spoken/written languages of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P1412 ?ans1 . ?unknown wdt:P103 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown languages spoken, written or signed ?ans1 . ?unknown native language ?ans2 }"
        },
        "original": {
            "question": "What are the native and spoken/written languages of Ben Carson",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q816459 wdt:P1412 ?ans_1 . wd:Q816459 wdt:P103 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Ben Carson languages spoken, written or signed ?ans_1 . Ben Carson native language ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ben Carson",
            "choppedEntity": "Q816459"
        }
    },
    {
        "chopped": {
            "question": "What dissolved the European Union and when did it become called ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q458 p:P155 ?s . ?s ps:P155 ?unknown . ?s pq:P576 ?ans1 . ?s pq:P571 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { European Union follows ?s . ?s follows ?unknown . ?s dissolved, abolished or demolished date ?ans1 . ?s inception ?ans2 }"
        },
        "original": {
            "question": "What dissolved the European Union and when did it become called the European Economic Community",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q458 p:P155 ?s . ?s ps:P155 wd:Q52847 . ?s pq:P576 ?value1 . ?s pq:P571 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { European Union follows ?s . ?s follows European Economic Community . ?s dissolved, abolished or demolished date ?value1 . ?s inception ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the European Economic Community",
            "choppedEntity": "Q52847"
        }
    },
    {
        "chopped": {
            "question": "Who dissolved the EU and what time it become called ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q458 p:P155 ?s . ?s ps:P155 ?unknown . ?s pq:P576 ?ans1 . ?s pq:P571 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { European Union follows ?s . ?s follows ?unknown . ?s dissolved, abolished or demolished date ?ans1 . ?s inception ?ans2 }"
        },
        "original": {
            "question": "Who dissolved the EU and what time it become called the European Economic Community",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q458 p:P155 ?s . ?s ps:P155 wd:Q52847 . ?s pq:P576 ?value1 . ?s pq:P571 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { European Union follows ?s . ?s follows European Economic Community . ?s dissolved, abolished or demolished date ?value1 . ?s inception ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the European Economic Community",
            "choppedEntity": "Q52847"
        }
    },
    {
        "chopped": {
            "question": "Who is married to ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P451 ?ans1 . ?unknown wdt:P26 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown unmarried partner ?ans1 . ?unknown spouse ?ans2 }"
        },
        "original": {
            "question": "Who is married to Howard Stern",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q348603 wdt:P451 ?ans_1 . wd:Q348603 wdt:P26 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Howard Stern unmarried partner ?ans_1 . Howard Stern spouse ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Howard Stern",
            "choppedEntity": "Q348603"
        }
    },
    {
        "chopped": {
            "question": "What is the inflation rate of consumer price index of the basin countries of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P205 ?X . ?X wdt:P1279 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown basin country ?X . ?X inflation rate ?ans1}"
        },
        "original": {
            "question": "What is the inflation rate of consumer price index of the basin countries of Colorado River",
            "query": "SELECT ?answer WHERE { wd:Q1265 wdt:P205 ?X . ?X wdt:P1279 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Colorado River basin country ?X . ?X inflation rate ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Colorado River",
            "choppedEntity": "Q1265"
        }
    },
    {
        "chopped": {
            "question": "What is the consumer index inflation rate for the basin counties of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P205 ?X . ?X wdt:P1279 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown basin country ?X . ?X inflation rate ?ans1}"
        },
        "original": {
            "question": "What is the consumer index inflation rate for the basin counties of the Colorado River",
            "query": "SELECT ?answer WHERE { wd:Q1265 wdt:P205 ?X . ?X wdt:P1279 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Colorado River basin country ?X . ?X inflation rate ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Colorado River",
            "choppedEntity": "Q1265"
        }
    },
    {
        "chopped": {
            "question": "What religion is ",
            "query": "ASK WHERE { ?unknown wdt:P172 wd:Q5110500 }",
            "NLQuery": "ASK WHERE { ?unknown ethnic group Christianity in Australia }"
        },
        "original": {
            "question": "What religion is Margot Robbie",
            "query": "ASK WHERE { wd:Q1924847 wdt:P172 wd:Q5110500 }",
            "NLQuery": "ASK WHERE { Margot Robbie ethnic group Christianity in Australia }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Margot Robbie",
            "choppedEntity": "Q1924847"
        }
    },
    {
        "chopped": {
            "question": "What was the award that Gerald R. Molen received for ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P1346 wd:Q1385337 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received ?ans1 . ?s winner Gerald R. Molen }"
        },
        "original": {
            "question": "What was the award that Gerald R. Molen received for Schindler's List",
            "query": "SELECT ?obj WHERE { wd:Q483941 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1346 wd:Q1385337 }",
            "NLQuery": "SELECT ?obj WHERE { Schindler's List award received ?s . ?s award received ?obj . ?s winner Gerald R. Molen }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Schindler's List",
            "choppedEntity": "Q483941"
        }
    },
    {
        "chopped": {
            "question": "What edition of the Iliad is ",
            "query": "SELECT ?ans1 WHERE { wd:Q8275 p:P747 ?s . ?s ps:P747 ?ans1 . ?s pq:P407 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Iliad edition ?s . ?s edition ?ans1 . ?s language of work or name ?unknown }"
        },
        "original": {
            "question": "What edition of the Iliad is French",
            "query": "SELECT ?obj WHERE { wd:Q8275 p:P747 ?s . ?s ps:P747 ?obj . ?s pq:P407 wd:Q150 }",
            "NLQuery": "SELECT ?obj WHERE { Iliad edition ?s . ?s edition ?obj . ?s language of work or name French }"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "French",
            "choppedEntity": "Q150"
        }
    },
    {
        "chopped": {
            "question": "Which edition of the Illian is in ",
            "query": "SELECT ?ans1 WHERE { wd:Q8275 p:P747 ?s . ?s ps:P747 ?ans1 . ?s pq:P407 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Iliad edition ?s . ?s edition ?ans1 . ?s language of work or name ?unknown }"
        },
        "original": {
            "question": "Which edition of the Illian is in French",
            "query": "SELECT ?obj WHERE { wd:Q8275 p:P747 ?s . ?s ps:P747 ?obj . ?s pq:P407 wd:Q150 }",
            "NLQuery": "SELECT ?obj WHERE { Iliad edition ?s . ?s edition ?obj . ?s language of work or name French }"
        },
        "meta": {
            "entityTagNER": "LANGUAGE",
            "choppedText": "French",
            "choppedEntity": "Q150"
        }
    },
    {
        "chopped": {
            "question": "Who is the launch contractor for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1079 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown launch contractor ?ans1}"
        },
        "original": {
            "question": "Who is the launch contractor for James Webb Space Telescope",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q186447 wdt:P1079 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { James Webb Space Telescope launch contractor ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "James Webb Space Telescope",
            "choppedEntity": "Q186447"
        }
    },
    {
        "chopped": {
            "question": "Who is the consort of Mia Hamm, who is a member of the team ",
            "query": "SELECT ?ans1 WHERE { wd:Q222086 wdt:P26 ?ans1 . ?ans1 wdt:P54 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Mia Hamm spouse ?ans1 . ?ans1 member of sports team ?unknown}"
        },
        "original": {
            "question": "Who is the consort of Mia Hamm, who is a member of the team Trenton Thunder",
            "query": "SELECT ?answer WHERE { wd:Q222086 wdt:P26 ?answer . ?answer wdt:P54 wd:Q3526064}",
            "NLQuery": "SELECT ?answer WHERE { Mia Hamm spouse ?answer . ?answer member of sports team Trenton Thunder}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Trenton Thunder",
            "choppedEntity": "Q3526064"
        }
    },
    {
        "chopped": {
            "question": "Who is the partner of Mia Hamm, who could be a part of the group ",
            "query": "SELECT ?ans1 WHERE { wd:Q222086 wdt:P26 ?ans1 . ?ans1 wdt:P54 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Mia Hamm spouse ?ans1 . ?ans1 member of sports team ?unknown}"
        },
        "original": {
            "question": "Who is the partner of Mia Hamm, who could be a part of the group Trenton Thunder",
            "query": "SELECT ?answer WHERE { wd:Q222086 wdt:P26 ?answer . ?answer wdt:P54 wd:Q3526064}",
            "NLQuery": "SELECT ?answer WHERE { Mia Hamm spouse ?answer . ?answer member of sports team Trenton Thunder}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Trenton Thunder",
            "choppedEntity": "Q3526064"
        }
    },
    {
        "chopped": {
            "question": "Was Some Like It Hot nominated for the 32nd ",
            "query": "SELECT ?ans1 WHERE { wd:Q190086 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Some Like It Hot nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "Was Some Like It Hot nominated for the 32nd Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q190086 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q917167 }",
            "NLQuery": "SELECT ?obj WHERE { Some Like It Hot nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 32nd Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q917167"
        }
    },
    {
        "chopped": {
            "question": "what is the located in the administrative territorial entity for Narendra Modi has place of birth as ",
            "query": "SELECT ?ans1 WHERE { wd:Q1058 p:P19 ?s . ?s ps:P19 ?unknown . ?s pq:P131 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Narendra Modi place of birth ?s . ?s place of birth ?unknown . ?s located in the administrative territorial entity ?ans1}"
        },
        "original": {
            "question": "what is the located in the administrative territorial entity for Narendra Modi has place of birth as Vadnagar",
            "query": "SELECT ?value WHERE { wd:Q1058 p:P19 ?s . ?s ps:P19 wd:Q2570726 . ?s pq:P131 ?value}",
            "NLQuery": "SELECT ?value WHERE { Narendra Modi place of birth ?s . ?s place of birth Vadnagar . ?s located in the administrative territorial entity ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Vadnagar",
            "choppedEntity": "Q2570726"
        }
    },
    {
        "chopped": {
            "question": "What military rank is ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P410 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown military rank ?obj }"
        },
        "original": {
            "question": "What military rank is Philippe P\u00e9tain",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q5721 wdt:P410 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Philippe P\u00e9tain military rank ?obj }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Philippe P\u00e9tain",
            "choppedEntity": "Q5721"
        }
    },
    {
        "chopped": {
            "question": "Where and what was the study of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P69 ?s . ?s ps:P69 ?ans2 . ?s pq:P512 ?ans1 . }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown educated at ?s . ?s educated at ?ans2 . ?s academic degree ?ans1 . }"
        },
        "original": {
            "question": "Where and what was the study of Niels Bohr",
            "query": "SELECT ?value1 ?obj WHERE { wd:Q7085 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 ?value1 . }",
            "NLQuery": "SELECT ?value1 ?obj WHERE { Niels Bohr educated at ?s . ?s educated at ?obj . ?s academic degree ?value1 . }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Niels Bohr",
            "choppedEntity": "Q7085"
        }
    },
    {
        "chopped": {
            "question": "What is legally established by embezzlement, that applies to territorial jurisdiction in ",
            "query": "SELECT ?ans1 WHERE { wd:Q157833 wdt:P92 ?ans1 . ?ans1 wdt:P1001 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { embezzlement main regulatory text ?ans1 . ?ans1 applies to jurisdiction ?unknown}"
        },
        "original": {
            "question": "What is legally established by embezzlement, that applies to territorial jurisdiction in Germany",
            "query": "SELECT ?answer WHERE { wd:Q157833 wdt:P92 ?answer . ?answer wdt:P1001 wd:Q183}",
            "NLQuery": "SELECT ?answer WHERE { embezzlement main regulatory text ?answer . ?answer applies to jurisdiction Germany}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Germany",
            "choppedEntity": "Q183"
        }
    },
    {
        "chopped": {
            "question": "What is legally set up by using embezzlement, that applies to territorial jurisdiction in ",
            "query": "SELECT ?ans1 WHERE { wd:Q157833 wdt:P92 ?ans1 . ?ans1 wdt:P1001 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { embezzlement main regulatory text ?ans1 . ?ans1 applies to jurisdiction ?unknown}"
        },
        "original": {
            "question": "What is legally set up by using embezzlement, that applies to territorial jurisdiction in Germany",
            "query": "SELECT ?answer WHERE { wd:Q157833 wdt:P92 ?answer . ?answer wdt:P1001 wd:Q183}",
            "NLQuery": "SELECT ?answer WHERE { embezzlement main regulatory text ?answer . ?answer applies to jurisdiction Germany}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Germany",
            "choppedEntity": "Q183"
        }
    },
    {
        "chopped": {
            "question": "What day of the week is ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P837 ?X . ?X wdt:P2894 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown day in year for periodic occurrence ?X . ?X day of week ?ans1}"
        },
        "original": {
            "question": "What day of the week is Labour day",
            "query": "SELECT ?answer WHERE { wd:Q10901070 wdt:P837 ?X . ?X wdt:P2894 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Labour Day day in year for periodic occurrence ?X . ?X day of week ?answer}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "Labour day",
            "choppedEntity": "Q10901070"
        }
    },
    {
        "chopped": {
            "question": "What is the Tab4u artist ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3839 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Tab4u artist ID ?ans1}"
        },
        "original": {
            "question": "What is the Tab4u artist ID for Shlomo Carlebach",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q76999 wdt:P3839 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Shlomo Carlebach Tab4u artist ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Shlomo Carlebach",
            "choppedEntity": "Q76999"
        }
    },
    {
        "chopped": {
            "question": "On April 28, 2004, what was the electorate of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1831 ?s . ?s ps:P1831 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2004')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown electorate ?s . ?s electorate ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),'2004')) }"
        },
        "original": {
            "question": "On April 28, 2004, what was the electorate of Muntinlupa",
            "query": "SELECT ?obj WHERE { wd:Q17176 p:P1831 ?s . ?s ps:P1831 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2004')) }",
            "NLQuery": "SELECT ?obj WHERE { Muntinlupa electorate ?s . ?s electorate ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2004')) }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Muntinlupa",
            "choppedEntity": "Q17176"
        }
    },
    {
        "chopped": {
            "question": "Who was awarded Olympic bronze medal in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1344 ?s . ?s ps:P1344 ?ans1 . ?s pq:P166 wd:Q15889643 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown participant in ?s . ?s participant in ?ans1 . ?s award received Olympic bronze medal }"
        },
        "original": {
            "question": "Who was awarded Olympic bronze medal in Ryan Lochte",
            "query": "SELECT ?obj WHERE { wd:Q201517 p:P1344 ?s . ?s ps:P1344 ?obj . ?s pq:P166 wd:Q15889643 }",
            "NLQuery": "SELECT ?obj WHERE { Ryan Lochte participant in ?s . ?s participant in ?obj . ?s award received Olympic bronze medal }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ryan Lochte",
            "choppedEntity": "Q201517"
        }
    },
    {
        "chopped": {
            "question": "Who was the Olympic bronze medal winner in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1344 ?s . ?s ps:P1344 ?ans1 . ?s pq:P166 wd:Q15889643 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown participant in ?s . ?s participant in ?ans1 . ?s award received Olympic bronze medal }"
        },
        "original": {
            "question": "Who was the Olympic bronze medal winner in Ryan Lochte",
            "query": "SELECT ?obj WHERE { wd:Q201517 p:P1344 ?s . ?s ps:P1344 ?obj . ?s pq:P166 wd:Q15889643 }",
            "NLQuery": "SELECT ?obj WHERE { Ryan Lochte participant in ?s . ?s participant in ?obj . ?s award received Olympic bronze medal }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Ryan Lochte",
            "choppedEntity": "Q201517"
        }
    },
    {
        "chopped": {
            "question": "Which is the 3D film for the series of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P179 ?unknown . ?sbj wdt:P31 wd:Q229390 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj part of the series ?unknown . ?sbj instance of 3D film } "
        },
        "original": {
            "question": "Which is the 3D film for the series of the Marvel Cinematic Universe",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P179 wd:Q642878 . ?sbj wdt:P31 wd:Q229390 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj part of the series Marvel Cinematic Universe . ?sbj instance of 3D film } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Marvel Cinematic Universe",
            "choppedEntity": "Q642878"
        }
    },
    {
        "chopped": {
            "question": "Mention the qualifying degree and the major specialization course in which Tina Fey graduated from ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q14540 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P812 ?ans1 . ?s pq:P512 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Tina Fey educated at ?s . ?s educated at ?unknown . ?s academic major ?ans1 . ?s academic degree ?ans2 }"
        },
        "original": {
            "question": "Mention the qualifying degree and the major specialization course in which Tina Fey graduated from the University of Virginia",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q14540 p:P69 ?s . ?s ps:P69 wd:Q213439 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Tina Fey educated at ?s . ?s educated at University of Virginia . ?s academic major ?value1 . ?s academic degree ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the University of Virginia",
            "choppedEntity": "Q213439"
        }
    },
    {
        "chopped": {
            "question": "What was the degree and major specialization course that Tina Fey graduated from ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q14540 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P812 ?ans1 . ?s pq:P512 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Tina Fey educated at ?s . ?s educated at ?unknown . ?s academic major ?ans1 . ?s academic degree ?ans2 }"
        },
        "original": {
            "question": "What was the degree and major specialization course that Tina Fey graduated from the University of Virginia",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q14540 p:P69 ?s . ?s ps:P69 wd:Q213439 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Tina Fey educated at ?s . ?s educated at University of Virginia . ?s academic major ?value1 . ?s academic degree ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the University of Virginia",
            "choppedEntity": "Q213439"
        }
    },
    {
        "chopped": {
            "question": "Which is the clearance of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2793 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown clearance ?ans1}"
        },
        "original": {
            "question": "Which is the clearance of the Forth Bridge",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q275 wdt:P2793 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Forth Bridge clearance ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "the Forth Bridge",
            "choppedEntity": "Q275"
        }
    },
    {
        "chopped": {
            "question": "Who is starring in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1441 ?X . ?X wdt:P161 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown present in work ?X . ?X cast member ?ans1}"
        },
        "original": {
            "question": "Who is starring in Gary the Monster",
            "query": "SELECT ?answer WHERE { wd:Q50809801 wdt:P1441 ?X . ?X wdt:P161 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Gary the Monster present in work ?X . ?X cast member ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Gary the Monster",
            "choppedEntity": "Q50809801"
        }
    },
    {
        "chopped": {
            "question": "What is the birthplace of A. D. Hope, which has local government areas in ",
            "query": "SELECT ?ans1 WHERE { wd:Q325890 wdt:P19 ?ans1 . ?ans1 wdt:P150 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { A. D. Hope place of birth ?ans1 . ?ans1 contains administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "What is the birthplace of A. D. Hope, which has local government areas in the City of Liverpool",
            "query": "SELECT ?answer WHERE { wd:Q325890 wdt:P19 ?answer . ?answer wdt:P150 wd:Q1309863}",
            "NLQuery": "SELECT ?answer WHERE { A. D. Hope place of birth ?answer . ?answer contains administrative territorial entity City of Liverpool}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the City of Liverpool",
            "choppedEntity": "Q1309863"
        }
    },
    {
        "chopped": {
            "question": "What is the origin of A. D. Trust, which has nearby government zones within ",
            "query": "SELECT ?ans1 WHERE { wd:Q325890 wdt:P19 ?ans1 . ?ans1 wdt:P150 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { A. D. Hope place of birth ?ans1 . ?ans1 contains administrative territorial entity ?unknown}"
        },
        "original": {
            "question": "What is the origin of A. D. Trust, which has nearby government zones within the City of Liverpool",
            "query": "SELECT ?answer WHERE { wd:Q325890 wdt:P19 ?answer . ?answer wdt:P150 wd:Q1309863}",
            "NLQuery": "SELECT ?answer WHERE { A. D. Hope place of birth ?answer . ?answer contains administrative territorial entity City of Liverpool}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the City of Liverpool",
            "choppedEntity": "Q1309863"
        }
    },
    {
        "chopped": {
            "question": "Which is the Strunz 8th edition (series ID, updated of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P711 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Strunz 8th edition (series ID, updated) ?ans1}"
        },
        "original": {
            "question": "Which is the Strunz 8th edition (series ID, updated of muscovite",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q106532 wdt:P711 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { muscovite Strunz 8th edition (series ID, updated) ?answer}"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "muscovite",
            "choppedEntity": "Q106532"
        }
    },
    {
        "chopped": {
            "question": "What is the name of the book that came after ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P155 ?obj . ?obj wdt:P31 wd:Q7725634 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown follows ?obj . ?obj instance of literary work } "
        },
        "original": {
            "question": "What is the name of the book that came after Pride and Prejudice",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q170583 wdt:P155 ?obj . ?obj wdt:P31 wd:Q7725634 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Pride and Prejudice follows ?obj . ?obj instance of literary work } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Pride and Prejudice",
            "choppedEntity": "Q170583"
        }
    },
    {
        "chopped": {
            "question": "What book followed ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P155 ?obj . ?obj wdt:P31 wd:Q7725634 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown follows ?obj . ?obj instance of literary work } "
        },
        "original": {
            "question": "What book followed Pride and Prejudice",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q170583 wdt:P155 ?obj . ?obj wdt:P31 wd:Q7725634 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Pride and Prejudice follows ?obj . ?obj instance of literary work } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Pride and Prejudice",
            "choppedEntity": "Q170583"
        }
    },
    {
        "chopped": {
            "question": "What degree did Paolo Gentiloni obtain at ",
            "query": "SELECT ?ans1 WHERE { wd:Q1071031 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P512 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Paolo Gentiloni educated at ?s . ?s educated at ?unknown . ?s academic degree ?ans1}"
        },
        "original": {
            "question": "What degree did Paolo Gentiloni obtain at Sapienza University of Rome",
            "query": "SELECT ?value WHERE { wd:Q1071031 p:P69 ?s . ?s ps:P69 wd:Q209344 . ?s pq:P512 ?value}",
            "NLQuery": "SELECT ?value WHERE { Paolo Gentiloni educated at ?s . ?s educated at Sapienza University of Rome . ?s academic degree ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Sapienza University of Rome",
            "choppedEntity": "Q209344"
        }
    },
    {
        "chopped": {
            "question": "What did Paolo Gentiloni graduate with from ",
            "query": "SELECT ?ans1 WHERE { wd:Q1071031 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P512 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Paolo Gentiloni educated at ?s . ?s educated at ?unknown . ?s academic degree ?ans1}"
        },
        "original": {
            "question": "What did Paolo Gentiloni graduate with from Sapienza University of Rome",
            "query": "SELECT ?value WHERE { wd:Q1071031 p:P69 ?s . ?s ps:P69 wd:Q209344 . ?s pq:P512 ?value}",
            "NLQuery": "SELECT ?value WHERE { Paolo Gentiloni educated at ?s . ?s educated at Sapienza University of Rome . ?s academic degree ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Sapienza University of Rome",
            "choppedEntity": "Q209344"
        }
    },
    {
        "chopped": {
            "question": "Which is the IGHOF athlete ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4469 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown IGHOF athlete ID ?ans1}"
        },
        "original": {
            "question": "Which is the IGHOF athlete ID of Nikolai Andrianov",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q219309 wdt:P4469 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Nikolai Andrianov IGHOF athlete ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Nikolai Andrianov",
            "choppedEntity": "Q219309"
        }
    },
    {
        "chopped": {
            "question": "What eponym of Platonic realism is represented in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1187191 wdt:P138 ?ans1 . ?ans1 wdt:P800 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Platonic realism named after ?ans1 . ?ans1 notable work ?unknown}"
        },
        "original": {
            "question": "What eponym of Platonic realism is represented in Lysis",
            "query": "SELECT ?answer WHERE { wd:Q1187191 wdt:P138 ?answer . ?answer wdt:P800 wd:Q924977}",
            "NLQuery": "SELECT ?answer WHERE { Platonic realism named after ?answer . ?answer notable work Lysis}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Lysis",
            "choppedEntity": "Q924977"
        }
    },
    {
        "chopped": {
            "question": "Which is the enclave within ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P501 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 enclave within ?unknown}"
        },
        "original": {
            "question": "Which is the enclave within Oromia Region",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P501 wd:Q202107}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer enclave within Oromia Region}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Oromia Region",
            "choppedEntity": "Q202107"
        }
    },
    {
        "chopped": {
            "question": "On December 12, 1991, what was the initialism of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1813 ?s . ?s ps:P1813 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1991')) }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown short name ?s . ?s short name ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),'1991')) }"
        },
        "original": {
            "question": "On December 12, 1991, what was the initialism of Sakha Republic",
            "query": "SELECT ?obj WHERE { wd:Q6605 p:P1813 ?s . ?s ps:P1813 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1991')) }",
            "NLQuery": "SELECT ?obj WHERE { Sakha Republic short name ?s . ?s short name ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1991')) }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Sakha Republic",
            "choppedEntity": "Q6605"
        }
    },
    {
        "chopped": {
            "question": "When did Alaksandr Ryhoravi\u010d \u0141uka\u0161enka complete his studies at ",
            "query": "SELECT ?ans1 WHERE { wd:Q2866 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Alexander Lukashenko educated at ?s . ?s educated at ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did Alaksandr Ryhoravi\u010d \u0141uka\u0161enka complete his studies at Mogilev State A. Kuleshov University",
            "query": "SELECT ?value WHERE { wd:Q2866 p:P69 ?s . ?s ps:P69 wd:Q2858236 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Alexander Lukashenko educated at ?s . ?s educated at Mogilev State A. Kuleshov University . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Mogilev State A. Kuleshov University",
            "choppedEntity": "Q2858236"
        }
    },
    {
        "chopped": {
            "question": "What year did Alaksandr Ryhoravi\u010d \u0141uka\u0161enka graduate from ",
            "query": "SELECT ?ans1 WHERE { wd:Q2866 p:P69 ?s . ?s ps:P69 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Alexander Lukashenko educated at ?s . ?s educated at ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "What year did Alaksandr Ryhoravi\u010d \u0141uka\u0161enka graduate from Mogilev State A. Kuleshov University",
            "query": "SELECT ?value WHERE { wd:Q2866 p:P69 ?s . ?s ps:P69 wd:Q2858236 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Alexander Lukashenko educated at ?s . ?s educated at Mogilev State A. Kuleshov University . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Mogilev State A. Kuleshov University",
            "choppedEntity": "Q2858236"
        }
    },
    {
        "chopped": {
            "question": "Which is the LAC ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1670 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Canadiana Authorities ID ?ans1}"
        },
        "original": {
            "question": "Which is the LAC ID for Patty Hearst",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q229556 wdt:P1670 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Patty Hearst Canadiana Authorities ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Patty Hearst",
            "choppedEntity": "Q229556"
        }
    },
    {
        "chopped": {
            "question": "Which is the Natura 2000 site ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3425 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Natura 2000 site ID ?ans1}"
        },
        "original": {
            "question": "Which is the Natura 2000 site ID of Minho River",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q14554 wdt:P3425 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Minho River Natura 2000 site ID ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Minho River",
            "choppedEntity": "Q14554"
        }
    },
    {
        "chopped": {
            "question": "What is made by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1441 ?X . ?X wdt:P170 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown present in work ?X . ?X creator ?ans1}"
        },
        "original": {
            "question": "What is made by Webby",
            "query": "SELECT ?answer WHERE { wd:Q922567 wdt:P1441 ?X . ?X wdt:P170 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Webby present in work ?X . ?X creator ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Webby",
            "choppedEntity": "Q922567"
        }
    },
    {
        "chopped": {
            "question": "How many matches and goals did Hristo Stoichkov play and score playing for ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q187125 p:P54 ?s . ?s ps:P54 ?unknown . ?s pq:P1350 ?ans1 . ?s pq:P1351 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { Hristo Stoichkov member of sports team ?s . ?s member of sports team ?unknown . ?s number of matches played/races/starts ?ans1 . ?s number of points/goals/set scored ?ans2 }"
        },
        "original": {
            "question": "How many matches and goals did Hristo Stoichkov play and score playing for the Chicago Fire",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q187125 p:P54 ?s . ?s ps:P54 wd:Q308683 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { Hristo Stoichkov member of sports team ?s . ?s member of sports team Chicago Fire FC . ?s number of matches played/races/starts ?value1 . ?s number of points/goals/set scored ?value2 }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Chicago Fire",
            "choppedEntity": "Q308683"
        }
    },
    {
        "chopped": {
            "question": "Which is the border seat of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P159 ?X . ?X wdt:P47 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown headquarters location ?X . ?X shares border with ?ans1}"
        },
        "original": {
            "question": "Which is the border seat of Hafun Fishing Company",
            "query": "SELECT ?answer WHERE { wd:Q18347946 wdt:P159 ?X . ?X wdt:P47 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Hafun Fishing Company headquarters location ?X . ?X shares border with ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Hafun Fishing Company",
            "choppedEntity": "Q18347946"
        }
    },
    {
        "chopped": {
            "question": "What is the biological classification of the subject in the photograph Cypress, ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P180 ?X . ?X wdt:P171 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown depicts ?X . ?X parent taxon ?ans1}"
        },
        "original": {
            "question": "What is the biological classification of the subject in the photograph Cypress, Point Lobos",
            "query": "SELECT ?answer WHERE { wd:Q28741396 wdt:P180 ?X . ?X wdt:P171 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Cypress, Point Lobos depicts ?X . ?X parent taxon ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Point Lobos",
            "choppedEntity": "Q28741396"
        }
    },
    {
        "chopped": {
            "question": "Is it true that water colored ",
            "query": "ASK WHERE { wd:Q283 wdt:P462 ?unknown }",
            "NLQuery": "ASK WHERE { water color ?unknown }"
        },
        "original": {
            "question": "Is it true that water colored Seal",
            "query": "ASK WHERE { wd:Q283 wdt:P462 wd:Q218091 }",
            "NLQuery": "ASK WHERE { water color Seal }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Seal",
            "choppedEntity": "Q218091"
        }
    },
    {
        "chopped": {
            "question": "Did water colored ",
            "query": "ASK WHERE { wd:Q283 wdt:P462 ?unknown }",
            "NLQuery": "ASK WHERE { water color ?unknown }"
        },
        "original": {
            "question": "Did water colored Seal",
            "query": "ASK WHERE { wd:Q283 wdt:P462 wd:Q218091 }",
            "NLQuery": "ASK WHERE { water color Seal }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Seal",
            "choppedEntity": "Q218091"
        }
    },
    {
        "chopped": {
            "question": "When did A. P. J. Abdul Kalam receive ",
            "query": "SELECT ?ans1 WHERE { wd:Q9513 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { A. P. J. Abdul Kalam award received ?s . ?s award received ?unknown . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did A. P. J. Abdul Kalam receive the KH Firodia Award",
            "query": "SELECT ?value WHERE { wd:Q9513 p:P166 ?s . ?s ps:P166 wd:Q5636299 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { A. P. J. Abdul Kalam award received ?s . ?s award received H K Firodia awards . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the KH Firodia Award",
            "choppedEntity": "Q5636299"
        }
    },
    {
        "chopped": {
            "question": "When was the KH Firodia Award awarded to ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 wd:Q5636299 . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received H K Firodia awards . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was the KH Firodia Award awarded to A.P.J. Abdul Kalam",
            "query": "SELECT ?value WHERE { wd:Q9513 p:P166 ?s . ?s ps:P166 wd:Q5636299 . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { A. P. J. Abdul Kalam award received ?s . ?s award received H K Firodia awards . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "A.P.J. Abdul Kalam",
            "choppedEntity": "Q9513"
        }
    },
    {
        "chopped": {
            "question": "Which is the title for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1476 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown title ?ans1}"
        },
        "original": {
            "question": "Which is the title for Girl with a Pearl Earring",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q185372 wdt:P1476 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Girl with a Pearl Earring title ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Girl with a Pearl Earring",
            "choppedEntity": "Q185372"
        }
    },
    {
        "chopped": {
            "question": "Which character did David Hasselhoff play in ",
            "query": "SELECT ?ans1 WHERE { wd:Q201927 p:P1344 ?s . ?s ps:P1344 ?unknown . ?s pq:P453 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { David Hasselhoff participant in ?s . ?s participant in ?unknown . ?s character role ?ans1}"
        },
        "original": {
            "question": "Which character did David Hasselhoff play in Baywatch",
            "query": "SELECT ?value WHERE { wd:Q201927 p:P1344 ?s . ?s ps:P1344 wd:Q223320 . ?s pq:P453 ?value}",
            "NLQuery": "SELECT ?value WHERE { David Hasselhoff participant in ?s . ?s participant in Baywatch . ?s character role ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Baywatch",
            "choppedEntity": "Q223320"
        }
    },
    {
        "chopped": {
            "question": "Which is the number of households of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1538 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown number of households ?ans1}"
        },
        "original": {
            "question": "Which is the number of households of Meknes",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q178663 wdt:P1538 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Meknes number of households ?answer}"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Meknes",
            "choppedEntity": "Q178663"
        }
    },
    {
        "chopped": {
            "question": "Which officeholder is in the position of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1308 ?unknown . ?sbj wdt:P31 wd:Q4164871 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj officeholder ?unknown . ?sbj instance of position } "
        },
        "original": {
            "question": "Which officeholder is in the position of Robert E. Lee",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1308 wd:Q165557 . ?sbj wdt:P31 wd:Q4164871 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj officeholder Robert E. Lee . ?sbj instance of position } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Robert E. Lee",
            "choppedEntity": "Q165557"
        }
    },
    {
        "chopped": {
            "question": "Which team is owned by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P54 ?X . ?X wdt:P127 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown member of sports team ?X . ?X owned by ?ans1}"
        },
        "original": {
            "question": "Which team is owned by Bryan Meredith",
            "query": "SELECT ?answer WHERE { wd:Q3646130 wdt:P54 ?X . ?X wdt:P127 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Bryan Meredith member of sports team ?X . ?X owned by ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Bryan Meredith",
            "choppedEntity": "Q3646130"
        }
    },
    {
        "chopped": {
            "question": "Which group is claimed by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P54 ?X . ?X wdt:P127 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown member of sports team ?X . ?X owned by ?ans1}"
        },
        "original": {
            "question": "Which group is claimed by Bryan Meredith",
            "query": "SELECT ?answer WHERE { wd:Q3646130 wdt:P54 ?X . ?X wdt:P127 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Bryan Meredith member of sports team ?X . ?X owned by ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Bryan Meredith",
            "choppedEntity": "Q3646130"
        }
    },
    {
        "chopped": {
            "question": "Which is the ticker symbol for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P249 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown ticker symbol ?ans1}"
        },
        "original": {
            "question": "Which is the ticker symbol for LATAM Chile",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q649178 wdt:P249 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { LAN Chile ticker symbol ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "LATAM Chile",
            "choppedEntity": "Q649178"
        }
    },
    {
        "chopped": {
            "question": "What is the main voltage frequency in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P2884 ?s . ?s ps:P2884 ?x FILTER(contains(?x,'220.0')) . ?s pq:P2144 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown mains voltage ?s . ?s mains voltage ?x FILTER(contains(?x,'220.0')) . ?s frequency ?ans1}"
        },
        "original": {
            "question": "What is the main voltage frequency in Baleric island",
            "query": "SELECT ?value WHERE { wd:Q5765 p:P2884 ?s . ?s ps:P2884 ?x FILTER(contains(?x,'220.0')) . ?s pq:P2144 ?value}",
            "NLQuery": "SELECT ?value WHERE { Balearic Islands mains voltage ?s . ?s mains voltage ?x FILTER(contains(?x,'220.0')) . ?s frequency ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Baleric island",
            "choppedEntity": "Q5765"
        }
    },
    {
        "chopped": {
            "question": "Which is the Turkish Football Federation coach ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2449 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Turkish Football Federation coach  ID ?ans1}"
        },
        "original": {
            "question": "Which is the Turkish Football Federation coach ID for Zico",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q47526 wdt:P2449 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Zico Turkish Football Federation coach  ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Zico",
            "choppedEntity": "Q47526"
        }
    },
    {
        "chopped": {
            "question": "How many countries are in ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P17 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown country ?obj }"
        },
        "original": {
            "question": "How many countries are in Canterbury",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q29303 wdt:P17 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Canterbury country ?obj }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Canterbury",
            "choppedEntity": "Q29303"
        }
    },
    {
        "chopped": {
            "question": "What is the PORT film ID for the movie ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P905 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown PORT film ID ?ans1}"
        },
        "original": {
            "question": "What is the PORT film ID for the movie Toy Story",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q171048 wdt:P905 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Toy Story PORT film ID ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Toy Story",
            "choppedEntity": "Q171048"
        }
    },
    {
        "chopped": {
            "question": "How many afterwords are by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P1877 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub after a work by ?unknown }"
        },
        "original": {
            "question": "How many afterwords are by Jack London",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P1877 wd:Q45765 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub after a work by Jack London }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Jack London",
            "choppedEntity": "Q45765"
        }
    },
    {
        "chopped": {
            "question": "Which is the WBPLN author ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4343 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown WBPLN author ID ?ans1}"
        },
        "original": {
            "question": "Which is the WBPLN author ID for Rainer Maria Rilke",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q76483 wdt:P4343 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Rainer Maria Rilke WBPLN author ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Rainer Maria Rilke",
            "choppedEntity": "Q76483"
        }
    },
    {
        "chopped": {
            "question": "Who is the head coach of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P286 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 head coach ?unknown}"
        },
        "original": {
            "question": "Who is the head coach of Malcolm Allison",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P286 wd:Q1383862}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer head coach Malcolm Allison}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Malcolm Allison",
            "choppedEntity": "Q1383862"
        }
    },
    {
        "chopped": {
            "question": "Which is the North Carolina Sports Hall of Fame ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4375 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown North Carolina Sports Hall of Fame ID ?ans1}"
        },
        "original": {
            "question": "Which is the North Carolina Sports Hall of Fame ID of Dale Earnhardt",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q355420 wdt:P4375 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Dale Earnhardt North Carolina Sports Hall of Fame ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Dale Earnhardt",
            "choppedEntity": "Q355420"
        }
    },
    {
        "chopped": {
            "question": "What transcontinental country shares a border with ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P47 ?unknown . ?sbj wdt:P31 wd:Q1323642 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj shares border with ?unknown . ?sbj instance of transcontinental country } "
        },
        "original": {
            "question": "What transcontinental country shares a border with the Austrian Empire",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P47 wd:Q131964 . ?sbj wdt:P31 wd:Q1323642 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj shares border with Austrian Empire . ?sbj instance of transcontinental country } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Austrian Empire",
            "choppedEntity": "Q131964"
        }
    },
    {
        "chopped": {
            "question": "What is the Sherdog ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2818 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Sherdog ID ?ans1}"
        },
        "original": {
            "question": "What is the Sherdog ID of Fedor Emelianenko",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q205953 wdt:P2818 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Fedor Emelianenko Sherdog ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Fedor Emelianenko",
            "choppedEntity": "Q205953"
        }
    },
    {
        "chopped": {
            "question": "What is the nationality of someone who is born in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P19 ?unknown . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj place of birth ?unknown . ?sbj instance of human } "
        },
        "original": {
            "question": "What is the nationality of someone who is born in Valencia",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P19 wd:Q8818 . ?sbj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj place of birth Valencia . ?sbj instance of human } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Valencia",
            "choppedEntity": "Q8818"
        }
    },
    {
        "chopped": {
            "question": "Where can I have a clinical trial in ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P17 ?unknown . ?sbj wdt:P31 wd:Q30612 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country ?unknown . ?sbj instance of clinical trial } "
        },
        "original": {
            "question": "Where can I have a clinical trial in Hong Kong",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P17 wd:Q8646 . ?sbj wdt:P31 wd:Q30612 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj country Hong Kong . ?sbj instance of clinical trial } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Hong Kong",
            "choppedEntity": "Q8646"
        }
    },
    {
        "chopped": {
            "question": "What public holidays are celebrated in ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P832 ?obj . ?obj wdt:P31 wd:Q1197685 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown public holiday ?obj . ?obj instance of public holiday } "
        },
        "original": {
            "question": "What public holidays are celebrated in Barcelona",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q1492 wdt:P832 ?obj . ?obj wdt:P31 wd:Q1197685 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Barcelona public holiday ?obj . ?obj instance of public holiday } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Barcelona",
            "choppedEntity": "Q1492"
        }
    },
    {
        "chopped": {
            "question": "What open occasions are celebrated in ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P832 ?obj . ?obj wdt:P31 wd:Q1197685 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown public holiday ?obj . ?obj instance of public holiday } "
        },
        "original": {
            "question": "What open occasions are celebrated in Barcelona",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q1492 wdt:P832 ?obj . ?obj wdt:P31 wd:Q1197685 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Barcelona public holiday ?obj . ?obj instance of public holiday } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Barcelona",
            "choppedEntity": "Q1492"
        }
    },
    {
        "chopped": {
            "question": "What is the political ideology of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1142 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown political ideology ?ans1}"
        },
        "original": {
            "question": "What is the political ideology of the Conservative Party",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q9626 wdt:P1142 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Conservative Party political ideology ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Conservative Party",
            "choppedEntity": "Q9626"
        }
    },
    {
        "chopped": {
            "question": "What is on harbour on the Reykjavik, whose tributary is ",
            "query": "SELECT ?ans1 WHERE { wd:Q1764 wdt:P206 ?ans1 . ?ans1 wdt:P974 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Reykjav\u00edk located in or next to body of water ?ans1 . ?ans1 tributary ?unknown}"
        },
        "original": {
            "question": "What is on harbour on the Reykjavik, whose tributary is the Ave River",
            "query": "SELECT ?answer WHERE { wd:Q1764 wdt:P206 ?answer . ?answer wdt:P974 wd:Q14591}",
            "NLQuery": "SELECT ?answer WHERE { Reykjav\u00edk located in or next to body of water ?answer . ?answer tributary Ave River}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Ave River",
            "choppedEntity": "Q14591"
        }
    },
    {
        "chopped": {
            "question": "What is the name of the Dungeons and Dragon's publishing house that was founded in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1375 wdt:P123 ?ans1 . ?ans1 wdt:P740 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Dungeons & Dragons publisher ?ans1 . ?ans1 location of formation ?unknown}"
        },
        "original": {
            "question": "What is the name of the Dungeons and Dragon's publishing house that was founded in Seattle",
            "query": "SELECT ?answer WHERE { wd:Q1375 wdt:P123 ?answer . ?answer wdt:P740 wd:Q5083}",
            "NLQuery": "SELECT ?answer WHERE { Dungeons & Dragons publisher ?answer . ?answer location of formation Seattle}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Seattle",
            "choppedEntity": "Q5083"
        }
    },
    {
        "chopped": {
            "question": "What are the diplomatic relations of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P17 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "What are the diplomatic relations of Burgas",
            "query": "SELECT ?answer WHERE { wd:Q6509 wdt:P17 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Burgas country ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Burgas",
            "choppedEntity": "Q6509"
        }
    },
    {
        "chopped": {
            "question": "What are the political relations of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P17 ?X . ?X wdt:P530 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country ?X . ?X diplomatic relation ?ans1}"
        },
        "original": {
            "question": "What are the political relations of Burgas",
            "query": "SELECT ?answer WHERE { wd:Q6509 wdt:P17 ?X . ?X wdt:P530 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Burgas country ?X . ?X diplomatic relation ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Burgas",
            "choppedEntity": "Q6509"
        }
    },
    {
        "chopped": {
            "question": "Did Anna Paquin study at Cornell University and ",
            "query": "ASK WHERE { wd:Q199884 wdt:P69 wd:Q49115 . wd:Q199884 wdt:P69 ?unknown }",
            "NLQuery": "ASK WHERE { Anna Paquin educated at Cornell University . Anna Paquin educated at ?unknown }"
        },
        "original": {
            "question": "Did Anna Paquin study at Cornell University and Windward School",
            "query": "ASK WHERE { wd:Q199884 wdt:P69 wd:Q49115 . wd:Q199884 wdt:P69 wd:Q8024812 }",
            "NLQuery": "ASK WHERE { Anna Paquin educated at Cornell University . Anna Paquin educated at Windward School }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Windward School",
            "choppedEntity": "Q8024812"
        }
    },
    {
        "chopped": {
            "question": "Is it true that Anna Paquin studied at Cornell University and ",
            "query": "ASK WHERE { wd:Q199884 wdt:P69 wd:Q49115 . wd:Q199884 wdt:P69 ?unknown }",
            "NLQuery": "ASK WHERE { Anna Paquin educated at Cornell University . Anna Paquin educated at ?unknown }"
        },
        "original": {
            "question": "Is it true that Anna Paquin studied at Cornell University and Windward School",
            "query": "ASK WHERE { wd:Q199884 wdt:P69 wd:Q49115 . wd:Q199884 wdt:P69 wd:Q8024812 }",
            "NLQuery": "ASK WHERE { Anna Paquin educated at Cornell University . Anna Paquin educated at Windward School }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Windward School",
            "choppedEntity": "Q8024812"
        }
    },
    {
        "chopped": {
            "question": "Did Robert Mueller hold a position of Attorney at foreign law and United States Attorney for ",
            "query": "ASK WHERE { wd:Q715156 wdt:P39 wd:Q11430382 . wd:Q715156 wdt:P39 ?unknown }",
            "NLQuery": "ASK WHERE { Robert Mueller position held Attorney at foreign law . Robert Mueller position held ?unknown }"
        },
        "original": {
            "question": "Did Robert Mueller hold a position of Attorney at foreign law and United States Attorney for the Northern District of California",
            "query": "ASK WHERE { wd:Q715156 wdt:P39 wd:Q11430382 . wd:Q715156 wdt:P39 wd:Q7889560 }",
            "NLQuery": "ASK WHERE { Robert Mueller position held Attorney at foreign law . Robert Mueller position held United States Attorney for the Northern District of California }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Northern District of California",
            "choppedEntity": "Q7889560"
        }
    },
    {
        "chopped": {
            "question": "Was Robert Mueller an attorney at Foreign Law and United States Attorney for ",
            "query": "ASK WHERE { wd:Q715156 wdt:P39 wd:Q11430382 . wd:Q715156 wdt:P39 ?unknown }",
            "NLQuery": "ASK WHERE { Robert Mueller position held Attorney at foreign law . Robert Mueller position held ?unknown }"
        },
        "original": {
            "question": "Was Robert Mueller an attorney at Foreign Law and United States Attorney for the Northern District of California",
            "query": "ASK WHERE { wd:Q715156 wdt:P39 wd:Q11430382 . wd:Q715156 wdt:P39 wd:Q7889560 }",
            "NLQuery": "ASK WHERE { Robert Mueller position held Attorney at foreign law . Robert Mueller position held United States Attorney for the Northern District of California }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Northern District of California",
            "choppedEntity": "Q7889560"
        }
    },
    {
        "chopped": {
            "question": "What percentage of Angola's population is ",
            "query": "SELECT ?ans1 WHERE { wd:Q916 p:P172 ?s . ?s ps:P172 ?unknown . ?s pq:P1107 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Angola ethnic group ?s . ?s ethnic group ?unknown . ?s proportion ?ans1}"
        },
        "original": {
            "question": "What percentage of Angola's population is European",
            "query": "SELECT ?value WHERE { wd:Q916 p:P172 ?s . ?s ps:P172 wd:Q394067 . ?s pq:P1107 ?value}",
            "NLQuery": "SELECT ?value WHERE { Angola ethnic group ?s . ?s ethnic group Europeans . ?s proportion ?value}"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "European",
            "choppedEntity": "Q394067"
        }
    },
    {
        "chopped": {
            "question": "How many percent of the population of Angola is ",
            "query": "SELECT ?ans1 WHERE { wd:Q916 p:P172 ?s . ?s ps:P172 ?unknown . ?s pq:P1107 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Angola ethnic group ?s . ?s ethnic group ?unknown . ?s proportion ?ans1}"
        },
        "original": {
            "question": "How many percent of the population of Angola is European",
            "query": "SELECT ?value WHERE { wd:Q916 p:P172 ?s . ?s ps:P172 wd:Q394067 . ?s pq:P1107 ?value}",
            "NLQuery": "SELECT ?value WHERE { Angola ethnic group ?s . ?s ethnic group Europeans . ?s proportion ?value}"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "European",
            "choppedEntity": "Q394067"
        }
    },
    {
        "chopped": {
            "question": "Who is the main building contractor for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P193 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown main building contractor ?ans1}"
        },
        "original": {
            "question": "Who is the main building contractor for Krak des Chevaliers",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q177549 wdt:P193 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Krak des Chevaliers main building contractor ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Krak des Chevaliers",
            "choppedEntity": "Q177549"
        }
    },
    {
        "chopped": {
            "question": "At what elevation above sea level is the highest peak of Kebnekaise, in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P610 ?s . ?s ps:P610 wd:Q214011 . ?s pq:P2044 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown highest point ?s . ?s highest point Kebnekaise . ?s elevation above sea level ?ans1}"
        },
        "original": {
            "question": "At what elevation above sea level is the highest peak of Kebnekaise, in Sweden",
            "query": "SELECT ?value WHERE { wd:Q34 p:P610 ?s . ?s ps:P610 wd:Q214011 . ?s pq:P2044 ?value}",
            "NLQuery": "SELECT ?value WHERE { Sweden highest point ?s . ?s highest point Kebnekaise . ?s elevation above sea level ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Sweden",
            "choppedEntity": "Q34"
        }
    },
    {
        "chopped": {
            "question": "How high above sea level is the tallest peak of Kebnekaise in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P610 ?s . ?s ps:P610 wd:Q214011 . ?s pq:P2044 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown highest point ?s . ?s highest point Kebnekaise . ?s elevation above sea level ?ans1}"
        },
        "original": {
            "question": "How high above sea level is the tallest peak of Kebnekaise in Sweden",
            "query": "SELECT ?value WHERE { wd:Q34 p:P610 ?s . ?s ps:P610 wd:Q214011 . ?s pq:P2044 ?value}",
            "NLQuery": "SELECT ?value WHERE { Sweden highest point ?s . ?s highest point Kebnekaise . ?s elevation above sea level ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Sweden",
            "choppedEntity": "Q34"
        }
    },
    {
        "chopped": {
            "question": "Who is the co-founder who works for ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P108 ?X . ?X wdt:P112 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown employer ?X . ?X founded by ?ans1}"
        },
        "original": {
            "question": "Who is the co-founder who works for Rosita Boisseau",
            "query": "SELECT ?answer WHERE { wd:Q3442697 wdt:P108 ?X . ?X wdt:P112 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Rosita Boisseau employer ?X . ?X founded by ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Rosita Boisseau",
            "choppedEntity": "Q3442697"
        }
    },
    {
        "chopped": {
            "question": "Who is the co-founder that works for ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P108 ?X . ?X wdt:P112 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown employer ?X . ?X founded by ?ans1}"
        },
        "original": {
            "question": "Who is the co-founder that works for Rosita Boisseau",
            "query": "SELECT ?answer WHERE { wd:Q3442697 wdt:P108 ?X . ?X wdt:P112 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Rosita Boisseau employer ?X . ?X founded by ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Rosita Boisseau",
            "choppedEntity": "Q3442697"
        }
    },
    {
        "chopped": {
            "question": "What are the work timings of British museum on ",
            "query": "SELECT ?ans1 ?ans2 WHERE { wd:Q6373 p:P3025 ?s . ?s ps:P3025 ?unknown . ?s pq:P3026 ?ans1 . ?s pq:P3028 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { British Museum open days ?s . ?s open days ?unknown . ?s closed on ?ans1 . ?s open period to ?ans2 }"
        },
        "original": {
            "question": "What are the work timings of British museum on all weekdays",
            "query": "SELECT ?value1 ?value2 WHERE { wd:Q6373 p:P3025 ?s . ?s ps:P3025 wd:Q26214163 . ?s pq:P3026 ?value1 . ?s pq:P3028 ?value2 }",
            "NLQuery": "SELECT ?value1 ?value2 WHERE { British Museum open days ?s . ?s open days all weekdays . ?s closed on ?value1 . ?s open period to ?value2 }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "all weekdays",
            "choppedEntity": "Q26214163"
        }
    },
    {
        "chopped": {
            "question": "who  is the award received of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P166 ?obj . ?obj wdt:P31 wd:Q618779 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown award received ?obj . ?obj instance of award } "
        },
        "original": {
            "question": "who  is the award received of J. R. R. Tolkien",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q892 wdt:P166 ?obj . ?obj wdt:P31 wd:Q618779 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { J. R. R. Tolkien award received ?obj . ?obj instance of award } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "J. R. R. Tolkien",
            "choppedEntity": "Q892"
        }
    },
    {
        "chopped": {
            "question": "who is the grant gotten of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P166 ?obj . ?obj wdt:P31 wd:Q618779 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown award received ?obj . ?obj instance of award } "
        },
        "original": {
            "question": "who is the grant gotten of J. R. R. Tolkien",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q892 wdt:P166 ?obj . ?obj wdt:P31 wd:Q618779 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { J. R. R. Tolkien award received ?obj . ?obj instance of award } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "J. R. R. Tolkien",
            "choppedEntity": "Q892"
        }
    },
    {
        "chopped": {
            "question": "Was Monica Bellucci the partner of ",
            "query": "ASK WHERE { wd:Q81819 wdt:P451 ?unknown }",
            "NLQuery": "ASK WHERE { Monica Bellucci unmarried partner ?unknown }"
        },
        "original": {
            "question": "Was Monica Bellucci the partner of Vincent Cassel",
            "query": "ASK WHERE { wd:Q81819 wdt:P451 wd:Q193504 }",
            "NLQuery": "ASK WHERE { Monica Bellucci unmarried partner Vincent Cassel }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Vincent Cassel",
            "choppedEntity": "Q193504"
        }
    },
    {
        "chopped": {
            "question": "What was Spike Jonze nominated for in the 72nd ",
            "query": "SELECT ?ans1 WHERE { wd:Q259913 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P805 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Spike Jonze nominated for ?s . ?s nominated for ?ans1 . ?s statement is subject of ?unknown }"
        },
        "original": {
            "question": "What was Spike Jonze nominated for in the 72nd Academy Awards",
            "query": "SELECT ?obj WHERE { wd:Q259913 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q429319 }",
            "NLQuery": "SELECT ?obj WHERE { Spike Jonze nominated for ?s . ?s nominated for ?obj . ?s statement is subject of 72nd Academy Awards }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Academy Awards",
            "choppedEntity": "Q429319"
        }
    },
    {
        "chopped": {
            "question": "What has a surface that's 8.18 and is not the same as ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1889 ?ans1 . ?ans1 wdt:P2046 ?x FILTER(contains(?x,'8.18'))}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown different from ?ans1 . ?ans1 area ?x FILTER(contains(?x,'8.18'))}"
        },
        "original": {
            "question": "What has a surface that's 8.18 and is not the same as Cereberus",
            "query": "SELECT ?answer WHERE { wd:Q83496 wdt:P1889 ?answer . ?answer wdt:P2046 ?x FILTER(contains(?x,'8.18'))}",
            "NLQuery": "SELECT ?answer WHERE { Cerberus different from ?answer . ?answer area ?x FILTER(contains(?x,'8.18'))}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Cereberus",
            "choppedEntity": "Q83496"
        }
    },
    {
        "chopped": {
            "question": "At what time Bergamo ceased being part of ",
            "query": "SELECT ?ans1 WHERE { wd:Q628 p:P17 ?s . ?s ps:P17 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Bergamo country ?s . ?s country ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "At what time Bergamo ceased being part of Italian Republic",
            "query": "SELECT ?value WHERE { wd:Q628 p:P17 ?s . ?s ps:P17 wd:Q723118 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Bergamo country ?s . ?s country Italian Republic . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Italian Republic",
            "choppedEntity": "Q723118"
        }
    },
    {
        "chopped": {
            "question": "What number is replaced by ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P1365 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown replaces ?obj }"
        },
        "original": {
            "question": "What number is replaced by Yilan County",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q237258 wdt:P1365 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Yilan County replaces ?obj }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Yilan County",
            "choppedEntity": "Q237258"
        }
    },
    {
        "chopped": {
            "question": "who was the mausoleum for the  commemorates of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P547 ?unknown . ?sbj wdt:P31 wd:Q162875 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj commemorates ?unknown . ?sbj instance of mausoleum } "
        },
        "original": {
            "question": "who was the mausoleum for the  commemorates of Muhammad Ali Jinnah",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P547 wd:Q160554 . ?sbj wdt:P31 wd:Q162875 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj commemorates Mohammad Ali Jinnah . ?sbj instance of mausoleum } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Muhammad Ali Jinnah",
            "choppedEntity": "Q160554"
        }
    },
    {
        "chopped": {
            "question": "who was the catacomb for the commemorates of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P547 ?unknown . ?sbj wdt:P31 wd:Q162875 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj commemorates ?unknown . ?sbj instance of mausoleum } "
        },
        "original": {
            "question": "who was the catacomb for the commemorates of Muhammad Ali Jinnah",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P547 wd:Q160554 . ?sbj wdt:P31 wd:Q162875 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj commemorates Mohammad Ali Jinnah . ?sbj instance of mausoleum } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Muhammad Ali Jinnah",
            "choppedEntity": "Q160554"
        }
    },
    {
        "chopped": {
            "question": "Who replaced Mauricio Macro as Head of ",
            "query": "SELECT ?ans1 WHERE { wd:Q561837 p:P39 ?s . ?s ps:P39 ?unknown . ?s pq:P1365 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Mauricio Macri position held ?s . ?s position held ?unknown . ?s replaces ?ans1}"
        },
        "original": {
            "question": "Who replaced Mauricio Macro as Head of Government of the Autonomous City of Buenos Aires",
            "query": "SELECT ?value WHERE { wd:Q561837 p:P39 ?s . ?s ps:P39 wd:Q21693118 . ?s pq:P1365 ?value}",
            "NLQuery": "SELECT ?value WHERE { Mauricio Macri position held ?s . ?s position held Head of Government of the Autonomous City of Buenos Aires . ?s replaces ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Government of the Autonomous City of Buenos Aires",
            "choppedEntity": "Q21693118"
        }
    },
    {
        "chopped": {
            "question": "Who took over the Head of Government of theA utonomous City of Buenos Aires after ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P39 ?s . ?s ps:P39 wd:Q21693118 . ?s pq:P1365 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown position held ?s . ?s position held Head of Government of the Autonomous City of Buenos Aires . ?s replaces ?ans1}"
        },
        "original": {
            "question": "Who took over the Head of Government of theA utonomous City of Buenos Aires after Mauricio Macro",
            "query": "SELECT ?value WHERE { wd:Q561837 p:P39 ?s . ?s ps:P39 wd:Q21693118 . ?s pq:P1365 ?value}",
            "NLQuery": "SELECT ?value WHERE { Mauricio Macri position held ?s . ?s position held Head of Government of the Autonomous City of Buenos Aires . ?s replaces ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Mauricio Macro",
            "choppedEntity": "Q561837"
        }
    },
    {
        "chopped": {
            "question": "In what year did Michael Crichton end his relationship with ",
            "query": "SELECT ?ans1 WHERE { wd:Q172140 p:P26 ?s . ?s ps:P26 ?unknown . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Michael Crichton spouse ?s . ?s spouse ?unknown . ?s end time ?ans1}"
        },
        "original": {
            "question": "In what year did Michael Crichton end his relationship with Anne-Marie Martin",
            "query": "SELECT ?value WHERE { wd:Q172140 p:P26 ?s . ?s ps:P26 wd:Q564851 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { Michael Crichton spouse ?s . ?s spouse Anne-Marie Martin . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Anne-Marie Martin",
            "choppedEntity": "Q564851"
        }
    },
    {
        "chopped": {
            "question": "Which spacecraft was flown by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1029 ?unknown . ?sbj wdt:P31 wd:Q831109 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj crew member ?unknown . ?sbj instance of Gemini spacecraft } "
        },
        "original": {
            "question": "Which spacecraft was flown by Gordon Cooper",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1029 wd:Q312833 . ?sbj wdt:P31 wd:Q831109 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj crew member Gordon Cooper . ?sbj instance of Gemini spacecraft } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Gordon Cooper",
            "choppedEntity": "Q312833"
        }
    },
    {
        "chopped": {
            "question": "Were Six Californias part of ",
            "query": "ASK WHERE { ?unknown wdt:P710 wd:Q16931712 }",
            "NLQuery": "ASK WHERE { ?unknown participant Six Californias }"
        },
        "original": {
            "question": "Were Six Californias part of the American Revolutionary War",
            "query": "ASK WHERE { wd:Q40949 wdt:P710 wd:Q16931712 }",
            "NLQuery": "ASK WHERE { American Revolutionary War participant Six Californias }"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the American Revolutionary War",
            "choppedEntity": "Q40949"
        }
    },
    {
        "chopped": {
            "question": "Did the American Revolutionary War have 6 ",
            "query": "ASK WHERE { wd:Q40949 wdt:P710 ?unknown }",
            "NLQuery": "ASK WHERE { American Revolutionary War participant ?unknown }"
        },
        "original": {
            "question": "Did the American Revolutionary War have 6 Californians",
            "query": "ASK WHERE { wd:Q40949 wdt:P710 wd:Q16931712 }",
            "NLQuery": "ASK WHERE { American Revolutionary War participant Six Californias }"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Californians",
            "choppedEntity": "Q16931712"
        }
    },
    {
        "chopped": {
            "question": "Who died and wrote ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P86 ?X . ?X wdt:P509 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown composer ?X . ?X cause of death ?ans1}"
        },
        "original": {
            "question": "Who died and wrote The Planets",
            "query": "SELECT ?answer WHERE { wd:Q303508 wdt:P86 ?X . ?X wdt:P509 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Planets composer ?X . ?X cause of death ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Planets",
            "choppedEntity": "Q303508"
        }
    },
    {
        "chopped": {
            "question": "What was the name of the deceased writer of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P86 ?X . ?X wdt:P509 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown composer ?X . ?X cause of death ?ans1}"
        },
        "original": {
            "question": "What was the name of the deceased writer of The Planets",
            "query": "SELECT ?answer WHERE { wd:Q303508 wdt:P86 ?X . ?X wdt:P509 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { The Planets composer ?X . ?X cause of death ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Planets",
            "choppedEntity": "Q303508"
        }
    },
    {
        "chopped": {
            "question": "How many executive producers are there on ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P1431 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown executive producer ?obj }"
        },
        "original": {
            "question": "How many executive producers are there on The West Wing",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q3577037 wdt:P1431 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { The West Wing executive producer ?obj }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The West Wing",
            "choppedEntity": "Q3577037"
        }
    },
    {
        "chopped": {
            "question": "Which is the century breaks for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4912 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown century breaks ?ans1}"
        },
        "original": {
            "question": "Which is the century breaks for Joe Davis",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q357473 wdt:P4912 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Joe Davis century breaks ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Joe Davis",
            "choppedEntity": "Q357473"
        }
    },
    {
        "chopped": {
            "question": "Was the Merlin engine and liquid propellant rocket engine produced by ",
            "query": "ASK WHERE { ?unknown wdt:P1056 wd:Q76148 . ?unknown wdt:P1056 wd:Q860308 }",
            "NLQuery": "ASK WHERE { ?unknown product or material produced Merlin . ?unknown product or material produced liquid-propellant rocket }"
        },
        "original": {
            "question": "Was the Merlin engine and liquid propellant rocket engine produced by SpaceX",
            "query": "ASK WHERE { wd:Q193701 wdt:P1056 wd:Q76148 . wd:Q193701 wdt:P1056 wd:Q860308 }",
            "NLQuery": "ASK WHERE { SpaceX product or material produced Merlin . SpaceX product or material produced liquid-propellant rocket }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "SpaceX",
            "choppedEntity": "Q193701"
        }
    },
    {
        "chopped": {
            "question": "Which ethnic groups participated in ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P710 ?obj . ?obj wdt:P31 wd:Q41710 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown participant ?obj . ?obj instance of ethnic group } "
        },
        "original": {
            "question": "Which ethnic groups participated in the American Revolutionary War",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q40949 wdt:P710 ?obj . ?obj wdt:P31 wd:Q41710 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { American Revolutionary War participant ?obj . ?obj instance of ethnic group } "
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the American Revolutionary War",
            "choppedEntity": "Q40949"
        }
    },
    {
        "chopped": {
            "question": "How many depictions are there of ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P180 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub depicts ?unknown }"
        },
        "original": {
            "question": "How many depictions are there of the English Channel",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P180 wd:Q34640 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub depicts English Channel }"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the English Channel",
            "choppedEntity": "Q34640"
        }
    },
    {
        "chopped": {
            "question": "Is 0.0 the diameter of the ",
            "query": "ASK WHERE { ?unknown wdt:P2386 ?obj FILTER(?obj = 0.0) } ",
            "NLQuery": "ASK WHERE { ?unknown diameter ?obj FILTER(?obj = 0.0) } "
        },
        "original": {
            "question": "Is 0.0 the diameter of the Aaru",
            "query": "ASK WHERE { wd:Q114733 wdt:P2386 ?obj FILTER(?obj = 0.0) } ",
            "NLQuery": "ASK WHERE { Aaru diameter ?obj FILTER(?obj = 0.0) } "
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Aaru",
            "choppedEntity": "Q114733"
        }
    },
    {
        "chopped": {
            "question": "What gun has the smallest caliber in ",
            "query": "SELECT ?ans1 WHERE { ?ans1 wdt:P31 wd:Q751705 . ?ans1 wdt:P4403 ?obj . ?ans1 wdt:P495 ?unknown} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ans1 WHERE { ?ans1 instance of autocannon . ?ans1 caliber ?obj . ?ans1 country of origin ?unknown} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "original": {
            "question": "What gun has the smallest caliber in the Soviet Union",
            "query": "SELECT ?ent WHERE { ?ent wdt:P31 wd:Q751705 . ?ent wdt:P4403 ?obj . ?ent wdt:P495 wd:Q15180} ORDER BY ASC(?obj)LIMIT 5 ",
            "NLQuery": "SELECT ?ent WHERE { ?ent instance of autocannon . ?ent caliber ?obj . ?ent country of origin Soviet Union} ORDER BY ASC(?obj)LIMIT 5 "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "the Soviet Union",
            "choppedEntity": "Q15180"
        }
    },
    {
        "chopped": {
            "question": "when did the human development index increased to 0.477 in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1081 ?s . ?s ps:P1081 ?x FILTER(contains(?x,'0.477')) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown Human Development Index ?s . ?s Human Development Index ?x FILTER(contains(?x,'0.477')) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "when did the human development index increased to 0.477 in Benin",
            "query": "SELECT ?value WHERE { wd:Q962 p:P1081 ?s . ?s ps:P1081 ?x FILTER(contains(?x,'0.477')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Benin Human Development Index ?s . ?s Human Development Index ?x FILTER(contains(?x,'0.477')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Benin",
            "choppedEntity": "Q962"
        }
    },
    {
        "chopped": {
            "question": "how many signatures are held by ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P1891 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub signatory ?unknown }"
        },
        "original": {
            "question": "how many signatures are held by bill clinton",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P1891 wd:Q1124 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub signatory Bill Clinton }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "bill clinton",
            "choppedEntity": "Q1124"
        }
    },
    {
        "chopped": {
            "question": "what items are used for parent company of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P749 ?X . ?X wdt:P121 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown parent organization ?X . ?X item operated ?ans1}"
        },
        "original": {
            "question": "what items are used for parent company of SAT Airlines",
            "query": "SELECT ?answer WHERE { wd:Q1332947 wdt:P749 ?X . ?X wdt:P121 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { SAT Airlines parent organization ?X . ?X item operated ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "SAT Airlines",
            "choppedEntity": "Q1332947"
        }
    },
    {
        "chopped": {
            "question": "Did Gothic art follow ",
            "query": "ASK WHERE { ?unknown wdt:P155 wd:Q46825 }",
            "NLQuery": "ASK WHERE { ?unknown follows Gothic art }"
        },
        "original": {
            "question": "Did Gothic art follow the Middle Ages",
            "query": "ASK WHERE { wd:Q212976 wdt:P155 wd:Q46825 }",
            "NLQuery": "ASK WHERE { late Middle Ages follows Gothic art }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "the Middle Ages",
            "choppedEntity": "Q212976"
        }
    },
    {
        "chopped": {
            "question": "When did Luis Martinez de Galinsoga y de la Serna end his time as manager of ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1037 ?s . ?s ps:P1037 wd:Q11689899 . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown director / manager ?s . ?s director / manager Luis Mart\u00ednez de Galinsoga y de la Serna . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did Luis Martinez de Galinsoga y de la Serna end his time as manager of La Vanguardia",
            "query": "SELECT ?value WHERE { wd:Q511533 p:P1037 ?s . ?s ps:P1037 wd:Q11689899 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { La Vanguardia director / manager ?s . ?s director / manager Luis Mart\u00ednez de Galinsoga y de la Serna . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "La Vanguardia",
            "choppedEntity": "Q511533"
        }
    },
    {
        "chopped": {
            "question": "When did Luis quit his manager job at ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1037 ?s . ?s ps:P1037 wd:Q11689899 . ?s pq:P582 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown director / manager ?s . ?s director / manager Luis Mart\u00ednez de Galinsoga y de la Serna . ?s end time ?ans1}"
        },
        "original": {
            "question": "When did Luis quit his manager job at La Vanguardia",
            "query": "SELECT ?value WHERE { wd:Q511533 p:P1037 ?s . ?s ps:P1037 wd:Q11689899 . ?s pq:P582 ?value}",
            "NLQuery": "SELECT ?value WHERE { La Vanguardia director / manager ?s . ?s director / manager Luis Mart\u00ednez de Galinsoga y de la Serna . ?s end time ?value}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "La Vanguardia",
            "choppedEntity": "Q511533"
        }
    },
    {
        "chopped": {
            "question": "Which are the mandates for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4424 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown mandates ?ans1}"
        },
        "original": {
            "question": "Which are the mandates for Universal Declaration of Human Rights",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q7813 wdt:P4424 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Universal Declaration of Human Rights mandates ?answer}"
        },
        "meta": {
            "entityTagNER": "LAW",
            "choppedText": "Universal Declaration of Human Rights",
            "choppedEntity": "Q7813"
        }
    },
    {
        "chopped": {
            "question": "Which is the consortium for the member of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P463 ?obj . ?obj wdt:P31 wd:Q194166 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown member of ?obj . ?obj instance of consortium } "
        },
        "original": {
            "question": "Which is the consortium for the member of University of Florida",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q501758 wdt:P463 ?obj . ?obj wdt:P31 wd:Q194166 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { University of Florida member of ?obj . ?obj instance of consortium } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "University of Florida",
            "choppedEntity": "Q501758"
        }
    },
    {
        "chopped": {
            "question": "What is the title of the weapon of Trishula, the marriage accomplice of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P26 ?ans1 . ?ans1 wdt:P520 wd:Q3539698}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown spouse ?ans1 . ?ans1 armament Trishula}"
        },
        "original": {
            "question": "What is the title of the weapon of Trishula, the marriage accomplice of Kali",
            "query": "SELECT ?answer WHERE { wd:Q132127 wdt:P26 ?answer . ?answer wdt:P520 wd:Q3539698}",
            "NLQuery": "SELECT ?answer WHERE { Kali spouse ?answer . ?answer armament Trishula}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Kali",
            "choppedEntity": "Q132127"
        }
    },
    {
        "chopped": {
            "question": "Which are the lake inflows of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P200 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown inflows ?ans1}"
        },
        "original": {
            "question": "Which are the lake inflows of Aral Sea",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q35883 wdt:P200 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Aral Sea inflows ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Aral Sea",
            "choppedEntity": "Q35883"
        }
    },
    {
        "chopped": {
            "question": "Who is the curator of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1640 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown curator ?ans1}"
        },
        "original": {
            "question": "Who is the curator of S\u00e3o Paulo Museum of Art",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q82941 wdt:P1640 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { S\u00e3o Paulo Museum of Art curator ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "S\u00e3o Paulo Museum of Art",
            "choppedEntity": "Q82941"
        }
    },
    {
        "chopped": {
            "question": "For what was Douglas Trumbull in nomination for his role in ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P2453 wd:Q599657 }",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown nominated for ?s . ?s nominated for ?ans1 . ?s nominee Douglas Trumbull }"
        },
        "original": {
            "question": "For what was Douglas Trumbull in nomination for his role in Blade Runner",
            "query": "SELECT ?obj WHERE { wd:Q184843 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P2453 wd:Q599657 }",
            "NLQuery": "SELECT ?obj WHERE { Blade Runner nominated for ?s . ?s nominated for ?obj . ?s nominee Douglas Trumbull }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Blade Runner",
            "choppedEntity": "Q184843"
        }
    },
    {
        "chopped": {
            "question": "Who are the producer and screenwriter of ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P162 ?ans1 . ?unknown wdt:P58 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown producer ?ans1 . ?unknown screenwriter ?ans2 }"
        },
        "original": {
            "question": "Who are the producer and screenwriter of Taxi Driver",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q47221 wdt:P162 ?ans_1 . wd:Q47221 wdt:P58 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { Taxi Driver producer ?ans_1 . Taxi Driver screenwriter ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Taxi Driver",
            "choppedEntity": "Q47221"
        }
    },
    {
        "chopped": {
            "question": "Who is character of portrayed by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1299 ?X . ?X wdt:P674 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown depicted by ?X . ?X characters ?ans1}"
        },
        "original": {
            "question": "Who is character of portrayed by Sythians",
            "query": "SELECT ?answer WHERE { wd:Q131802 wdt:P1299 ?X . ?X wdt:P674 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Scythians depicted by ?X . ?X characters ?answer}"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Sythians",
            "choppedEntity": "Q131802"
        }
    },
    {
        "chopped": {
            "question": "Who is character of depicted by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1299 ?X . ?X wdt:P674 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown depicted by ?X . ?X characters ?ans1}"
        },
        "original": {
            "question": "Who is character of depicted by Sythians",
            "query": "SELECT ?answer WHERE { wd:Q131802 wdt:P1299 ?X . ?X wdt:P674 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Scythians depicted by ?X . ?X characters ?answer}"
        },
        "meta": {
            "entityTagNER": "NORP",
            "choppedText": "Sythians",
            "choppedEntity": "Q131802"
        }
    },
    {
        "chopped": {
            "question": "Which parent of Wilhelm Ostwald is a member of ",
            "query": "SELECT ?ans1 WHERE { wd:Q12658 wdt:P40 ?ans1 . ?ans1 wdt:P463 ?unknown}",
            "NLQuery": "SELECT ?ans1 WHERE { Wilhelm Ostwald child ?ans1 . ?ans1 member of ?unknown}"
        },
        "original": {
            "question": "Which parent of Wilhelm Ostwald is a member of the German Academy of Sciences Leopoldina",
            "query": "SELECT ?answer WHERE { wd:Q12658 wdt:P40 ?answer . ?answer wdt:P463 wd:Q543804}",
            "NLQuery": "SELECT ?answer WHERE { Wilhelm Ostwald child ?answer . ?answer member of German Academy of Sciences Leopoldina}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the German Academy of Sciences Leopoldina",
            "choppedEntity": "Q543804"
        }
    },
    {
        "chopped": {
            "question": "What is the name of the film script for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3816 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown film script ?ans1}"
        },
        "original": {
            "question": "What is the name of the film script for Mr. Smith Goes to Washington",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q866120 wdt:P3816 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Mr. Smith Goes to Washington film script ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Mr. Smith Goes to Washington",
            "choppedEntity": "Q866120"
        }
    },
    {
        "chopped": {
            "question": "Who is a member of the same military branch as ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P463 ?s . ?s ps:P463 ?ans2 . ?s pq:P241 ?ans1 . }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown member of ?s . ?s member of ?ans2 . ?s military branch ?ans1 . }"
        },
        "original": {
            "question": "Who is a member of the same military branch as George Lincoln Rockwell",
            "query": "SELECT ?value1 ?obj WHERE { wd:Q440145 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P241 ?value1 . }",
            "NLQuery": "SELECT ?value1 ?obj WHERE { George Lincoln Rockwell member of ?s . ?s member of ?obj . ?s military branch ?value1 . }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "George Lincoln Rockwell",
            "choppedEntity": "Q440145"
        }
    },
    {
        "chopped": {
            "question": "Who may be a part of the same military department as ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown p:P463 ?s . ?s ps:P463 ?ans2 . ?s pq:P241 ?ans1 . }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown member of ?s . ?s member of ?ans2 . ?s military branch ?ans1 . }"
        },
        "original": {
            "question": "Who may be a part of the same military department as George Lincoln Rockwell",
            "query": "SELECT ?value1 ?obj WHERE { wd:Q440145 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P241 ?value1 . }",
            "NLQuery": "SELECT ?value1 ?obj WHERE { George Lincoln Rockwell member of ?s . ?s member of ?obj . ?s military branch ?value1 . }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "George Lincoln Rockwell",
            "choppedEntity": "Q440145"
        }
    },
    {
        "chopped": {
            "question": "What was one of the symphonies written by ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P86 ?unknown . ?sbj wdt:P31 wd:Q9734 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj composer ?unknown . ?sbj instance of symphony } "
        },
        "original": {
            "question": "What was one of the symphonies written by Pyotr Ilyich Tchaikovsky",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P86 wd:Q7315 . ?sbj wdt:P31 wd:Q9734 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj composer Pyotr Ilyich Tchaikovsky . ?sbj instance of symphony } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Pyotr Ilyich Tchaikovsky",
            "choppedEntity": "Q7315"
        }
    },
    {
        "chopped": {
            "question": "What is the volume of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2234 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown volume as quantity ?ans1}"
        },
        "original": {
            "question": "What is the volume of the Dead Sea",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q23883 wdt:P2234 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Dead Sea volume as quantity ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Dead Sea",
            "choppedEntity": "Q23883"
        }
    },
    {
        "chopped": {
            "question": "How many publishers are members of ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P123 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub publisher ?unknown }"
        },
        "original": {
            "question": "How many publishers are members of the United Nations",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P123 wd:Q1065 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub publisher United Nations }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the United Nations",
            "choppedEntity": "Q1065"
        }
    },
    {
        "chopped": {
            "question": "Which is the number of publishers that are members of ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P123 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub publisher ?unknown }"
        },
        "original": {
            "question": "Which is the number of publishers that are members of the United Nations",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P123 wd:Q1065 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub publisher United Nations }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the United Nations",
            "choppedEntity": "Q1065"
        }
    },
    {
        "chopped": {
            "question": "What are the FIPS 10-4 (countries and regions) of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P901 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown FIPS 10-4 (countries and regions) ?ans1}"
        },
        "original": {
            "question": "What are the FIPS 10-4 (countries and regions) of the Aosta Valley",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1222 wdt:P901 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Aosta Valley FIPS 10-4 (countries and regions) ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "the Aosta Valley",
            "choppedEntity": "Q1222"
        }
    },
    {
        "chopped": {
            "question": "What is the Quora topic ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3417 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Quora topic ID ?ans1}"
        },
        "original": {
            "question": "What is the Quora topic ID for Percy Bysshe Shelley",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q93343 wdt:P3417 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Percy Bysshe Shelley Quora topic ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Percy Bysshe Shelley",
            "choppedEntity": "Q93343"
        }
    },
    {
        "chopped": {
            "question": "Who was awarded Primetime Emmy Award for Outstanding Comedy Series together with ",
            "query": "SELECT ?ans1 WHERE { ?unknown p:P166 ?s . ?s ps:P166 wd:Q2110156 . ?s pq:P1706 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown award received ?s . ?s award received Primetime Emmy Award for Outstanding Comedy Series . ?s together with ?ans1}"
        },
        "original": {
            "question": "Who was awarded Primetime Emmy Award for Outstanding Comedy Series together with Larry David",
            "query": "SELECT ?value WHERE { wd:Q23728 p:P166 ?s . ?s ps:P166 wd:Q2110156 . ?s pq:P1706 ?value}",
            "NLQuery": "SELECT ?value WHERE { Larry David award received ?s . ?s award received Primetime Emmy Award for Outstanding Comedy Series . ?s together with ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Larry David",
            "choppedEntity": "Q23728"
        }
    },
    {
        "chopped": {
            "question": "Who lives in ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P17 ?X . ?X wdt:P463 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown country ?X . ?X member of ?ans1}"
        },
        "original": {
            "question": "Who lives in Knoxville",
            "query": "SELECT ?answer WHERE { wd:Q185582 wdt:P17 ?X . ?X wdt:P463 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Knoxville country ?X . ?X member of ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Knoxville",
            "choppedEntity": "Q185582"
        }
    },
    {
        "chopped": {
            "question": "What area is managed by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P137 ?X . ?X wdt:P2650 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown operator ?X . ?X interested in ?ans1}"
        },
        "original": {
            "question": "What area is managed by Buckenham Marshes RSPB reserve",
            "query": "SELECT ?answer WHERE { wd:Q4983012 wdt:P137 ?X . ?X wdt:P2650 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Buckenham Marshes RSPB reserve operator ?X . ?X interested in ?answer}"
        },
        "meta": {
            "entityTagNER": "FAC",
            "choppedText": "Buckenham Marshes RSPB reserve",
            "choppedEntity": "Q4983012"
        }
    },
    {
        "chopped": {
            "question": "What area is the RSPB reserve of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P137 ?X . ?X wdt:P2650 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown operator ?X . ?X interested in ?ans1}"
        },
        "original": {
            "question": "What area is the RSPB reserve of Buckenham Marshes",
            "query": "SELECT ?answer WHERE { wd:Q4983012 wdt:P137 ?X . ?X wdt:P2650 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Buckenham Marshes RSPB reserve operator ?X . ?X interested in ?answer}"
        },
        "meta": {
            "entityTagNER": "LOC",
            "choppedText": "Buckenham Marshes",
            "choppedEntity": "Q4983012"
        }
    },
    {
        "chopped": {
            "question": "Whom is participating in ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P710 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown participant ?ans1}"
        },
        "original": {
            "question": "Whom is participating in Battle of Breitenfeld 1631",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q205379 wdt:P710 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Battle of Breitenfeld participant ?answer}"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "Battle of Breitenfeld 1631",
            "choppedEntity": "Q205379"
        }
    },
    {
        "chopped": {
            "question": "What position did Honsi Mubarak take over from ",
            "query": "SELECT ?ans1 WHERE { wd:Q34105 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1365 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Hosni Mubarak position held ?s . ?s position held ?ans1 . ?s replaces ?unknown }"
        },
        "original": {
            "question": "What position did Honsi Mubarak take over from Moussa Traore",
            "query": "SELECT ?obj WHERE { wd:Q34105 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q313242 }",
            "NLQuery": "SELECT ?obj WHERE { Hosni Mubarak position held ?s . ?s position held ?obj . ?s replaces Moussa Traor\u00e9 }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Moussa Traore",
            "choppedEntity": "Q313242"
        }
    },
    {
        "chopped": {
            "question": "Which is the constitutional republic for the location of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P276 ?obj . ?obj wdt:P31 wd:Q1520223 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown location ?obj . ?obj instance of constitutional republic } "
        },
        "original": {
            "question": "Which is the constitutional republic for the location of American Revolutionary War",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q40949 wdt:P276 ?obj . ?obj wdt:P31 wd:Q1520223 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { American Revolutionary War location ?obj . ?obj instance of constitutional republic } "
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "American Revolutionary War",
            "choppedEntity": "Q40949"
        }
    },
    {
        "chopped": {
            "question": "What is Movement settlement ID for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P5335 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Or Movement settlement ID ?ans1}"
        },
        "original": {
            "question": "What is Movement settlement ID for Eilat",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q134762 wdt:P5335 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Eilat Or Movement settlement ID ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Eilat",
            "choppedEntity": "Q134762"
        }
    },
    {
        "chopped": {
            "question": "what is in the Encyclopedia of Surfing ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3338 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Encyclopedia of Surfing ID ?ans1}"
        },
        "original": {
            "question": "what is in the Encyclopedia of Surfing ID of Kelly Slater",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q364406 wdt:P3338 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Kelly Slater Encyclopedia of Surfing ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Kelly Slater",
            "choppedEntity": "Q364406"
        }
    },
    {
        "chopped": {
            "question": "What is the reward program of ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P4446 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub reward program ?unknown }"
        },
        "original": {
            "question": "What is the reward program of KLM",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P4446 wd:Q181912 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub reward program KLM }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "KLM",
            "choppedEntity": "Q181912"
        }
    },
    {
        "chopped": {
            "question": "Which is the vessel of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?ans1 wdt:P1876 ?unknown}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?ans1 vehicle ?unknown}"
        },
        "original": {
            "question": "Which is the vessel of Soyuz",
            "query": "SELECT DISTINCT ?answer WHERE { ?answer wdt:P1876 wd:Q579421}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { ?answer vehicle Soyuz}"
        },
        "meta": {
            "entityTagNER": "PRODUCT",
            "choppedText": "Soyuz",
            "choppedEntity": "Q579421"
        }
    },
    {
        "chopped": {
            "question": "What is the birth place of twin cities of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P19 ?X . ?X wdt:P190 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of birth ?X . ?X place of birth0 ?ans1}"
        },
        "original": {
            "question": "What is the birth place of twin cities of Domingos Saraiva",
            "query": "SELECT ?answer WHERE { wd:Q10268115 wdt:P19 ?X . ?X wdt:P190 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Domingos Saraiva place of birth ?X . ?X place of birth0 ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Domingos Saraiva",
            "choppedEntity": "Q10268115"
        }
    },
    {
        "chopped": {
            "question": "What is the birth put of twin cities of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P19 ?X . ?X wdt:P190 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of birth ?X . ?X place of birth0 ?ans1}"
        },
        "original": {
            "question": "What is the birth put of twin cities of Domingos Saraiva",
            "query": "SELECT ?answer WHERE { wd:Q10268115 wdt:P19 ?X . ?X wdt:P190 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Domingos Saraiva place of birth ?X . ?X place of birth0 ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Domingos Saraiva",
            "choppedEntity": "Q10268115"
        }
    },
    {
        "chopped": {
            "question": "What is ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P530 ?unknown . ?sbj wdt:P31 wd:Q1335818 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj diplomatic relation ?unknown . ?sbj instance of supranational union } "
        },
        "original": {
            "question": "What is ASEAN",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P530 wd:Q7768 . ?sbj wdt:P31 wd:Q1335818 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj diplomatic relation ASEAN . ?sbj instance of supranational union } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "ASEAN",
            "choppedEntity": "Q7768"
        }
    },
    {
        "chopped": {
            "question": "Which is the Kinopolis film ID of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P2970 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Kinopolis film ID ?ans1}"
        },
        "original": {
            "question": "Which is the Kinopolis film ID of Forrest Gump",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q134773 wdt:P2970 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Forrest Gump Kinopolis film ID ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Forrest Gump",
            "choppedEntity": "Q134773"
        }
    },
    {
        "chopped": {
            "question": "Did Alanis Morissette get nominated for the MTV Video Music Award and the Juno Award for ",
            "query": "ASK WHERE { wd:Q130742 wdt:P1411 wd:Q223703 . wd:Q130742 wdt:P1411 ?unknown }",
            "NLQuery": "ASK WHERE { Alanis Morissette nominated for MTV Video Music Award . Alanis Morissette nominated for ?unknown }"
        },
        "original": {
            "question": "Did Alanis Morissette get nominated for the MTV Video Music Award and the Juno Award for Entertainer of the Year",
            "query": "ASK WHERE { wd:Q130742 wdt:P1411 wd:Q223703 . wd:Q130742 wdt:P1411 wd:Q6314074 }",
            "NLQuery": "ASK WHERE { Alanis Morissette nominated for MTV Video Music Award . Alanis Morissette nominated for Juno Award for Entertainer of the Year }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Entertainer of the Year",
            "choppedEntity": "Q6314074"
        }
    },
    {
        "chopped": {
            "question": "Was Alanis Morissette among those entertainers nominated for the MTV Video Music Award and the Juno Award for ",
            "query": "ASK WHERE { wd:Q130742 wdt:P1411 wd:Q223703 . wd:Q130742 wdt:P1411 ?unknown }",
            "NLQuery": "ASK WHERE { Alanis Morissette nominated for MTV Video Music Award . Alanis Morissette nominated for ?unknown }"
        },
        "original": {
            "question": "Was Alanis Morissette among those entertainers nominated for the MTV Video Music Award and the Juno Award for Entertainer of the Year",
            "query": "ASK WHERE { wd:Q130742 wdt:P1411 wd:Q223703 . wd:Q130742 wdt:P1411 wd:Q6314074 }",
            "NLQuery": "ASK WHERE { Alanis Morissette nominated for MTV Video Music Award . Alanis Morissette nominated for Juno Award for Entertainer of the Year }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Entertainer of the Year",
            "choppedEntity": "Q6314074"
        }
    },
    {
        "chopped": {
            "question": "How many religions are ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P140 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub religion ?unknown }"
        },
        "original": {
            "question": "How many religions are Tibetan Buddhism",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P140 wd:Q483889 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub religion Tibetan Buddhism }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Tibetan Buddhism",
            "choppedEntity": "Q483889"
        }
    },
    {
        "chopped": {
            "question": "Which is the number of the religions that are ",
            "query": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub wdt:P140 ?unknown }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?ans1 ) WHERE { ?sub religion ?unknown }"
        },
        "original": {
            "question": "Which is the number of the religions that are Tibetan Buddhism",
            "query": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub wdt:P140 wd:Q483889 }",
            "NLQuery": "SELECT (COUNT(?sub) AS ?value ) WHERE { ?sub religion Tibetan Buddhism }"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Tibetan Buddhism",
            "choppedEntity": "Q483889"
        }
    },
    {
        "chopped": {
            "question": "Was Hulk Hogan born in ",
            "query": "ASK WHERE { wd:Q44176 wdt:P19 ?unknown }",
            "NLQuery": "ASK WHERE { Hulk Hogan place of birth ?unknown }"
        },
        "original": {
            "question": "Was Hulk Hogan born in Augusta",
            "query": "ASK WHERE { wd:Q44176 wdt:P19 wd:Q181962 }",
            "NLQuery": "ASK WHERE { Hulk Hogan place of birth Augusta }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Augusta",
            "choppedEntity": "Q181962"
        }
    },
    {
        "chopped": {
            "question": "Was Hulk Hogan's native place is ",
            "query": "ASK WHERE { wd:Q44176 wdt:P19 ?unknown }",
            "NLQuery": "ASK WHERE { Hulk Hogan place of birth ?unknown }"
        },
        "original": {
            "question": "Was Hulk Hogan's native place is Augusta",
            "query": "ASK WHERE { wd:Q44176 wdt:P19 wd:Q181962 }",
            "NLQuery": "ASK WHERE { Hulk Hogan place of birth Augusta }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Augusta",
            "choppedEntity": "Q181962"
        }
    },
    {
        "chopped": {
            "question": "Who are the authors of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P50 ?ans1 . ?ans1 wdt:P21 wd:Q6581097}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown author ?ans1 . ?ans1 sex or gender male}"
        },
        "original": {
            "question": "Who are the authors of Doonesbury",
            "query": "SELECT ?answer WHERE { wd:Q429433 wdt:P50 ?answer . ?answer wdt:P21 wd:Q6581097}",
            "NLQuery": "SELECT ?answer WHERE { Doonesbury author ?answer . ?answer sex or gender male}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Doonesbury",
            "choppedEntity": "Q429433"
        }
    },
    {
        "chopped": {
            "question": "Who are the creators of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P50 ?ans1 . ?ans1 wdt:P21 wd:Q6581097}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown author ?ans1 . ?ans1 sex or gender male}"
        },
        "original": {
            "question": "Who are the creators of Doonesbury",
            "query": "SELECT ?answer WHERE { wd:Q429433 wdt:P50 ?answer . ?answer wdt:P21 wd:Q6581097}",
            "NLQuery": "SELECT ?answer WHERE { Doonesbury author ?answer . ?answer sex or gender male}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Doonesbury",
            "choppedEntity": "Q429433"
        }
    },
    {
        "chopped": {
            "question": "Is Andy Samberg's family name ",
            "query": "ASK WHERE { ?unknown wdt:P734 wd:Q56244047 }",
            "NLQuery": "ASK WHERE { ?unknown family name Samberg }"
        },
        "original": {
            "question": "Is Andy Samberg's family name Samberg",
            "query": "ASK WHERE { wd:Q314640 wdt:P734 wd:Q56244047 }",
            "NLQuery": "ASK WHERE { Andy Samberg family name Samberg }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Samberg",
            "choppedEntity": "Q314640"
        }
    },
    {
        "chopped": {
            "question": "Is Andy Samberg's family name ",
            "query": "ASK WHERE { wd:Q314640 wdt:P734 ?unknown }",
            "NLQuery": "ASK WHERE { Andy Samberg family name ?unknown }"
        },
        "original": {
            "question": "Is Andy Samberg's family name Samberg",
            "query": "ASK WHERE { wd:Q314640 wdt:P734 wd:Q56244047 }",
            "NLQuery": "ASK WHERE { Andy Samberg family name Samberg }"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Samberg",
            "choppedEntity": "Q56244047"
        }
    },
    {
        "chopped": {
            "question": "What is the life stance of the interment of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P119 ?X . ?X wdt:P140 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of burial ?X . ?X religion ?ans1}"
        },
        "original": {
            "question": "What is the life stance of the interment of Pavel Tsitsianov",
            "query": "SELECT ?answer WHERE { wd:Q2416269 wdt:P119 ?X . ?X wdt:P140 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Pavel Tsitsianov place of burial ?X . ?X religion ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Pavel Tsitsianov",
            "choppedEntity": "Q2416269"
        }
    },
    {
        "chopped": {
            "question": "What is the existence position of the interment of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P119 ?X . ?X wdt:P140 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown place of burial ?X . ?X religion ?ans1}"
        },
        "original": {
            "question": "What is the existence position of the interment of Pavel Tsitsianov",
            "query": "SELECT ?answer WHERE { wd:Q2416269 wdt:P119 ?X . ?X wdt:P140 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Pavel Tsitsianov place of burial ?X . ?X religion ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Pavel Tsitsianov",
            "choppedEntity": "Q2416269"
        }
    },
    {
        "chopped": {
            "question": "Who is the composer of and in what key is ",
            "query": "SELECT ?ans1 ?ans2 WHERE { ?unknown wdt:P86 ?ans1 . ?unknown wdt:P826 ?ans2 }",
            "NLQuery": "SELECT ?ans1 ?ans2 WHERE { ?unknown composer ?ans1 . ?unknown tonality ?ans2 }"
        },
        "original": {
            "question": "Who is the composer of and in what key is The Star Spangled Banner",
            "query": "SELECT ?ans_1 ?ans_2 WHERE { wd:Q44696 wdt:P86 ?ans_1 . wd:Q44696 wdt:P826 ?ans_2 }",
            "NLQuery": "SELECT ?ans_1 ?ans_2 WHERE { The Star-Spangled Banner composer ?ans_1 . The Star-Spangled Banner tonality ?ans_2 }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "The Star Spangled Banner",
            "choppedEntity": "Q44696"
        }
    },
    {
        "chopped": {
            "question": "What is the surge myth of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P3342 ?unknown . ?sbj wdt:P31 wd:Q134052 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj significant person ?unknown . ?sbj instance of deluge myth } "
        },
        "original": {
            "question": "What is the surge myth of Noah",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P3342 wd:Q81422 . ?sbj wdt:P31 wd:Q134052 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj significant person Noah . ?sbj instance of deluge myth } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Noah",
            "choppedEntity": "Q81422"
        }
    },
    {
        "chopped": {
            "question": "What Steven Spielberg was nominated for his work in ",
            "query": "SELECT ?ans1 WHERE { wd:Q8877 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Steven Spielberg nominated for ?s . ?s nominated for ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "What Steven Spielberg was nominated for his work in the Bridge of Spies",
            "query": "SELECT ?obj WHERE { wd:Q8877 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q18067135 }",
            "NLQuery": "SELECT ?obj WHERE { Steven Spielberg nominated for ?s . ?s nominated for ?obj . ?s for work Bridge of Spies }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Bridge of Spies",
            "choppedEntity": "Q18067135"
        }
    },
    {
        "chopped": {
            "question": "Which award was Steven Spielberg nominated for his work in ",
            "query": "SELECT ?ans1 WHERE { wd:Q8877 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Steven Spielberg nominated for ?s . ?s nominated for ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "Which award was Steven Spielberg nominated for his work in the Bridge of Spies",
            "query": "SELECT ?obj WHERE { wd:Q8877 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q18067135 }",
            "NLQuery": "SELECT ?obj WHERE { Steven Spielberg nominated for ?s . ?s nominated for ?obj . ?s for work Bridge of Spies }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Bridge of Spies",
            "choppedEntity": "Q18067135"
        }
    },
    {
        "chopped": {
            "question": "Who is the person as secretary general of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P3975 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown secretary general ?obj . ?obj instance of human } "
        },
        "original": {
            "question": "Who is the person as secretary general of Social Democratic Party of Germany",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q49768 wdt:P3975 ?obj . ?obj wdt:P31 wd:Q5 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Social Democratic Party of Germany secretary general ?obj . ?obj instance of human } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Social Democratic Party of Germany",
            "choppedEntity": "Q49768"
        }
    },
    {
        "chopped": {
            "question": "Which is the last line for ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3132 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown last line ?ans1}"
        },
        "original": {
            "question": "Which is the last line for Crime and Punishment",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q165318 wdt:P3132 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Crime and Punishment last line ?answer}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Crime and Punishment",
            "choppedEntity": "Q165318"
        }
    },
    {
        "chopped": {
            "question": "What recurring event with the word burning in its name takes place in the administrative territorial entity of ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15275719 . ?ans1 wdt:P131 ?unknown . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), 'burning')) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of recurring event . ?ans1 located in the administrative territorial entity ?unknown . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), 'burning')) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What recurring event with the word burning in its name takes place in the administrative territorial entity of Pershing County",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15275719 . ?sbj wdt:P131 wd:Q484342 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'burning')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of recurring event . ?sbj located in the administrative territorial entity Pershing County . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'burning')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Pershing County",
            "choppedEntity": "Q484342"
        }
    },
    {
        "chopped": {
            "question": "What recurring match with the phrase burning in its identify takes region in the administrative territorial entity of ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15275719 . ?ans1 wdt:P131 ?unknown . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), 'burning')) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of recurring event . ?ans1 located in the administrative territorial entity ?unknown . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), 'burning')) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What recurring match with the phrase burning in its identify takes region in the administrative territorial entity of Pershing County",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15275719 . ?sbj wdt:P131 wd:Q484342 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'burning')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of recurring event . ?sbj located in the administrative territorial entity Pershing County . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'burning')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Pershing County",
            "choppedEntity": "Q484342"
        }
    },
    {
        "chopped": {
            "question": "What is the municipality of the Netherlands that contains settlement of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1383 ?unknown . ?sbj wdt:P31 wd:Q2039348 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj contains settlement ?unknown . ?sbj instance of municipality of the Netherlands } "
        },
        "original": {
            "question": "What is the municipality of the Netherlands that contains settlement of Amsterdam",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1383 wd:Q727 . ?sbj wdt:P31 wd:Q2039348 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj contains settlement Amsterdam . ?sbj instance of municipality of the Netherlands } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Amsterdam",
            "choppedEntity": "Q727"
        }
    },
    {
        "chopped": {
            "question": "What is the district of the Netherlands that contains settlement of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1383 ?unknown . ?sbj wdt:P31 wd:Q2039348 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj contains settlement ?unknown . ?sbj instance of municipality of the Netherlands } "
        },
        "original": {
            "question": "What is the district of the Netherlands that contains settlement of Amsterdam",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P1383 wd:Q727 . ?sbj wdt:P31 wd:Q2039348 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj contains settlement Amsterdam . ?sbj instance of municipality of the Netherlands } "
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Amsterdam",
            "choppedEntity": "Q727"
        }
    },
    {
        "chopped": {
            "question": "What is the television program based on ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P144 ?obj . ?obj wdt:P31 wd:Q15416 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown based on ?obj . ?obj instance of television program } "
        },
        "original": {
            "question": "What is the television program based on the Eurovision Song Contest",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q276 wdt:P144 ?obj . ?obj wdt:P31 wd:Q15416 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Eurovision Song Contest based on ?obj . ?obj instance of television program } "
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the Eurovision Song Contest",
            "choppedEntity": "Q276"
        }
    },
    {
        "chopped": {
            "question": "What is the tv program based on ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P144 ?obj . ?obj wdt:P31 wd:Q15416 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown based on ?obj . ?obj instance of television program } "
        },
        "original": {
            "question": "What is the tv program based on the Eurovision Melody Contest",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q276 wdt:P144 ?obj . ?obj wdt:P31 wd:Q15416 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Eurovision Song Contest based on ?obj . ?obj instance of television program } "
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the Eurovision Melody Contest",
            "choppedEntity": "Q276"
        }
    },
    {
        "chopped": {
            "question": "who mausoleum for place of burial of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P119 ?obj . ?obj wdt:P31 wd:Q162875 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown place of burial ?obj . ?obj instance of mausoleum } "
        },
        "original": {
            "question": "who mausoleum for place of burial of Muhammad Ali Jinnah",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q160554 wdt:P119 ?obj . ?obj wdt:P31 wd:Q162875 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Mohammad Ali Jinnah place of burial ?obj . ?obj instance of mausoleum } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Muhammad Ali Jinnah",
            "choppedEntity": "Q160554"
        }
    },
    {
        "chopped": {
            "question": "who catacomb for put of burial of ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P119 ?obj . ?obj wdt:P31 wd:Q162875 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown place of burial ?obj . ?obj instance of mausoleum } "
        },
        "original": {
            "question": "who catacomb for put of burial of Muhammad Ali Jinnah",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q160554 wdt:P119 ?obj . ?obj wdt:P31 wd:Q162875 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Mohammad Ali Jinnah place of burial ?obj . ?obj instance of mausoleum } "
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Muhammad Ali Jinnah",
            "choppedEntity": "Q160554"
        }
    },
    {
        "chopped": {
            "question": "Which are the coordinates for northernmost point of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P1332 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown coordinates of northernmost point ?ans1}"
        },
        "original": {
            "question": "Which are the coordinates for northernmost point of Afghanistan",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q889 wdt:P1332 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Afghanistan coordinates of northernmost point ?answer}"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Afghanistan",
            "choppedEntity": "Q889"
        }
    },
    {
        "chopped": {
            "question": "What is the Australian Business Number of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P3548 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Australian Business Number ?ans1}"
        },
        "original": {
            "question": "What is the Australian Business Number of the Australian Broadcasting Corporation",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q781365 wdt:P3548 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Australian Broadcasting Corporation Australian Business Number ?answer}"
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "the Australian Broadcasting Corporation",
            "choppedEntity": "Q781365"
        }
    },
    {
        "chopped": {
            "question": "Who is the choir director employed by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P108 ?X . ?X wdt:P3300 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown employer ?X . ?X musical conductor ?ans1}"
        },
        "original": {
            "question": "Who is the choir director employed by Joseph Bradley",
            "query": "SELECT ?answer WHERE { wd:Q21535888 wdt:P108 ?X . ?X wdt:P3300 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Joseph Bradley employer ?X . ?X musical conductor ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Joseph Bradley",
            "choppedEntity": "Q21535888"
        }
    },
    {
        "chopped": {
            "question": "Who is the choir executive utilized by ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P108 ?X . ?X wdt:P3300 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown employer ?X . ?X musical conductor ?ans1}"
        },
        "original": {
            "question": "Who is the choir executive utilized by Joseph Bradley",
            "query": "SELECT ?answer WHERE { wd:Q21535888 wdt:P108 ?X . ?X wdt:P3300 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Joseph Bradley employer ?X . ?X musical conductor ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Joseph Bradley",
            "choppedEntity": "Q21535888"
        }
    },
    {
        "chopped": {
            "question": "What was Heath Ledger nominated for concerning his work on ",
            "query": "SELECT ?ans1 WHERE { wd:Q40572 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P1686 ?unknown }",
            "NLQuery": "SELECT ?ans1 WHERE { Heath Ledger nominated for ?s . ?s nominated for ?ans1 . ?s for work ?unknown }"
        },
        "original": {
            "question": "What was Heath Ledger nominated for concerning his work on Brokeback Mountain",
            "query": "SELECT ?obj WHERE { wd:Q40572 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q160618 }",
            "NLQuery": "SELECT ?obj WHERE { Heath Ledger nominated for ?s . ?s nominated for ?obj . ?s for work Brokeback Mountain }"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Brokeback Mountain",
            "choppedEntity": "Q160618"
        }
    },
    {
        "chopped": {
            "question": "What music festival was based on ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P144 ?obj . ?obj wdt:P31 wd:Q868557 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown based on ?obj . ?obj instance of music festival } "
        },
        "original": {
            "question": "What music festival was based on the Eurovision Song Contest",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q276 wdt:P144 ?obj . ?obj wdt:P31 wd:Q868557 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Eurovision Song Contest based on ?obj . ?obj instance of music festival } "
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the Eurovision Song Contest",
            "choppedEntity": "Q276"
        }
    },
    {
        "chopped": {
            "question": "What music celebration was based on ",
            "query": "SELECT DISTINCT ?obj WHERE { ?unknown wdt:P144 ?obj . ?obj wdt:P31 wd:Q868557 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { ?unknown based on ?obj . ?obj instance of music festival } "
        },
        "original": {
            "question": "What music celebration was based on the Eurovision Melody Contest",
            "query": "SELECT DISTINCT ?obj WHERE { wd:Q276 wdt:P144 ?obj . ?obj wdt:P31 wd:Q868557 } ",
            "NLQuery": "SELECT DISTINCT ?obj WHERE { Eurovision Song Contest based on ?obj . ?obj instance of music festival } "
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "the Eurovision Melody Contest",
            "choppedEntity": "Q276"
        }
    },
    {
        "chopped": {
            "question": "What is the basis for the movie ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P144 ?unknown . ?sbj wdt:P31 wd:Q226730 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj based on ?unknown . ?sbj instance of silent film } "
        },
        "original": {
            "question": "What is the basis for the movie Twenty Thousand Leagues Under the Sea",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P144 wd:Q183565 . ?sbj wdt:P31 wd:Q226730 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj based on Twenty Thousand Leagues Under the Sea . ?sbj instance of silent film } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Twenty Thousand Leagues Under the Sea",
            "choppedEntity": "Q183565"
        }
    },
    {
        "chopped": {
            "question": "What is the premise for the motion picture ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P144 ?unknown . ?sbj wdt:P31 wd:Q226730 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj based on ?unknown . ?sbj instance of silent film } "
        },
        "original": {
            "question": "What is the premise for the motion picture Twenty Thousand Alliances Beneath the Sea",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P144 wd:Q183565 . ?sbj wdt:P31 wd:Q226730 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj based on Twenty Thousand Leagues Under the Sea . ?sbj instance of silent film } "
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "Twenty Thousand Alliances Beneath the Sea",
            "choppedEntity": "Q183565"
        }
    },
    {
        "chopped": {
            "question": "What series did Robert Guillaume play ",
            "query": "SELECT ?ans1 WHERE { wd:Q465442 p:P735 ?s . ?s ps:P735 ?unknown . ?s pq:P1545 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Robert Guillaume given name ?s . ?s given name ?unknown . ?s series ordinal ?ans1}"
        },
        "original": {
            "question": "What series did Robert Guillaume play Robert",
            "query": "SELECT ?value WHERE { wd:Q465442 p:P735 ?s . ?s ps:P735 wd:Q4927937 . ?s pq:P1545 ?value}",
            "NLQuery": "SELECT ?value WHERE { Robert Guillaume given name ?s . ?s given name Robert . ?s series ordinal ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Robert",
            "choppedEntity": "Q4927937"
        }
    },
    {
        "chopped": {
            "question": "On which show was Robert Guillaume cast as the character ",
            "query": "SELECT ?ans1 WHERE { wd:Q465442 p:P735 ?s . ?s ps:P735 ?unknown . ?s pq:P1545 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Robert Guillaume given name ?s . ?s given name ?unknown . ?s series ordinal ?ans1}"
        },
        "original": {
            "question": "On which show was Robert Guillaume cast as the character Robert",
            "query": "SELECT ?value WHERE { wd:Q465442 p:P735 ?s . ?s ps:P735 wd:Q4927937 . ?s pq:P1545 ?value}",
            "NLQuery": "SELECT ?value WHERE { Robert Guillaume given name ?s . ?s given name Robert . ?s series ordinal ?value}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Robert",
            "choppedEntity": "Q4927937"
        }
    },
    {
        "chopped": {
            "question": "Which is the single for the record label of ",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P264 ?unknown . ?sbj wdt:P31 wd:Q134556 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj record label ?unknown . ?sbj instance of single } "
        },
        "original": {
            "question": "Which is the single for the record label of Korn",
            "query": "SELECT DISTINCT ?sbj WHERE { ?sbj wdt:P264 wd:Q80304 . ?sbj wdt:P31 wd:Q134556 } ",
            "NLQuery": "SELECT DISTINCT ?sbj WHERE { ?sbj record label Korn . ?sbj instance of single } "
        },
        "meta": {
            "entityTagNER": "ORG",
            "choppedText": "Korn",
            "choppedEntity": "Q80304"
        }
    },
    {
        "chopped": {
            "question": "How many diplomatic relations are for ",
            "query": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown wdt:P530 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?ans1 ) WHERE { ?unknown diplomatic relation ?obj }"
        },
        "original": {
            "question": "How many diplomatic relations are for Serbia",
            "query": "SELECT (COUNT(?obj) AS ?value ) WHERE { wd:Q403 wdt:P530 ?obj }",
            "NLQuery": "SELECT (COUNT(?obj) AS ?value ) WHERE { Serbia diplomatic relation ?obj }"
        },
        "meta": {
            "entityTagNER": "GPE",
            "choppedText": "Serbia",
            "choppedEntity": "Q403"
        }
    },
    {
        "chopped": {
            "question": "Which is the Bulbapedia article of ",
            "query": "SELECT DISTINCT ?ans1 WHERE { ?unknown wdt:P4845 ?ans1}",
            "NLQuery": "SELECT DISTINCT ?ans1 WHERE { ?unknown Bulbapedia article ?ans1}"
        },
        "original": {
            "question": "Which is the Bulbapedia article of Super Smash Bros. Melee",
            "query": "SELECT DISTINCT ?answer WHERE { wd:Q1052131 wdt:P4845 ?answer}",
            "NLQuery": "SELECT DISTINCT ?answer WHERE { Super Smash Bros. Melee Bulbapedia article ?answer}"
        },
        "meta": {
            "entityTagNER": "EVENT",
            "choppedText": "Super Smash Bros. Melee",
            "choppedEntity": "Q1052131"
        }
    },
    {
        "chopped": {
            "question": "Who wrote the bibiiography of ",
            "query": "SELECT ?ans1 WHERE { ?unknown wdt:P1455 ?X . ?X wdt:P58 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { ?unknown list of works ?X . ?X screenwriter ?ans1}"
        },
        "original": {
            "question": "Who wrote the bibiiography of Natja Brunckhorst",
            "query": "SELECT ?answer WHERE { wd:Q62581 wdt:P1455 ?X . ?X wdt:P58 ?answer}",
            "NLQuery": "SELECT ?answer WHERE { Natja Brunckhorst list of works ?X . ?X screenwriter ?answer}"
        },
        "meta": {
            "entityTagNER": "PERSON",
            "choppedText": "Natja Brunckhorst",
            "choppedEntity": "Q62581"
        }
    },
    {
        "chopped": {
            "question": "For what work did Bernard DeVoto receive ",
            "query": "SELECT ?ans1 WHERE { wd:Q3638666 p:P166 ?s . ?s ps:P166 ?unknown . ?s pq:P1686 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Bernard DeVoto award received ?s . ?s award received ?unknown . ?s for work ?ans1}"
        },
        "original": {
            "question": "For what work did Bernard DeVoto receive the Pulizer Prize for History",
            "query": "SELECT ?value WHERE { wd:Q3638666 p:P166 ?s . ?s ps:P166 wd:Q599254 . ?s pq:P1686 ?value}",
            "NLQuery": "SELECT ?value WHERE { Bernard DeVoto award received ?s . ?s award received Pulitzer Prize for History . ?s for work ?value}"
        },
        "meta": {
            "entityTagNER": "WORK_OF_ART",
            "choppedText": "the Pulizer Prize for History",
            "choppedEntity": "Q599254"
        }
    },
    {
        "chopped": {
            "question": "What was the population of Somalia in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1045 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Somalia population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of Somalia in 2009-0-0",
            "query": "SELECT ?obj WHERE { wd:Q1045 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2009')) }",
            "NLQuery": "SELECT ?obj WHERE { Somalia population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2009')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2009-0-0",
            "choppedEntity": "2009-0-0"
        }
    },
    {
        "chopped": {
            "question": "what was the population of clermont-ferrand on 1-1-",
            "query": "SELECT ?ans1 WHERE { wd:Q42168 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Clermont-Ferrand population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of Clermont-Ferrand on 1-1-2013",
            "query": "SELECT ?obj WHERE { wd:Q42168 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2013')) }",
            "NLQuery": "SELECT ?obj WHERE { Clermont-Ferrand population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2013')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2013",
            "choppedEntity": "2013"
        }
    },
    {
        "chopped": {
            "question": "how many people lived in clermont-ferrand on january 1st, ",
            "query": "SELECT ?ans1 WHERE { wd:Q42168 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Clermont-Ferrand population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "How many people lived in Clermont-Ferrand on January 1st, 2013",
            "query": "SELECT ?obj WHERE { wd:Q42168 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2013')) }",
            "NLQuery": "SELECT ?obj WHERE { Clermont-Ferrand population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2013')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2013",
            "choppedEntity": "2013"
        }
    },
    {
        "chopped": {
            "question": "tell me mode of transport whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q334166 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of mode of transport . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "TELL ME MODE OF TRANSPORT WHOSE NAME HAS THE WORD VEHICLE IN IT.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q334166 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vehicle')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of mode of transport . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vehicle')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "vehicle in it",
            "choppedEntity": "vehicle"
        }
    },
    {
        "chopped": {
            "question": "reveal to me mode of transport whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q334166 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of mode of transport . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Reveal to ME MODE OF TRANSPORT WHOSE NAME HAS THE WORD VEHICLE IN IT.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q334166 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vehicle')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of mode of transport . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vehicle')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "vehicle in it",
            "choppedEntity": "vehicle"
        }
    },
    {
        "chopped": {
            "question": "what are the cinematic technique that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1001378 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of cinematic technique . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what are the cinematic technique that contains the word tilt in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1001378 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tilt')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of cinematic technique . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tilt')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "tilt in their name",
            "choppedEntity": "tilt"
        }
    },
    {
        "chopped": {
            "question": "what are the cinematic strategy that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1001378 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of cinematic technique . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what are the cinematic strategy that contains the word tilt in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1001378 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tilt')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of cinematic technique . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tilt')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "tilt in their name",
            "choppedEntity": "tilt"
        }
    },
    {
        "chopped": {
            "question": "tell me the historical period which is part of the time period of muromachi period and whose name contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11514315 . ?ans1 wdt:P2348 wd:Q334845 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of historical period . ?ans1 time period Muromachi period . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the historical period which is part of the time period of Muromachi period and whose name contains the word period",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11514315 . ?sbj wdt:P2348 wd:Q334845 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'period')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of historical period . ?sbj time period Muromachi period . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'period')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "period",
            "choppedEntity": "period"
        }
    },
    {
        "chopped": {
            "question": "when was the gdp of rio grande do s",
            "query": "SELECT ?ans1 WHERE { wd:Q40030 p:P2131 ?s . ?s ps:P2131 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Rio Grande do Sul nominal GDP ?s . ?s nominal GDP ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was the GDP of Rio Grande do Sul1.15e+11 ",
            "query": "SELECT ?value WHERE { wd:Q40030 p:P2131 ?s . ?s ps:P2131 ?x FILTER(contains(?x,'1.15e+11')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Rio Grande do Sul nominal GDP ?s . ?s nominal GDP ?x FILTER(contains(?x,'1.15e+11')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "sul115e+11",
            "choppedEntity": "1.15e+11"
        }
    },
    {
        "chopped": {
            "question": "in what time period was rio grande do suls gdp ",
            "query": "SELECT ?ans1 WHERE { wd:Q40030 p:P2131 ?s . ?s ps:P2131 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Rio Grande do Sul nominal GDP ?s . ?s nominal GDP ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "In what time period was Rio Grande do Sul's GDP 1.15e+11",
            "query": "SELECT ?value WHERE { wd:Q40030 p:P2131 ?s . ?s ps:P2131 ?x FILTER(contains(?x,'1.15e+11')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Rio Grande do Sul nominal GDP ?s . ?s nominal GDP ?x FILTER(contains(?x,'1.15e+11')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "115e+11",
            "choppedEntity": "1.15e+11"
        }
    },
    {
        "chopped": {
            "question": "who is born at bertha benz, whose inhabitants is ",
            "query": "SELECT ?ans1 WHERE { wd:Q77117 wdt:P19 ?ans1 . ?ans1 wdt:P1082 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Bertha Benz place of birth ?ans1 . ?ans1 population ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Who is born at Bertha Benz, whose inhabitants is 101165.0",
            "query": "SELECT ?answer WHERE { wd:Q77117 wdt:P19 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'101165.0'))}",
            "NLQuery": "SELECT ?answer WHERE { Bertha Benz place of birth ?answer . ?answer population ?x FILTER(contains(?x,'101165.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "1011650",
            "choppedEntity": "101165.0"
        }
    },
    {
        "chopped": {
            "question": "name an ethnolect indigenous to the united states of america that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q951873 . ?ans1 wdt:P2341 wd:Q30 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of ethnolect . ?ans1 indigenous to United States of America . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name an ethnolect indigenous to the United States of America that contains the word \"american\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q951873 . ?sbj wdt:P2341 wd:Q30 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'american')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of ethnolect . ?sbj indigenous to United States of America . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'american')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "american in its name",
            "choppedEntity": "american"
        }
    },
    {
        "chopped": {
            "question": "what position was held by harry s truman on 1/3/",
            "query": "SELECT ?ans1 WHERE { wd:Q11613 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Harry S. Truman position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What position was held by Harry S. Truman on 1/3/1935",
            "query": "SELECT ?obj WHERE { wd:Q11613 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1935')) }",
            "NLQuery": "SELECT ?obj WHERE { Harry S. Truman position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1935')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1935",
            "choppedEntity": "1935"
        }
    },
    {
        "chopped": {
            "question": "tell me branch of science whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2465832 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of branch of science . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me branch of science whose name has the word volkerpsychologie in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2465832 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'volkerpsychologie')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of branch of science . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'volkerpsychologie')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "volkerpsychologie in it",
            "choppedEntity": "volkerpsychologie"
        }
    },
    {
        "chopped": {
            "question": "let me know department of science whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2465832 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of branch of science . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know department of science whose title has the word volkerpsychologie in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2465832 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'volkerpsychologie')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of branch of science . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'volkerpsychologie')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "volkerpsychologie in it",
            "choppedEntity": "volkerpsychologie"
        }
    },
    {
        "chopped": {
            "question": "who did shirley jackson marry in ",
            "query": "SELECT ?ans1 WHERE { wd:Q239910 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Shirley Jackson spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who did Shirley Jackson marry in 1940",
            "query": "SELECT ?obj WHERE { wd:Q239910 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1940')) }",
            "NLQuery": "SELECT ?obj WHERE { Shirley Jackson spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1940')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1940",
            "choppedEntity": "1940"
        }
    },
    {
        "chopped": {
            "question": "who married shirley jackson in ",
            "query": "SELECT ?ans1 WHERE { wd:Q239910 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Shirley Jackson spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who married Shirley Jackson in 1940",
            "query": "SELECT ?obj WHERE { wd:Q239910 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1940')) }",
            "NLQuery": "SELECT ?obj WHERE { Shirley Jackson spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1940')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1940",
            "choppedEntity": "1940"
        }
    },
    {
        "chopped": {
            "question": "what city was new orleans twinned with in ",
            "query": "SELECT ?ans1 WHERE { wd:Q34404 p:P190 ?s . ?s ps:P190 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { New Orleans twinned administrative body ?s . ?s twinned administrative body ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What city was New Orleans twinned with in 2012",
            "query": "SELECT ?obj WHERE { wd:Q34404 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2012')) }",
            "NLQuery": "SELECT ?obj WHERE { New Orleans twinned administrative body ?s . ?s twinned administrative body ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2012')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2012",
            "choppedEntity": "2012"
        }
    },
    {
        "chopped": {
            "question": "which city was labelled as twin city of new orleans in ",
            "query": "SELECT ?ans1 WHERE { wd:Q34404 p:P190 ?s . ?s ps:P190 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { New Orleans twinned administrative body ?s . ?s twinned administrative body ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which city was labelled as twin city of New Orleans in 2012",
            "query": "SELECT ?obj WHERE { wd:Q34404 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2012')) }",
            "NLQuery": "SELECT ?obj WHERE { New Orleans twinned administrative body ?s . ?s twinned administrative body ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2012')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2012",
            "choppedEntity": "2012"
        }
    },
    {
        "chopped": {
            "question": "which is the birth city of johann strauss ii which is sized ",
            "query": "SELECT ?ans1 WHERE { wd:Q83309 wdt:P19 ?ans1 . ?ans1 wdt:P2046 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Johann Strauss II place of birth ?ans1 . ?ans1 area ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Which is the birth city of Johann Strauss II which is sized 1.61",
            "query": "SELECT ?answer WHERE { wd:Q83309 wdt:P19 ?answer . ?answer wdt:P2046 ?x FILTER(contains(?x,'1.61'))}",
            "NLQuery": "SELECT ?answer WHERE { Johann Strauss II place of birth ?answer . ?answer area ?x FILTER(contains(?x,'1.61'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "161",
            "choppedEntity": "1.61"
        }
    },
    {
        "chopped": {
            "question": "which is the birth city of johann strauss ii which is measured ",
            "query": "SELECT ?ans1 WHERE { wd:Q83309 wdt:P19 ?ans1 . ?ans1 wdt:P2046 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Johann Strauss II place of birth ?ans1 . ?ans1 area ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Which is the birth city of Johann Strauss II which is measured 1.61",
            "query": "SELECT ?answer WHERE { wd:Q83309 wdt:P19 ?answer . ?answer wdt:P2046 ?x FILTER(contains(?x,'1.61'))}",
            "NLQuery": "SELECT ?answer WHERE { Johann Strauss II place of birth ?answer . ?answer area ?x FILTER(contains(?x,'1.61'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "161",
            "choppedEntity": "1.61"
        }
    },
    {
        "chopped": {
            "question": "what are the dynasty which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q164950 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of dynasty . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the dynasty which start with the letter paduspanids",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q164950 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'paduspanids')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of dynasty . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'paduspanids')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "paduspanids",
            "choppedEntity": "paduspanids"
        }
    },
    {
        "chopped": {
            "question": "what are the dynasty which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q164950 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of dynasty . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the dynasty which begin with the letter paduspanids",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q164950 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'paduspanids')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of dynasty . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'paduspanids')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "paduspanids",
            "choppedEntity": "paduspanids"
        }
    },
    {
        "chopped": {
            "question": "where was the shining published on november 7, ",
            "query": "SELECT ?ans1 WHERE { wd:Q186341 p:P577 ?s . ?s ps:P577 ?x FILTER(contains(YEAR(?x),?unknown)) . ?s pq:P291 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { The Shining date of publication ?s . ?s date of publication ?x FILTER(contains(YEAR(?x),?unknown)) . ?s place of publication ?ans1}"
        },
        "original": {
            "question": "Where was The Shining published on November 7, 1980",
            "query": "SELECT ?value WHERE { wd:Q186341 p:P577 ?s . ?s ps:P577 ?x FILTER(contains(YEAR(?x),'1980')) . ?s pq:P291 ?value}",
            "NLQuery": "SELECT ?value WHERE { The Shining date of publication ?s . ?s date of publication ?x FILTER(contains(YEAR(?x),'1980')) . ?s place of publication ?value}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1980",
            "choppedEntity": "1980"
        }
    },
    {
        "chopped": {
            "question": "what was the location did shining published on november 7, ",
            "query": "SELECT ?ans1 WHERE { wd:Q186341 p:P577 ?s . ?s ps:P577 ?x FILTER(contains(YEAR(?x),?unknown)) . ?s pq:P291 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { The Shining date of publication ?s . ?s date of publication ?x FILTER(contains(YEAR(?x),?unknown)) . ?s place of publication ?ans1}"
        },
        "original": {
            "question": "What was the location did Shining published on November 7, 1980",
            "query": "SELECT ?value WHERE { wd:Q186341 p:P577 ?s . ?s ps:P577 ?x FILTER(contains(YEAR(?x),'1980')) . ?s pq:P291 ?value}",
            "NLQuery": "SELECT ?value WHERE { The Shining date of publication ?s . ?s date of publication ?x FILTER(contains(YEAR(?x),'1980')) . ?s place of publication ?value}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1980",
            "choppedEntity": "1980"
        }
    },
    {
        "chopped": {
            "question": "when did phuket have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q182565 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Phuket population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Phuket have a population of 394,169",
            "query": "SELECT ?value WHERE { wd:Q182565 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'394169.0')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Phuket population ?s . ?s population ?x FILTER(contains(?x,'394169.0')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "394,169",
            "choppedEntity": "394169.0"
        }
    },
    {
        "chopped": {
            "question": "on what  date did phuket have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q182565 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Phuket population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "On what  date did Phuket have a population of 394,169",
            "query": "SELECT ?value WHERE { wd:Q182565 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'394169.0')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Phuket population ?s . ?s population ?x FILTER(contains(?x,'394169.0')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "394,169",
            "choppedEntity": "394169.0"
        }
    },
    {
        "chopped": {
            "question": "for what was anne revere nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q239770 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Anne Revere nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "For what was Anne Revere nominated for in 1943",
            "query": "SELECT ?obj WHERE { wd:Q239770 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1943')) }",
            "NLQuery": "SELECT ?obj WHERE { Anne Revere nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1943')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1943",
            "choppedEntity": "1943"
        }
    },
    {
        "chopped": {
            "question": "what nomination did anne revere get in ",
            "query": "SELECT ?ans1 WHERE { wd:Q239770 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Anne Revere nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What nomination did Anne Revere get in 1943",
            "query": "SELECT ?obj WHERE { wd:Q239770 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1943')) }",
            "NLQuery": "SELECT ?obj WHERE { Anne Revere nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1943')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1943",
            "choppedEntity": "1943"
        }
    },
    {
        "chopped": {
            "question": "which is the recurring sporting event of the tennis australia organizer that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q18608583 . ?ans1 wdt:P664 wd:Q3494880 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of recurring sporting event . ?ans1 organizer Tennis Australia . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the recurring sporting event of the Tennis Australia organizer that contains the word australian in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18608583 . ?sbj wdt:P664 wd:Q3494880 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'australian')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of recurring sporting event . ?sbj organizer Tennis Australia . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'australian')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "australian in its name",
            "choppedEntity": "australian"
        }
    },
    {
        "chopped": {
            "question": "which is the repeating wearing occasion of the tennis australia organizer that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q18608583 . ?ans1 wdt:P664 wd:Q3494880 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of recurring sporting event . ?ans1 organizer Tennis Australia . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the repeating wearing occasion of the Tennis Australia organizer that contains the word australian in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18608583 . ?sbj wdt:P664 wd:Q3494880 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'australian')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of recurring sporting event . ?sbj organizer Tennis Australia . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'australian')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "australian in its name",
            "choppedEntity": "australian"
        }
    },
    {
        "chopped": {
            "question": "under the topic of the history of the maldives, where were there inhabitants numbering ",
            "query": "SELECT ?ans1 WHERE { wd:Q1074669 wdt:P1269 ?ans1 . ?ans1 wdt:P1082 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { history of the Maldives facet of ?ans1 . ?ans1 population ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Under the topic of the history of the Maldives, where were there inhabitants numbering 227,863",
            "query": "SELECT ?answer WHERE { wd:Q1074669 wdt:P1269 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'227863.0'))}",
            "NLQuery": "SELECT ?answer WHERE { history of the Maldives facet of ?answer . ?answer population ?x FILTER(contains(?x,'227863.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "227,863",
            "choppedEntity": "227863.0"
        }
    },
    {
        "chopped": {
            "question": "beneath the subject of the history of the maldives, where were there occupants numbering ",
            "query": "SELECT ?ans1 WHERE { wd:Q1074669 wdt:P1269 ?ans1 . ?ans1 wdt:P1082 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { history of the Maldives facet of ?ans1 . ?ans1 population ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Beneath the subject of the history of the Maldives, where were there occupants numbering 227,863",
            "query": "SELECT ?answer WHERE { wd:Q1074669 wdt:P1269 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'227863.0'))}",
            "NLQuery": "SELECT ?answer WHERE { history of the Maldives facet of ?answer . ?answer population ?x FILTER(contains(?x,'227863.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "227,863",
            "choppedEntity": "227863.0"
        }
    },
    {
        "chopped": {
            "question": "o que \u00e9 o continente asiatico de jin dinastia, que tem barulho \u00e9 ",
            "query": "SELECT ?ans1 WHERE { wd:Q7352 wdt:P30 ?ans1 . ?ans1 wdt:P443 ?x FILTER(contains(?x,'Fr-Asie.ogg'))}",
            "NLQuery": "SELECT ?ans1 WHERE { Jin dynasty continent ?ans1 . ?ans1 pronunciation audio ?x FILTER(contains(?x,'Fr-Asie.ogg'))}"
        },
        "original": {
            "question": "O que \u00e9 o continente asiatico de Jin dinastia, que tem barulho \u00e9 Fr-Asie.ogg",
            "query": "SELECT ?answer WHERE { wd:Q7352 wdt:P30 ?answer . ?answer wdt:P443 ?x FILTER(contains(?x,'Fr-Asie.ogg'))}",
            "NLQuery": "SELECT ?answer WHERE { Jin dynasty continent ?answer . ?answer pronunciation audio ?x FILTER(contains(?x,'Fr-Asie.ogg'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "fr-asieogg",
            "choppedEntity": "fr-asie.ogg"
        }
    },
    {
        "chopped": {
            "question": "s\u00e9bastien chabal was a member of which sports team in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q465470 p:P54 ?s . ?s ps:P54 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { S\u00e9bastien Chabal member of sports team ?s . ?s member of sports team ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "S\u00e9bastien Chabal was a member of which sports team in the year 2014",
            "query": "SELECT ?obj WHERE { wd:Q465470 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'2014')) }",
            "NLQuery": "SELECT ?obj WHERE { S\u00e9bastien Chabal member of sports team ?s . ?s member of sports team ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'2014')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2014",
            "choppedEntity": "2014"
        }
    },
    {
        "chopped": {
            "question": "what is philosophical movement that practiced by atheist and which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2915955 . ?ans1 wdt:P3095 wd:Q13211738 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of philosophical movement . ?ans1 practiced by atheist . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what is philosophical movement that practiced by atheist and which contains the word atheism in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2915955 . ?sbj wdt:P3095 wd:Q13211738 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'atheism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of philosophical movement . ?sbj practiced by atheist . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'atheism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "atheism in their name",
            "choppedEntity": "atheism"
        }
    },
    {
        "chopped": {
            "question": "what is the game name starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11410 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of game . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what is the game name starts with z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11410 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of game . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "which is the painting that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3305213 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of painting . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the painting that contains the word young in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3305213 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'young')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of painting . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'young')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "young in its name",
            "choppedEntity": "young"
        }
    },
    {
        "chopped": {
            "question": "what country whose highest judicial authority is the british supreme court for china and japan starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3624078 . ?ans1 wdt:P209 wd:Q3001101 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of sovereign state . ?ans1 highest judicial authority British Supreme Court for China and Japan . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what country whose highest judicial authority is the British Supreme Court for China and Japan starts with letter J",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3624078 . ?sbj wdt:P209 wd:Q3001101 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'j')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of sovereign state . ?sbj highest judicial authority British Supreme Court for China and Japan . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'j')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "j",
            "choppedEntity": "j"
        }
    },
    {
        "chopped": {
            "question": "what u  s  a  whose best possible judicial authority is the british supreme court for china and japan starts offevolved with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3624078 . ?ans1 wdt:P209 wd:Q3001101 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of sovereign state . ?ans1 highest judicial authority British Supreme Court for China and Japan . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what u . s . a . whose best possible judicial authority is the British Supreme Court for China and Japan starts offevolved with letter J",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3624078 . ?sbj wdt:P209 wd:Q3001101 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'j')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of sovereign state . ?sbj highest judicial authority British Supreme Court for China and Japan . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'j')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "j",
            "choppedEntity": "j"
        }
    },
    {
        "chopped": {
            "question": "what governing text regarding perjury has the shortened name ",
            "query": "SELECT ?ans1 WHERE { wd:Q310229 wdt:P92 ?ans1 . ?ans1 wdt:P1813 ?x FILTER(contains(?x,'StGB'))}",
            "NLQuery": "SELECT ?ans1 WHERE { perjury main regulatory text ?ans1 . ?ans1 short name ?x FILTER(contains(?x,'StGB'))}"
        },
        "original": {
            "question": "What governing text regarding perjury has the shortened name StGB",
            "query": "SELECT ?answer WHERE { wd:Q310229 wdt:P92 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'StGB'))}",
            "NLQuery": "SELECT ?answer WHERE { perjury main regulatory text ?answer . ?answer short name ?x FILTER(contains(?x,'StGB'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "stgb",
            "choppedEntity": "stgb"
        }
    },
    {
        "chopped": {
            "question": "what german dog breed contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q39367 . ?ans1 wdt:P495 wd:Q183 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of dog breed . ?ans1 country of origin Germany . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What German dog breed contains the word \"Weimaraner\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q39367 . ?sbj wdt:P495 wd:Q183 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'weimaraner')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of dog breed . ?sbj country of origin Germany . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'weimaraner')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "weimaraner in its name",
            "choppedEntity": "weimaraner"
        }
    },
    {
        "chopped": {
            "question": "what german dog breed incorporates the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q39367 . ?ans1 wdt:P495 wd:Q183 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of dog breed . ?ans1 country of origin Germany . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What German dog breed incorporates the word \"Weimaraner\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q39367 . ?sbj wdt:P495 wd:Q183 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'weimaraner')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of dog breed . ?sbj country of origin Germany . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'weimaraner')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "weimaraner in its name",
            "choppedEntity": "weimaraner"
        }
    },
    {
        "chopped": {
            "question": "where was nicolaus copernicus educated in ",
            "query": "SELECT ?ans1 WHERE { wd:Q619 p:P69 ?s . ?s ps:P69 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Nicolaus Copernicus educated at ?s . ?s educated at ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Where was Nicolaus Copernicus educated in 1503",
            "query": "SELECT ?obj WHERE { wd:Q619 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1503')) }",
            "NLQuery": "SELECT ?obj WHERE { Nicolaus Copernicus educated at ?s . ?s educated at ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1503')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1503",
            "choppedEntity": "1503"
        }
    },
    {
        "chopped": {
            "question": "what position did al franken hold on july 7, ",
            "query": "SELECT ?ans1 WHERE { wd:Q319084 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Al Franken position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What position did Al Franken hold on July 7, 2007",
            "query": "SELECT ?obj WHERE { wd:Q319084 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2009')) }",
            "NLQuery": "SELECT ?obj WHERE { Al Franken position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2009')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2007",
            "choppedEntity": "2009"
        }
    },
    {
        "chopped": {
            "question": "what was al frankens position on july 7, ",
            "query": "SELECT ?ans1 WHERE { wd:Q319084 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Al Franken position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Al Franken's position on July 7, 2007",
            "query": "SELECT ?obj WHERE { wd:Q319084 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2009')) }",
            "NLQuery": "SELECT ?obj WHERE { Al Franken position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2009')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2007",
            "choppedEntity": "2009"
        }
    },
    {
        "chopped": {
            "question": "which is the borough of new york city for the category of the associated people of the people from manhattan and contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q408804 . ?ans1 wdt:P1792 wd:Q7234769 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of borough of New York City . ?ans1 category of associated people Category:People from Manhattan . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the borough of New York City for the category of the associated people of the People from Manhattan and contains the word manhattan in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q408804 . ?sbj wdt:P1792 wd:Q7234769 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'manhattan')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of borough of New York City . ?sbj category of associated people Category:People from Manhattan . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'manhattan')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "manhattan in its name",
            "choppedEntity": "manhattan"
        }
    },
    {
        "chopped": {
            "question": "which physical object starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q223557 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of physical object . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which physical object starts with the letter z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q223557 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of physical object . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "which physical question begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q223557 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of physical object . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which physical question begins with the letter z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q223557 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of physical object . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "what are the angle that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11352 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of angle . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the angle that starts with the letter e",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11352 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of angle . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "e",
            "choppedEntity": "e"
        }
    },
    {
        "chopped": {
            "question": "what are the angle that begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11352 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of angle . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the angle that begins with the letter e",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11352 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of angle . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "e",
            "choppedEntity": "e"
        }
    },
    {
        "chopped": {
            "question": "what state of matter is water in when its density is ",
            "query": "SELECT ?ans1 WHERE { wd:Q283 p:P2054 ?s . ?s ps:P2054 ?x FILTER(contains(?x,?unknown)) . ?s pq:P515 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { water density ?s . ?s density ?x FILTER(contains(?x,?unknown)) . ?s phase of matter ?ans1}"
        },
        "original": {
            "question": "What state of matter is water in when it's density is .9857",
            "query": "SELECT ?value WHERE { wd:Q283 p:P2054 ?s . ?s ps:P2054 ?x FILTER(contains(?x,'0.9857')) . ?s pq:P515 ?value}",
            "NLQuery": "SELECT ?value WHERE { water density ?s . ?s density ?x FILTER(contains(?x,'0.9857')) . ?s phase of matter ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "9857",
            "choppedEntity": "0.9857"
        }
    },
    {
        "chopped": {
            "question": "which is the nutrient that starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q181394 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of nutrient . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHICH IS THE NUTRIENT THAT STARTS WITH V",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q181394 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of nutrient . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "which is the nutrient that begins  with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q181394 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of nutrient . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHICH IS THE NUTRIENT THAT BEGINS  WITH V",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q181394 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of nutrient . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "What is nominated for Gwen Verdon at ",
            "query": "SELECT ?ans1 WHERE { wd:Q508843 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x filter(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Gwen Verdon nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x filter(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What is nominated for Gwen Verdon at 1966-0-0",
            "query": "SELECT ?obj WHERE { wd:Q508843 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1966')) }",
            "NLQuery": "SELECT ?obj WHERE { Gwen Verdon nominated for ?s . ?s nominated for ?obj . ?s point in time ?x filter(contains(YEAR(?x),'1966')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1966-0-0",
            "choppedEntity": "1966-0-0"
        }
    },
    {
        "chopped": {
            "question": "What was Gwen Verdon nominated for at ",
            "query": "SELECT ?ans1 WHERE { wd:Q508843 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x filter(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Gwen Verdon nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x filter(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Gwen Verdon nominated for at 1966-0-0",
            "query": "SELECT ?obj WHERE { wd:Q508843 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1966')) }",
            "NLQuery": "SELECT ?obj WHERE { Gwen Verdon nominated for ?s . ?s nominated for ?obj . ?s point in time ?x filter(contains(YEAR(?x),'1966')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1966-0-0",
            "choppedEntity": "1966-0-0"
        }
    },
    {
        "chopped": {
            "question": "who was robert shaw married to until ",
            "query": "SELECT ?ans1 WHERE { wd:Q313727 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Robert Shaw spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was Robert Shaw married to until 1975",
            "query": "SELECT ?obj WHERE { wd:Q313727 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1975')) }",
            "NLQuery": "SELECT ?obj WHERE { Robert Shaw spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1975')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1975",
            "choppedEntity": "1975"
        }
    },
    {
        "chopped": {
            "question": "what was the name of robert shaws wife until ",
            "query": "SELECT ?ans1 WHERE { wd:Q313727 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Robert Shaw spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the name of Robert Shaws wife until 1975",
            "query": "SELECT ?obj WHERE { wd:Q313727 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1975')) }",
            "NLQuery": "SELECT ?obj WHERE { Robert Shaw spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1975')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1975",
            "choppedEntity": "1975"
        }
    },
    {
        "chopped": {
            "question": "what is the street address for air france, which has a postal code of ",
            "query": "SELECT ?ans1 WHERE { wd:Q131005 p:P969 ?s . ?s ps:P969 ?ans1 . ?s pq:P281 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Air France none ?s . ?s none ?ans1 . ?s postal code ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "What is the street address for Air France, which has a postal code of 95747",
            "query": "SELECT ?obj WHERE { wd:Q131005 p:P969 ?s . ?s ps:P969 ?obj . ?s pq:P281 ?x FILTER(contains(?x,'95747')) }",
            "NLQuery": "SELECT ?obj WHERE { Air France none ?s . ?s none ?obj . ?s postal code ?x FILTER(contains(?x,'95747')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "95747",
            "choppedEntity": "95747"
        }
    },
    {
        "chopped": {
            "question": "bring the milk tea that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1884224 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of milk tea . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Bring the milk tea that starts with the letter 't'",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1884224 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of milk tea . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "bring the drain tea that begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1884224 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of milk tea . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Bring the drain tea that begins with the letter 't'",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1884224 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of milk tea . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "who was he leader of niamey until ",
            "query": "SELECT ?ans1 WHERE { wd:Q3674 p:P6 ?s . ?s ps:P6 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Niamey head of government ?s . ?s head of government ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was he leader of Niamey until 1970",
            "query": "SELECT ?obj WHERE { wd:Q3674 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1970')) }",
            "NLQuery": "SELECT ?obj WHERE { Niamey head of government ?s . ?s head of government ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1970')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1970",
            "choppedEntity": "1970"
        }
    },
    {
        "chopped": {
            "question": "name the leader of niamey until ",
            "query": "SELECT ?ans1 WHERE { wd:Q3674 p:P6 ?s . ?s ps:P6 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Niamey head of government ?s . ?s head of government ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Name the leader of Niamey until 1970",
            "query": "SELECT ?obj WHERE { wd:Q3674 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1970')) }",
            "NLQuery": "SELECT ?obj WHERE { Niamey head of government ?s . ?s head of government ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1970')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1970",
            "choppedEntity": "1970"
        }
    },
    {
        "chopped": {
            "question": "what is the administrative territorial entity of khabarovsk that was established on april 28th, ",
            "query": "SELECT ?ans1 WHERE { wd:Q4454 p:P131 ?s . ?s ps:P131 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Khabarovsk located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What is the administrative territorial entity of Khabarovsk that was established on April 28th, 2004",
            "query": "SELECT ?obj WHERE { wd:Q4454 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2004')) }",
            "NLQuery": "SELECT ?obj WHERE { Khabarovsk located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2004')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2004",
            "choppedEntity": "2004"
        }
    },
    {
        "chopped": {
            "question": "name the administrative territorial entity of khabarovsk which was created on 28th april, ",
            "query": "SELECT ?ans1 WHERE { wd:Q4454 p:P131 ?s . ?s ps:P131 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Khabarovsk located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Name the administrative territorial entity of Khabarovsk which was created on 28th April, 2004.",
            "query": "SELECT ?obj WHERE { wd:Q4454 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2004')) }",
            "NLQuery": "SELECT ?obj WHERE { Khabarovsk located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2004')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2004",
            "choppedEntity": "2004"
        }
    },
    {
        "chopped": {
            "question": "what are the photographic technique which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1439691 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of photographic technique . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the photographic technique which start with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1439691 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of photographic technique . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what are the photographic method which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1439691 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of photographic technique . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the photographic method which begin with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1439691 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of photographic technique . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what are the stellar classification which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q179600 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of spectral class . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the stellar classification which start with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q179600 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of spectral class . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what stellar classification starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q179600 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of spectral class . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What stellar classification starts with the letter 't'",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q179600 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of spectral class . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "when was the inflation rate for lebanon ",
            "query": "SELECT ?ans1 WHERE { wd:Q822 p:P1279 ?s . ?s ps:P1279 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Lebanon inflation rate ?s . ?s inflation rate ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was the inflation rate for Lebanon 34.2",
            "query": "SELECT ?value WHERE { wd:Q822 p:P1279 ?s . ?s ps:P1279 ?x FILTER(contains(?x,'34.2')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Lebanon inflation rate ?s . ?s inflation rate ?x FILTER(contains(?x,'34.2')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "342",
            "choppedEntity": "34.2"
        }
    },
    {
        "chopped": {
            "question": "what was the year lebanon had an inflation rate of ",
            "query": "SELECT ?ans1 WHERE { wd:Q822 p:P1279 ?s . ?s ps:P1279 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Lebanon inflation rate ?s . ?s inflation rate ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "What was the year Lebanon had an inflation rate of 34.2",
            "query": "SELECT ?value WHERE { wd:Q822 p:P1279 ?s . ?s ps:P1279 ?x FILTER(contains(?x,'34.2')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Lebanon inflation rate ?s . ?s inflation rate ?x FILTER(contains(?x,'34.2')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "342",
            "choppedEntity": "34.2"
        }
    },
    {
        "chopped": {
            "question": "what is violas higher taxon that is known in the vernacular as ",
            "query": "SELECT ?ans1 WHERE { wd:Q146095 wdt:P171 ?ans1 . ?ans1 wdt:P1843 ?x FILTER(contains(?x,'\u0424\u0438\u0430\u043b\u043a\u043e\u0432\u044b\u0435'))}",
            "NLQuery": "SELECT ?ans1 WHERE { Viola parent taxon ?ans1 . ?ans1 taxon common name ?x FILTER(contains(?x,'\u0424\u0438\u0430\u043b\u043a\u043e\u0432\u044b\u0435'))}"
        },
        "original": {
            "question": "What is Viola's higher taxon that is known in the vernacular as \u0424\u0438\u0430\u043b\u043a\u043e\u0432\u044b\u0435",
            "query": "SELECT ?answer WHERE { wd:Q146095 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'\u0424\u0438\u0430\u043b\u043a\u043e\u0432\u044b\u0435'))}",
            "NLQuery": "SELECT ?answer WHERE { Viola parent taxon ?answer . ?answer taxon common name ?x FILTER(contains(?x,'\u0424\u0438\u0430\u043b\u043a\u043e\u0432\u044b\u0435'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u0444\u0438\u0430\u043b\u043a\u043e\u0432\u044b\u0435",
            "choppedEntity": "\u0444\u0438\u0430\u043b\u043a\u043e\u0432\u044b\u0435"
        }
    },
    {
        "chopped": {
            "question": "what is violas greater taxon that is recognised in the vernacular as ",
            "query": "SELECT ?ans1 WHERE { wd:Q146095 wdt:P171 ?ans1 . ?ans1 wdt:P1843 ?x FILTER(contains(?x,'\u0424\u0438\u0430\u043b\u043a\u043e\u0432\u044b\u0435'))}",
            "NLQuery": "SELECT ?ans1 WHERE { Viola parent taxon ?ans1 . ?ans1 taxon common name ?x FILTER(contains(?x,'\u0424\u0438\u0430\u043b\u043a\u043e\u0432\u044b\u0435'))}"
        },
        "original": {
            "question": "What is Viola's greater taxon that is recognised in the vernacular as \u0424\u0438\u0430\u043b\u043a\u043e\u0432\u044b\u0435",
            "query": "SELECT ?answer WHERE { wd:Q146095 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'\u0424\u0438\u0430\u043b\u043a\u043e\u0432\u044b\u0435'))}",
            "NLQuery": "SELECT ?answer WHERE { Viola parent taxon ?answer . ?answer taxon common name ?x FILTER(contains(?x,'\u0424\u0438\u0430\u043b\u043a\u043e\u0432\u044b\u0435'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u0444\u0438\u0430\u043b\u043a\u043e\u0432\u044b\u0435",
            "choppedEntity": "\u0444\u0438\u0430\u043b\u043a\u043e\u0432\u044b\u0435"
        }
    },
    {
        "chopped": {
            "question": "what was the population of mashhad on september 11th, ",
            "query": "SELECT ?ans1 WHERE { wd:Q121157 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mashhad population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of Mashhad on September 11th, 1991",
            "query": "SELECT ?obj WHERE { wd:Q121157 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1991')) }",
            "NLQuery": "SELECT ?obj WHERE { Mashhad population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1991')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1991",
            "choppedEntity": "1991"
        }
    },
    {
        "chopped": {
            "question": "give the population of terrassa on january 1, ",
            "query": "SELECT ?ans1 WHERE { wd:Q13939 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Terrassa population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Give the population of Terrassa on January 1, 2014.",
            "query": "SELECT ?obj WHERE { wd:Q13939 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2014')) }",
            "NLQuery": "SELECT ?obj WHERE { Terrassa population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2014')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2014",
            "choppedEntity": "2014"
        }
    },
    {
        "chopped": {
            "question": "which has villages in corrientes with co-ordinate location of ",
            "query": "SELECT ?ans1 WHERE { wd:Q44758 wdt:P150 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Corrientes contains administrative territorial entity ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Which has villages in Corrientes with co-ordinate location of -27.75",
            "query": "SELECT ?answer WHERE { wd:Q44758 wdt:P150 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'-27.75'))}",
            "NLQuery": "SELECT ?answer WHERE { Corrientes contains administrative territorial entity ?answer . ?answer coordinate location ?x FILTER(contains(?x,'-27.75'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "-2775",
            "choppedEntity": "-27.75"
        }
    },
    {
        "chopped": {
            "question": "which has villages in corrientes with co-ordinate vicinity of ",
            "query": "SELECT ?ans1 WHERE { wd:Q44758 wdt:P150 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Corrientes contains administrative territorial entity ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Which has villages in Corrientes with co-ordinate vicinity of -27.75",
            "query": "SELECT ?answer WHERE { wd:Q44758 wdt:P150 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'-27.75'))}",
            "NLQuery": "SELECT ?answer WHERE { Corrientes contains administrative territorial entity ?answer . ?answer coordinate location ?x FILTER(contains(?x,'-27.75'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "-2775",
            "choppedEntity": "-27.75"
        }
    },
    {
        "chopped": {
            "question": "what was the population of hanoi in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1858 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Hanoi population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of Hanoi in 2015",
            "query": "SELECT ?obj WHERE { wd:Q1858 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2015')) }",
            "NLQuery": "SELECT ?obj WHERE { Hanoi population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2015')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2015",
            "choppedEntity": "2015"
        }
    },
    {
        "chopped": {
            "question": "how many people were citizens of hanoi in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q1858 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Hanoi population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "How many people were citizens of Hanoi in the year 2015",
            "query": "SELECT ?obj WHERE { wd:Q1858 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2015')) }",
            "NLQuery": "SELECT ?obj WHERE { Hanoi population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2015')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2015",
            "choppedEntity": "2015"
        }
    },
    {
        "chopped": {
            "question": "on what military branch sigmund j\u00e4hn served until ",
            "query": "SELECT ?ans1 WHERE { wd:Q57229 p:P241 ?s . ?s ps:P241 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Sigmund J\u00e4hn military branch ?s . ?s military branch ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "On what military branch Sigmund J\u00e4hn served until 1965",
            "query": "SELECT ?obj WHERE { wd:Q57229 p:P241 ?s . ?s ps:P241 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1965')) }",
            "NLQuery": "SELECT ?obj WHERE { Sigmund J\u00e4hn military branch ?s . ?s military branch ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1965')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1965",
            "choppedEntity": "1965"
        }
    },
    {
        "chopped": {
            "question": "sigmund jahn served in what military branch until ",
            "query": "SELECT ?ans1 WHERE { wd:Q57229 p:P241 ?s . ?s ps:P241 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Sigmund J\u00e4hn military branch ?s . ?s military branch ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Sigmund Jahn served in what military branch until 1965",
            "query": "SELECT ?obj WHERE { wd:Q57229 p:P241 ?s . ?s ps:P241 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1965')) }",
            "NLQuery": "SELECT ?obj WHERE { Sigmund J\u00e4hn military branch ?s . ?s military branch ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1965')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1965",
            "choppedEntity": "1965"
        }
    },
    {
        "chopped": {
            "question": "what award did walter cronkite receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q31073 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Walter Cronkite award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Walter Cronkite receive in 1980",
            "query": "SELECT ?obj WHERE { wd:Q31073 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1980')) }",
            "NLQuery": "SELECT ?obj WHERE { Walter Cronkite award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1980')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1980",
            "choppedEntity": "1980"
        }
    },
    {
        "chopped": {
            "question": "walter cronkite received which award in ",
            "query": "SELECT ?ans1 WHERE { wd:Q31073 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Walter Cronkite award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Walter Cronkite received which award in 1980",
            "query": "SELECT ?obj WHERE { wd:Q31073 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1980')) }",
            "NLQuery": "SELECT ?obj WHERE { Walter Cronkite award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1980')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1980",
            "choppedEntity": "1980"
        }
    },
    {
        "chopped": {
            "question": "tell me gene whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q7187 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of gene . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me gene whose name has the word vgf in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7187 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vgf')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of gene . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vgf')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "vgf in it",
            "choppedEntity": "vgf"
        }
    },
    {
        "chopped": {
            "question": "let me know quality whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q7187 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of gene . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know quality whose title has the word vgf in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7187 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vgf')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of gene . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vgf')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "vgf in it",
            "choppedEntity": "vgf"
        }
    },
    {
        "chopped": {
            "question": "what award was glenn gould nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q216924 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Glenn Gould nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award was Glenn Gould nominated for in 1982",
            "query": "SELECT ?obj WHERE { wd:Q216924 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1982')) }",
            "NLQuery": "SELECT ?obj WHERE { Glenn Gould nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1982')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1982",
            "choppedEntity": "1982"
        }
    },
    {
        "chopped": {
            "question": "glenn gould was nominated for what award in ",
            "query": "SELECT ?ans1 WHERE { wd:Q216924 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Glenn Gould nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Glenn Gould was nominated for what award in 1982",
            "query": "SELECT ?obj WHERE { wd:Q216924 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1982')) }",
            "NLQuery": "SELECT ?obj WHERE { Glenn Gould nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1982')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1982",
            "choppedEntity": "1982"
        }
    },
    {
        "chopped": {
            "question": "name a computer model using commodore basic v2 that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q55990535 . ?ans1 wdt:P306 wd:Q1115899 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of computer model . ?ans1 operating system Commodore BASIC V2 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a computer model using Commodore BASIC V2 that contains the word \"64\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55990535 . ?sbj wdt:P306 wd:Q1115899 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), '64')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of computer model . ?sbj operating system Commodore BASIC V2 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), '64')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "64 in its name",
            "choppedEntity": "64"
        }
    },
    {
        "chopped": {
            "question": "title a computer demonstrate utilizing commodore essential v2 that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q55990535 . ?ans1 wdt:P306 wd:Q1115899 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of computer model . ?ans1 operating system Commodore BASIC V2 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Title a computer demonstrate utilizing Commodore Essential V2 that contains the word \"64\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55990535 . ?sbj wdt:P306 wd:Q1115899 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), '64')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of computer model . ?sbj operating system Commodore BASIC V2 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), '64')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "64 in its name",
            "choppedEntity": "64"
        }
    },
    {
        "chopped": {
            "question": "what are the art form which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q56055944 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of art form . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the art form which start with the letter s",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56055944 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of art form . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what is the art form that begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q56055944 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of art form . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is the art form that begins with the letter s",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56055944 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of art form . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what are the war of national liberation which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1006311 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of war of national liberation . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the war of national liberation which start with the letter war",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1006311 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of war of national liberation . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "war",
            "choppedEntity": "war"
        }
    },
    {
        "chopped": {
            "question": "what are the war of national freedom which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1006311 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of war of national liberation . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the war of national freedom which begin with the letter war",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1006311 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of war of national liberation . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "war",
            "choppedEntity": "war"
        }
    },
    {
        "chopped": {
            "question": "tell me the public univbersity that used english language and which starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q875538 . ?ans1 wdt:P2936 wd:Q1860 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of public university . ?ans1 language used English . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the public univbersity that used English language and which starts with the letter u",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q875538 . ?sbj wdt:P2936 wd:Q1860 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of public university . ?sbj language used English . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "tell  me national anthem published in the army and navy hymnal starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q23691 . ?ans1 wdt:P1433 wd:Q50308756 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of national anthem . ?ans1 published in The Army and Navy Hymnal . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "tell  me national anthem published in The Army and Navy Hymnal starts with b",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23691 . ?sbj wdt:P1433 wd:Q50308756 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of national anthem . ?sbj published in The Army and Navy Hymnal . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "b",
            "choppedEntity": "b"
        }
    },
    {
        "chopped": {
            "question": "let me know national song of devotion distributed within the armed force and naval force hymn book begins with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q23691 . ?ans1 wdt:P1433 wd:Q50308756 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of national anthem . ?ans1 published in The Army and Navy Hymnal . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "let me know national song of devotion distributed within The Armed force and Naval force Hymn book begins with b",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23691 . ?sbj wdt:P1433 wd:Q50308756 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of national anthem . ?sbj published in The Army and Navy Hymnal . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "b",
            "choppedEntity": "b"
        }
    },
    {
        "chopped": {
            "question": "what is the population of thirteen colonies in ",
            "query": "SELECT ?ans1 WHERE { wd:Q179997 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Thirteen Colonies population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "What is the population of Thirteen colonies in 1980",
            "query": "SELECT ?value WHERE { wd:Q179997 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'1980')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Thirteen Colonies population ?s . ?s population ?x FILTER(contains(?x,'1980')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "1980",
            "choppedEntity": "1980"
        }
    },
    {
        "chopped": {
            "question": "how many people lived in the thirteen colonies in ",
            "query": "SELECT ?ans1 WHERE { wd:Q179997 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Thirteen Colonies population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "How many people lived in the Thirteen Colonies in 1980",
            "query": "SELECT ?value WHERE { wd:Q179997 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'1980')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Thirteen Colonies population ?s . ?s population ?x FILTER(contains(?x,'1980')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "1980",
            "choppedEntity": "1980"
        }
    },
    {
        "chopped": {
            "question": "what was the population of chelyabinsk on ",
            "query": "SELECT ?ans1 WHERE { wd:Q906 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Chelyabinsk population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of Chelyabinsk on 1926",
            "query": "SELECT ?obj WHERE { wd:Q906 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1926')) }",
            "NLQuery": "SELECT ?obj WHERE { Chelyabinsk population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1926')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1926",
            "choppedEntity": "1926"
        }
    },
    {
        "chopped": {
            "question": "give me the population of chelyabinsk in ",
            "query": "SELECT ?ans1 WHERE { wd:Q906 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Chelyabinsk population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Give me the population of Chelyabinsk in 1926.",
            "query": "SELECT ?obj WHERE { wd:Q906 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1926')) }",
            "NLQuery": "SELECT ?obj WHERE { Chelyabinsk population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1926')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1926",
            "choppedEntity": "1926"
        }
    },
    {
        "chopped": {
            "question": "which spinning galaxy starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2488 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of spiral galaxy . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which spinning galaxy starts with the letter 'u'",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2488 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of spiral galaxy . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "what are the machine learning which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2539 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of machine learning . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the machine learning which start with the letter m",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2539 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of machine learning . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "m",
            "choppedEntity": "m"
        }
    },
    {
        "chopped": {
            "question": "what are the machine learning which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2539 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of machine learning . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the machine learning which begin with the letter m",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2539 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of machine learning . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "m",
            "choppedEntity": "m"
        }
    },
    {
        "chopped": {
            "question": "which is the city of united states that starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1093829 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of city of the United States . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHICH IS THE CITY OF UNITED STATES THAT STARTS WITH W",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1093829 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of city of the United States . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "what position did john c calhoun hold in series ordinal when he was ",
            "query": "SELECT ?ans1 WHERE { wd:Q207191 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1545 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { John C. Calhoun position held ?s . ?s position held ?ans1 . ?s series ordinal ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "What position did John C. Calhoun hold in Series Ordinal when he was 16",
            "query": "SELECT ?obj WHERE { wd:Q207191 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1545 ?x FILTER(contains(?x,'16')) }",
            "NLQuery": "SELECT ?obj WHERE { John C. Calhoun position held ?s . ?s position held ?obj . ?s series ordinal ?x FILTER(contains(?x,'16')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "16",
            "choppedEntity": "16"
        }
    },
    {
        "chopped": {
            "question": "which position did john c calhoun hold in series ordinal when he was ",
            "query": "SELECT ?ans1 WHERE { wd:Q207191 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P1545 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { John C. Calhoun position held ?s . ?s position held ?ans1 . ?s series ordinal ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "Which position did John C. Calhoun hold in Series Ordinal when he was 16",
            "query": "SELECT ?obj WHERE { wd:Q207191 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1545 ?x FILTER(contains(?x,'16')) }",
            "NLQuery": "SELECT ?obj WHERE { John C. Calhoun position held ?s . ?s position held ?obj . ?s series ordinal ?x FILTER(contains(?x,'16')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "16",
            "choppedEntity": "16"
        }
    },
    {
        "chopped": {
            "question": "what is the biological sex of curtis warren, also known as ",
            "query": "SELECT ?ans1 WHERE { wd:Q3699686 wdt:P21 ?ans1 . ?ans1 wdt:P1813 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Curtis Warren sex or gender ?ans1 . ?ans1 short name ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the biological sex of Curtis Warren, also known as \u7537",
            "query": "SELECT ?answer WHERE { wd:Q3699686 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'\u7537'))}",
            "NLQuery": "SELECT ?answer WHERE { Curtis Warren sex or gender ?answer . ?answer short name ?x FILTER(contains(?x,'\u7537'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u7537",
            "choppedEntity": "\u7537"
        }
    },
    {
        "chopped": {
            "question": "what is the biological sex of curtis warren, also recognized as ",
            "query": "SELECT ?ans1 WHERE { wd:Q3699686 wdt:P21 ?ans1 . ?ans1 wdt:P1813 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Curtis Warren sex or gender ?ans1 . ?ans1 short name ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the biological sex of Curtis Warren, also recognized as \u7537",
            "query": "SELECT ?answer WHERE { wd:Q3699686 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'\u7537'))}",
            "NLQuery": "SELECT ?answer WHERE { Curtis Warren sex or gender ?answer . ?answer short name ?x FILTER(contains(?x,'\u7537'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u7537",
            "choppedEntity": "\u7537"
        }
    },
    {
        "chopped": {
            "question": "give me a first-class city name, that starts with an alphabet ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15221304 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of first-class city . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Give me a first-class city name, that starts with an alphabet 'm'.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15221304 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of first-class city . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "m",
            "choppedEntity": "m"
        }
    },
    {
        "chopped": {
            "question": "which first-rate city name begins with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15221304 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of first-class city . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which first-rate city name begins with M",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15221304 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of first-class city . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "m",
            "choppedEntity": "m"
        }
    },
    {
        "chopped": {
            "question": "who was rafael nadals head coach starting in ",
            "query": "SELECT ?ans1 WHERE { wd:Q10132 p:P286 ?s . ?s ps:P286 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Rafael Nadal head coach ?s . ?s head coach ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was Rafael Nadal's head coach starting in 1990",
            "query": "SELECT ?obj WHERE { wd:Q10132 p:P286 ?s . ?s ps:P286 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1990')) }",
            "NLQuery": "SELECT ?obj WHERE { Rafael Nadal head coach ?s . ?s head coach ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1990')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1990",
            "choppedEntity": "1990"
        }
    },
    {
        "chopped": {
            "question": "who was the president of calabria on 4/29/",
            "query": "SELECT ?ans1 WHERE { wd:Q1458 p:P6 ?s . ?s ps:P6 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Calabria head of government ?s . ?s head of government ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was the president of Calabria on 4/29/2014",
            "query": "SELECT ?obj WHERE { wd:Q1458 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'2014')) }",
            "NLQuery": "SELECT ?obj WHERE { Calabria head of government ?s . ?s head of government ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'2014')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2014",
            "choppedEntity": "2014"
        }
    },
    {
        "chopped": {
            "question": "which annual event starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q18574946 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of none . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which annual event starts with t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18574946 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of none . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what annual event begins with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q18574946 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of none . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What annual event begins with t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18574946 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of none . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "which nomination did the simpsons receive in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q886 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { The Simpsons nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which nomination did The simpsons receive in the year 2001",
            "query": "SELECT ?obj WHERE { wd:Q886 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2001')) }",
            "NLQuery": "SELECT ?obj WHERE { The Simpsons nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2001')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2001",
            "choppedEntity": "2001"
        }
    },
    {
        "chopped": {
            "question": "what award did david lynch receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q2071 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { David Lynch award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did David Lynch receive in 2006",
            "query": "SELECT ?obj WHERE { wd:Q2071 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2006')) }",
            "NLQuery": "SELECT ?obj WHERE { David Lynch award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2006')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2006",
            "choppedEntity": "2006"
        }
    },
    {
        "chopped": {
            "question": "which was the award that david lynch received in ",
            "query": "SELECT ?ans1 WHERE { wd:Q2071 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { David Lynch award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which was the award that David Lynch received in 2006",
            "query": "SELECT ?obj WHERE { wd:Q2071 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2006')) }",
            "NLQuery": "SELECT ?obj WHERE { David Lynch award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2006')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2006",
            "choppedEntity": "2006"
        }
    },
    {
        "chopped": {
            "question": "who was nominated for king of the hill in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1135966 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { King of the Hill nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was nominated for King of the Hill in 1998",
            "query": "SELECT ?obj WHERE { wd:Q1135966 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1998')) }",
            "NLQuery": "SELECT ?obj WHERE { King of the Hill nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1998')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1998",
            "choppedEntity": "1998"
        }
    },
    {
        "chopped": {
            "question": "give me the name of the person nominated for king of the hill in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1135966 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { King of the Hill nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Give me the name of the person nominated for King of the Hill in 1998.",
            "query": "SELECT ?obj WHERE { wd:Q1135966 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1998')) }",
            "NLQuery": "SELECT ?obj WHERE { King of the Hill nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1998')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1998",
            "choppedEntity": "1998"
        }
    },
    {
        "chopped": {
            "question": "tell me the chemical element that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11344 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of chemical element . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "TELL ME THE CHEMICAL ELEMENT THAT CONTAINS THE WORD YTTERBIUM IN THEIR NAME",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11344 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ytterbium')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of chemical element . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ytterbium')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "ytterbium in their name",
            "choppedEntity": "ytterbium"
        }
    },
    {
        "chopped": {
            "question": "what are the vector physical quantity which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2672914 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of vector quantity . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the vector physical quantity which start with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2672914 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of vector quantity . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what are the vector physical quantity which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2672914 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of vector quantity . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the vector physical quantity which begin with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2672914 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of vector quantity . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what are the greek primordial deity which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q878099 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Greek primordial deity . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the Greek primordial deity which start with the letter u",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q878099 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Greek primordial deity . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "what greek deity starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q878099 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Greek primordial deity . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What Greek deity starts with \"u\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q878099 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Greek primordial deity . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "thomas babington macaulay held what position until ",
            "query": "SELECT ?ans1 WHERE { wd:Q315989 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Thomas Babington Macaulay, 1st Baron Macaulay position held ?s . ?s position held ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Thomas Babington Macaulay held what position until 1934",
            "query": "SELECT ?obj WHERE { wd:Q315989 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1834')) }",
            "NLQuery": "SELECT ?obj WHERE { Thomas Babington Macaulay, 1st Baron Macaulay position held ?s . ?s position held ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1834')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1934",
            "choppedEntity": "1834"
        }
    },
    {
        "chopped": {
            "question": "what is named after vladikavkaz since the year of ",
            "query": "SELECT ?ans1 WHERE { wd:Q5239 p:P138 ?s . ?s ps:P138 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Vladikavkaz named after ?s . ?s named after ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What is named after Vladikavkaz since the year of 1954",
            "query": "SELECT ?obj WHERE { wd:Q5239 p:P138 ?s . ?s ps:P138 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1954')) }",
            "NLQuery": "SELECT ?obj WHERE { Vladikavkaz named after ?s . ?s named after ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1954')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1954",
            "choppedEntity": "1954"
        }
    },
    {
        "chopped": {
            "question": "what are the native american tribe in the united states which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q7840353 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Native American tribe in the United States . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the Native American tribe in the United States which start with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7840353 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Native American tribe in the United States . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what are the local american tribe within the joined together states which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q7840353 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Native American tribe in the United States . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the Local American tribe within the Joined together States which begin with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7840353 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Native American tribe in the United States . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what are the type of number which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q47460393 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of type of number . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the type of number which start with the letter n",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q47460393 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'n')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of type of number . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'n')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "n",
            "choppedEntity": "n"
        }
    },
    {
        "chopped": {
            "question": "what are the type of number which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q47460393 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of type of number . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the type of number which begin with the letter n",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q47460393 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'n')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of type of number . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'n')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "n",
            "choppedEntity": "n"
        }
    },
    {
        "chopped": {
            "question": "for what maria sharapova was nominated in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q11666 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Maria Sharapova nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "For what Maria Sharapova was nominated in the year 2007",
            "query": "SELECT ?obj WHERE { wd:Q11666 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2007')) }",
            "NLQuery": "SELECT ?obj WHERE { Maria Sharapova nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2007')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2007",
            "choppedEntity": "2007"
        }
    },
    {
        "chopped": {
            "question": "what was maria sharapova nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q11666 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Maria Sharapova nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Maria Sharapova nominated for in 2007",
            "query": "SELECT ?obj WHERE { wd:Q11666 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2007')) }",
            "NLQuery": "SELECT ?obj WHERE { Maria Sharapova nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2007')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2007",
            "choppedEntity": "2007"
        }
    },
    {
        "chopped": {
            "question": "when did the ivory coast have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1008 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ivory Coast population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did the Ivory Coast have a population of 1.17111e+07",
            "query": "SELECT ?value WHERE { wd:Q1008 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'1.17111e+07')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ivory Coast population ?s . ?s population ?x FILTER(contains(?x,'1.17111e+07')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "117111e+07",
            "choppedEntity": "1.17111e+07"
        }
    },
    {
        "chopped": {
            "question": "in what year did the ivory coast have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1008 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ivory Coast population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "In what year did the Ivory Coast have a population of 1.17111e+07",
            "query": "SELECT ?value WHERE { wd:Q1008 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'1.17111e+07')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ivory Coast population ?s . ?s population ?x FILTER(contains(?x,'1.17111e+07')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "117111e+07",
            "choppedEntity": "1.17111e+07"
        }
    },
    {
        "chopped": {
            "question": "was the movie, full metal jacket released on june 26, ",
            "query": "SELECT ?ans1 WHERE { wd:Q243439 p:P577 ?s . ?s ps:P577 ?x FILTER(contains(YEAR(?x),?unknown)) . ?s pq:P291 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Full Metal Jacket date of publication ?s . ?s date of publication ?x FILTER(contains(YEAR(?x),?unknown)) . ?s place of publication ?ans1}"
        },
        "original": {
            "question": "Was the movie, 'Full Metal Jacket' released on June 26, 1987",
            "query": "SELECT ?value WHERE { wd:Q243439 p:P577 ?s . ?s ps:P577 ?x FILTER(contains(YEAR(?x),'1987')) . ?s pq:P291 ?value}",
            "NLQuery": "SELECT ?value WHERE { Full Metal Jacket date of publication ?s . ?s date of publication ?x FILTER(contains(YEAR(?x),'1987')) . ?s place of publication ?value}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1987",
            "choppedEntity": "1987"
        }
    },
    {
        "chopped": {
            "question": "is that movie  full metal jacket was released on june 26, ",
            "query": "SELECT ?ans1 WHERE { wd:Q243439 p:P577 ?s . ?s ps:P577 ?x FILTER(contains(YEAR(?x),?unknown)) . ?s pq:P291 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Full Metal Jacket date of publication ?s . ?s date of publication ?x FILTER(contains(YEAR(?x),?unknown)) . ?s place of publication ?ans1}"
        },
        "original": {
            "question": "Is that movie  \"Full Metal Jacket\" was released on June 26, 1987.",
            "query": "SELECT ?value WHERE { wd:Q243439 p:P577 ?s . ?s ps:P577 ?x FILTER(contains(YEAR(?x),'1987')) . ?s pq:P291 ?value}",
            "NLQuery": "SELECT ?value WHERE { Full Metal Jacket date of publication ?s . ?s date of publication ?x FILTER(contains(YEAR(?x),'1987')) . ?s place of publication ?value}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1987",
            "choppedEntity": "1987"
        }
    },
    {
        "chopped": {
            "question": "when was trentos population at ",
            "query": "SELECT ?ans1 WHERE { wd:Q3376 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Trento population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was Trento's population at 117185",
            "query": "SELECT ?value WHERE { wd:Q3376 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'117185')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Trento population ?s . ?s population ?x FILTER(contains(?x,'117185')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "117185",
            "choppedEntity": "117185"
        }
    },
    {
        "chopped": {
            "question": "tell me phonetic alphabet whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q579287 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of phonetic alphabet . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "TELL ME PHONETIC ALPHABET WHOSE NAME HAS THE WORD TEUTHONISTA IN IT.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q579287 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'teuthonista')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of phonetic alphabet . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'teuthonista')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "teuthonista in it",
            "choppedEntity": "teuthonista"
        }
    },
    {
        "chopped": {
            "question": "what is the administrative entity of corsica since january first ",
            "query": "SELECT ?ans1 WHERE { wd:Q14112 p:P150 ?s . ?s ps:P150 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Corsica contains administrative territorial entity ?s . ?s contains administrative territorial entity ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What is the administrative entity of Corsica since January first 2018",
            "query": "SELECT ?obj WHERE { wd:Q14112 p:P150 ?s . ?s ps:P150 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'2018')) }",
            "NLQuery": "SELECT ?obj WHERE { Corsica contains administrative territorial entity ?s . ?s contains administrative territorial entity ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'2018')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2018",
            "choppedEntity": "2018"
        }
    },
    {
        "chopped": {
            "question": "who has governed corsica since ",
            "query": "SELECT ?ans1 WHERE { wd:Q14112 p:P150 ?s . ?s ps:P150 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Corsica contains administrative territorial entity ?s . ?s contains administrative territorial entity ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who has governed Corsica since 2018",
            "query": "SELECT ?obj WHERE { wd:Q14112 p:P150 ?s . ?s ps:P150 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'2018')) }",
            "NLQuery": "SELECT ?obj WHERE { Corsica contains administrative territorial entity ?s . ?s contains administrative territorial entity ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'2018')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2018",
            "choppedEntity": "2018"
        }
    },
    {
        "chopped": {
            "question": "which is the association football stadium for which foster + partners were architects and contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1154710 . ?ans1 wdt:P84 wd:Q1208016 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of association football venue . ?ans1 architect Foster + Partners . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the association football stadium for which Foster + Partners were architects and contains the word stadium in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1154710 . ?sbj wdt:P84 wd:Q1208016 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'stadium')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of association football venue . ?sbj architect Foster + Partners . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'stadium')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "stadium in its name",
            "choppedEntity": "stadium"
        }
    },
    {
        "chopped": {
            "question": "which is the association football stadium for which foster + partners were architects and contains the phrase ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1154710 . ?ans1 wdt:P84 wd:Q1208016 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of association football venue . ?ans1 architect Foster + Partners . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the association football stadium for which Foster + Partners were architects and contains the phrase stadium in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1154710 . ?sbj wdt:P84 wd:Q1208016 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'stadium')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of association football venue . ?sbj architect Foster + Partners . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'stadium')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "stadium in its name",
            "choppedEntity": "stadium"
        }
    },
    {
        "chopped": {
            "question": "name a film in its name containing the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q24869 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of feature film . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a film in its name containing the word \"tale\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24869 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tale')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of feature film . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tale')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "tale",
            "choppedEntity": "tale"
        }
    },
    {
        "chopped": {
            "question": "what people are indigenous to the usa and start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q951873 . ?ans1 wdt:P2341 wd:Q30 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of ethnolect . ?ans1 indigenous to United States of America . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What people are indigenous to the USA and start with the letter A",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q951873 . ?sbj wdt:P2341 wd:Q30 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of ethnolect . ?sbj indigenous to United States of America . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "what individuals are indigenous to the usa and begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q951873 . ?ans1 wdt:P2341 wd:Q30 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of ethnolect . ?ans1 indigenous to United States of America . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What individuals are indigenous to the USA and begin with the letter A",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q951873 . ?sbj wdt:P2341 wd:Q30 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of ethnolect . ?sbj indigenous to United States of America . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "how was the population of gijon determined to be ",
            "query": "SELECT ?ans1 WHERE { wd:Q12273 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P459 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Gij\u00f3n population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s determination method ?ans1}"
        },
        "original": {
            "question": "How was the population of Gijon determined to be 277559",
            "query": "SELECT ?value WHERE { wd:Q12273 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'277559.0')) . ?s pq:P459 ?value}",
            "NLQuery": "SELECT ?value WHERE { Gij\u00f3n population ?s . ?s population ?x FILTER(contains(?x,'277559.0')) . ?s determination method ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "277559",
            "choppedEntity": "277559.0"
        }
    },
    {
        "chopped": {
            "question": "tell me how the population of gijon was calculated to be ",
            "query": "SELECT ?ans1 WHERE { wd:Q12273 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P459 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Gij\u00f3n population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s determination method ?ans1}"
        },
        "original": {
            "question": "Tell me how the population of Gijon was calculated to be 277559.",
            "query": "SELECT ?value WHERE { wd:Q12273 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'277559.0')) . ?s pq:P459 ?value}",
            "NLQuery": "SELECT ?value WHERE { Gij\u00f3n population ?s . ?s population ?x FILTER(contains(?x,'277559.0')) . ?s determination method ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "277559",
            "choppedEntity": "277559.0"
        }
    },
    {
        "chopped": {
            "question": "what are the types of business entities in the usa that start with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q57653825 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of type of business entity in the USA . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the types of business entities in the USA that start with c",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q57653825 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of type of business entity in the USA . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "c",
            "choppedEntity": "c"
        }
    },
    {
        "chopped": {
            "question": "what are the types of business entities in the usa that begin with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q57653825 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of type of business entity in the USA . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the types of business entities in the USA that begin with c",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q57653825 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of type of business entity in the USA . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "c",
            "choppedEntity": "c"
        }
    },
    {
        "chopped": {
            "question": "what award was received by machester united fc in ",
            "query": "SELECT ?ans1 WHERE { wd:Q18656 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Manchester United F.C. award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award was received by Machester United F.C. in 2000",
            "query": "SELECT ?obj WHERE { wd:Q18656 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2000')) }",
            "NLQuery": "SELECT ?obj WHERE { Manchester United F.C. award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2000')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2000",
            "choppedEntity": "2000"
        }
    },
    {
        "chopped": {
            "question": "what are the physical quantity which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q107715 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of physical quantity . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the physical quantity which start with the letter w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q107715 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of physical quantity . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "what are the physical amount which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q107715 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of physical quantity . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the physical amount which begin with the letter w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q107715 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of physical quantity . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "what numeral system contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q122653 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of numeral system . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What numeral system contains the word \"system\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q122653 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'system')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of numeral system . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'system')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "system in its name",
            "choppedEntity": "system"
        }
    },
    {
        "chopped": {
            "question": "name a kind of leather that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q286 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Leather . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a kind of leather that starts with letter S",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q286 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Leather . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "title a kind of calfskin that begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q286 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Leather . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Title a kind of calfskin that begins with letter S",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q286 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Leather . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what head of government of cape town started 05-12-",
            "query": "SELECT ?ans1 WHERE { wd:Q1185115 p:P6 ?s . ?s ps:P6 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { City of Cape Town head of government ?s . ?s head of government ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What head of government of Cape Town started 05-12-2009",
            "query": "SELECT ?obj WHERE { wd:Q1185115 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2009')) }",
            "NLQuery": "SELECT ?obj WHERE { City of Cape Town head of government ?s . ?s head of government ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2009')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2009",
            "choppedEntity": "2009"
        }
    },
    {
        "chopped": {
            "question": "which government of cape town head started 05-12-",
            "query": "SELECT ?ans1 WHERE { wd:Q1185115 p:P6 ?s . ?s ps:P6 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { City of Cape Town head of government ?s . ?s head of government ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which government of Cape Town head started 05-12-2009",
            "query": "SELECT ?obj WHERE { wd:Q1185115 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2009')) }",
            "NLQuery": "SELECT ?obj WHERE { City of Cape Town head of government ?s . ?s head of government ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2009')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2009",
            "choppedEntity": "2009"
        }
    },
    {
        "chopped": {
            "question": "what is the aspect ratio for belarus that contains the map image as ",
            "query": "SELECT ?ans1 WHERE { wd:Q184 p:P242 ?s . ?s ps:P242 ?x FILTER(contains(?x,'LocationBelarus.svg')) . ?s pq:P2061 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Belarus locator map image ?s . ?s locator map image ?x FILTER(contains(?x,'LocationBelarus.svg')) . ?s aspect ratio ?ans1}"
        },
        "original": {
            "question": "What is the aspect ratio for Belarus that contains the map image as LocationBelarus.svg",
            "query": "SELECT ?value WHERE { wd:Q184 p:P242 ?s . ?s ps:P242 ?x FILTER(contains(?x,'LocationBelarus.svg')) . ?s pq:P2061 ?value}",
            "NLQuery": "SELECT ?value WHERE { Belarus locator map image ?s . ?s locator map image ?x FILTER(contains(?x,'LocationBelarus.svg')) . ?s aspect ratio ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "locationbelarussvg",
            "choppedEntity": "locationbelarus.svg"
        }
    },
    {
        "chopped": {
            "question": "whats the aspect ratio of belarus has the image ",
            "query": "SELECT ?ans1 WHERE { wd:Q184 p:P242 ?s . ?s ps:P242 ?x FILTER(contains(?x,'LocationBelarus.svg')) . ?s pq:P2061 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Belarus locator map image ?s . ?s locator map image ?x FILTER(contains(?x,'LocationBelarus.svg')) . ?s aspect ratio ?ans1}"
        },
        "original": {
            "question": "What's the aspect ratio of Belarus has the image LocationBelarus.svg",
            "query": "SELECT ?value WHERE { wd:Q184 p:P242 ?s . ?s ps:P242 ?x FILTER(contains(?x,'LocationBelarus.svg')) . ?s pq:P2061 ?value}",
            "NLQuery": "SELECT ?value WHERE { Belarus locator map image ?s . ?s locator map image ?x FILTER(contains(?x,'LocationBelarus.svg')) . ?s aspect ratio ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "locationbelarussvg",
            "choppedEntity": "locationbelarus.svg"
        }
    },
    {
        "chopped": {
            "question": "what are the lunar calendar which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q185688 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of lunar calendar . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the lunar calendar which start with the letter c",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q185688 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of lunar calendar . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "c",
            "choppedEntity": "c"
        }
    },
    {
        "chopped": {
            "question": "what are the lunar calendar which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q185688 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of lunar calendar . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the lunar calendar which begin with the letter c",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q185688 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of lunar calendar . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "c",
            "choppedEntity": "c"
        }
    },
    {
        "chopped": {
            "question": "who was alfred l kroeber employed by until ",
            "query": "SELECT ?ans1 WHERE { wd:Q311538 p:P108 ?s . ?s ps:P108 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Alfred L. Kroeber employer ?s . ?s employer ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was Alfred L. Kroeber employed by until 1945",
            "query": "SELECT ?obj WHERE { wd:Q311538 p:P108 ?s . ?s ps:P108 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1945')) }",
            "NLQuery": "SELECT ?obj WHERE { Alfred L. Kroeber employer ?s . ?s employer ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1945')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1945",
            "choppedEntity": "1945"
        }
    },
    {
        "chopped": {
            "question": "what company did alfred l kroeber work for until the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q311538 p:P108 ?s . ?s ps:P108 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Alfred L. Kroeber employer ?s . ?s employer ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What company did Alfred L. Kroeber work for until the year 1945",
            "query": "SELECT ?obj WHERE { wd:Q311538 p:P108 ?s . ?s ps:P108 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1945')) }",
            "NLQuery": "SELECT ?obj WHERE { Alfred L. Kroeber employer ?s . ?s employer ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1945')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1945",
            "choppedEntity": "1945"
        }
    },
    {
        "chopped": {
            "question": "tell me mythological greek character whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q22988604 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of mythological Greek character . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me mythological Greek character whose name has the word tityos in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22988604 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tityos')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of mythological Greek character . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tityos')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "tityos in it",
            "choppedEntity": "tityos"
        }
    },
    {
        "chopped": {
            "question": "let me know legendary greek character whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q22988604 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of mythological Greek character . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know legendary Greek character whose title has the word tityos in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22988604 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tityos')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of mythological Greek character . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tityos')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "tityos in it",
            "choppedEntity": "tityos"
        }
    },
    {
        "chopped": {
            "question": "what award did billy joel receive on january 1st, ",
            "query": "SELECT ?ans1 WHERE { wd:Q194333 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Billy Joel award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Billy Joel receive on January 1st, 2002",
            "query": "SELECT ?obj WHERE { wd:Q194333 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2002')) }",
            "NLQuery": "SELECT ?obj WHERE { Billy Joel award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2002')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2002",
            "choppedEntity": "2002"
        }
    },
    {
        "chopped": {
            "question": "what award did billy joel win on january 1st, ",
            "query": "SELECT ?ans1 WHERE { wd:Q194333 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Billy Joel award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Billy Joel win on January 1st, 2002",
            "query": "SELECT ?obj WHERE { wd:Q194333 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2002')) }",
            "NLQuery": "SELECT ?obj WHERE { Billy Joel award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2002')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2002",
            "choppedEntity": "2002"
        }
    },
    {
        "chopped": {
            "question": "tell me space mission that  followed by voyager 2 starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2133344 . ?ans1 wdt:P156 wd:Q48475 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of space mission . ?ans1 followed by Voyager 2 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "tell me space mission that  followed by voyager 2 starts with letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2133344 . ?sbj wdt:P156 wd:Q48475 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of space mission . ?sbj followed by Voyager 2 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "reveal me space mission that followed by voyager 2 begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2133344 . ?ans1 wdt:P156 wd:Q48475 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of space mission . ?ans1 followed by Voyager 2 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Reveal me space mission that followed by voyager 2 begins with letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2133344 . ?sbj wdt:P156 wd:Q48475 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of space mission . ?sbj followed by Voyager 2 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what point divides into the rhineland-palatinate, and has the wgs-84 position of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1200 wdt:P150 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Rhineland-Palatinate contains administrative territorial entity ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What point divides into the Rhineland-Palatinate, and has the wgs-84 position of 7.59778",
            "query": "SELECT ?answer WHERE { wd:Q1200 wdt:P150 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'7.59778'))}",
            "NLQuery": "SELECT ?answer WHERE { Rhineland-Palatinate contains administrative territorial entity ?answer . ?answer coordinate location ?x FILTER(contains(?x,'7.59778'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "759778",
            "choppedEntity": "7.59778"
        }
    },
    {
        "chopped": {
            "question": "what point partitions into the rhineland-palatinate, and has the wgs-84 position of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1200 wdt:P150 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Rhineland-Palatinate contains administrative territorial entity ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What point partitions into the Rhineland-Palatinate, and has the wgs-84 position of 7.59778",
            "query": "SELECT ?answer WHERE { wd:Q1200 wdt:P150 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'7.59778'))}",
            "NLQuery": "SELECT ?answer WHERE { Rhineland-Palatinate contains administrative territorial entity ?answer . ?answer coordinate location ?x FILTER(contains(?x,'7.59778'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "759778",
            "choppedEntity": "7.59778"
        }
    },
    {
        "chopped": {
            "question": "what position did oliver cromwell leave in ",
            "query": "SELECT ?ans1 WHERE { wd:Q44279 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Oliver Cromwell position held ?s . ?s position held ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What position did Oliver Cromwell leave in 1649",
            "query": "SELECT ?obj WHERE { wd:Q44279 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1649')) }",
            "NLQuery": "SELECT ?obj WHERE { Oliver Cromwell position held ?s . ?s position held ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1649')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1649",
            "choppedEntity": "1649"
        }
    },
    {
        "chopped": {
            "question": "oliver cromwell left which position in ",
            "query": "SELECT ?ans1 WHERE { wd:Q44279 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Oliver Cromwell position held ?s . ?s position held ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Oliver Cromwell left which position in 1649",
            "query": "SELECT ?obj WHERE { wd:Q44279 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1649')) }",
            "NLQuery": "SELECT ?obj WHERE { Oliver Cromwell position held ?s . ?s position held ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1649')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1649",
            "choppedEntity": "1649"
        }
    },
    {
        "chopped": {
            "question": "who is also known as g\u00fcrc\u00fc hatun and contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q5 . ?ans1 wdt:P3342 wd:Q2915023 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of human . ?ans1 significant person G\u00fcrc\u00fc Hatun . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Who is also known as G\u00fcrc\u00fc Hatun and contains the word \"rumi\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5 . ?sbj wdt:P3342 wd:Q2915023 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'rumi')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of human . ?sbj significant person G\u00fcrc\u00fc Hatun . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'rumi')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "rumi in its name",
            "choppedEntity": "rumi"
        }
    },
    {
        "chopped": {
            "question": "who is additionally known as g\u00fcrc\u00fc hatun and contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q5 . ?ans1 wdt:P3342 wd:Q2915023 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of human . ?ans1 significant person G\u00fcrc\u00fc Hatun . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Who is additionally known as G\u00fcrc\u00fc Hatun and contains the word \"rumi\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5 . ?sbj wdt:P3342 wd:Q2915023 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'rumi')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of human . ?sbj significant person G\u00fcrc\u00fc Hatun . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'rumi')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "rumi in its name",
            "choppedEntity": "rumi"
        }
    },
    {
        "chopped": {
            "question": "name an isotope of neutronium that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q12525553 . ?ans1 wdt:P517 wd:Q11418 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of isotope of neutronium . ?ans1 interaction weak interaction . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name an isotope of neutronium that starts with letter N",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12525553 . ?sbj wdt:P517 wd:Q11418 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'n')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of isotope of neutronium . ?sbj interaction weak interaction . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'n')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "n",
            "choppedEntity": "n"
        }
    },
    {
        "chopped": {
            "question": "title an isotope of neutronium that begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q12525553 . ?ans1 wdt:P517 wd:Q11418 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of isotope of neutronium . ?ans1 interaction weak interaction . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Title an isotope of neutronium that begins with letter N",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12525553 . ?sbj wdt:P517 wd:Q11418 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'n')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of isotope of neutronium . ?sbj interaction weak interaction . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'n')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "n",
            "choppedEntity": "n"
        }
    },
    {
        "chopped": {
            "question": "who became a student of charles le brun in 1",
            "query": "SELECT ?ans1 WHERE { wd:Q271676 p:P1066 ?s . ?s ps:P1066 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Charles Le Brun student of ?s . ?s student of ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who became a student of Charles Le Brun in 1633 ",
            "query": "SELECT ?obj WHERE { wd:Q271676 p:P1066 ?s . ?s ps:P1066 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1633')) }",
            "NLQuery": "SELECT ?obj WHERE { Charles Le Brun student of ?s . ?s student of ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1633')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1633",
            "choppedEntity": "1633"
        }
    },
    {
        "chopped": {
            "question": "who got to be a understudy of charles le brun in 1",
            "query": "SELECT ?ans1 WHERE { wd:Q271676 p:P1066 ?s . ?s ps:P1066 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Charles Le Brun student of ?s . ?s student of ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who got to be a understudy of Charles Le Brun in 1633 ",
            "query": "SELECT ?obj WHERE { wd:Q271676 p:P1066 ?s . ?s ps:P1066 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1633')) }",
            "NLQuery": "SELECT ?obj WHERE { Charles Le Brun student of ?s . ?s student of ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1633')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1633",
            "choppedEntity": "1633"
        }
    },
    {
        "chopped": {
            "question": "what award was arthur m schlesinger nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q435195 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Arthur M. Schlesinger nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award was Arthur M. Schlesinger nominated for in 1961",
            "query": "SELECT ?obj WHERE { wd:Q435195 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1961')) }",
            "NLQuery": "SELECT ?obj WHERE { Arthur M. Schlesinger nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1961')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1961",
            "choppedEntity": "1961"
        }
    },
    {
        "chopped": {
            "question": "for what award was arthur m schlesinger nominated in ",
            "query": "SELECT ?ans1 WHERE { wd:Q435195 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Arthur M. Schlesinger nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "For what award was Arthur M. Schlesinger nominated in 1961",
            "query": "SELECT ?obj WHERE { wd:Q435195 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1961')) }",
            "NLQuery": "SELECT ?obj WHERE { Arthur M. Schlesinger nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1961')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1961",
            "choppedEntity": "1961"
        }
    },
    {
        "chopped": {
            "question": "what is the birth location of harlow curtice, which has masl of ",
            "query": "SELECT ?ans1 WHERE { wd:Q472824 wdt:P19 ?ans1 . ?ans1 wdt:P2044 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Harlow Curtice place of birth ?ans1 . ?ans1 elevation above sea level ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the birth location of Harlow Curtice, which has MASL of 229.0",
            "query": "SELECT ?answer WHERE { wd:Q472824 wdt:P19 ?answer . ?answer wdt:P2044 ?x FILTER(contains(?x,'229.0'))}",
            "NLQuery": "SELECT ?answer WHERE { Harlow Curtice place of birth ?answer . ?answer elevation above sea level ?x FILTER(contains(?x,'229.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "2290",
            "choppedEntity": "229.0"
        }
    },
    {
        "chopped": {
            "question": "what is the start location of harlow curtice, which has masl of ",
            "query": "SELECT ?ans1 WHERE { wd:Q472824 wdt:P19 ?ans1 . ?ans1 wdt:P2044 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Harlow Curtice place of birth ?ans1 . ?ans1 elevation above sea level ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the start location of Harlow Curtice, which has MASL of 229.0",
            "query": "SELECT ?answer WHERE { wd:Q472824 wdt:P19 ?answer . ?answer wdt:P2044 ?x FILTER(contains(?x,'229.0'))}",
            "NLQuery": "SELECT ?answer WHERE { Harlow Curtice place of birth ?answer . ?answer elevation above sea level ?x FILTER(contains(?x,'229.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "2290",
            "choppedEntity": "229.0"
        }
    },
    {
        "chopped": {
            "question": "name a contract archived in the british library that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q93288 . ?ans1 wdt:P195 wd:Q23308 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of contract . ?ans1 collection British Library . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a contract archived in the British Library that starts with letter C",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q93288 . ?sbj wdt:P195 wd:Q23308 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of contract . ?sbj collection British Library . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "c",
            "choppedEntity": "c"
        }
    },
    {
        "chopped": {
            "question": "name a contract archived in the british library that begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q93288 . ?ans1 wdt:P195 wd:Q23308 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of contract . ?ans1 collection British Library . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a contract archived in the British Library that begins with letter C",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q93288 . ?sbj wdt:P195 wd:Q23308 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of contract . ?sbj collection British Library . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "c",
            "choppedEntity": "c"
        }
    },
    {
        "chopped": {
            "question": "what are the city/town which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q7930989 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of city/town . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what are the city/town which start with the letter y",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7930989 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of city/town . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "y",
            "choppedEntity": "y"
        }
    },
    {
        "chopped": {
            "question": "what are the city/town which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q7930989 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of city/town . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what are the city/town which begin with the letter y",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7930989 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of city/town . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "y",
            "choppedEntity": "y"
        }
    },
    {
        "chopped": {
            "question": "what social skills are used by the media that contain the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1413287 . ?ans1 wdt:P1535 wd:Q17502905 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of social skills . ?ans1 used by the media . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What social skills are used by the media that contain the word communication",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1413287 . ?sbj wdt:P1535 wd:Q17502905 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'communication')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of social skills . ?sbj used by the media . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'communication')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "communication",
            "choppedEntity": "communication"
        }
    },
    {
        "chopped": {
            "question": "name an archaeological culture that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q465299 . ?ans1 wdt:P2596 wd:Q656043 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of archaeological culture . ?ans1 culture Sumerians . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name an archaeological culture that starts with letter S",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q465299 . ?sbj wdt:P2596 wd:Q656043 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of archaeological culture . ?sbj culture Sumerians . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "title an archeological culture that begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q465299 . ?ans1 wdt:P2596 wd:Q656043 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of archaeological culture . ?ans1 culture Sumerians . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Title an archeological culture that begins with letter S",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q465299 . ?sbj wdt:P2596 wd:Q656043 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of archaeological culture . ?sbj culture Sumerians . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what was pasha angelina awarded in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q1964769 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Pasha Angelina award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Pasha Angelina awarded in the year 1947",
            "query": "SELECT ?obj WHERE { wd:Q1964769 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1947')) }",
            "NLQuery": "SELECT ?obj WHERE { Pasha Angelina award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1947')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1947",
            "choppedEntity": "1947"
        }
    },
    {
        "chopped": {
            "question": "which award was pasha angelina awarded in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q1964769 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Pasha Angelina award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which award was Pasha Angelina awarded in the year 1947",
            "query": "SELECT ?obj WHERE { wd:Q1964769 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1947')) }",
            "NLQuery": "SELECT ?obj WHERE { Pasha Angelina award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1947')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1947",
            "choppedEntity": "1947"
        }
    },
    {
        "chopped": {
            "question": "tell me medical attribute  whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q44476427 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of medical attribute . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me medical attribute  whose name has the word wave in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q44476427 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wave')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of medical attribute . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wave')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "wave in it",
            "choppedEntity": "wave"
        }
    },
    {
        "chopped": {
            "question": "what medical attribute contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q44476427 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of medical attribute . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What medical attribute contains the word wave",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q44476427 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wave')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of medical attribute . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wave')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "wave",
            "choppedEntity": "wave"
        }
    },
    {
        "chopped": {
            "question": "what are the literary character which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3658341 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of literary character . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the literary character which start with the letter x",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3658341 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'x')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of literary character . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'x')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "x",
            "choppedEntity": "x"
        }
    },
    {
        "chopped": {
            "question": "what are the scholarly character which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3658341 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of literary character . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the scholarly character which begin with the letter x",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3658341 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'x')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of literary character . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'x')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "x",
            "choppedEntity": "x"
        }
    },
    {
        "chopped": {
            "question": "at what point in time did pasy have the total population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q17189 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Pasay population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "At what point in time did Pasy have the total population of 55,161",
            "query": "SELECT ?value WHERE { wd:Q17189 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'55161.0')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Pasay population ?s . ?s population ?x FILTER(contains(?x,'55161.0')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "55,161",
            "choppedEntity": "55161.0"
        }
    },
    {
        "chopped": {
            "question": "what year did pasy have the total population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q17189 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Pasay population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "What year did Pasy have the total population of 55,161",
            "query": "SELECT ?value WHERE { wd:Q17189 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'55161.0')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Pasay population ?s . ?s population ?x FILTER(contains(?x,'55161.0')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "55,161",
            "choppedEntity": "55161.0"
        }
    },
    {
        "chopped": {
            "question": "what killed joseph von fraunhafer, that has a death toll of ",
            "query": "SELECT ?ans1 WHERE { wd:Q43948 wdt:P509 ?ans1 . ?ans1 wdt:P1603 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Joseph von Fraunhofer cause of death ?ans1 . ?ans1 number of cases ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What killed Joseph von Fraunhafer, that has a death toll of 12000",
            "query": "SELECT ?answer WHERE { wd:Q43948 wdt:P509 ?answer . ?answer wdt:P1603 ?x FILTER(contains(?x,'12000.0'))}",
            "NLQuery": "SELECT ?answer WHERE { Joseph von Fraunhofer cause of death ?answer . ?answer number of cases ?x FILTER(contains(?x,'12000.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "12000",
            "choppedEntity": "12000.0"
        }
    },
    {
        "chopped": {
            "question": "what killed joseph von fraunhafer, that has a loss of life toll of ",
            "query": "SELECT ?ans1 WHERE { wd:Q43948 wdt:P509 ?ans1 . ?ans1 wdt:P1603 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Joseph von Fraunhofer cause of death ?ans1 . ?ans1 number of cases ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What killed Joseph von Fraunhafer, that has a loss of life toll of 12000",
            "query": "SELECT ?answer WHERE { wd:Q43948 wdt:P509 ?answer . ?answer wdt:P1603 ?x FILTER(contains(?x,'12000.0'))}",
            "NLQuery": "SELECT ?answer WHERE { Joseph von Fraunhofer cause of death ?answer . ?answer number of cases ?x FILTER(contains(?x,'12000.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "12000",
            "choppedEntity": "12000.0"
        }
    },
    {
        "chopped": {
            "question": "which term that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1969448 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of term . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which term that contains the word vocation in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1969448 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vocation')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of term . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vocation')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "vocation in their name",
            "choppedEntity": "vocation"
        }
    },
    {
        "chopped": {
            "question": "what was dustin lance black nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q717302 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Dustin Lance Black nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Dustin Lance Black nominated for in 2008",
            "query": "SELECT ?obj WHERE { wd:Q717302 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2008')) }",
            "NLQuery": "SELECT ?obj WHERE { Dustin Lance Black nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2008')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2008",
            "choppedEntity": "2008"
        }
    },
    {
        "chopped": {
            "question": "which award was dustin lance black short-listed for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q717302 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Dustin Lance Black nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which award was Dustin Lance Black short-listed for in 2008",
            "query": "SELECT ?obj WHERE { wd:Q717302 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2008')) }",
            "NLQuery": "SELECT ?obj WHERE { Dustin Lance Black nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2008')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2008",
            "choppedEntity": "2008"
        }
    },
    {
        "chopped": {
            "question": "what award was received by carl orff in ",
            "query": "SELECT ?ans1 WHERE { wd:Q44086 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Carl Orff award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award was received by Carl Orff in 1981",
            "query": "SELECT ?obj WHERE { wd:Q44086 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1981')) }",
            "NLQuery": "SELECT ?obj WHERE { Carl Orff award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1981')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1981",
            "choppedEntity": "1981"
        }
    },
    {
        "chopped": {
            "question": "carl orff was presented with which award in ",
            "query": "SELECT ?ans1 WHERE { wd:Q44086 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Carl Orff award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Carl Orff was presented with which award in 1981",
            "query": "SELECT ?obj WHERE { wd:Q44086 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1981')) }",
            "NLQuery": "SELECT ?obj WHERE { Carl Orff award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1981')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1981",
            "choppedEntity": "1981"
        }
    },
    {
        "chopped": {
            "question": "what are the star which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q523 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of star . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the star which start with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q523 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of star . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what are the star which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q523 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of star . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the star which begin with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q523 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of star . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what partner city of south chungcheong province has wgs84 of ",
            "query": "SELECT ?ans1 WHERE { wd:Q41070 wdt:P190 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { South Chungcheong Province twinned administrative body ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What partner city of South CHungcheong Province has wgs84 of 34.5667",
            "query": "SELECT ?answer WHERE { wd:Q41070 wdt:P190 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'34.5667'))}",
            "NLQuery": "SELECT ?answer WHERE { South Chungcheong Province twinned administrative body ?answer . ?answer coordinate location ?x FILTER(contains(?x,'34.5667'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "345667",
            "choppedEntity": "34.5667"
        }
    },
    {
        "chopped": {
            "question": "at what point in time did apple inc report a net profit of ",
            "query": "SELECT ?ans1 WHERE { wd:Q312 p:P2295 ?s . ?s ps:P2295 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Apple net profit ?s . ?s net profit ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "At what point in time did Apple Inc. report a net profit of 5.3394e+10",
            "query": "SELECT ?value WHERE { wd:Q312 p:P2295 ?s . ?s ps:P2295 ?x FILTER(contains(?x,'5.3394e+10')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Apple net profit ?s . ?s net profit ?x FILTER(contains(?x,'5.3394e+10')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "53394e+10",
            "choppedEntity": "5.3394e+10"
        }
    },
    {
        "chopped": {
            "question": "when was the apple inc net profit ",
            "query": "SELECT ?ans1 WHERE { wd:Q312 p:P2295 ?s . ?s ps:P2295 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Apple net profit ?s . ?s net profit ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was the Apple Inc. net profit 5.3394e+10",
            "query": "SELECT ?value WHERE { wd:Q312 p:P2295 ?s . ?s ps:P2295 ?x FILTER(contains(?x,'5.3394e+10')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Apple net profit ?s . ?s net profit ?x FILTER(contains(?x,'5.3394e+10')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "53394e+10",
            "choppedEntity": "5.3394e+10"
        }
    },
    {
        "chopped": {
            "question": "what is the supplement of ibm that equals ",
            "query": "SELECT ?ans1 WHERE { wd:Q37156 p:P355 ?s . ?s ps:P355 ?ans1 . ?s pq:P1107 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { IBM subsidiary ?s . ?s subsidiary ?ans1 . ?s proportion ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "What is the supplement of IBM that equals 100",
            "query": "SELECT ?obj WHERE { wd:Q37156 p:P355 ?s . ?s ps:P355 ?obj . ?s pq:P1107 ?x FILTER(contains(?x,'100.0')) }",
            "NLQuery": "SELECT ?obj WHERE { IBM subsidiary ?s . ?s subsidiary ?obj . ?s proportion ?x FILTER(contains(?x,'100.0')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "100",
            "choppedEntity": "100.0"
        }
    },
    {
        "chopped": {
            "question": "which ibm supplement is ",
            "query": "SELECT ?ans1 WHERE { wd:Q37156 p:P355 ?s . ?s ps:P355 ?ans1 . ?s pq:P1107 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { IBM subsidiary ?s . ?s subsidiary ?ans1 . ?s proportion ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "Which IBM supplement is 100",
            "query": "SELECT ?obj WHERE { wd:Q37156 p:P355 ?s . ?s ps:P355 ?obj . ?s pq:P1107 ?x FILTER(contains(?x,'100.0')) }",
            "NLQuery": "SELECT ?obj WHERE { IBM subsidiary ?s . ?s subsidiary ?obj . ?s proportion ?x FILTER(contains(?x,'100.0')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "100",
            "choppedEntity": "100.0"
        }
    },
    {
        "chopped": {
            "question": "what is the total revenue of burger king in the year of ",
            "query": "SELECT ?ans1 WHERE { wd:Q177054 p:P2139 ?s . ?s ps:P2139 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Burger King total revenue ?s . ?s total revenue ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What is the total revenue of Burger King in the year of 2012",
            "query": "SELECT ?obj WHERE { wd:Q177054 p:P2139 ?s . ?s ps:P2139 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2012')) }",
            "NLQuery": "SELECT ?obj WHERE { Burger King total revenue ?s . ?s total revenue ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2012')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2012",
            "choppedEntity": "2012"
        }
    },
    {
        "chopped": {
            "question": "how much did the burger king earn in total in ",
            "query": "SELECT ?ans1 WHERE { wd:Q177054 p:P2139 ?s . ?s ps:P2139 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Burger King total revenue ?s . ?s total revenue ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "How much did the Burger King earn in total in 2012",
            "query": "SELECT ?obj WHERE { wd:Q177054 p:P2139 ?s . ?s ps:P2139 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2012')) }",
            "NLQuery": "SELECT ?obj WHERE { Burger King total revenue ?s . ?s total revenue ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2012')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2012",
            "choppedEntity": "2012"
        }
    },
    {
        "chopped": {
            "question": "who was the spouse of rita hayworth in ",
            "query": "SELECT ?ans1 WHERE { wd:Q42745 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Rita Hayworth spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was the spouse of Rita Hayworth in 1953",
            "query": "SELECT ?obj WHERE { wd:Q42745 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1953')) }",
            "NLQuery": "SELECT ?obj WHERE { Rita Hayworth spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1953')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1953",
            "choppedEntity": "1953"
        }
    },
    {
        "chopped": {
            "question": "with whom rita hayworth was married from ",
            "query": "SELECT ?ans1 WHERE { wd:Q42745 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Rita Hayworth spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "With whom Rita Hayworth was married from 1953",
            "query": "SELECT ?obj WHERE { wd:Q42745 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1953')) }",
            "NLQuery": "SELECT ?obj WHERE { Rita Hayworth spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1953')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1953",
            "choppedEntity": "1953"
        }
    },
    {
        "chopped": {
            "question": "what is the country seat of majuro with human population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q12919 wdt:P1376 ?ans1 . ?ans1 wdt:P1082 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Majuro capital of ?ans1 . ?ans1 population ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the country seat of Majuro with human population of 31895.0",
            "query": "SELECT ?answer WHERE { wd:Q12919 wdt:P1376 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'31895.0'))}",
            "NLQuery": "SELECT ?answer WHERE { Majuro capital of ?answer . ?answer population ?x FILTER(contains(?x,'31895.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "318950",
            "choppedEntity": "31895.0"
        }
    },
    {
        "chopped": {
            "question": "what is the nation situate of majuro with human populace of ",
            "query": "SELECT ?ans1 WHERE { wd:Q12919 wdt:P1376 ?ans1 . ?ans1 wdt:P1082 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Majuro capital of ?ans1 . ?ans1 population ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the nation situate of Majuro with human populace of 31895.0",
            "query": "SELECT ?answer WHERE { wd:Q12919 wdt:P1376 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'31895.0'))}",
            "NLQuery": "SELECT ?answer WHERE { Majuro capital of ?answer . ?answer population ?x FILTER(contains(?x,'31895.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "318950",
            "choppedEntity": "31895.0"
        }
    },
    {
        "chopped": {
            "question": "tell me glucan name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q416796 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of glucan . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "tell me glucan name has the word zymosan in it",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q416796 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zymosan')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of glucan . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zymosan')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "zymosan in it",
            "choppedEntity": "zymosan"
        }
    },
    {
        "chopped": {
            "question": "let me know glucan title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q416796 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of glucan . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "let me know glucan title has the word zymosan in it",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q416796 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zymosan')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of glucan . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zymosan')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "zymosan in it",
            "choppedEntity": "zymosan"
        }
    },
    {
        "chopped": {
            "question": "what member of barbados was formed on november 16, ",
            "query": "SELECT ?ans1 WHERE { wd:Q244 wdt:P463 ?ans1 . ?ans1 wdt:P571 ?x FILTER(contains(YEAR(?x),?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Barbados member of ?ans1 . ?ans1 inception ?x FILTER(contains(YEAR(?x),?unknown))}"
        },
        "original": {
            "question": "What member of Barbados was formed on November 16, 1945",
            "query": "SELECT ?answer WHERE { wd:Q244 wdt:P463 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1945'))}",
            "NLQuery": "SELECT ?answer WHERE { Barbados member of ?answer . ?answer inception ?x FILTER(contains(YEAR(?x),'1945'))}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1945",
            "choppedEntity": "1945"
        }
    },
    {
        "chopped": {
            "question": "which prescribed drug for epilepsy has a weight of ",
            "query": "SELECT ?ans1 WHERE { wd:Q41571 wdt:P2176 ?ans1 . ?ans1 wdt:P2067 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { epilepsy drug used for treatment ?ans1 . ?ans1 mass ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Which prescribed drug for epilepsy has a weight of 221.988",
            "query": "SELECT ?answer WHERE { wd:Q41571 wdt:P2176 ?answer . ?answer wdt:P2067 ?x FILTER(contains(?x,'221.988'))}",
            "NLQuery": "SELECT ?answer WHERE { epilepsy drug used for treatment ?answer . ?answer mass ?x FILTER(contains(?x,'221.988'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "221988",
            "choppedEntity": "221.988"
        }
    },
    {
        "chopped": {
            "question": "which endorsed medicate for epilepsy includes a weight of ",
            "query": "SELECT ?ans1 WHERE { wd:Q41571 wdt:P2176 ?ans1 . ?ans1 wdt:P2067 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { epilepsy drug used for treatment ?ans1 . ?ans1 mass ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Which endorsed medicate for epilepsy includes a weight of 221.988",
            "query": "SELECT ?answer WHERE { wd:Q41571 wdt:P2176 ?answer . ?answer wdt:P2067 ?x FILTER(contains(?x,'221.988'))}",
            "NLQuery": "SELECT ?answer WHERE { epilepsy drug used for treatment ?answer . ?answer mass ?x FILTER(contains(?x,'221.988'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "221988",
            "choppedEntity": "221.988"
        }
    },
    {
        "chopped": {
            "question": "what are the personality trait which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2393196 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of personality trait . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the personality trait which start with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2393196 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of personality trait . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "which personality trait start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2393196 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of personality trait . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which personality trait start with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2393196 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of personality trait . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "tell me the award created by academy of television arts & sciences and that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q618779 . ?ans1 wdt:P170 wd:Q427611 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of award . ?ans1 creator Academy of Television Arts & Sciences . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the award created by Academy of Television Arts & Sciences and that contains the word award in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q618779 . ?sbj wdt:P170 wd:Q427611 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'award')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of award . ?sbj creator Academy of Television Arts & Sciences . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'award')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "award in its name",
            "choppedEntity": "award"
        }
    },
    {
        "chopped": {
            "question": "tell me the award created by academy of television arts & sciences and that carries the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q618779 . ?ans1 wdt:P170 wd:Q427611 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of award . ?ans1 creator Academy of Television Arts & Sciences . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the award created by Academy of Television Arts & Sciences and that carries the word award in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q618779 . ?sbj wdt:P170 wd:Q427611 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'award')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of award . ?sbj creator Academy of Television Arts & Sciences . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'award')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "award in its name",
            "choppedEntity": "award"
        }
    },
    {
        "chopped": {
            "question": "which is the unit of energy that is measured by physical quantity of energy and starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2916980 . ?ans1 wdt:P111 wd:Q11379 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of unit of energy . ?ans1 measured physical quantity energy . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the unit of energy that is measured by physical quantity of energy and starts with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2916980 . ?sbj wdt:P111 wd:Q11379 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of unit of energy . ?sbj measured physical quantity energy . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "which is the unit of energy that is measured by means of physical extent of energy and starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2916980 . ?ans1 wdt:P111 wd:Q11379 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of unit of energy . ?ans1 measured physical quantity energy . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the unit of energy that is measured by means of physical extent of energy and starts with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2916980 . ?sbj wdt:P111 wd:Q11379 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of unit of energy . ?sbj measured physical quantity energy . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "which space agency whose  website account on foursquare labs, inc and which that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q17505024 . ?ans1 wdt:P553 wd:Q51709 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of space agency . ?ans1 website account on Foursquare Labs, Inc. . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which space agency whose  website account on Foursquare Labs, Inc. and which that starts with the letter a",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17505024 . ?sbj wdt:P553 wd:Q51709 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of space agency . ?sbj website account on Foursquare Labs, Inc. . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "which space company whose internet site account on foursquare labs, inc and which that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q17505024 . ?ans1 wdt:P553 wd:Q51709 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of space agency . ?ans1 website account on Foursquare Labs, Inc. . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which space company whose internet site account on Foursquare Labs, Inc. and which that starts with the letter a",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17505024 . ?sbj wdt:P553 wd:Q51709 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of space agency . ?sbj website account on Foursquare Labs, Inc. . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "at what temperature does methanol have a density of ",
            "query": "SELECT ?ans1 WHERE { wd:Q14982 p:P2054 ?s . ?s ps:P2054 ?x FILTER(contains(?x,?unknown)) . ?s pq:P2076 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { methanol density ?s . ?s density ?x FILTER(contains(?x,?unknown)) . ?s temperature ?ans1}"
        },
        "original": {
            "question": "At what temperature does methanol have a density of 0.79",
            "query": "SELECT ?value WHERE { wd:Q14982 p:P2054 ?s . ?s ps:P2054 ?x FILTER(contains(?x,'0.79')) . ?s pq:P2076 ?value}",
            "NLQuery": "SELECT ?value WHERE { methanol density ?s . ?s density ?x FILTER(contains(?x,'0.79')) . ?s temperature ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "079",
            "choppedEntity": "0.79"
        }
    },
    {
        "chopped": {
            "question": "what is the temperature of methanol at a density of ",
            "query": "SELECT ?ans1 WHERE { wd:Q14982 p:P2054 ?s . ?s ps:P2054 ?x FILTER(contains(?x,?unknown)) . ?s pq:P2076 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { methanol density ?s . ?s density ?x FILTER(contains(?x,?unknown)) . ?s temperature ?ans1}"
        },
        "original": {
            "question": "What is the temperature of methanol at a density of 0.79",
            "query": "SELECT ?value WHERE { wd:Q14982 p:P2054 ?s . ?s ps:P2054 ?x FILTER(contains(?x,'0.79')) . ?s pq:P2076 ?value}",
            "NLQuery": "SELECT ?value WHERE { methanol density ?s . ?s density ?x FILTER(contains(?x,'0.79')) . ?s temperature ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "079",
            "choppedEntity": "0.79"
        }
    },
    {
        "chopped": {
            "question": "what award did john bardeen receive on january 1, ",
            "query": "SELECT ?ans1 WHERE { wd:Q949 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { John Bardeen award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did John Bardeen receive on January 1, 1971",
            "query": "SELECT ?obj WHERE { wd:Q949 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1971')) }",
            "NLQuery": "SELECT ?obj WHERE { John Bardeen award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1971')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1971",
            "choppedEntity": "1971"
        }
    },
    {
        "chopped": {
            "question": "name an olympian god that contain the word  ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q101609 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Twelve Olympians . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name an Olympian god that contain the word \" dionysus\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q101609 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'dionysus')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Twelve Olympians . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'dionysus')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "dionysus in its name",
            "choppedEntity": "dionysus"
        }
    },
    {
        "chopped": {
            "question": "name an olympian god containing in his name the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q101609 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Twelve Olympians . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name an Olympian god containing in his name the word \"dionysus\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q101609 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'dionysus')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Twelve Olympians . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'dionysus')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "dionysus",
            "choppedEntity": "dionysus"
        }
    },
    {
        "chopped": {
            "question": "name a food ingredient that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q25403900 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of food ingredient . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a food ingredient that starts with letter Z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q25403900 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of food ingredient . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "name a food ingredient beginning with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q25403900 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of food ingredient . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a food ingredient beginning with letter Z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q25403900 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of food ingredient . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "what is the location of birth of jose maria mrelos y pavon, with coordinates of ",
            "query": "SELECT ?ans1 WHERE { wd:Q378420 wdt:P19 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { un gei place of birth ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the location of birth of Jose Maria Mrelos y Pavon, with coordinates of 19.7683",
            "query": "SELECT ?answer WHERE { wd:Q378420 wdt:P19 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'19.7683'))}",
            "NLQuery": "SELECT ?answer WHERE { un gei place of birth ?answer . ?answer coordinate location ?x FILTER(contains(?x,'19.7683'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "197683",
            "choppedEntity": "19.7683"
        }
    },
    {
        "chopped": {
            "question": "what is the area of birth of jose maria mrelos y pavon, with coordinates of ",
            "query": "SELECT ?ans1 WHERE { wd:Q378420 wdt:P19 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { un gei place of birth ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the area of birth of Jose Maria Mrelos y Pavon, with coordinates of 19.7683",
            "query": "SELECT ?answer WHERE { wd:Q378420 wdt:P19 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'19.7683'))}",
            "NLQuery": "SELECT ?answer WHERE { un gei place of birth ?answer . ?answer coordinate location ?x FILTER(contains(?x,'19.7683'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "197683",
            "choppedEntity": "19.7683"
        }
    },
    {
        "chopped": {
            "question": "tell me united states supreme court decision whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q19692072 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of United States Supreme Court decision . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me United States Supreme Court decision whose name has the word united in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q19692072 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'united')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of United States Supreme Court decision . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'united')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "united in it",
            "choppedEntity": "united"
        }
    },
    {
        "chopped": {
            "question": "what is the instance of bartholomew the apostle has date of birth as ",
            "query": "SELECT ?ans1 WHERE { wd:Q43982 p:P569 ?s . ?s ps:P569 ?x FILTER(contains(?x,?unknown)) . ?s pq:P31 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Bartholomew the Apostle date of birth ?s . ?s date of birth ?x FILTER(contains(?x,?unknown)) . ?s instance of ?ans1}"
        },
        "original": {
            "question": "what is the instance of bartholomew the apostle has date of birth as -100-1-1",
            "query": "SELECT ?value WHERE { wd:Q43982 p:P569 ?s . ?s ps:P569 ?x FILTER(contains(?x,'-100-1-1')) . ?s pq:P31 ?value}",
            "NLQuery": "SELECT ?value WHERE { Bartholomew the Apostle date of birth ?s . ?s date of birth ?x FILTER(contains(?x,'-100-1-1')) . ?s instance of ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "-100-1-1",
            "choppedEntity": "-100-1-1"
        }
    },
    {
        "chopped": {
            "question": "which is the rock band in website account on pure volume and that starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q5741069 . ?ans1 wdt:P553 wd:Q1508912 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of rock group . ?ans1 website account on PureVolume . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHICH IS THE ROCK BAND IN WEBSITE ACCOUNT ON PURE VOLUME AND THAT STARTS WITH U",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5741069 . ?sbj wdt:P553 wd:Q1508912 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of rock group . ?sbj website account on PureVolume . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "which is the shake band in site account on immaculate volume which begins with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q5741069 . ?ans1 wdt:P553 wd:Q1508912 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of rock group . ?ans1 website account on PureVolume . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHICH IS THE Shake BAND IN Site ACCOUNT ON Immaculate VOLUME Which Begins WITH U",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5741069 . ?sbj wdt:P553 wd:Q1508912 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of rock group . ?sbj website account on PureVolume . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "when ghana has its inflation rate ",
            "query": "SELECT ?ans1 WHERE { wd:Q117 p:P1279 ?s . ?s ps:P1279 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ghana inflation rate ?s . ?s inflation rate ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When Ghana has its inflation rate 34.2",
            "query": "SELECT ?value WHERE { wd:Q117 p:P1279 ?s . ?s ps:P1279 ?x FILTER(contains(?x,'34.2')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ghana inflation rate ?s . ?s inflation rate ?x FILTER(contains(?x,'34.2')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "342",
            "choppedEntity": "34.2"
        }
    },
    {
        "chopped": {
            "question": "what year did ghana have an inflation rate of ",
            "query": "SELECT ?ans1 WHERE { wd:Q117 p:P1279 ?s . ?s ps:P1279 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ghana inflation rate ?s . ?s inflation rate ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "What year did Ghana have an inflation rate of 34.2",
            "query": "SELECT ?value WHERE { wd:Q117 p:P1279 ?s . ?s ps:P1279 ?x FILTER(contains(?x,'34.2')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ghana inflation rate ?s . ?s inflation rate ?x FILTER(contains(?x,'34.2')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "342",
            "choppedEntity": "34.2"
        }
    },
    {
        "chopped": {
            "question": "name a marvel comic book character that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1004 . ?ans1 wdt:P1080 wd:Q931597 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of comics . ?ans1 from narrative universe Marvel Universe . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a Marvel comic book character that contains the word \"pegasus\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1004 . ?sbj wdt:P1080 wd:Q931597 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'pegasus')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of comics . ?sbj from narrative universe Marvel Universe . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'pegasus')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "pegasus in its name",
            "choppedEntity": "pegasus"
        }
    },
    {
        "chopped": {
            "question": "name a marvel comic e book personality that incorporates the phrase ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1004 . ?ans1 wdt:P1080 wd:Q931597 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of comics . ?ans1 from narrative universe Marvel Universe . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a Marvel comic e book personality that incorporates the phrase \"pegasus\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1004 . ?sbj wdt:P1080 wd:Q931597 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'pegasus')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of comics . ?sbj from narrative universe Marvel Universe . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'pegasus')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "pegasus in its name",
            "choppedEntity": "pegasus"
        }
    },
    {
        "chopped": {
            "question": "what are the ideology which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q7257 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of ideology . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the ideology which start with the letter wahhabism",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7257 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wahhabism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of ideology . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wahhabism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "wahhabism",
            "choppedEntity": "wahhabism"
        }
    },
    {
        "chopped": {
            "question": "what ideology starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q7257 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of ideology . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What ideology starts with the letter Wahhabism",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7257 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wahhabism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of ideology . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wahhabism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "wahhabism",
            "choppedEntity": "wahhabism"
        }
    },
    {
        "chopped": {
            "question": "tell me radio program whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1555508 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of radio program . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me radio program whose name has the word \u00f63 in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1555508 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), '\u00f63')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of radio program . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), '\u00f63')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u00f63 in it",
            "choppedEntity": "\u00f63"
        }
    },
    {
        "chopped": {
            "question": "tell me radio program whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1555508 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of radio program . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me radio program whose title has the word \u00f63 in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1555508 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), '\u00f63')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of radio program . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), '\u00f63')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u00f63 in it",
            "choppedEntity": "\u00f63"
        }
    },
    {
        "chopped": {
            "question": "let me know celebration whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q132241 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of festival . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know celebration whose title has the word vijayadashami in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q132241 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vijayadashami')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of festival . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vijayadashami')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "vijayadashami in it",
            "choppedEntity": "vijayadashami"
        }
    },
    {
        "chopped": {
            "question": "which award did john james audubun receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q182882 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { John James Audubon award received ?s . ?s award received ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which award did John James Audubun receive in 1827",
            "query": "SELECT ?obj WHERE { wd:Q182882 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1827')) }",
            "NLQuery": "SELECT ?obj WHERE { John James Audubon award received ?s . ?s award received ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1827')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1827",
            "choppedEntity": "1827"
        }
    },
    {
        "chopped": {
            "question": "name the award given to john james audubun in ",
            "query": "SELECT ?ans1 WHERE { wd:Q182882 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { John James Audubon award received ?s . ?s award received ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Name the award given to John James Audubun in 1827.",
            "query": "SELECT ?obj WHERE { wd:Q182882 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1827')) }",
            "NLQuery": "SELECT ?obj WHERE { John James Audubon award received ?s . ?s award received ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1827')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1827",
            "choppedEntity": "1827"
        }
    },
    {
        "chopped": {
            "question": "tell me which structural class of chemical compounds start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q47154513 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of structural class of chemical compounds . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me which structural class of chemical compounds start with the letter u.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q47154513 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of structural class of chemical compounds . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "let me know which auxiliary lesson of chemical compounds begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q47154513 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of structural class of chemical compounds . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know which auxiliary lesson of chemical compounds begin with the letter u.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q47154513 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of structural class of chemical compounds . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "who did elizabeth cady stanton marry on may 1,",
            "query": "SELECT ?ans1 WHERE { wd:Q465335 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Elizabeth Cady Stanton spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who did Elizabeth Cady Stanton marry on May 1,1840",
            "query": "SELECT ?obj WHERE { wd:Q465335 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1840')) }",
            "NLQuery": "SELECT ?obj WHERE { Elizabeth Cady Stanton spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1840')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1840",
            "choppedEntity": "1840"
        }
    },
    {
        "chopped": {
            "question": "how many schoolchildren were there in samoa on january 1, ",
            "query": "SELECT ?ans1 WHERE { wd:Q683 p:P2573 ?s . ?s ps:P2573 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Samoa number of out-of-school children ?s . ?s number of out-of-school children ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "How many schoolchildren were there in Samoa on January 1, 1991",
            "query": "SELECT ?obj WHERE { wd:Q683 p:P2573 ?s . ?s ps:P2573 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1999')) }",
            "NLQuery": "SELECT ?obj WHERE { Samoa number of out-of-school children ?s . ?s number of out-of-school children ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1999')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1991",
            "choppedEntity": "1999"
        }
    },
    {
        "chopped": {
            "question": "how long was alessandro rosa vieira a member of the sports team in ",
            "query": "SELECT ?ans1 WHERE { wd:Q919942 p:P54 ?s . ?s ps:P54 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Alessandro Rosa Vieira member of sports team ?s . ?s member of sports team ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "How long was Alessandro Rosa Vieira a member of the sports team in 2005",
            "query": "SELECT ?obj WHERE { wd:Q919942 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2005')) }",
            "NLQuery": "SELECT ?obj WHERE { Alessandro Rosa Vieira member of sports team ?s . ?s member of sports team ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2005')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2005",
            "choppedEntity": "2005"
        }
    },
    {
        "chopped": {
            "question": "what was the duration of alessandro rosa vieira career with his team in ",
            "query": "SELECT ?ans1 WHERE { wd:Q919942 p:P54 ?s . ?s ps:P54 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Alessandro Rosa Vieira member of sports team ?s . ?s member of sports team ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the duration of Alessandro Rosa Vieira career with his team in 2005",
            "query": "SELECT ?obj WHERE { wd:Q919942 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2005')) }",
            "NLQuery": "SELECT ?obj WHERE { Alessandro Rosa Vieira member of sports team ?s . ?s member of sports team ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2005')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2005",
            "choppedEntity": "2005"
        }
    },
    {
        "chopped": {
            "question": "who is born in yevgeny mravinsky whose legal name is ",
            "query": "SELECT ?ans1 WHERE { wd:Q320609 wdt:P19 ?ans1 . ?ans1 wdt:P1448 ?x FILTER(contains(?x,'Petrogr\u00e1d'))}",
            "NLQuery": "SELECT ?ans1 WHERE { Yevgeny Mravinsky place of birth ?ans1 . ?ans1 official name ?x FILTER(contains(?x,'Petrogr\u00e1d'))}"
        },
        "original": {
            "question": "Who is born in Yevgeny Mravinsky whose legal name is Petrogr\u00e1d",
            "query": "SELECT ?answer WHERE { wd:Q320609 wdt:P19 ?answer . ?answer wdt:P1448 ?x FILTER(contains(?x,'Petrogr\u00e1d'))}",
            "NLQuery": "SELECT ?answer WHERE { Yevgeny Mravinsky place of birth ?answer . ?answer official name ?x FILTER(contains(?x,'Petrogr\u00e1d'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "petrogr\u00e1d",
            "choppedEntity": "petrogr\u00e1d"
        }
    },
    {
        "chopped": {
            "question": "who is born in yevgeny mravinsky whose criminal title is ",
            "query": "SELECT ?ans1 WHERE { wd:Q320609 wdt:P19 ?ans1 . ?ans1 wdt:P1448 ?x FILTER(contains(?x,'Petrogr\u00e1d'))}",
            "NLQuery": "SELECT ?ans1 WHERE { Yevgeny Mravinsky place of birth ?ans1 . ?ans1 official name ?x FILTER(contains(?x,'Petrogr\u00e1d'))}"
        },
        "original": {
            "question": "Who is born in Yevgeny Mravinsky whose criminal title is Petrogr\u00e1d",
            "query": "SELECT ?answer WHERE { wd:Q320609 wdt:P19 ?answer . ?answer wdt:P1448 ?x FILTER(contains(?x,'Petrogr\u00e1d'))}",
            "NLQuery": "SELECT ?answer WHERE { Yevgeny Mravinsky place of birth ?answer . ?answer official name ?x FILTER(contains(?x,'Petrogr\u00e1d'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "petrogr\u00e1d",
            "choppedEntity": "petrogr\u00e1d"
        }
    },
    {
        "chopped": {
            "question": "what award did aleksandr solzhenitsyn receive in 1",
            "query": "SELECT ?ans1 WHERE { wd:Q34474 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Aleksandr Solzhenitsyn award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Aleksandr Solzhenitsyn receive in 1998 ",
            "query": "SELECT ?obj WHERE { wd:Q34474 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1998')) }",
            "NLQuery": "SELECT ?obj WHERE { Aleksandr Solzhenitsyn award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1998')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1998",
            "choppedEntity": "1998"
        }
    },
    {
        "chopped": {
            "question": "what are the redistribution market which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q41795373 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of redistribution market . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the redistribution market which start with the letter U",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q41795373 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of redistribution market . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "what are the redistribution showcase which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q41795373 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of redistribution market . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the redistribution showcase which begin with the letter U",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q41795373 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of redistribution market . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "what caused the review of this park to be ",
            "query": "SELECT ?ans1 WHERE { wd:Q180445 p:P444 ?s . ?s ps:P444 ?x FILTER(contains(?x,?unknown)) . ?s pq:P31 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Nature review score ?s . ?s review score ?x FILTER(contains(?x,?unknown)) . ?s instance of ?ans1}"
        },
        "original": {
            "question": "what caused the review of this park to be 41.456",
            "query": "SELECT ?value WHERE { wd:Q180445 p:P444 ?s . ?s ps:P444 ?x FILTER(contains(?x,'41.456')) . ?s pq:P31 ?value}",
            "NLQuery": "SELECT ?value WHERE { Nature review score ?s . ?s review score ?x FILTER(contains(?x,'41.456')) . ?s instance of ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "41456",
            "choppedEntity": "41.456"
        }
    },
    {
        "chopped": {
            "question": "what instigated the analysis of this park to be ",
            "query": "SELECT ?ans1 WHERE { wd:Q180445 p:P444 ?s . ?s ps:P444 ?x FILTER(contains(?x,?unknown)) . ?s pq:P31 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Nature review score ?s . ?s review score ?x FILTER(contains(?x,?unknown)) . ?s instance of ?ans1}"
        },
        "original": {
            "question": "What instigated the analysis of this park to be 41.456",
            "query": "SELECT ?value WHERE { wd:Q180445 p:P444 ?s . ?s ps:P444 ?x FILTER(contains(?x,'41.456')) . ?s pq:P31 ?value}",
            "NLQuery": "SELECT ?value WHERE { Nature review score ?s . ?s review score ?x FILTER(contains(?x,'41.456')) . ?s instance of ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "41456",
            "choppedEntity": "41.456"
        }
    },
    {
        "chopped": {
            "question": "what award was received by mary ainsworth  in ",
            "query": "SELECT ?ans1 WHERE { wd:Q242625 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mary Ainsworth award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award was received by Mary Ainsworth  in 1989",
            "query": "SELECT ?obj WHERE { wd:Q242625 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1989')) }",
            "NLQuery": "SELECT ?obj WHERE { Mary Ainsworth award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1989')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1989",
            "choppedEntity": "1989"
        }
    },
    {
        "chopped": {
            "question": "what prize was presented to mary ainsworth in ",
            "query": "SELECT ?ans1 WHERE { wd:Q242625 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mary Ainsworth award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What prize was presented to Mary Ainsworth in 1989",
            "query": "SELECT ?obj WHERE { wd:Q242625 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1989')) }",
            "NLQuery": "SELECT ?obj WHERE { Mary Ainsworth award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1989')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1989",
            "choppedEntity": "1989"
        }
    },
    {
        "chopped": {
            "question": "which charles johnson woman has a nickname of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1065092 wdt:P21 ?ans1 . ?ans1 wdt:P1813 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Charles Johnson sex or gender ?ans1 . ?ans1 short name ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Which Charles Johnson woman has a nickname of \u0447\u043e\u043b",
            "query": "SELECT ?answer WHERE { wd:Q1065092 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'\u0447\u043e\u043b'))}",
            "NLQuery": "SELECT ?answer WHERE { Charles Johnson sex or gender ?answer . ?answer short name ?x FILTER(contains(?x,'\u0447\u043e\u043b'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u0447\u043e\u043b",
            "choppedEntity": "\u0447\u043e\u043b"
        }
    },
    {
        "chopped": {
            "question": "which charles johnson lady incorporates a epithet of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1065092 wdt:P21 ?ans1 . ?ans1 wdt:P1813 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Charles Johnson sex or gender ?ans1 . ?ans1 short name ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Which Charles Johnson lady incorporates a epithet of \u0447\u043e\u043b",
            "query": "SELECT ?answer WHERE { wd:Q1065092 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'\u0447\u043e\u043b'))}",
            "NLQuery": "SELECT ?answer WHERE { Charles Johnson sex or gender ?answer . ?answer short name ?x FILTER(contains(?x,'\u0447\u043e\u043b'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u0447\u043e\u043b",
            "choppedEntity": "\u0447\u043e\u043b"
        }
    },
    {
        "chopped": {
            "question": "what are the music term which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q20202269 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of musical term . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the music term which start with the letter via",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20202269 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'via')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of musical term . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'via')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "via",
            "choppedEntity": "via"
        }
    },
    {
        "chopped": {
            "question": "what are the music term which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q20202269 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of musical term . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the music term which begin with the letter via",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20202269 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'via')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of musical term . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'via')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "via",
            "choppedEntity": "via"
        }
    },
    {
        "chopped": {
            "question": "tell me halide anion whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q30972056 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of halide anion . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me halide anion whose name has the word ion in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q30972056 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ion')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of halide anion . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ion')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "ion in it",
            "choppedEntity": "ion"
        }
    },
    {
        "chopped": {
            "question": "disclose me halide anion whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q30972056 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of halide anion . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Disclose me halide anion whose name has the word ion in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q30972056 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ion')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of halide anion . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ion')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "ion in it",
            "choppedEntity": "ion"
        }
    },
    {
        "chopped": {
            "question": "what are the battle which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q178561 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of battle . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHAT ARE THE BATTLE WHICH START WITH THE LETTER S.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q178561 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of battle . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what are the battle of the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q178561 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of battle . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHAT ARE THE BATTLE OF THE LETTER S.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q178561 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of battle . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what award did george carlin receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q150651 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { George Carlin award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did George Carlin receive in 1993",
            "query": "SELECT ?obj WHERE { wd:Q150651 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1993')) }",
            "NLQuery": "SELECT ?obj WHERE { George Carlin award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1993')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1993",
            "choppedEntity": "1993"
        }
    },
    {
        "chopped": {
            "question": "tell me a name of a cattle breed that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q12045585 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of cattle breed . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me a name of a cattle breed that starts with the letter w.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12045585 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of cattle breed . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "what cattle breed starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q12045585 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of cattle breed . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What cattle breed starts with \"w\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12045585 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of cattle breed . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "in what point in time did coimbatore have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q9885 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Coimbatore population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "In what point in time did Coimbatore have a population of 1601438",
            "query": "SELECT ?value WHERE { wd:Q9885 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'1601438')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Coimbatore population ?s . ?s population ?x FILTER(contains(?x,'1601438')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "1601438",
            "choppedEntity": "1601438"
        }
    },
    {
        "chopped": {
            "question": "tell me weapon whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q728 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of weapon . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me weapon whose name has the word ziyar in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q728 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ziyar')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of weapon . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ziyar')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "ziyar in it",
            "choppedEntity": "ziyar"
        }
    },
    {
        "chopped": {
            "question": "which is the explosive material that was discovered by alfred nobel and starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q12870 . ?ans1 wdt:P61 wd:Q23810 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of explosive material . ?ans1 discoverer or inventor Alfred Nobel . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the explosive material that was discovered by Alfred Nobel and starts with the letter d",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12870 . ?sbj wdt:P61 wd:Q23810 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of explosive material . ?sbj discoverer or inventor Alfred Nobel . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "d",
            "choppedEntity": "d"
        }
    },
    {
        "chopped": {
            "question": "which is the explosive fabric that was determined with the aid of alfred nobel and starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q12870 . ?ans1 wdt:P61 wd:Q23810 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of explosive material . ?ans1 discoverer or inventor Alfred Nobel . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the explosive fabric that was determined with the aid of Alfred Nobel and starts with the letter d",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12870 . ?sbj wdt:P61 wd:Q23810 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of explosive material . ?sbj discoverer or inventor Alfred Nobel . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "d",
            "choppedEntity": "d"
        }
    },
    {
        "chopped": {
            "question": "who was the last spouse for samuel hahnemann in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q157056 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Samuel Hahnemann spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was the last spouse for Samuel Hahnemann in the year 1830",
            "query": "SELECT ?obj WHERE { wd:Q157056 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1830')) }",
            "NLQuery": "SELECT ?obj WHERE { Samuel Hahnemann spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1830')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1830",
            "choppedEntity": "1830"
        }
    },
    {
        "chopped": {
            "question": "samuel hahnmann was married to who in ",
            "query": "SELECT ?ans1 WHERE { wd:Q157056 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Samuel Hahnemann spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Samuel Hahnmann was married to who in 1830",
            "query": "SELECT ?obj WHERE { wd:Q157056 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1830')) }",
            "NLQuery": "SELECT ?obj WHERE { Samuel Hahnemann spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1830')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1830",
            "choppedEntity": "1830"
        }
    },
    {
        "chopped": {
            "question": "what award did ayana hirsi ali receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q214475 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Ayaan Hirsi Ali award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Ayana Hirsi Ali receive in 2008",
            "query": "SELECT ?obj WHERE { wd:Q214475 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2008')) }",
            "NLQuery": "SELECT ?obj WHERE { Ayaan Hirsi Ali award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2008')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2008",
            "choppedEntity": "2008"
        }
    },
    {
        "chopped": {
            "question": "what was leonhard euler a member of in ",
            "query": "SELECT ?ans1 WHERE { wd:Q7604 p:P463 ?s . ?s ps:P463 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Leonhard Euler member of ?s . ?s member of ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Leonhard Euler a member of in 1741",
            "query": "SELECT ?obj WHERE { wd:Q7604 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1741')) }",
            "NLQuery": "SELECT ?obj WHERE { Leonhard Euler member of ?s . ?s member of ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1741')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1741",
            "choppedEntity": "1741"
        }
    },
    {
        "chopped": {
            "question": "leonhard euler was a member of what in ",
            "query": "SELECT ?ans1 WHERE { wd:Q7604 p:P463 ?s . ?s ps:P463 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Leonhard Euler member of ?s . ?s member of ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Leonhard Euler was a member of what in 1741",
            "query": "SELECT ?obj WHERE { wd:Q7604 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1741')) }",
            "NLQuery": "SELECT ?obj WHERE { Leonhard Euler member of ?s . ?s member of ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1741')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1741",
            "choppedEntity": "1741"
        }
    },
    {
        "chopped": {
            "question": "what was the area of stuttgart in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1022 p:P2046 ?s . ?s ps:P2046 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Stuttgart area ?s . ?s area ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the area of Stuttgart in 1977",
            "query": "SELECT ?obj WHERE { wd:Q1022 p:P2046 ?s . ?s ps:P2046 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1977')) }",
            "NLQuery": "SELECT ?obj WHERE { Stuttgart area ?s . ?s area ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1977')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1977",
            "choppedEntity": "1977"
        }
    },
    {
        "chopped": {
            "question": "what award did werner herzog recieve in ",
            "query": "SELECT ?ans1 WHERE { wd:Q44131 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Werner Herzog award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Werner Herzog recieve in 1979",
            "query": "SELECT ?obj WHERE { wd:Q44131 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1979')) }",
            "NLQuery": "SELECT ?obj WHERE { Werner Herzog award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1979')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1979",
            "choppedEntity": "1979"
        }
    },
    {
        "chopped": {
            "question": "which award did werner herzog win in ",
            "query": "SELECT ?ans1 WHERE { wd:Q44131 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Werner Herzog award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which award did Werner Herzog win in 1979",
            "query": "SELECT ?obj WHERE { wd:Q44131 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1979')) }",
            "NLQuery": "SELECT ?obj WHERE { Werner Herzog award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1979')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1979",
            "choppedEntity": "1979"
        }
    },
    {
        "chopped": {
            "question": "at what event did alfred brendel receive an award on january 1st, ",
            "query": "SELECT ?ans1 WHERE { wd:Q84148 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Alfred Brendel award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "At what event did Alfred Brendel receive an award on January 1st, 1992",
            "query": "SELECT ?obj WHERE { wd:Q84148 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1992')) }",
            "NLQuery": "SELECT ?obj WHERE { Alfred Brendel award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1992')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1992",
            "choppedEntity": "1992"
        }
    },
    {
        "chopped": {
            "question": "what are the art museum which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q207694 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of art museum . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the art museum which start with the letter wien",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q207694 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wien')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of art museum . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wien')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "wien",
            "choppedEntity": "wien"
        }
    },
    {
        "chopped": {
            "question": "which is the art museum that start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q207694 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of art museum . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHICH IS THE ART MUSEUM THAT START WITH THE LETTER WIEN",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q207694 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wien')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of art museum . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wien')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "wien",
            "choppedEntity": "wien"
        }
    },
    {
        "chopped": {
            "question": "what is the country of colorado whose human population is ",
            "query": "SELECT ?ans1 WHERE { wd:Q1261 wdt:P150 ?ans1 . ?ans1 wdt:P1082 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Colorado contains administrative territorial entity ?ans1 . ?ans1 population ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the country of Colorado whose human population is 30257.0",
            "query": "SELECT ?answer WHERE { wd:Q1261 wdt:P150 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'30257.0'))}",
            "NLQuery": "SELECT ?answer WHERE { Colorado contains administrative territorial entity ?answer . ?answer population ?x FILTER(contains(?x,'30257.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "302570",
            "choppedEntity": "30257.0"
        }
    },
    {
        "chopped": {
            "question": "what is the us of a of colorado whose human population is ",
            "query": "SELECT ?ans1 WHERE { wd:Q1261 wdt:P150 ?ans1 . ?ans1 wdt:P1082 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Colorado contains administrative territorial entity ?ans1 . ?ans1 population ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the us of a of Colorado whose human population is 30257.0",
            "query": "SELECT ?answer WHERE { wd:Q1261 wdt:P150 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'30257.0'))}",
            "NLQuery": "SELECT ?answer WHERE { Colorado contains administrative territorial entity ?answer . ?answer population ?x FILTER(contains(?x,'30257.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "302570",
            "choppedEntity": "30257.0"
        }
    },
    {
        "chopped": {
            "question": "which is the hq location of alibaba group with a height of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1359568 wdt:P159 ?ans1 . ?ans1 wdt:P2044 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Alibaba Group headquarters location ?ans1 . ?ans1 elevation above sea level ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Which is the HQ location of Alibaba Group with a height of 10.0",
            "query": "SELECT ?answer WHERE { wd:Q1359568 wdt:P159 ?answer . ?answer wdt:P2044 ?x FILTER(contains(?x,'10.0'))}",
            "NLQuery": "SELECT ?answer WHERE { Alibaba Group headquarters location ?answer . ?answer elevation above sea level ?x FILTER(contains(?x,'10.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "100",
            "choppedEntity": "10.0"
        }
    },
    {
        "chopped": {
            "question": "which is the hq area of alibaba gather with a tallness of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1359568 wdt:P159 ?ans1 . ?ans1 wdt:P2044 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Alibaba Group headquarters location ?ans1 . ?ans1 elevation above sea level ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Which is the HQ area of Alibaba Gather with a tallness of 10.0",
            "query": "SELECT ?answer WHERE { wd:Q1359568 wdt:P159 ?answer . ?answer wdt:P2044 ?x FILTER(contains(?x,'10.0'))}",
            "NLQuery": "SELECT ?answer WHERE { Alibaba Group headquarters location ?answer . ?answer elevation above sea level ?x FILTER(contains(?x,'10.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "100",
            "choppedEntity": "10.0"
        }
    },
    {
        "chopped": {
            "question": "name the award received by aleksandr vasilevsky in ",
            "query": "SELECT ?ans1 WHERE { wd:Q150894 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Aleksandr Vasilevsky award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Name the award received by Aleksandr Vasilevsky in 1946.",
            "query": "SELECT ?obj WHERE { wd:Q150894 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1946')) }",
            "NLQuery": "SELECT ?obj WHERE { Aleksandr Vasilevsky award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1946')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1946",
            "choppedEntity": "1946"
        }
    },
    {
        "chopped": {
            "question": "name the grant gotten by aleksandr vasilevsky in ",
            "query": "SELECT ?ans1 WHERE { wd:Q150894 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Aleksandr Vasilevsky award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Name the grant gotten by Aleksandr Vasilevsky in 1946.",
            "query": "SELECT ?obj WHERE { wd:Q150894 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1946')) }",
            "NLQuery": "SELECT ?obj WHERE { Aleksandr Vasilevsky award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1946')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1946",
            "choppedEntity": "1946"
        }
    },
    {
        "chopped": {
            "question": "name a fictional detective character inspired by the shadow that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3656924 . ?ans1 wdt:P941 wd:Q967116 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of fictional detective . ?ans1 inspired by The Shadow . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a fictional detective character inspired by The Shadow that contains the word \"Batman\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3656924 . ?sbj wdt:P941 wd:Q967116 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'batman')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of fictional detective . ?sbj inspired by The Shadow . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'batman')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "batman in its name",
            "choppedEntity": "batman"
        }
    },
    {
        "chopped": {
            "question": "when was zimbabwes population at ",
            "query": "SELECT ?ans1 WHERE { wd:Q954 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Zimbabwe population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was Zimbabwe's population at 1.25037e+07",
            "query": "SELECT ?value WHERE { wd:Q954 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'1.25037e+07')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Zimbabwe population ?s . ?s population ?x FILTER(contains(?x,'1.25037e+07')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "125037e+07",
            "choppedEntity": "1.25037e+07"
        }
    },
    {
        "chopped": {
            "question": "which city of the united states that located in the administrative territorial entity cuyahoga county and which that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1093829 . ?ans1 wdt:P131 wd:Q251267 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of city of the United States . ?ans1 located in the administrative territorial entity Cuyahoga County . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which city of the United States that located in the administrative territorial entity Cuyahoga County and which that starts with the letter w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1093829 . ?sbj wdt:P131 wd:Q251267 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of city of the United States . ?sbj located in the administrative territorial entity Cuyahoga County . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "which city of the joined together states that found within the authoritative regional substance cuyahoga district and which that begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1093829 . ?ans1 wdt:P131 wd:Q251267 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of city of the United States . ?ans1 located in the administrative territorial entity Cuyahoga County . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which city of the Joined together States that found within the authoritative regional substance Cuyahoga District and which that begins with the letter w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1093829 . ?sbj wdt:P131 wd:Q251267 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of city of the United States . ?sbj located in the administrative territorial entity Cuyahoga County . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "name a retail chain that contain the word  ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q507619 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of retail chain . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a retail chain that contain the word \" zeeman\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q507619 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeeman')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of retail chain . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeeman')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "zeeman in its name",
            "choppedEntity": "zeeman"
        }
    },
    {
        "chopped": {
            "question": "name a retail chain containing in its name the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q507619 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of retail chain . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a retail chain containing in its name the word \"zeeman\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q507619 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeeman')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of retail chain . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeeman')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "zeeman",
            "choppedEntity": "zeeman"
        }
    },
    {
        "chopped": {
            "question": "what are the literary work which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q7725634 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of literary work . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the literary work which start with the letter war",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7725634 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of literary work . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "war",
            "choppedEntity": "war"
        }
    },
    {
        "chopped": {
            "question": "what are the scholarly work which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q7725634 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of literary work . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the scholarly work which begin with the letter war",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7725634 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of literary work . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "war",
            "choppedEntity": "war"
        }
    },
    {
        "chopped": {
            "question": "how many people lived in oujda in january of ",
            "query": "SELECT ?ans1 WHERE { wd:Q193802 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Oujda population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "How many people lived in Oujda in January of 2014",
            "query": "SELECT ?obj WHERE { wd:Q193802 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2014')) }",
            "NLQuery": "SELECT ?obj WHERE { Oujda population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2014')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2014",
            "choppedEntity": "2014"
        }
    },
    {
        "chopped": {
            "question": "which is the function of the discoverer leonhard euler and contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11348 . ?ans1 wdt:P61 wd:Q7604 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of function . ?ans1 discoverer or inventor Leonhard Euler . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the function of the discoverer Leonhard Euler and contains the word function in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11348 . ?sbj wdt:P61 wd:Q7604 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'function')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of function . ?sbj discoverer or inventor Leonhard Euler . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'function')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "function in its name",
            "choppedEntity": "function"
        }
    },
    {
        "chopped": {
            "question": "tell me diffusion whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q163214 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of diffusion . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me diffusion whose name has the word osmosis in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q163214 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'osmosis')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of diffusion . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'osmosis')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "osmosis in it",
            "choppedEntity": "osmosis"
        }
    },
    {
        "chopped": {
            "question": "let me know dissemination whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q163214 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of diffusion . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know dissemination whose title has the word osmosis in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q163214 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'osmosis')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of diffusion . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'osmosis')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "osmosis in it",
            "choppedEntity": "osmosis"
        }
    },
    {
        "chopped": {
            "question": "tell me municipality of germany that name has  the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q262166 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of municipality of Germany . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "tell me municipality of Germany that name has  the word winterberg in it",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q262166 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'winterberg')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of municipality of Germany . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'winterberg')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "winterberg in it",
            "choppedEntity": "winterberg"
        }
    },
    {
        "chopped": {
            "question": "let me know region of germany that title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q262166 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of municipality of Germany . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "let me know region of Germany that title has the word winterberg in it",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q262166 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'winterberg')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of municipality of Germany . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'winterberg')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "winterberg in it",
            "choppedEntity": "winterberg"
        }
    },
    {
        "chopped": {
            "question": "what movement did karl friedrich schinkel become a member of in ",
            "query": "SELECT ?ans1 WHERE { wd:Q151759 p:P463 ?s . ?s ps:P463 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Karl Friedrich Schinkel member of ?s . ?s member of ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What movement did Karl Friedrich Schinkel become a member of in 1835",
            "query": "SELECT ?obj WHERE { wd:Q151759 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1835')) }",
            "NLQuery": "SELECT ?obj WHERE { Karl Friedrich Schinkel member of ?s . ?s member of ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1835')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1835",
            "choppedEntity": "1835"
        }
    },
    {
        "chopped": {
            "question": "in what movement did karl friedrich schinkel participate in ",
            "query": "SELECT ?ans1 WHERE { wd:Q151759 p:P463 ?s . ?s ps:P463 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Karl Friedrich Schinkel member of ?s . ?s member of ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "In what movement did Karl Friedrich Schinkel participate in 1835",
            "query": "SELECT ?obj WHERE { wd:Q151759 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1835')) }",
            "NLQuery": "SELECT ?obj WHERE { Karl Friedrich Schinkel member of ?s . ?s member of ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1835')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1835",
            "choppedEntity": "1835"
        }
    },
    {
        "chopped": {
            "question": "whats the name of a first-order metaclass that starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q24017414 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of second-order class . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What's the name of a first-order metaclass that starts with \"t\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24017414 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of second-order class . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "name a first-order metaclass that begins with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q24017414 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of second-order class . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a first-order metaclass that begins with T.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24017414 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of second-order class . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what tv production company starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q10689397 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of television production company . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What TV production company starts with the letter \"t\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q10689397 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of television production company . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what tv generation company begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q10689397 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of television production company . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What TV generation company begins with the letter \"t\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q10689397 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of television production company . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what is a unit of measurement for length with the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1978718 . ?ans1 wdt:P111 wd:Q36253 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of unit of length . ?ans1 measured physical quantity length . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is a unit of measurement for length with the word \"yuku\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1978718 . ?sbj wdt:P111 wd:Q36253 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yuku')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of unit of length . ?sbj measured physical quantity length . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yuku')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "yuku in its name",
            "choppedEntity": "yuku"
        }
    },
    {
        "chopped": {
            "question": "what could be a unit of estimation for length with the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1978718 . ?ans1 wdt:P111 wd:Q36253 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of unit of length . ?ans1 measured physical quantity length . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What could be a unit of estimation for length with the word \"yuku\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1978718 . ?sbj wdt:P111 wd:Q36253 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yuku')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of unit of length . ?sbj measured physical quantity length . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yuku')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "yuku in its name",
            "choppedEntity": "yuku"
        }
    },
    {
        "chopped": {
            "question": "give me the name of the space mission that was launched at cape canaveral air force station and which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2133344 . ?ans1 wdt:P1427 wd:Q1034348 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of space mission . ?ans1 start point Cape Canaveral Space Launch Complex 41 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Give me the name of the space mission that was launched at Cape Canaveral Air Force Station and which contains the word voyager in their name.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2133344 . ?sbj wdt:P1427 wd:Q1034348 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'voyager')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of space mission . ?sbj start point Cape Canaveral Space Launch Complex 41 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'voyager')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "voyager in their name",
            "choppedEntity": "voyager"
        }
    },
    {
        "chopped": {
            "question": "deliver me the title of the space mission that was propelled at cape canaveral discuss drive station and which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2133344 . ?ans1 wdt:P1427 wd:Q1034348 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of space mission . ?ans1 start point Cape Canaveral Space Launch Complex 41 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Deliver me the title of the space mission that was propelled at Cape Canaveral Discuss Drive Station and which contains the word voyager in their name.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2133344 . ?sbj wdt:P1427 wd:Q1034348 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'voyager')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of space mission . ?sbj start point Cape Canaveral Space Launch Complex 41 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'voyager')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "voyager in their name",
            "choppedEntity": "voyager"
        }
    },
    {
        "chopped": {
            "question": "in what area was gothenburg during the end of ",
            "query": "SELECT ?ans1 WHERE { wd:Q25287 p:P2046 ?s . ?s ps:P2046 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Gothenburg area ?s . ?s area ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "In what area was Gothenburg during the end of 2010",
            "query": "SELECT ?obj WHERE { wd:Q25287 p:P2046 ?s . ?s ps:P2046 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2010')) }",
            "NLQuery": "SELECT ?obj WHERE { Gothenburg area ?s . ?s area ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2010')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2010",
            "choppedEntity": "2010"
        }
    },
    {
        "chopped": {
            "question": "where was gothenburg located during the end of ",
            "query": "SELECT ?ans1 WHERE { wd:Q25287 p:P2046 ?s . ?s ps:P2046 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Gothenburg area ?s . ?s area ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Where was Gothenburg located during the end of 2010",
            "query": "SELECT ?obj WHERE { wd:Q25287 p:P2046 ?s . ?s ps:P2046 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2010')) }",
            "NLQuery": "SELECT ?obj WHERE { Gothenburg area ?s . ?s area ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2010')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2010",
            "choppedEntity": "2010"
        }
    },
    {
        "chopped": {
            "question": "what are the music term which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q20202269 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of musical term . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the music term which start with the letter V",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20202269 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of musical term . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what is the music term which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q20202269 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of musical term . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is the music term which start with the letter V",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20202269 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of musical term . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what are the cooking method that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1039303 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of cooking method . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the cooking method that contains the word steeping in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1039303 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'steeping')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of cooking method . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'steeping')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "steeping in their name",
            "choppedEntity": "steeping"
        }
    },
    {
        "chopped": {
            "question": "what are the  syllable which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q8188 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of syllable . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the  syllable which start with the letter s",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q8188 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of syllable . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what are the syllable which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q8188 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of syllable . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the syllable which begin with the letter s",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q8188 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of syllable . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "name the carbon allotrope that forms crystal beginning with alphabet ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q622460 . ?ans1 wdt:P1419 wd:Q895901 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of allotrope of carbon . ?ans1 shape crystal structure . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name the carbon allotrope that forms crystal beginning with alphabet C.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q622460 . ?sbj wdt:P1419 wd:Q895901 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of allotrope of carbon . ?sbj shape crystal structure . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "c",
            "choppedEntity": "c"
        }
    },
    {
        "chopped": {
            "question": "in the liberec region, how many females are there of the population is ",
            "query": "SELECT ?ans1 WHERE { wd:Q193266 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P1539 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Liberec Region population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s female population ?ans1}"
        },
        "original": {
            "question": "In the Liberec Region, how many females are there of the population is 440636",
            "query": "SELECT ?value WHERE { wd:Q193266 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'440636')) . ?s pq:P1539 ?value}",
            "NLQuery": "SELECT ?value WHERE { Liberec Region population ?s . ?s population ?x FILTER(contains(?x,'440636')) . ?s female population ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "440636",
            "choppedEntity": "440636"
        }
    },
    {
        "chopped": {
            "question": "what is the diplomatic relation ship of grenada that has size ",
            "query": "SELECT ?ans1 WHERE { wd:Q769 wdt:P530 ?ans1 . ?ans1 wdt:P2043 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Grenada diplomatic relation ?ans1 . ?ans1 length ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the diplomatic relation ship of Grenada that has size 3860.0",
            "query": "SELECT ?answer WHERE { wd:Q769 wdt:P530 ?answer . ?answer wdt:P2043 ?x FILTER(contains(?x,'3860.0'))}",
            "NLQuery": "SELECT ?answer WHERE { Grenada diplomatic relation ?answer . ?answer length ?x FILTER(contains(?x,'3860.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "38600",
            "choppedEntity": "3860.0"
        }
    },
    {
        "chopped": {
            "question": "what is the diplomatic relation ship of grenada that has dimension ",
            "query": "SELECT ?ans1 WHERE { wd:Q769 wdt:P530 ?ans1 . ?ans1 wdt:P2043 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Grenada diplomatic relation ?ans1 . ?ans1 length ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the diplomatic relation ship of Grenada that has dimension 3860.0",
            "query": "SELECT ?answer WHERE { wd:Q769 wdt:P530 ?answer . ?answer wdt:P2043 ?x FILTER(contains(?x,'3860.0'))}",
            "NLQuery": "SELECT ?answer WHERE { Grenada diplomatic relation ?answer . ?answer length ?x FILTER(contains(?x,'3860.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "38600",
            "choppedEntity": "3860.0"
        }
    },
    {
        "chopped": {
            "question": "what are the gambling which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11416 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of gambling . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the gambling which start with the letter Z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11416 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of gambling . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "what are the betting which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11416 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of gambling . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the betting which begin with the letter Z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11416 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of gambling . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "what is a devi that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q494511 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of devi . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is a Devi that starts with the letter v.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q494511 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of devi . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what may be a devi that begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q494511 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of devi . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What may be a Devi that begins with the letter v.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q494511 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of devi . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what are the halide anion which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q30972056 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of halide anion . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the halide anion which start with the letter i",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q30972056 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'i')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of halide anion . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'i')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "i",
            "choppedEntity": "i"
        }
    },
    {
        "chopped": {
            "question": "what are the halide anion which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q30972056 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of halide anion . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the halide anion which begin with the letter i",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q30972056 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'i')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of halide anion . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'i')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "i",
            "choppedEntity": "i"
        }
    },
    {
        "chopped": {
            "question": "which is the god in the series of balabhadra and starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q190 . ?ans1 wdt:P179 wd:Q26701417 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of God . ?ans1 part of the series Balabhadra . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the God in the series of Balabhadra and starts with the letter r",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q190 . ?sbj wdt:P179 wd:Q26701417 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of God . ?sbj part of the series Balabhadra . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "r",
            "choppedEntity": "r"
        }
    },
    {
        "chopped": {
            "question": "which is the god in the series of balabhadra and begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q190 . ?ans1 wdt:P179 wd:Q26701417 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of God . ?ans1 part of the series Balabhadra . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the God in the series of Balabhadra and begins with the letter r",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q190 . ?sbj wdt:P179 wd:Q26701417 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of God . ?sbj part of the series Balabhadra . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "r",
            "choppedEntity": "r"
        }
    },
    {
        "chopped": {
            "question": "what are the boy band which starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q216337 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of boy band . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what are the boy band which starts with w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q216337 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of boy band . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "what are the boy band which begins with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q216337 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of boy band . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what are the boy band which begins with w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q216337 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of boy band . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "what are the type of sport which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q31629 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of type of sport . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the type of sport which start with the letter W",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q31629 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of type of sport . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "what are the spots which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q31629 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of type of sport . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the spots which start with the letter W",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q31629 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of type of sport . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "tell me recurring sporting event organizer tennis australia  starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q18608583 . ?ans1 wdt:P664 wd:Q3494880 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of recurring sporting event . ?ans1 organizer Tennis Australia . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "tell me recurring sporting event organizer tennis Australia  starts with a",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18608583 . ?sbj wdt:P664 wd:Q3494880 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of recurring sporting event . ?sbj organizer Tennis Australia . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "inform me routine sporting tournament organizer tennis australia starts offevolved with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q18608583 . ?ans1 wdt:P664 wd:Q3494880 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of recurring sporting event . ?ans1 organizer Tennis Australia . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "inform me routine sporting tournament organizer tennis Australia starts offevolved with a",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18608583 . ?sbj wdt:P664 wd:Q3494880 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of recurring sporting event . ?sbj organizer Tennis Australia . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "which higher taxon of australopithecus anamnesis, has the vernacular name  \uc624",
            "query": "SELECT ?ans1 WHERE { wd:Q310520 wdt:P171 ?ans1 . ?ans1 wdt:P1843 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Australopithecus anamensis parent taxon ?ans1 . ?ans1 taxon common name ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "\"Which higher taxon of Australopithecus Anamnesis, has the vernacular name  \uc624\uc2a4\ud2b8\ub784\ub85c\ud53c\ud14c\ucfe0\uc2a4\uc18d \"",
            "query": "SELECT ?answer WHERE { wd:Q310520 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'\uc624\uc2a4\ud2b8\ub784\ub85c\ud53c\ud14c\ucfe0\uc2a4\uc18d'))}",
            "NLQuery": "SELECT ?answer WHERE { Australopithecus anamensis parent taxon ?answer . ?answer taxon common name ?x FILTER(contains(?x,'\uc624\uc2a4\ud2b8\ub784\ub85c\ud53c\ud14c\ucfe0\uc2a4\uc18d'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\uc624\uc2a4\ud2b8\ub784\ub85c\ud53c\ud14c\ucfe0\uc2a4\uc18d",
            "choppedEntity": "\uc624\uc2a4\ud2b8\ub784\ub85c\ud53c\ud14c\ucfe0\uc2a4\uc18d"
        }
    },
    {
        "chopped": {
            "question": "which higher taxon of australopithecus anamnesis, has the vernacular identify \uc624",
            "query": "SELECT ?ans1 WHERE { wd:Q310520 wdt:P171 ?ans1 . ?ans1 wdt:P1843 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Australopithecus anamensis parent taxon ?ans1 . ?ans1 taxon common name ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "\"Which higher taxon of Australopithecus Anamnesis, has the vernacular identify \uc624\uc2a4\ud2b8\ub784\ub85c\ud53c\ud14c\ucfe0\uc2a4\uc18d \"",
            "query": "SELECT ?answer WHERE { wd:Q310520 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'\uc624\uc2a4\ud2b8\ub784\ub85c\ud53c\ud14c\ucfe0\uc2a4\uc18d'))}",
            "NLQuery": "SELECT ?answer WHERE { Australopithecus anamensis parent taxon ?answer . ?answer taxon common name ?x FILTER(contains(?x,'\uc624\uc2a4\ud2b8\ub784\ub85c\ud53c\ud14c\ucfe0\uc2a4\uc18d'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\uc624\uc2a4\ud2b8\ub784\ub85c\ud53c\ud14c\ucfe0\uc2a4\uc18d",
            "choppedEntity": "\uc624\uc2a4\ud2b8\ub784\ub85c\ud53c\ud14c\ucfe0\uc2a4\uc18d"
        }
    },
    {
        "chopped": {
            "question": "what economic branch produces motor vehicles and starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q268592 . ?ans1 wdt:P1056 wd:Q752870 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of industry . ?ans1 product or material produced motor vehicle . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What economic branch produces motor vehicles and starts with the letter \"a\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q268592 . ?sbj wdt:P1056 wd:Q752870 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of industry . ?sbj product or material produced motor vehicle . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "what monetary department produces motor cars and begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q268592 . ?ans1 wdt:P1056 wd:Q752870 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of industry . ?ans1 product or material produced motor vehicle . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What monetary department produces motor cars and begins with the letter \"a\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q268592 . ?sbj wdt:P1056 wd:Q752870 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of industry . ?sbj product or material produced motor vehicle . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "where was philip ii, metropolitan of moscow interred that has co-ordinate location ",
            "query": "SELECT ?ans1 WHERE { wd:Q2263654 wdt:P119 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Philip II, Metropolitan of Moscow place of burial ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Where was Philip II, Metropolitan of Moscow interred that has co-ordinate location 37.6169",
            "query": "SELECT ?answer WHERE { wd:Q2263654 wdt:P119 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'37.6169'))}",
            "NLQuery": "SELECT ?answer WHERE { Philip II, Metropolitan of Moscow place of burial ?answer . ?answer coordinate location ?x FILTER(contains(?x,'37.6169'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "376169",
            "choppedEntity": "37.6169"
        }
    },
    {
        "chopped": {
            "question": "where was once philip ii, metropolitan of moscow interred that has co-ordinate region ",
            "query": "SELECT ?ans1 WHERE { wd:Q2263654 wdt:P119 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Philip II, Metropolitan of Moscow place of burial ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Where was once Philip II, Metropolitan of Moscow interred that has co-ordinate region 37.6169",
            "query": "SELECT ?answer WHERE { wd:Q2263654 wdt:P119 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'37.6169'))}",
            "NLQuery": "SELECT ?answer WHERE { Philip II, Metropolitan of Moscow place of burial ?answer . ?answer coordinate location ?x FILTER(contains(?x,'37.6169'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "376169",
            "choppedEntity": "37.6169"
        }
    },
    {
        "chopped": {
            "question": "what position did william cavendish-bentinck, 3rd duke of portland hold on march, 31 ",
            "query": "SELECT ?ans1 WHERE { wd:Q157208 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { William Cavendish-Bentinck, 3rd Duke of Portland position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What position did William Cavendish-Bentinck, 3rd Duke of Portland hold on March, 31 1807",
            "query": "SELECT ?obj WHERE { wd:Q157208 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1807')) }",
            "NLQuery": "SELECT ?obj WHERE { William Cavendish-Bentinck, 3rd Duke of Portland position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1807')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1807",
            "choppedEntity": "1807"
        }
    },
    {
        "chopped": {
            "question": "who did andriyan nikolayev divorce in ",
            "query": "SELECT ?ans1 WHERE { wd:Q312474 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Andriyan Nikolayev spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who did Andriyan Nikolayev divorce in 1982",
            "query": "SELECT ?obj WHERE { wd:Q312474 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1982')) }",
            "NLQuery": "SELECT ?obj WHERE { Andriyan Nikolayev spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1982')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1982",
            "choppedEntity": "1982"
        }
    },
    {
        "chopped": {
            "question": "who divorced andriyan nikolayev in ",
            "query": "SELECT ?ans1 WHERE { wd:Q312474 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Andriyan Nikolayev spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who divorced Andriyan Nikolayev in 1982",
            "query": "SELECT ?obj WHERE { wd:Q312474 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1982')) }",
            "NLQuery": "SELECT ?obj WHERE { Andriyan Nikolayev spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1982')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1982",
            "choppedEntity": "1982"
        }
    },
    {
        "chopped": {
            "question": "for what electorate position did general santos receive on 4-20-",
            "query": "SELECT ?ans1 WHERE { wd:Q594275 p:P1831 ?s . ?s ps:P1831 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { General Santos electorate ?s . ?s electorate ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "For what electorate position did General Santos receive on 4-20-2007",
            "query": "SELECT ?obj WHERE { wd:Q594275 p:P1831 ?s . ?s ps:P1831 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2007')) }",
            "NLQuery": "SELECT ?obj WHERE { General Santos electorate ?s . ?s electorate ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2007')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2007",
            "choppedEntity": "2007"
        }
    },
    {
        "chopped": {
            "question": "which electorate position did general santos begin on 4-20-",
            "query": "SELECT ?ans1 WHERE { wd:Q594275 p:P1831 ?s . ?s ps:P1831 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { General Santos electorate ?s . ?s electorate ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which electorate position did General Santos begin on 4-20-2007",
            "query": "SELECT ?obj WHERE { wd:Q594275 p:P1831 ?s . ?s ps:P1831 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2007')) }",
            "NLQuery": "SELECT ?obj WHERE { General Santos electorate ?s . ?s electorate ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2007')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2007",
            "choppedEntity": "2007"
        }
    },
    {
        "chopped": {
            "question": "tell me jurisdiction that name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q471855 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of jurisdiction . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "tell me jurisdiction that name has the word viguerie in it",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q471855 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'viguerie')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of jurisdiction . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'viguerie')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "viguerie in it",
            "choppedEntity": "viguerie"
        }
    },
    {
        "chopped": {
            "question": "tell me that name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q471855 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of jurisdiction . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me that name has the word viguerie in it",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q471855 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'viguerie')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of jurisdiction . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'viguerie')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "viguerie in it",
            "choppedEntity": "viguerie"
        }
    },
    {
        "chopped": {
            "question": "what team did m\u00e1gico gonz\u00e1lez play for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q762497 p:P54 ?s . ?s ps:P54 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { M\u00e1gico Gonz\u00e1lez member of sports team ?s . ?s member of sports team ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What team did M\u00e1gico Gonz\u00e1lez play for in 1976",
            "query": "SELECT ?obj WHERE { wd:Q762497 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1976')) }",
            "NLQuery": "SELECT ?obj WHERE { M\u00e1gico Gonz\u00e1lez member of sports team ?s . ?s member of sports team ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1976')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1976",
            "choppedEntity": "1976"
        }
    },
    {
        "chopped": {
            "question": "tell me statistical inference whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q938438 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of statistical inference . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me statistical inference whose name has the word bayesian in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q938438 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'bayesian')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of statistical inference . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'bayesian')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "bayesian in it",
            "choppedEntity": "bayesian"
        }
    },
    {
        "chopped": {
            "question": "let me know measurable deduction whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q938438 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of statistical inference . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know measurable deduction whose title has the word bayesian in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q938438 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'bayesian')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of statistical inference . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'bayesian')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "bayesian in it",
            "choppedEntity": "bayesian"
        }
    },
    {
        "chopped": {
            "question": "tell me cryptocurrency whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q13479982 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of cryptocurrency . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me cryptocurrency whose name has the word zerocoin in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13479982 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zerocoin')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of cryptocurrency . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zerocoin')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "zerocoin in it",
            "choppedEntity": "zerocoin"
        }
    },
    {
        "chopped": {
            "question": "tell me the name of the cryptocurrency with the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q13479982 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of cryptocurrency . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the name of the cryptocurrency with the word zerocoin in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13479982 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zerocoin')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of cryptocurrency . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zerocoin')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "zerocoin in it",
            "choppedEntity": "zerocoin"
        }
    },
    {
        "chopped": {
            "question": "what are the index number which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1738991 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of index number . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the index number which start with the letter vix",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1738991 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vix')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of index number . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vix')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "vix",
            "choppedEntity": "vix"
        }
    },
    {
        "chopped": {
            "question": "what is the index number starting with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1738991 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of index number . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is the index number starting with the letter vix",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1738991 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vix')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of index number . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vix')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "vix",
            "choppedEntity": "vix"
        }
    },
    {
        "chopped": {
            "question": "which branch of physics starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q4162444 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of branch of physics . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which branch of physics starts with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4162444 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of branch of physics . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "which department of material science begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q4162444 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of branch of physics . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which department of material science begins with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4162444 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of branch of physics . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "who was amy winehouse partner on jan 1st ",
            "query": "SELECT ?ans1 WHERE { wd:Q15897 p:P451 ?s . ?s ps:P451 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Amy Winehouse unmarried partner ?s . ?s unmarried partner ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was Amy Winehouse partner on Jan 1st 2010",
            "query": "SELECT ?obj WHERE { wd:Q15897 p:P451 ?s . ?s ps:P451 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2010')) }",
            "NLQuery": "SELECT ?obj WHERE { Amy Winehouse unmarried partner ?s . ?s unmarried partner ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2010')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2010",
            "choppedEntity": "2010"
        }
    },
    {
        "chopped": {
            "question": "what religion based on sacred text tao te ching contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q9174 . ?ans1 wdt:P92 wd:Q134425 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of religion . ?ans1 main regulatory text Tao Te Ching . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What religion based on sacred text Tao Te Ching contains the word \"taoism\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q9174 . ?sbj wdt:P92 wd:Q134425 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'taoism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of religion . ?sbj main regulatory text Tao Te Ching . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'taoism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "taoism in its name",
            "choppedEntity": "taoism"
        }
    },
    {
        "chopped": {
            "question": "what religion based totally on sacred textual content tao te ching contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q9174 . ?ans1 wdt:P92 wd:Q134425 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of religion . ?ans1 main regulatory text Tao Te Ching . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What religion based totally on sacred textual content Tao Te Ching contains the word \"taoism\" in its title",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q9174 . ?sbj wdt:P92 wd:Q134425 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'taoism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of religion . ?sbj main regulatory text Tao Te Ching . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'taoism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "taoism in its title",
            "choppedEntity": "taoism"
        }
    },
    {
        "chopped": {
            "question": "which is the institution that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q178706 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of institution . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHICH IS THE INSTITUTION THAT CONTAINS THE WORD ROMAN IN THEIR NAME",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q178706 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'roman')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of institution . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'roman')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "roman in their name",
            "choppedEntity": "roman"
        }
    },
    {
        "chopped": {
            "question": "tell me the conglomerate of the industry conglomerate which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q778575 . ?ans1 wdt:P452 wd:Q778575 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of conglomerate . ?ans1 industry conglomerate . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the conglomerate of the industry conglomerate which contains the word ling in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q778575 . ?sbj wdt:P452 wd:Q778575 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ling')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of conglomerate . ?sbj industry conglomerate . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ling')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "ling in its name",
            "choppedEntity": "ling"
        }
    },
    {
        "chopped": {
            "question": "who became the chief executive officer of advanced micro devices in ",
            "query": "SELECT ?ans1 WHERE { wd:Q128896 p:P169 ?s . ?s ps:P169 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Advanced Micro Devices chief executive officer ?s . ?s chief executive officer ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who became the chief executive officer of Advanced Micro Devices in 2014",
            "query": "SELECT ?obj WHERE { wd:Q128896 p:P169 ?s . ?s ps:P169 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2014')) }",
            "NLQuery": "SELECT ?obj WHERE { Advanced Micro Devices chief executive officer ?s . ?s chief executive officer ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2014')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2014",
            "choppedEntity": "2014"
        }
    },
    {
        "chopped": {
            "question": "who was named ceo of advanced micro devices in ",
            "query": "SELECT ?ans1 WHERE { wd:Q128896 p:P169 ?s . ?s ps:P169 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Advanced Micro Devices chief executive officer ?s . ?s chief executive officer ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was named CEO of Advanced Micro Devices in 2014",
            "query": "SELECT ?obj WHERE { wd:Q128896 p:P169 ?s . ?s ps:P169 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2014')) }",
            "NLQuery": "SELECT ?obj WHERE { Advanced Micro Devices chief executive officer ?s . ?s chief executive officer ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2014')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2014",
            "choppedEntity": "2014"
        }
    },
    {
        "chopped": {
            "question": "what are the war of national liberation which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1006311 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of war of national liberation . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the war of national liberation which start with the letter w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1006311 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of war of national liberation . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "what are the war of national liberation which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1006311 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of war of national liberation . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the war of national liberation which begin with the letter w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1006311 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of war of national liberation . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "what was julie harris nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q236708 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Julie Harris nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Julie Harris nominated for in 1976",
            "query": "SELECT ?obj WHERE { wd:Q236708 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1976')) }",
            "NLQuery": "SELECT ?obj WHERE { Julie Harris nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1976')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1976",
            "choppedEntity": "1976"
        }
    },
    {
        "chopped": {
            "question": "which was the nomination that julie harris got in ",
            "query": "SELECT ?ans1 WHERE { wd:Q236708 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Julie Harris nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which was the nomination that Julie Harris got in 1976",
            "query": "SELECT ?obj WHERE { wd:Q236708 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1976')) }",
            "NLQuery": "SELECT ?obj WHERE { Julie Harris nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1976')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1976",
            "choppedEntity": "1976"
        }
    },
    {
        "chopped": {
            "question": "what what is train service significant event  yar\u0131mburgaz train disaster  and also  which that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15141321 . ?ans1 wdt:P793 wd:Q18639918 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of train service . ?ans1 significant event Yar\u0131mburgaz train disaster . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What what is train service significant event  yar\u0131mburgaz train disaster  and also  which that starts with letter e",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15141321 . ?sbj wdt:P793 wd:Q18639918 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of train service . ?sbj significant event Yar\u0131mburgaz train disaster . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "e",
            "choppedEntity": "e"
        }
    },
    {
        "chopped": {
            "question": "what what is train carrier big match yar\u0131mburgaz instruct disaster and additionally which that begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15141321 . ?ans1 wdt:P793 wd:Q18639918 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of train service . ?ans1 significant event Yar\u0131mburgaz train disaster . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What what is train carrier big match yar\u0131mburgaz instruct disaster and additionally which that begins with letter e",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15141321 . ?sbj wdt:P793 wd:Q18639918 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of train service . ?sbj significant event Yar\u0131mburgaz train disaster . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "e",
            "choppedEntity": "e"
        }
    },
    {
        "chopped": {
            "question": "what award did david geffen receive in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q115055 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { David Geffen award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did David Geffen receive in the year 1990",
            "query": "SELECT ?obj WHERE { wd:Q115055 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1990')) }",
            "NLQuery": "SELECT ?obj WHERE { David Geffen award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1990')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1990",
            "choppedEntity": "1990"
        }
    },
    {
        "chopped": {
            "question": "with what was david geffen awarded in ",
            "query": "SELECT ?ans1 WHERE { wd:Q115055 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { David Geffen award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "With what was David Geffen awarded in 1990",
            "query": "SELECT ?obj WHERE { wd:Q115055 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1990')) }",
            "NLQuery": "SELECT ?obj WHERE { David Geffen award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1990')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1990",
            "choppedEntity": "1990"
        }
    },
    {
        "chopped": {
            "question": "what are the war deity which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q41863069 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of war deity . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the war deity which start with the letter zalmoxis",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q41863069 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zalmoxis')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of war deity . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zalmoxis')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "zalmoxis",
            "choppedEntity": "zalmoxis"
        }
    },
    {
        "chopped": {
            "question": "name the war deity which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q41863069 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of war deity . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name the war deity which contains the word zalmoxis.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q41863069 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zalmoxis')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of war deity . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zalmoxis')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "zalmoxis",
            "choppedEntity": "zalmoxis"
        }
    },
    {
        "chopped": {
            "question": "what are the avion which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q13393265 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of basketball team . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the avion which start with the letter w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13393265 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of basketball team . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "what are the avion which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q13393265 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of basketball team . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the avion which begin with the letter w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13393265 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of basketball team . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "who is married to ivo andric that was born on 02-09-",
            "query": "SELECT ?ans1 WHERE { wd:Q47561 wdt:P26 ?ans1 . ?ans1 wdt:P569 ?x FILTER(contains(YEAR(?x),?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Ivo Andri\u0107 spouse ?ans1 . ?ans1 date of birth ?x FILTER(contains(YEAR(?x),?unknown))}"
        },
        "original": {
            "question": "Who is married to Ivo Andric that was born on 02-09-1909",
            "query": "SELECT ?answer WHERE { wd:Q47561 wdt:P26 ?answer . ?answer wdt:P569 ?x FILTER(contains(YEAR(?x),'1909'))}",
            "NLQuery": "SELECT ?answer WHERE { Ivo Andri\u0107 spouse ?answer . ?answer date of birth ?x FILTER(contains(YEAR(?x),'1909'))}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1909",
            "choppedEntity": "1909"
        }
    },
    {
        "chopped": {
            "question": "who is married to ivo andric that used to be born on 02-09-",
            "query": "SELECT ?ans1 WHERE { wd:Q47561 wdt:P26 ?ans1 . ?ans1 wdt:P569 ?x FILTER(contains(YEAR(?x),?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Ivo Andri\u0107 spouse ?ans1 . ?ans1 date of birth ?x FILTER(contains(YEAR(?x),?unknown))}"
        },
        "original": {
            "question": "Who is married to Ivo Andric that used to be born on 02-09-1909",
            "query": "SELECT ?answer WHERE { wd:Q47561 wdt:P26 ?answer . ?answer wdt:P569 ?x FILTER(contains(YEAR(?x),'1909'))}",
            "NLQuery": "SELECT ?answer WHERE { Ivo Andri\u0107 spouse ?answer . ?answer date of birth ?x FILTER(contains(YEAR(?x),'1909'))}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1909",
            "choppedEntity": "1909"
        }
    },
    {
        "chopped": {
            "question": "when was the population of bethlehem ",
            "query": "SELECT ?ans1 WHERE { wd:Q5776 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Bethlehem population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was the population of Bethlehem 25266",
            "query": "SELECT ?value WHERE { wd:Q5776 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'25266.0')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Bethlehem population ?s . ?s population ?x FILTER(contains(?x,'25266.0')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "25266",
            "choppedEntity": "25266.0"
        }
    },
    {
        "chopped": {
            "question": "do you know the year when the population of bethlehem was ",
            "query": "SELECT ?ans1 WHERE { wd:Q5776 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Bethlehem population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "Do you know the year when the population of Bethlehem was 25266",
            "query": "SELECT ?value WHERE { wd:Q5776 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'25266.0')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Bethlehem population ?s . ?s population ?x FILTER(contains(?x,'25266.0')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "25266",
            "choppedEntity": "25266.0"
        }
    },
    {
        "chopped": {
            "question": "what are the fossil taxon was starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q23038290 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of fossil taxon . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what are the fossil taxon was starts with z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23038290 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of fossil taxon . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "what are the fossil taxon was begins with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q23038290 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of fossil taxon . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what are the fossil taxon was begins with z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23038290 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of fossil taxon . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "which song that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q7366 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of song . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which song that contains the word world in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7366 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'world')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of song . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'world')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "world in their name",
            "choppedEntity": "world"
        }
    },
    {
        "chopped": {
            "question": "which melody that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q7366 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of song . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which melody that contains the word world in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7366 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'world')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of song . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'world')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "world in their name",
            "choppedEntity": "world"
        }
    },
    {
        "chopped": {
            "question": "what are the coordinate system which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11210 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of coordinate system . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the coordinate system which start with the letter universal",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11210 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'universal')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of coordinate system . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'universal')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "universal",
            "choppedEntity": "universal"
        }
    },
    {
        "chopped": {
            "question": "tell me natural number whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q21199 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of natural number . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me natural number whose name has the word googolplex in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21199 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'googolplex')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of natural number . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'googolplex')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "googolplex in it",
            "choppedEntity": "googolplex"
        }
    },
    {
        "chopped": {
            "question": "let me know common number whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q21199 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of natural number . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know common number whose title has the word googolplex in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21199 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'googolplex')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of natural number . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'googolplex')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "googolplex in it",
            "choppedEntity": "googolplex"
        }
    },
    {
        "chopped": {
            "question": "What role was Andrew Lloyd Webber nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q180975 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x filter(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Andrew Lloyd Webber nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x filter(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What role was Andrew Lloyd Webber nominated for in 2016-0-0",
            "query": "SELECT ?obj WHERE { wd:Q180975 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2016')) }",
            "NLQuery": "SELECT ?ans1 WHERE { Andrew Lloyd Webber nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x filter(contains(YEAR(?x),'2016')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2016-0-0",
            "choppedEntity": "2016-0-0"
        }
    },
    {
        "chopped": {
            "question": "which is the writing system which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q8192 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of writing system . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the writing system which contains the word writing in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q8192 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'writing')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of writing system . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'writing')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "writing in its name",
            "choppedEntity": "writing"
        }
    },
    {
        "chopped": {
            "question": "which platforms were grand theft auto v for that were published in 9/17/",
            "query": "SELECT ?ans1 WHERE { wd:Q17452 p:P400 ?s . ?s ps:P400 ?ans1 . ?s pq:P577 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Grand Theft Auto V platform ?s . ?s platform ?ans1 . ?s date of publication ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which platforms were Grand Theft Auto V for that were published in 9/17/2013",
            "query": "SELECT ?obj WHERE { wd:Q17452 p:P400 ?s . ?s ps:P400 ?obj . ?s pq:P577 ?x FILTER(contains(YEAR(?x),'2013')) }",
            "NLQuery": "SELECT ?obj WHERE { Grand Theft Auto V platform ?s . ?s platform ?obj . ?s date of publication ?x FILTER(contains(YEAR(?x),'2013')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2013",
            "choppedEntity": "2013"
        }
    },
    {
        "chopped": {
            "question": "on which platforms could one play grand theft auto v, which were published in 9/17/",
            "query": "SELECT ?ans1 WHERE { wd:Q17452 p:P400 ?s . ?s ps:P400 ?ans1 . ?s pq:P577 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Grand Theft Auto V platform ?s . ?s platform ?ans1 . ?s date of publication ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "On which platforms could one play Grand Theft Auto V, which were published in 9/17/2013",
            "query": "SELECT ?obj WHERE { wd:Q17452 p:P400 ?s . ?s ps:P400 ?obj . ?s pq:P577 ?x FILTER(contains(YEAR(?x),'2013')) }",
            "NLQuery": "SELECT ?obj WHERE { Grand Theft Auto V platform ?s . ?s platform ?obj . ?s date of publication ?x FILTER(contains(YEAR(?x),'2013')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2013",
            "choppedEntity": "2013"
        }
    },
    {
        "chopped": {
            "question": "what are the group of organisms known by one particular common name which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q55983715 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of organisms known by a particular common name . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the group of organisms known by one particular common name which start with the letter w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55983715 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of organisms known by a particular common name . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "what is the group of organisms known by a specific common name that begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q55983715 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of organisms known by a particular common name . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is the group of organisms known by a specific common name that begins with the letter w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55983715 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of organisms known by a particular common name . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "give me the  point in time for martinique has population as ",
            "query": "SELECT ?ans1 WHERE { wd:Q17054 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Martinique population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "Give me the  point in time for Martinique has population as 380877",
            "query": "SELECT ?value WHERE { wd:Q17054 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'380877')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Martinique population ?s . ?s population ?x FILTER(contains(?x,'380877')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "380877",
            "choppedEntity": "380877"
        }
    },
    {
        "chopped": {
            "question": "on what date will martinique have population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q17054 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Martinique population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "On what date will Martinique have population of 380877",
            "query": "SELECT ?value WHERE { wd:Q17054 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'380877')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Martinique population ?s . ?s population ?x FILTER(contains(?x,'380877')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "380877",
            "choppedEntity": "380877"
        }
    },
    {
        "chopped": {
            "question": "what part of the pardubice region has a male population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q193317 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P1540 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Pardubice Region population ?s . ?s population ?ans1 . ?s male population ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "What part of the Pardubice Region has a male population of 255691",
            "query": "SELECT ?obj WHERE { wd:Q193317 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P1540 ?x FILTER(contains(?x,'255691.0')) }",
            "NLQuery": "SELECT ?obj WHERE { Pardubice Region population ?s . ?s population ?obj . ?s male population ?x FILTER(contains(?x,'255691.0')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "255691",
            "choppedEntity": "255691.0"
        }
    },
    {
        "chopped": {
            "question": "which part of the pardubice region has a male population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q193317 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P1540 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Pardubice Region population ?s . ?s population ?ans1 . ?s male population ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "Which part of the Pardubice Region has a male population of 255691",
            "query": "SELECT ?obj WHERE { wd:Q193317 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P1540 ?x FILTER(contains(?x,'255691.0')) }",
            "NLQuery": "SELECT ?obj WHERE { Pardubice Region population ?s . ?s population ?obj . ?s male population ?x FILTER(contains(?x,'255691.0')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "255691",
            "choppedEntity": "255691.0"
        }
    },
    {
        "chopped": {
            "question": "who was the woman in sphinx with an abbreviation of ",
            "query": "SELECT ?ans1 WHERE { wd:Q151480 wdt:P21 ?ans1 . ?ans1 wdt:P1813 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { sphinx sex or gender ?ans1 . ?ans1 short name ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Who was the woman in Sphinx with an abbreviation of \u0436\u0435\u043d\u0441\u043a\u0438\u0439",
            "query": "SELECT ?answer WHERE { wd:Q151480 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'\u0436\u0435\u043d\u0441\u043a\u0438\u0439'))}",
            "NLQuery": "SELECT ?answer WHERE { sphinx sex or gender ?answer . ?answer short name ?x FILTER(contains(?x,'\u0436\u0435\u043d\u0441\u043a\u0438\u0439'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u0436\u0435\u043d\u0441\u043a\u0438\u0439",
            "choppedEntity": "\u0436\u0435\u043d\u0441\u043a\u0438\u0439"
        }
    },
    {
        "chopped": {
            "question": "who is the child of nurhaci that was born on 2/16/",
            "query": "SELECT ?ans1 WHERE { wd:Q311189 wdt:P40 ?ans1 . ?ans1 wdt:P569 ?x FILTER(contains(YEAR(?x),?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Nurhaci child ?ans1 . ?ans1 date of birth ?x FILTER(contains(YEAR(?x),?unknown))}"
        },
        "original": {
            "question": "Who is the child of Nurhaci that was born on 2/16/1612",
            "query": "SELECT ?answer WHERE { wd:Q311189 wdt:P40 ?answer . ?answer wdt:P569 ?x FILTER(contains(YEAR(?x),'1612'))}",
            "NLQuery": "SELECT ?answer WHERE { Nurhaci child ?answer . ?answer date of birth ?x FILTER(contains(YEAR(?x),'1612'))}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1612",
            "choppedEntity": "1612"
        }
    },
    {
        "chopped": {
            "question": "what is the historical period of julia balbilla that is until ",
            "query": "SELECT ?ans1 WHERE { wd:Q441786 wdt:P2348 ?ans1 . ?ans1 wdt:P582 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Julia Balbilla time period ?ans1 . ?ans1 end time ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the historical period of Julia Balbilla that is until -30-1-1",
            "query": "SELECT ?answer WHERE { wd:Q441786 wdt:P2348 ?answer . ?answer wdt:P582 ?x FILTER(contains(?x,'-30-1-1'))}",
            "NLQuery": "SELECT ?answer WHERE { Julia Balbilla time period ?answer . ?answer end time ?x FILTER(contains(?x,'-30-1-1'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "-30-1-1",
            "choppedEntity": "-30-1-1"
        }
    },
    {
        "chopped": {
            "question": "tell me superpower whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1047698 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of superpower . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me superpower whose name has the word waterbending in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1047698 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'waterbending')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of superpower . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'waterbending')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "waterbending in it",
            "choppedEntity": "waterbending"
        }
    },
    {
        "chopped": {
            "question": "tell me superpower whose name contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1047698 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of superpower . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me superpower whose name contains the word waterbending.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1047698 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'waterbending')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of superpower . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'waterbending')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "waterbending",
            "choppedEntity": "waterbending"
        }
    },
    {
        "chopped": {
            "question": "tell me city whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q515 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of city . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me city whose name has the word whitehorse in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q515 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'whitehorse')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of city . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'whitehorse')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "whitehorse in it",
            "choppedEntity": "whitehorse"
        }
    },
    {
        "chopped": {
            "question": "inform the city name which word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q515 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of city . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Inform the city name which word whitehorse in it",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q515 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'whitehorse')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of city . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'whitehorse')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "whitehorse in it",
            "choppedEntity": "whitehorse"
        }
    },
    {
        "chopped": {
            "question": "which child of john adams died on february 23, ",
            "query": "SELECT ?ans1 WHERE { wd:Q11806 p:P40 ?s . ?s ps:P40 ?ans1 . ?s pq:P570 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { John Adams child ?s . ?s child ?ans1 . ?s date of death ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which child of John Adams died on February 23, 1848",
            "query": "SELECT ?obj WHERE { wd:Q11806 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?x FILTER(contains(YEAR(?x),'1848')) }",
            "NLQuery": "SELECT ?obj WHERE { John Adams child ?s . ?s child ?obj . ?s date of death ?x FILTER(contains(YEAR(?x),'1848')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1848",
            "choppedEntity": "1848"
        }
    },
    {
        "chopped": {
            "question": "which child did john adams lose in ",
            "query": "SELECT ?ans1 WHERE { wd:Q11806 p:P40 ?s . ?s ps:P40 ?ans1 . ?s pq:P570 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { John Adams child ?s . ?s child ?ans1 . ?s date of death ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which child did John Adams lose in 1848",
            "query": "SELECT ?obj WHERE { wd:Q11806 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?x FILTER(contains(YEAR(?x),'1848')) }",
            "NLQuery": "SELECT ?obj WHERE { John Adams child ?s . ?s child ?obj . ?s date of death ?x FILTER(contains(YEAR(?x),'1848')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1848",
            "choppedEntity": "1848"
        }
    },
    {
        "chopped": {
            "question": "what position did nikos kazantzakis hold on january 11, ",
            "query": "SELECT ?ans1 WHERE { wd:Q214622 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Nikos Kazantzakis position held ?s . ?s position held ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What position did Nikos Kazantzakis hold on January 11, 1946",
            "query": "SELECT ?obj WHERE { wd:Q214622 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1946')) }",
            "NLQuery": "SELECT ?obj WHERE { Nikos Kazantzakis position held ?s . ?s position held ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1946')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1946",
            "choppedEntity": "1946"
        }
    },
    {
        "chopped": {
            "question": "what award did iren\u00e4us eibl-eibesfeldt receive on january 1st, ",
            "query": "SELECT ?ans1 WHERE { wd:Q78755 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Iren\u00e4us Eibl-Eibesfeldt award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Iren\u00e4us Eibl-Eibesfeldt receive on January 1st, 1988",
            "query": "SELECT ?obj WHERE { wd:Q78755 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1988')) }",
            "NLQuery": "SELECT ?obj WHERE { Iren\u00e4us Eibl-Eibesfeldt award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1988')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1988",
            "choppedEntity": "1988"
        }
    },
    {
        "chopped": {
            "question": "irenaus eibl-eibersfeldt received which award on 1/1/",
            "query": "SELECT ?ans1 WHERE { wd:Q78755 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Iren\u00e4us Eibl-Eibesfeldt award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Irenaus Eibl-Eibersfeldt received which award on 1/1/1988",
            "query": "SELECT ?obj WHERE { wd:Q78755 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1988')) }",
            "NLQuery": "SELECT ?obj WHERE { Iren\u00e4us Eibl-Eibesfeldt award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1988')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1988",
            "choppedEntity": "1988"
        }
    },
    {
        "chopped": {
            "question": "who was the spose of yuri andropov in ",
            "query": "SELECT ?ans1 WHERE { wd:Q44071 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Yuri Andropov spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was the spose of Yuri Andropov in 1984",
            "query": "SELECT ?obj WHERE { wd:Q44071 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1984')) }",
            "NLQuery": "SELECT ?obj WHERE { Yuri Andropov spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1984')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1984",
            "choppedEntity": "1984"
        }
    },
    {
        "chopped": {
            "question": "who was yuri andropovs wife in ",
            "query": "SELECT ?ans1 WHERE { wd:Q44071 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Yuri Andropov spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was Yuri Andropov's wife in 1984",
            "query": "SELECT ?obj WHERE { wd:Q44071 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1984')) }",
            "NLQuery": "SELECT ?obj WHERE { Yuri Andropov spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1984')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1984",
            "choppedEntity": "1984"
        }
    },
    {
        "chopped": {
            "question": "name a philosophical movement that contains the word  ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2915955 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of philosophical movement . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a philosophical movement that contains the word \" yangmingism\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2915955 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yangmingism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of philosophical movement . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yangmingism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "yangmingism in its name",
            "choppedEntity": "yangmingism"
        }
    },
    {
        "chopped": {
            "question": "title a philosophical development that contains the word  ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2915955 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of philosophical movement . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Title a philosophical development that contains the word \" yangmingism\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2915955 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yangmingism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of philosophical movement . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yangmingism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "yangmingism in its name",
            "choppedEntity": "yangmingism"
        }
    },
    {
        "chopped": {
            "question": "what what is excipient has executive producer ken keller and which starts with letters with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q581714 . ?ans1 wdt:P1431 wd:Q1339527 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of animated series . ?ans1 executive producer Ken Keeler . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What what is excipient has executive producer ken keller and which starts with letters with f",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q581714 . ?sbj wdt:P1431 wd:Q1339527 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'f')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of animated series . ?sbj executive producer Ken Keeler . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'f')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "f",
            "choppedEntity": "f"
        }
    },
    {
        "chopped": {
            "question": "what what is excipient has government producer ken keller and which starts with letters with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q581714 . ?ans1 wdt:P1431 wd:Q1339527 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of animated series . ?ans1 executive producer Ken Keeler . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What what is excipient has government producer ken keller and which starts with letters with f",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q581714 . ?sbj wdt:P1431 wd:Q1339527 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'f')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of animated series . ?sbj executive producer Ken Keeler . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'f')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "f",
            "choppedEntity": "f"
        }
    },
    {
        "chopped": {
            "question": "what was bewitched nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1044635 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Bewitched nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Bewitched nominated for in 1967",
            "query": "SELECT ?obj WHERE { wd:Q1044635 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1967')) }",
            "NLQuery": "SELECT ?obj WHERE { Bewitched nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1967')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1967",
            "choppedEntity": "1967"
        }
    },
    {
        "chopped": {
            "question": "what award did barbara mcclintock receive in december of ",
            "query": "SELECT ?ans1 WHERE { wd:Q199654 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Barbara McClintock award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Barbara McClintock receive in December of 1981",
            "query": "SELECT ?obj WHERE { wd:Q199654 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1981')) }",
            "NLQuery": "SELECT ?obj WHERE { Barbara McClintock award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1981')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1981",
            "choppedEntity": "1981"
        }
    },
    {
        "chopped": {
            "question": "what period follows the ediacaran and includes the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q403523 . ?ans1 wdt:P155 wd:Q188654 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of system . ?ans1 follows Ediacaran . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What period follows the Ediacaran and includes the word \"Cambrian\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q403523 . ?sbj wdt:P155 wd:Q188654 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'cambrian')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of system . ?sbj follows Ediacaran . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'cambrian')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "cambrian",
            "choppedEntity": "cambrian"
        }
    },
    {
        "chopped": {
            "question": "what duration follows the ediacaran and consists of the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q403523 . ?ans1 wdt:P155 wd:Q188654 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of system . ?ans1 follows Ediacaran . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What duration follows the Ediacaran and consists of the word \"Cambrian\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q403523 . ?sbj wdt:P155 wd:Q188654 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'cambrian')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of system . ?sbj follows Ediacaran . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'cambrian')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "cambrian",
            "choppedEntity": "cambrian"
        }
    },
    {
        "chopped": {
            "question": "what is bernhard schlinks notable work from the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q76699 p:P800 ?s . ?s ps:P800 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Bernhard Schlink notable work ?s . ?s notable work ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What is Bernhard Schlink's notable work from the year 2000",
            "query": "SELECT ?obj WHERE { wd:Q76699 p:P800 ?s . ?s ps:P800 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2000')) }",
            "NLQuery": "SELECT ?obj WHERE { Bernhard Schlink notable work ?s . ?s notable work ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2000')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2000",
            "choppedEntity": "2000"
        }
    },
    {
        "chopped": {
            "question": "when did berlins twinned administrative body start on august 28th, ",
            "query": "SELECT ?ans1 WHERE { wd:Q64 p:P190 ?s . ?s ps:P190 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Berlin twinned administrative body ?s . ?s twinned administrative body ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "When did Berlin's twinned administrative body start on August 28th, 1992",
            "query": "SELECT ?obj WHERE { wd:Q64 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1992')) }",
            "NLQuery": "SELECT ?obj WHERE { Berlin twinned administrative body ?s . ?s twinned administrative body ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1992')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1992",
            "choppedEntity": "1992"
        }
    },
    {
        "chopped": {
            "question": "what what isstate or insular area capital in the united states highest point crown hill cemetery  and alsowhich that starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q21518270 . ?ans1 wdt:P610 wd:Q5189371 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of state or insular area capital in the United States . ?ans1 highest point Crown Hill Cemetery . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What what isstate or insular area capital in the United States highest point Crown Hill Cemetery  and alsowhich that starts with i",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21518270 . ?sbj wdt:P610 wd:Q5189371 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'i')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of state or insular area capital in the United States . ?sbj highest point Crown Hill Cemetery . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'i')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "i",
            "choppedEntity": "i"
        }
    },
    {
        "chopped": {
            "question": "what isstate or isolated territory capital in the united states most elevated point crown hill cemetery and alsowhich that begins with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q21518270 . ?ans1 wdt:P610 wd:Q5189371 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of state or insular area capital in the United States . ?ans1 highest point Crown Hill Cemetery . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What isstate or isolated territory capital in the United States most elevated point Crown Hill Cemetery and alsowhich that begins with I",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21518270 . ?sbj wdt:P610 wd:Q5189371 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'i')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of state or insular area capital in the United States . ?sbj highest point Crown Hill Cemetery . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'i')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "i",
            "choppedEntity": "i"
        }
    },
    {
        "chopped": {
            "question": "what is population of nukus that is point in time in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q489898 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Nukus population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "what is population of Nukus that is point in time in the year 1979",
            "query": "SELECT ?obj WHERE { wd:Q489898 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1979')) }",
            "NLQuery": "SELECT ?obj WHERE { Nukus population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1979')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1979",
            "choppedEntity": "1979"
        }
    },
    {
        "chopped": {
            "question": "what is populace of nukus thats point in time within the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q489898 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Nukus population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "what is populace of Nukus that's point in time within the year 1979",
            "query": "SELECT ?obj WHERE { wd:Q489898 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1979')) }",
            "NLQuery": "SELECT ?obj WHERE { Nukus population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1979')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1979",
            "choppedEntity": "1979"
        }
    },
    {
        "chopped": {
            "question": "which team did wasim akram play for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q982801 p:P54 ?s . ?s ps:P54 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Wasim Akram member of sports team ?s . ?s member of sports team ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which team did Wasim Akram play for in 2003",
            "query": "SELECT ?obj WHERE { wd:Q982801 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2003')) }",
            "NLQuery": "SELECT ?obj WHERE { Wasim Akram member of sports team ?s . ?s member of sports team ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2003')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2003",
            "choppedEntity": "2003"
        }
    },
    {
        "chopped": {
            "question": "what team was wasim akram a part of in ",
            "query": "SELECT ?ans1 WHERE { wd:Q982801 p:P54 ?s . ?s ps:P54 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Wasim Akram member of sports team ?s . ?s member of sports team ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What team was Wasim Akram a part of in 2003",
            "query": "SELECT ?obj WHERE { wd:Q982801 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2003')) }",
            "NLQuery": "SELECT ?obj WHERE { Wasim Akram member of sports team ?s . ?s member of sports team ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2003')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2003",
            "choppedEntity": "2003"
        }
    },
    {
        "chopped": {
            "question": "who did frida kahlo marry on november 11, ",
            "query": "SELECT ?ans1 WHERE { wd:Q5588 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Frida Kahlo spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who did Frida Kahlo marry on November 11, 1939",
            "query": "SELECT ?obj WHERE { wd:Q5588 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1939')) }",
            "NLQuery": "SELECT ?obj WHERE { Frida Kahlo spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1939')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1939",
            "choppedEntity": "1939"
        }
    },
    {
        "chopped": {
            "question": "what are the biomedical measurand which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q42014143 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of biomedical measurand type . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the biomedical measurand which start with the letter w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q42014143 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of biomedical measurand type . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "what is the biomedical measurement that begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q42014143 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of biomedical measurand type . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is the biomedical measurement that begins with letter w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q42014143 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of biomedical measurand type . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "what award did vesto slipher receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q312248 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Vesto Slipher award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Vesto Slipher receive in 1932",
            "query": "SELECT ?obj WHERE { wd:Q312248 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1932')) }",
            "NLQuery": "SELECT ?obj WHERE { Vesto Slipher award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1932')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1932",
            "choppedEntity": "1932"
        }
    },
    {
        "chopped": {
            "question": "vesto slipher received what award in ",
            "query": "SELECT ?ans1 WHERE { wd:Q312248 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Vesto Slipher award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Vesto Slipher received what award in 1932",
            "query": "SELECT ?obj WHERE { wd:Q312248 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1932')) }",
            "NLQuery": "SELECT ?obj WHERE { Vesto Slipher award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1932')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1932",
            "choppedEntity": "1932"
        }
    },
    {
        "chopped": {
            "question": "name a former building from ancient grecce that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q19860854 . ?ans1 wdt:P2596 wd:Q11772 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of destroyed building or structure . ?ans1 culture Ancient Greece . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a former building from Ancient Grecce that contains the word \"alexandria\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q19860854 . ?sbj wdt:P2596 wd:Q11772 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'alexandria')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of destroyed building or structure . ?sbj culture Ancient Greece . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'alexandria')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "alexandria in its name",
            "choppedEntity": "alexandria"
        }
    },
    {
        "chopped": {
            "question": "title a previous building from old grecce that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q19860854 . ?ans1 wdt:P2596 wd:Q11772 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of destroyed building or structure . ?ans1 culture Ancient Greece . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Title a previous building from Old Grecce that contains the word \"alexandria\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q19860854 . ?sbj wdt:P2596 wd:Q11772 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'alexandria')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of destroyed building or structure . ?sbj culture Ancient Greece . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'alexandria')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "alexandria in its name",
            "choppedEntity": "alexandria"
        }
    },
    {
        "chopped": {
            "question": "what is the part applies to the volta river which has coordinate location ",
            "query": "SELECT ?ans1 WHERE { wd:Q192415 p:P625 ?s . ?s ps:P625 ?x FILTER(contains(?x,?unknown)) . ?s pq:P518 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Volta River coordinate location ?s . ?s coordinate location ?x FILTER(contains(?x,?unknown)) . ?s applies to part ?ans1}"
        },
        "original": {
            "question": "What is the part applies to the Volta River which has coordinate location 0.673056",
            "query": "SELECT ?value WHERE { wd:Q192415 p:P625 ?s . ?s ps:P625 ?x FILTER(contains(?x,'0.673056')) . ?s pq:P518 ?value}",
            "NLQuery": "SELECT ?value WHERE { Volta River coordinate location ?s . ?s coordinate location ?x FILTER(contains(?x,'0.673056')) . ?s applies to part ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "0673056",
            "choppedEntity": "0.673056"
        }
    },
    {
        "chopped": {
            "question": "tell me occupational carcinogen whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q21074597 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of occupational carcinogen . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me occupational carcinogen whose name has the word trichloropropane in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21074597 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'trichloropropane')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of occupational carcinogen . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'trichloropropane')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "trichloropropane in it",
            "choppedEntity": "trichloropropane"
        }
    },
    {
        "chopped": {
            "question": "ell me word related carcinogen whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q21074597 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of occupational carcinogen . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "ell me word related carcinogen whose title has the word trichloropropane in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21074597 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'trichloropropane')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of occupational carcinogen . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'trichloropropane')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "trichloropropane in it",
            "choppedEntity": "trichloropropane"
        }
    },
    {
        "chopped": {
            "question": "what country was trieste in in ",
            "query": "SELECT ?ans1 WHERE { wd:Q546 p:P17 ?s . ?s ps:P17 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Trieste country ?s . ?s country ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What country was Trieste in in 1975",
            "query": "SELECT ?obj WHERE { wd:Q546 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1975')) }",
            "NLQuery": "SELECT ?obj WHERE { Trieste country ?s . ?s country ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1975')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1975",
            "choppedEntity": "1975"
        }
    },
    {
        "chopped": {
            "question": "which country was trieste in ",
            "query": "SELECT ?ans1 WHERE { wd:Q546 p:P17 ?s . ?s ps:P17 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Trieste country ?s . ?s country ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which country was Trieste in 1975",
            "query": "SELECT ?obj WHERE { wd:Q546 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1975')) }",
            "NLQuery": "SELECT ?obj WHERE { Trieste country ?s . ?s country ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1975')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1975",
            "choppedEntity": "1975"
        }
    },
    {
        "chopped": {
            "question": "what is the religious affiliation of travancore, whose universal decimal classification is ",
            "query": "SELECT ?ans1 WHERE { wd:Q150058 wdt:P140 ?ans1 . ?ans1 wdt:P1190 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Travancore religion ?ans1 . ?ans1 Universal Decimal Classification ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the religious affiliation of Travancore, whose Universal Decimal Classification is 233",
            "query": "SELECT ?answer WHERE { wd:Q150058 wdt:P140 ?answer . ?answer wdt:P1190 ?x FILTER(contains(?x,'233'))}",
            "NLQuery": "SELECT ?answer WHERE { Travancore religion ?answer . ?answer Universal Decimal Classification ?x FILTER(contains(?x,'233'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "233",
            "choppedEntity": "233"
        }
    },
    {
        "chopped": {
            "question": "what is the devout association of travancore, whose widespread decimal classification is ",
            "query": "SELECT ?ans1 WHERE { wd:Q150058 wdt:P140 ?ans1 . ?ans1 wdt:P1190 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Travancore religion ?ans1 . ?ans1 Universal Decimal Classification ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the devout association of Travancore, whose Widespread Decimal Classification is 233",
            "query": "SELECT ?answer WHERE { wd:Q150058 wdt:P140 ?answer . ?answer wdt:P1190 ?x FILTER(contains(?x,'233'))}",
            "NLQuery": "SELECT ?answer WHERE { Travancore religion ?answer . ?answer Universal Decimal Classification ?x FILTER(contains(?x,'233'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "233",
            "choppedEntity": "233"
        }
    },
    {
        "chopped": {
            "question": "what sports team did stece nash play for until ",
            "query": "SELECT ?ans1 WHERE { wd:Q192955 p:P54 ?s . ?s ps:P54 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Steve Nash member of sports team ?s . ?s member of sports team ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What sports team did Stece Nash play for until 2012",
            "query": "SELECT ?obj WHERE { wd:Q192955 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'2012')) }",
            "NLQuery": "SELECT ?obj WHERE { Steve Nash member of sports team ?s . ?s member of sports team ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'2012')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2012",
            "choppedEntity": "2012"
        }
    },
    {
        "chopped": {
            "question": "when did elche have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q10509 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Elche population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Elche have a population of 215137",
            "query": "SELECT ?value WHERE { wd:Q10509 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'215137.0')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Elche population ?s . ?s population ?x FILTER(contains(?x,'215137.0')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "215137",
            "choppedEntity": "215137.0"
        }
    },
    {
        "chopped": {
            "question": "in what year did eiche have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q10509 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Elche population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "In what year did Eiche have a population of 215137",
            "query": "SELECT ?value WHERE { wd:Q10509 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'215137.0')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Elche population ?s . ?s population ?x FILTER(contains(?x,'215137.0')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "215137",
            "choppedEntity": "215137.0"
        }
    },
    {
        "chopped": {
            "question": "what are the group of greek mythical characters which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q28061975 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of group of Greek mythical characters . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the group of Greek mythical characters which start with the letter thespiades",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28061975 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'thespiades')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of group of Greek mythical characters . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'thespiades')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "thespiades",
            "choppedEntity": "thespiades"
        }
    },
    {
        "chopped": {
            "question": "what are the bunch of greek legendary characters which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q28061975 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of group of Greek mythical characters . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the bunch of Greek legendary characters which begin with the letter thespiades",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28061975 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'thespiades')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of group of Greek mythical characters . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'thespiades')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "thespiades",
            "choppedEntity": "thespiades"
        }
    },
    {
        "chopped": {
            "question": "provence was part of what country in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q101081 p:P17 ?s . ?s ps:P17 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Provence country ?s . ?s country ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Provence was part of what country in the year 1790",
            "query": "SELECT ?obj WHERE { wd:Q101081 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1790')) }",
            "NLQuery": "SELECT ?obj WHERE { Provence country ?s . ?s country ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1790')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1790",
            "choppedEntity": "1790"
        }
    },
    {
        "chopped": {
            "question": "what country was provence a part of in ",
            "query": "SELECT ?ans1 WHERE { wd:Q101081 p:P17 ?s . ?s ps:P17 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Provence country ?s . ?s country ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What country was Provence a part of in 1790",
            "query": "SELECT ?obj WHERE { wd:Q101081 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1790')) }",
            "NLQuery": "SELECT ?obj WHERE { Provence country ?s . ?s country ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1790')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1790",
            "choppedEntity": "1790"
        }
    },
    {
        "chopped": {
            "question": "what sport discipline starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2312410 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of sports discipline . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What sport discipline starts with the letter \"u\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2312410 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of sports discipline . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "which ice hockey tournament starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q18325242 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of ice hockey tournament . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which ice hockey tournament starts with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18325242 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of ice hockey tournament . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "which ice hockey competition begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q18325242 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of ice hockey tournament . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which ice hockey competition begins with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18325242 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of ice hockey tournament . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what is legal order starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q858700 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of legal order . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what is legal order starts with s",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q858700 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of legal order . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what is legitimate arrange begins with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q858700 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of legal order . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what is legitimate arrange begins with s",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q858700 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of legal order . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what position did sitiveni rabuka hold until january 1, ",
            "query": "SELECT ?ans1 WHERE { wd:Q981549 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Sitiveni Rabuka position held ?s . ?s position held ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What position did Sitiveni Rabuka hold until January 1, 2001",
            "query": "SELECT ?obj WHERE { wd:Q981549 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'2001')) }",
            "NLQuery": "SELECT ?obj WHERE { Sitiveni Rabuka position held ?s . ?s position held ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'2001')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2001",
            "choppedEntity": "2001"
        }
    },
    {
        "chopped": {
            "question": "sitiveni rabuka held what postion until january 1st, ",
            "query": "SELECT ?ans1 WHERE { wd:Q981549 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Sitiveni Rabuka position held ?s . ?s position held ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Sitiveni Rabuka held what postion until January 1st, 2001",
            "query": "SELECT ?obj WHERE { wd:Q981549 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'2001')) }",
            "NLQuery": "SELECT ?obj WHERE { Sitiveni Rabuka position held ?s . ?s position held ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'2001')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2001",
            "choppedEntity": "2001"
        }
    },
    {
        "chopped": {
            "question": "which city in india includes the term ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q58339717 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of city of India . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which city in India includes the term Warangal in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q58339717 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'warangal')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of city of India . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'warangal')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "warangal in its name",
            "choppedEntity": "warangal"
        }
    },
    {
        "chopped": {
            "question": "david hilbert was a member of what in ",
            "query": "SELECT ?ans1 WHERE { wd:Q41585 p:P463 ?s . ?s ps:P463 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { David Hilbert member of ?s . ?s member of ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "David Hilbert was a member of what in 1932",
            "query": "SELECT ?obj WHERE { wd:Q41585 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1932')) }",
            "NLQuery": "SELECT ?obj WHERE { David Hilbert member of ?s . ?s member of ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1932')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1932",
            "choppedEntity": "1932"
        }
    },
    {
        "chopped": {
            "question": "name the superseded scientific theory that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q4115113 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of superseded scientific theory . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name the superseded scientific theory that contains the word vitalism in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4115113 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vitalism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of superseded scientific theory . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vitalism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "vitalism in their name",
            "choppedEntity": "vitalism"
        }
    },
    {
        "chopped": {
            "question": "shakira recieved this award on feb 8, ",
            "query": "SELECT ?ans1 WHERE { wd:Q34424 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Shakira award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Shakira recieved this award on Feb. 8, 2006",
            "query": "SELECT ?obj WHERE { wd:Q34424 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2006')) }",
            "NLQuery": "SELECT ?obj WHERE { Shakira award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2006')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2006",
            "choppedEntity": "2006"
        }
    },
    {
        "chopped": {
            "question": "what did shakira receive on ",
            "query": "SELECT ?ans1 WHERE { wd:Q34424 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Shakira award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What did Shakira receive on 2.8.06",
            "query": "SELECT ?obj WHERE { wd:Q34424 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2006')) }",
            "NLQuery": "SELECT ?obj WHERE { Shakira award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2006')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2806",
            "choppedEntity": "2006"
        }
    },
    {
        "chopped": {
            "question": "what was cecil beaton nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q697096 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Cecil Beaton nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Cecil Beaton nominated for in 1960",
            "query": "SELECT ?obj WHERE { wd:Q697096 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1960')) }",
            "NLQuery": "SELECT ?obj WHERE { Cecil Beaton nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1960')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1960",
            "choppedEntity": "1960"
        }
    },
    {
        "chopped": {
            "question": "cecil beaton was nominated for what award in ",
            "query": "SELECT ?ans1 WHERE { wd:Q697096 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Cecil Beaton nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Cecil Beaton was nominated for what award in 1960",
            "query": "SELECT ?obj WHERE { wd:Q697096 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1960')) }",
            "NLQuery": "SELECT ?obj WHERE { Cecil Beaton nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1960')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1960",
            "choppedEntity": "1960"
        }
    },
    {
        "chopped": {
            "question": "what is the etymology of society of jesus (known as) gesu ",
            "query": "SELECT ?ans1 WHERE { wd:Q36380 wdt:P138 ?ans1 . ?ans1 wdt:P2561 ?x FILTER(contains(?x,'Ges\u00f9 Cristo'))}",
            "NLQuery": "SELECT ?ans1 WHERE { Society of Jesus named after ?ans1 . ?ans1 name ?x FILTER(contains(?x,'Ges\u00f9 Cristo'))}"
        },
        "original": {
            "question": "What is the etymology of Society of Jesus (known as) Gesu Cristo",
            "query": "SELECT ?answer WHERE { wd:Q36380 wdt:P138 ?answer . ?answer wdt:P2561 ?x FILTER(contains(?x,'Ges\u00f9 Cristo'))}",
            "NLQuery": "SELECT ?answer WHERE { Society of Jesus named after ?answer . ?answer name ?x FILTER(contains(?x,'Ges\u00f9 Cristo'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "cristo",
            "choppedEntity": "ges\u00f9 cristo"
        }
    },
    {
        "chopped": {
            "question": "what trend starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1514415 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of trend . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What trend starts with the letter \"z\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1514415 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of trend . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "what trend starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1514415 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of trend . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What trend starts with \"z\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1514415 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of trend . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "what are the estates of the realm which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q657326 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of estates of the realm . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the estates of the realm which start with the letter p",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q657326 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of estates of the realm . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "p",
            "choppedEntity": "p"
        }
    },
    {
        "chopped": {
            "question": "what are the bequests of the domain which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q657326 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of estates of the realm . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the bequests of the domain which begin with the letter p",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q657326 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of estates of the realm . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "p",
            "choppedEntity": "p"
        }
    },
    {
        "chopped": {
            "question": "tell me ionizing radiation whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q186161 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of ionizing radiation . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me ionizing radiation whose name has the word neutron in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q186161 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'neutron')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of ionizing radiation . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'neutron')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "neutron in it",
            "choppedEntity": "neutron"
        }
    },
    {
        "chopped": {
            "question": "what was the title of financial times in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q183399 p:P1476 ?s . ?s ps:P1476 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Financial Times title ?s . ?s title ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the title of Financial Times in the year 1888",
            "query": "SELECT ?obj WHERE { wd:Q183399 p:P1476 ?s . ?s ps:P1476 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1888')) }",
            "NLQuery": "SELECT ?obj WHERE { Financial Times title ?s . ?s title ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1888')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1888",
            "choppedEntity": "1888"
        }
    },
    {
        "chopped": {
            "question": "tell me the history of the state of the israel country that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q17544377 . ?ans1 wdt:P17 wd:Q801 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of history of a country or state . ?ans1 country Israel . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the history of the state of the Israel country that contains the word history in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17544377 . ?sbj wdt:P17 wd:Q801 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'history')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of history of a country or state . ?sbj country Israel . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'history')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "history in its name",
            "choppedEntity": "history"
        }
    },
    {
        "chopped": {
            "question": "what college town is located in utc time zone and starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1187811 . ?ans1 wdt:P421 wd:Q6655 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of college town . ?ans1 located in time zone UTC+01:00 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What college town is located in UTC time zone and starts with the letter Z.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1187811 . ?sbj wdt:P421 wd:Q6655 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of college town . ?sbj located in time zone UTC+01:00 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "what university city is placed in utc time sector and starts offevolved with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1187811 . ?ans1 wdt:P421 wd:Q6655 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of college town . ?ans1 located in time zone UTC+01:00 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What university city is placed in UTC time sector and starts offevolved with the letter Z.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1187811 . ?sbj wdt:P421 wd:Q6655 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of college town . ?sbj located in time zone UTC+01:00 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "what are thetelevision genre which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15961987 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of television genre . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are thetelevision genre which start with the letter z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15961987 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of television genre . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "what are thetelevision genre which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15961987 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of television genre . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are thetelevision genre which begin with the letter z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15961987 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of television genre . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "what is the partner city of tlalnepantla de baz municipality that has q48460 that is ",
            "query": "SELECT ?ans1 WHERE { wd:Q845307 wdt:P190 ?ans1 . ?ans1 wdt:P1036 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Tlalnepantla de Baz Municipality twinned administrative body ?ans1 . ?ans1 Dewey Decimal Classification ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the partner city of Tlalnepantla de Baz Municipality that has Q48460 that is 2--83232",
            "query": "SELECT ?answer WHERE { wd:Q845307 wdt:P190 ?answer . ?answer wdt:P1036 ?x FILTER(contains(?x,'2--83232'))}",
            "NLQuery": "SELECT ?answer WHERE { Tlalnepantla de Baz Municipality twinned administrative body ?answer . ?answer Dewey Decimal Classification ?x FILTER(contains(?x,'2--83232'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "2--83232",
            "choppedEntity": "2--83232"
        }
    },
    {
        "chopped": {
            "question": "what is the accomplice city of tlalnepantla de baz region that has q48460 thats ",
            "query": "SELECT ?ans1 WHERE { wd:Q845307 wdt:P190 ?ans1 . ?ans1 wdt:P1036 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Tlalnepantla de Baz Municipality twinned administrative body ?ans1 . ?ans1 Dewey Decimal Classification ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the accomplice city of Tlalnepantla de Baz Region that has Q48460 that's 2--83232",
            "query": "SELECT ?answer WHERE { wd:Q845307 wdt:P190 ?answer . ?answer wdt:P1036 ?x FILTER(contains(?x,'2--83232'))}",
            "NLQuery": "SELECT ?answer WHERE { Tlalnepantla de Baz Municipality twinned administrative body ?answer . ?answer Dewey Decimal Classification ?x FILTER(contains(?x,'2--83232'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "2--83232",
            "choppedEntity": "2--83232"
        }
    },
    {
        "chopped": {
            "question": "what are the flag carrier which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q721639 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of flag carrier . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the flag carrier which start with the letter q",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q721639 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'q')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of flag carrier . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'q')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "q",
            "choppedEntity": "q"
        }
    },
    {
        "chopped": {
            "question": "which is the flag carrier start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q721639 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of flag carrier . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHICH IS THE FLAG CARRIER START WITH THE LETTER Q",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q721639 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'q')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of flag carrier . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'q')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "q",
            "choppedEntity": "q"
        }
    },
    {
        "chopped": {
            "question": "which is the low cost airline that have airline hub in dubin airport and which starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q190915 . ?ans1 wdt:P113 wd:Q178021 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of low-cost airline . ?ans1 airline hub Dublin Airport . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHICH IS THE LOW COST AIRLINE THAT HAVE AIRLINE HUB IN DUBIN AIRPORT AND WHICH STARTS WITH R",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q190915 . ?sbj wdt:P113 wd:Q178021 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of low-cost airline . ?sbj airline hub Dublin Airport . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "r",
            "choppedEntity": "r"
        }
    },
    {
        "chopped": {
            "question": "what was the population of gyeongju in december of ",
            "query": "SELECT ?ans1 WHERE { wd:Q42097 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Gyeongju population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of Gyeongju in December of 2012",
            "query": "SELECT ?obj WHERE { wd:Q42097 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2012')) }",
            "NLQuery": "SELECT ?obj WHERE { Gyeongju population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2012')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2012",
            "choppedEntity": "2012"
        }
    },
    {
        "chopped": {
            "question": "how many people lived in gyeongju in december ",
            "query": "SELECT ?ans1 WHERE { wd:Q42097 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Gyeongju population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "How many people lived in Gyeongju in December 2012",
            "query": "SELECT ?obj WHERE { wd:Q42097 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2012')) }",
            "NLQuery": "SELECT ?obj WHERE { Gyeongju population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2012')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2012",
            "choppedEntity": "2012"
        }
    },
    {
        "chopped": {
            "question": "name a folk saint already performed by jefferson mappin that contain the word  ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q5464477 . ?ans1 wdt:P175 wd:Q6175537 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of folk saint . ?ans1 performer Jefferson Mappin . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a folk saint already performed by Jefferson Mappin that contain the word \" claus\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5464477 . ?sbj wdt:P175 wd:Q6175537 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'claus')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of folk saint . ?sbj performer Jefferson Mappin . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'claus')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "claus in its name",
            "choppedEntity": "claus"
        }
    },
    {
        "chopped": {
            "question": "tell me which is the abnormally low value that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q54928607 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of abnormally low value . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me which is the abnormally low value that contains the word underweight in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q54928607 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'underweight')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of abnormally low value . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'underweight')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "underweight in its name",
            "choppedEntity": "underweight"
        }
    },
    {
        "chopped": {
            "question": "tell me what is the abnormally low value in the name of the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q54928607 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of abnormally low value . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me what is the abnormally low value in the name of the word underweight",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q54928607 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'underweight')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of abnormally low value . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'underweight')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "underweight",
            "choppedEntity": "underweight"
        }
    },
    {
        "chopped": {
            "question": "tell me technique whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2695280 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of technique . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me technique whose name has the word technology in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2695280 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'technology')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of technique . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'technology')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "technology in it",
            "choppedEntity": "technology"
        }
    },
    {
        "chopped": {
            "question": "which municipality of spain starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2074737 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of municipality of Spain . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which municipality of Spain starts with the letter z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2074737 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of municipality of Spain . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "which spanish municipality begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2074737 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of municipality of Spain . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which Spanish municipality begins with letter z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2074737 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of municipality of Spain . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "who did laura dern marry in ",
            "query": "SELECT ?ans1 WHERE { wd:Q220901 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Laura Dern spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who did Laura Dern marry in 1993",
            "query": "SELECT ?obj WHERE { wd:Q220901 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1993')) }",
            "NLQuery": "SELECT ?obj WHERE { Laura Dern spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1993')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1993",
            "choppedEntity": "1993"
        }
    },
    {
        "chopped": {
            "question": "what award did gai xingjian receive in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q18143 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Gao Xingjian award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Gai Xingjian receive in the year 2000",
            "query": "SELECT ?obj WHERE { wd:Q18143 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2000')) }",
            "NLQuery": "SELECT ?obj WHERE { Gao Xingjian award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2000')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2000",
            "choppedEntity": "2000"
        }
    },
    {
        "chopped": {
            "question": "what are the painting technique which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1231896 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of painting technique . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the painting technique which start with the letter w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1231896 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of painting technique . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "what are the portray procedure which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1231896 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of painting technique . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the portray procedure which begin with the letter w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1231896 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of painting technique . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "tell me eonothem name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2669627 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of eonothem . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "tell me eonothem name has the word proterozoic in it",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2669627 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'proterozoic')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of eonothem . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'proterozoic')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "proterozoic in it",
            "choppedEntity": "proterozoic"
        }
    },
    {
        "chopped": {
            "question": "let me know eonothem title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2669627 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of eonothem . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "let me know eonothem title has the word proterozoic in it",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2669627 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'proterozoic')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of eonothem . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'proterozoic')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "proterozoic in it",
            "choppedEntity": "proterozoic"
        }
    },
    {
        "chopped": {
            "question": "tell me the specialized agency of the united nations that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15925165 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of specialized agency of the United Nations . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the specialized agency of the United Nations that contains the word world in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15925165 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'world')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of specialized agency of the United Nations . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'world')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "world in their name",
            "choppedEntity": "world"
        }
    },
    {
        "chopped": {
            "question": "what are the television genre which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15961987 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of television genre . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the television genre which start with the letter zeitfunk",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15961987 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeitfunk')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of television genre . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeitfunk')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "zeitfunk",
            "choppedEntity": "zeitfunk"
        }
    },
    {
        "chopped": {
            "question": "what are the genres of television that begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15961987 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of television genre . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the genres of television that begins with the letter zeitfunk.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15961987 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeitfunk')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of television genre . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeitfunk')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "zeitfunk",
            "choppedEntity": "zeitfunk"
        }
    },
    {
        "chopped": {
            "question": "what is bernhard schlinks place of birth, area code ",
            "query": "SELECT ?ans1 WHERE { wd:Q76699 wdt:P19 ?ans1 . ?ans1 wdt:P473 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Bernhard Schlink place of birth ?ans1 . ?ans1 local dialing code ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is Bernhard Schlink's place of birth, area code 05209",
            "query": "SELECT ?answer WHERE { wd:Q76699 wdt:P19 ?answer . ?answer wdt:P473 ?x FILTER(contains(?x,'05209'))}",
            "NLQuery": "SELECT ?answer WHERE { Bernhard Schlink place of birth ?answer . ?answer local dialing code ?x FILTER(contains(?x,'05209'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "05209",
            "choppedEntity": "05209"
        }
    },
    {
        "chopped": {
            "question": "what is bernhard schlinks put of birth, zone code ",
            "query": "SELECT ?ans1 WHERE { wd:Q76699 wdt:P19 ?ans1 . ?ans1 wdt:P473 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Bernhard Schlink place of birth ?ans1 . ?ans1 local dialing code ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is Bernhard Schlink's put of birth, zone code 05209",
            "query": "SELECT ?answer WHERE { wd:Q76699 wdt:P19 ?answer . ?answer wdt:P473 ?x FILTER(contains(?x,'05209'))}",
            "NLQuery": "SELECT ?answer WHERE { Bernhard Schlink place of birth ?answer . ?answer local dialing code ?x FILTER(contains(?x,'05209'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "05209",
            "choppedEntity": "05209"
        }
    },
    {
        "chopped": {
            "question": "what higher taxon name of prunus dulcis also has the common name of ",
            "query": "SELECT ?ans1 WHERE { wd:Q39918 wdt:P171 ?ans1 . ?ans1 wdt:P1843 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Prunus dulcis parent taxon ?ans1 . ?ans1 taxon common name ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What higher taxon name of Prunus dulcis also has the common name of plum",
            "query": "SELECT ?answer WHERE { wd:Q39918 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'plum'))}",
            "NLQuery": "SELECT ?answer WHERE { Prunus dulcis parent taxon ?answer . ?answer taxon common name ?x FILTER(contains(?x,'plum'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "plum",
            "choppedEntity": "plum"
        }
    },
    {
        "chopped": {
            "question": "what higher taxon title of prunus dulcis moreover has the common title of ",
            "query": "SELECT ?ans1 WHERE { wd:Q39918 wdt:P171 ?ans1 . ?ans1 wdt:P1843 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Prunus dulcis parent taxon ?ans1 . ?ans1 taxon common name ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What higher taxon title of Prunus dulcis moreover has the common title of plum",
            "query": "SELECT ?answer WHERE { wd:Q39918 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'plum'))}",
            "NLQuery": "SELECT ?answer WHERE { Prunus dulcis parent taxon ?answer . ?answer taxon common name ?x FILTER(contains(?x,'plum'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "plum",
            "choppedEntity": "plum"
        }
    },
    {
        "chopped": {
            "question": "tell me the race horse whose name starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q10855242 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of none . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the race horse whose name starts with t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q10855242 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of none . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "let me know the race horse whose title begins with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q10855242 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of none . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know the race horse whose title begins with t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q10855242 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of none . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "tell me  international association football national teams competition  whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q34542827 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of international association football national teams competition . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me  international association football national teams competition  whose name has the word cup in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q34542827 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'cup')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of international association football national teams competition . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'cup')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "cup in it",
            "choppedEntity": "cup"
        }
    },
    {
        "chopped": {
            "question": "tell me the competition of the national football teams of the international association whose name contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q34542827 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of international association football national teams competition . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the competition of the national football teams of the international association whose name contains the word cup.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q34542827 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'cup')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of international association football national teams competition . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'cup')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "cup",
            "choppedEntity": "cup"
        }
    },
    {
        "chopped": {
            "question": "what is situated in the administrative territorial part of saint-barthelemy before july 14, ",
            "query": "SELECT ?ans1 WHERE { wd:Q25362 p:P131 ?s . ?s ps:P131 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Saint Barth\u00e9lemy located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What is situated in the administrative territorial part of Saint-Barthelemy before July 14, 2007",
            "query": "SELECT ?obj WHERE { wd:Q25362 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'2007')) }",
            "NLQuery": "SELECT ?obj WHERE { Saint Barth\u00e9lemy located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'2007')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2007",
            "choppedEntity": "2007"
        }
    },
    {
        "chopped": {
            "question": "what are the chemical element  which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11344 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of chemical element . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the chemical element  which start with the letter y",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11344 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of chemical element . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "y",
            "choppedEntity": "y"
        }
    },
    {
        "chopped": {
            "question": "what are the chemical component which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11344 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of chemical element . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the chemical component which begin with the letter y",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11344 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of chemical element . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "y",
            "choppedEntity": "y"
        }
    },
    {
        "chopped": {
            "question": "tell  me religious text that studied by old testament theology starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q179461 . ?ans1 wdt:P2579 wd:Q7085202 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of religious text . ?ans1 studied by Old Testament theology . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "tell  me religious text that studied by Old Testament theology starts with o",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q179461 . ?sbj wdt:P2579 wd:Q7085202 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'o')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of religious text . ?sbj studied by Old Testament theology . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'o')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "o",
            "choppedEntity": "o"
        }
    },
    {
        "chopped": {
            "question": "reveal me religious text that studied by old testament theology starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q179461 . ?ans1 wdt:P2579 wd:Q7085202 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of religious text . ?ans1 studied by Old Testament theology . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Reveal me religious text that studied by Old Testament theology starts with o",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q179461 . ?sbj wdt:P2579 wd:Q7085202 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'o')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of religious text . ?sbj studied by Old Testament theology . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'o')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "o",
            "choppedEntity": "o"
        }
    },
    {
        "chopped": {
            "question": "what city in scotland is john knoxs place of death and is in the postcode area ",
            "query": "SELECT ?ans1 WHERE { wd:Q189937 wdt:P20 ?ans1 . ?ans1 wdt:P281 ?x FILTER(contains(?x,'EH1-EH13'))}",
            "NLQuery": "SELECT ?ans1 WHERE { John Knox place of death ?ans1 . ?ans1 postal code ?x FILTER(contains(?x,'EH1-EH13'))}"
        },
        "original": {
            "question": "What city in Scotland is John Knox's place of death and is in the postcode area EH1-EH13",
            "query": "SELECT ?answer WHERE { wd:Q189937 wdt:P20 ?answer . ?answer wdt:P281 ?x FILTER(contains(?x,'EH1-EH13'))}",
            "NLQuery": "SELECT ?answer WHERE { John Knox place of death ?answer . ?answer postal code ?x FILTER(contains(?x,'EH1-EH13'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "eh1-eh13",
            "choppedEntity": "eh1-eh13"
        }
    },
    {
        "chopped": {
            "question": "what city in scotland is john knoxs put of passing and is within the postcode region ",
            "query": "SELECT ?ans1 WHERE { wd:Q189937 wdt:P20 ?ans1 . ?ans1 wdt:P281 ?x FILTER(contains(?x,'EH1-EH13'))}",
            "NLQuery": "SELECT ?ans1 WHERE { John Knox place of death ?ans1 . ?ans1 postal code ?x FILTER(contains(?x,'EH1-EH13'))}"
        },
        "original": {
            "question": "What city in Scotland is John Knox's put of passing and is within the postcode region EH1-EH13",
            "query": "SELECT ?answer WHERE { wd:Q189937 wdt:P20 ?answer . ?answer wdt:P281 ?x FILTER(contains(?x,'EH1-EH13'))}",
            "NLQuery": "SELECT ?answer WHERE { John Knox place of death ?answer . ?answer postal code ?x FILTER(contains(?x,'EH1-EH13'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "eh1-eh13",
            "choppedEntity": "eh1-eh13"
        }
    },
    {
        "chopped": {
            "question": "what award was received by national autonomous university in ",
            "query": "SELECT ?ans1 WHERE { wd:Q222738 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { National Autonomous University of Mexico award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award was received by National Autonomous University in 2008",
            "query": "SELECT ?obj WHERE { wd:Q222738 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2008')) }",
            "NLQuery": "SELECT ?obj WHERE { National Autonomous University of Mexico award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2008')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2008",
            "choppedEntity": "2008"
        }
    },
    {
        "chopped": {
            "question": "give the name of the award received by national autonomous university in ",
            "query": "SELECT ?ans1 WHERE { wd:Q222738 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { National Autonomous University of Mexico award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Give the name of the award received by National Autonomous University in 2008.",
            "query": "SELECT ?obj WHERE { wd:Q222738 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2008')) }",
            "NLQuery": "SELECT ?obj WHERE { National Autonomous University of Mexico award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2008')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2008",
            "choppedEntity": "2008"
        }
    },
    {
        "chopped": {
            "question": "what are the dog breed which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q39367 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of dog breed . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the dog breed which start with the letter wetterhoun",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q39367 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wetterhoun')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of dog breed . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wetterhoun')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "wetterhoun",
            "choppedEntity": "wetterhoun"
        }
    },
    {
        "chopped": {
            "question": "what are the dog breed which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q39367 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of dog breed . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the dog breed which begin with the letter wetterhoun",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q39367 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wetterhoun')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of dog breed . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wetterhoun')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "wetterhoun",
            "choppedEntity": "wetterhoun"
        }
    },
    {
        "chopped": {
            "question": "who was jonathan pryces partner beginning in ",
            "query": "SELECT ?ans1 WHERE { wd:Q312702 p:P451 ?s . ?s ps:P451 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Jonathan Pryce unmarried partner ?s . ?s unmarried partner ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was Jonathan Pryce's partner beginning in 1974",
            "query": "SELECT ?obj WHERE { wd:Q312702 p:P451 ?s . ?s ps:P451 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1974')) }",
            "NLQuery": "SELECT ?obj WHERE { Jonathan Pryce unmarried partner ?s . ?s unmarried partner ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1974')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1974",
            "choppedEntity": "1974"
        }
    },
    {
        "chopped": {
            "question": "who was jonathan pryces partner earlier in ",
            "query": "SELECT ?ans1 WHERE { wd:Q312702 p:P451 ?s . ?s ps:P451 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Jonathan Pryce unmarried partner ?s . ?s unmarried partner ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was Jonathan Pryce's partner earlier in 1974",
            "query": "SELECT ?obj WHERE { wd:Q312702 p:P451 ?s . ?s ps:P451 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1974')) }",
            "NLQuery": "SELECT ?obj WHERE { Jonathan Pryce unmarried partner ?s . ?s unmarried partner ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1974')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1974",
            "choppedEntity": "1974"
        }
    },
    {
        "chopped": {
            "question": "which second language from hugo chavez, has the shortened name ",
            "query": "SELECT ?ans1 WHERE { wd:Q8440 wdt:P1412 ?ans1 . ?ans1 wdt:P1813 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Hugo Ch\u00e1vez languages spoken, written or signed ?ans1 . ?ans1 short name ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "\"Which second language from Hugo Chavez, has the shortened name \u0456\u0441\u043f\u0430\u043d\u0441\u044c\u043a\u0430\"",
            "query": "SELECT ?answer WHERE { wd:Q8440 wdt:P1412 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'\u0456\u0441\u043f\u0430\u043d\u0441\u044c\u043a\u0430'))}",
            "NLQuery": "SELECT ?answer WHERE { Hugo Ch\u00e1vez languages spoken, written or signed ?answer . ?answer short name ?x FILTER(contains(?x,'\u0456\u0441\u043f\u0430\u043d\u0441\u044c\u043a\u0430'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u0456\u0441\u043f\u0430\u043d\u0441\u044c\u043a\u0430",
            "choppedEntity": "\u0456\u0441\u043f\u0430\u043d\u0441\u044c\u043a\u0430"
        }
    },
    {
        "chopped": {
            "question": "tell me method whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1799072 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of method . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me method whose name has the word washing in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1799072 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'washing')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of method . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'washing')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "washing in it",
            "choppedEntity": "washing"
        }
    },
    {
        "chopped": {
            "question": "which method has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1799072 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of method . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which method has the word washing in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1799072 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'washing')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of method . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'washing')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "washing in its name",
            "choppedEntity": "washing"
        }
    },
    {
        "chopped": {
            "question": "which color starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1075 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of color . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which color starts with the letter y",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1075 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of color . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "y",
            "choppedEntity": "y"
        }
    },
    {
        "chopped": {
            "question": "which color begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1075 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of color . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which color begins with the letter y",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1075 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of color . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "y",
            "choppedEntity": "y"
        }
    },
    {
        "chopped": {
            "question": "tell me civil war whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q8465 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of civil war . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me civil war whose name has the word war in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q8465 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of civil war . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "war in it",
            "choppedEntity": "war"
        }
    },
    {
        "chopped": {
            "question": "disclose to me common war whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q8465 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of civil war . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Disclose to me common war whose name has the word war in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q8465 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of civil war . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "war in it",
            "choppedEntity": "war"
        }
    },
    {
        "chopped": {
            "question": "what is the gender of john mandeville, whose shortened name is ",
            "query": "SELECT ?ans1 WHERE { wd:Q24766 wdt:P21 ?ans1 . ?ans1 wdt:P1813 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { John Mandeville sex or gender ?ans1 . ?ans1 short name ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the gender of John Mandeville, whose shortened name is \u7537",
            "query": "SELECT ?answer WHERE { wd:Q24766 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'\u7537'))}",
            "NLQuery": "SELECT ?answer WHERE { John Mandeville sex or gender ?answer . ?answer short name ?x FILTER(contains(?x,'\u7537'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u7537",
            "choppedEntity": "\u7537"
        }
    },
    {
        "chopped": {
            "question": "what is the gender of john mandeville, whose shortened identify is ",
            "query": "SELECT ?ans1 WHERE { wd:Q24766 wdt:P21 ?ans1 . ?ans1 wdt:P1813 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { John Mandeville sex or gender ?ans1 . ?ans1 short name ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the gender of John Mandeville, whose shortened identify is \u7537",
            "query": "SELECT ?answer WHERE { wd:Q24766 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'\u7537'))}",
            "NLQuery": "SELECT ?answer WHERE { John Mandeville sex or gender ?answer . ?answer short name ?x FILTER(contains(?x,'\u7537'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u7537",
            "choppedEntity": "\u7537"
        }
    },
    {
        "chopped": {
            "question": "tell me the physical quanity that is measured by watt per meter kelvin and which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q107715 . ?ans1 wdt:P1880 wd:Q1463969 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of physical quantity . ?ans1 measurement scale watt per metre kelvin . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the physical quanity that is measured by watt per meter kelvin and which contains the word conductivity in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q107715 . ?sbj wdt:P1880 wd:Q1463969 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'conductivity')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of physical quantity . ?sbj measurement scale watt per metre kelvin . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'conductivity')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "conductivity in their name",
            "choppedEntity": "conductivity"
        }
    },
    {
        "chopped": {
            "question": "let me know the physical quanity thats measured by watt per meter kelvin and which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q107715 . ?ans1 wdt:P1880 wd:Q1463969 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of physical quantity . ?ans1 measurement scale watt per metre kelvin . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know the physical quanity that's measured by watt per meter kelvin and which contains the word conductivity in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q107715 . ?sbj wdt:P1880 wd:Q1463969 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'conductivity')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of physical quantity . ?sbj measurement scale watt per metre kelvin . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'conductivity')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "conductivity in their name",
            "choppedEntity": "conductivity"
        }
    },
    {
        "chopped": {
            "question": "what are the social movement which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q49773 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of social movement . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the social movement which start with the letter y",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q49773 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of social movement . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "y",
            "choppedEntity": "y"
        }
    },
    {
        "chopped": {
            "question": "what are the social development which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q49773 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of social movement . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the social development which begin with the letter y",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q49773 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of social movement . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "y",
            "choppedEntity": "y"
        }
    },
    {
        "chopped": {
            "question": "where did pierre puvis de chavannes work in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q216873 p:P937 ?s . ?s ps:P937 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Pierre Puvis de Chavannes work location ?s . ?s work location ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Where did Pierre Puvis de Chavannes work in the year 1948",
            "query": "SELECT ?obj WHERE { wd:Q216873 p:P937 ?s . ?s ps:P937 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1848')) }",
            "NLQuery": "SELECT ?obj WHERE { Pierre Puvis de Chavannes work location ?s . ?s work location ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1848')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1948",
            "choppedEntity": "1848"
        }
    },
    {
        "chopped": {
            "question": "what cave starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q35509 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of cave . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What cave starts with the letter \"s\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q35509 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of cave . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what cave begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q35509 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of cave . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What cave begins with the letter \"s\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q35509 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of cave . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "hubble space telescope was named after what in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q2513 p:P138 ?s . ?s ps:P138 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Hubble Space Telescope named after ?s . ?s named after ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Hubble Space Telescope was named after what in the year 1983",
            "query": "SELECT ?obj WHERE { wd:Q2513 p:P138 ?s . ?s ps:P138 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1983')) }",
            "NLQuery": "SELECT ?obj WHERE { Hubble Space Telescope named after ?s . ?s named after ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1983')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1983",
            "choppedEntity": "1983"
        }
    },
    {
        "chopped": {
            "question": "what are the positional notation which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1747853 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of positional notation . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the positional notation which start with the letter vigesimal",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1747853 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vigesimal')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of positional notation . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vigesimal')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "vigesimal",
            "choppedEntity": "vigesimal"
        }
    },
    {
        "chopped": {
            "question": "what are the positional documentation which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1747853 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of positional notation . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the positional documentation which begin with the letter vigesimal",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1747853 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vigesimal')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of positional notation . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vigesimal')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "vigesimal",
            "choppedEntity": "vigesimal"
        }
    },
    {
        "chopped": {
            "question": "tell me the designation for an administrative territorial entity that replaces domain and which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15617994 . ?ans1 wdt:P1365 wd:Q841985 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of designation for an administrative territorial entity . ?ans1 replaces domain . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the designation for an administrative territorial entity that replaces domain and which contains the word japan in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15617994 . ?sbj wdt:P1365 wd:Q841985 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'japan')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of designation for an administrative territorial entity . ?sbj replaces domain . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'japan')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "japan in their name",
            "choppedEntity": "japan"
        }
    },
    {
        "chopped": {
            "question": "what is the quantity of square metre whose symbol is ",
            "query": "SELECT ?ans1 WHERE { wd:Q25343 wdt:P111 ?ans1 . ?ans1 wdt:P416 ?x FILTER(contains(?x,'A'))}",
            "NLQuery": "SELECT ?ans1 WHERE { square metre measured physical quantity ?ans1 . ?ans1 quantity symbol (string) ?x FILTER(contains(?x,'A'))}"
        },
        "original": {
            "question": "What is the quantity of square metre whose symbol is A",
            "query": "SELECT ?answer WHERE { wd:Q25343 wdt:P111 ?answer . ?answer wdt:P416 ?x FILTER(contains(?x,'A'))}",
            "NLQuery": "SELECT ?answer WHERE { square metre measured physical quantity ?answer . ?answer quantity symbol (string) ?x FILTER(contains(?x,'A'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "what is the amount of square meter whose image could be ",
            "query": "SELECT ?ans1 WHERE { wd:Q25343 wdt:P111 ?ans1 . ?ans1 wdt:P416 ?x FILTER(contains(?x,'A'))}",
            "NLQuery": "SELECT ?ans1 WHERE { square metre measured physical quantity ?ans1 . ?ans1 quantity symbol (string) ?x FILTER(contains(?x,'A'))}"
        },
        "original": {
            "question": "What is the amount of square meter whose image could Be a",
            "query": "SELECT ?answer WHERE { wd:Q25343 wdt:P111 ?answer . ?answer wdt:P416 ?x FILTER(contains(?x,'A'))}",
            "NLQuery": "SELECT ?answer WHERE { square metre measured physical quantity ?answer . ?answer quantity symbol (string) ?x FILTER(contains(?x,'A'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "who is divorced by ryan reynolds in ",
            "query": "SELECT ?ans1 WHERE { wd:Q192682 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Ryan Reynolds spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who is divorced by Ryan Reynolds in 2011",
            "query": "SELECT ?obj WHERE { wd:Q192682 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'2011')) }",
            "NLQuery": "SELECT ?obj WHERE { Ryan Reynolds spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'2011')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2011",
            "choppedEntity": "2011"
        }
    },
    {
        "chopped": {
            "question": "ryan reynolds divorced who in ",
            "query": "SELECT ?ans1 WHERE { wd:Q192682 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Ryan Reynolds spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Ryan Reynolds divorced who in 2011",
            "query": "SELECT ?obj WHERE { wd:Q192682 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'2011')) }",
            "NLQuery": "SELECT ?obj WHERE { Ryan Reynolds spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'2011')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2011",
            "choppedEntity": "2011"
        }
    },
    {
        "chopped": {
            "question": "what is did johnson & johnson get on january 25, ",
            "query": "SELECT ?ans1 WHERE { wd:Q333718 p:P127 ?s . ?s ps:P127 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Johnson & Johnson owned by ?s . ?s owned by ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What is did Johnson & Johnson get on January 25, 2017",
            "query": "SELECT ?obj WHERE { wd:Q333718 p:P127 ?s . ?s ps:P127 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2017')) }",
            "NLQuery": "SELECT ?obj WHERE { Johnson & Johnson owned by ?s . ?s owned by ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2017')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2017",
            "choppedEntity": "2017"
        }
    },
    {
        "chopped": {
            "question": "what did johnson and johnson receive on january 25, ",
            "query": "SELECT ?ans1 WHERE { wd:Q333718 p:P127 ?s . ?s ps:P127 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Johnson & Johnson owned by ?s . ?s owned by ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What did Johnson and Johnson receive on January 25, 2017",
            "query": "SELECT ?obj WHERE { wd:Q333718 p:P127 ?s . ?s ps:P127 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2017')) }",
            "NLQuery": "SELECT ?obj WHERE { Johnson & Johnson owned by ?s . ?s owned by ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2017')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2017",
            "choppedEntity": "2017"
        }
    },
    {
        "chopped": {
            "question": "what was the population of the crimean peninsula in ",
            "query": "SELECT ?ans1 WHERE { wd:Q7835 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Crimea population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of the Crimean Peninsula in 1989",
            "query": "SELECT ?obj WHERE { wd:Q7835 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1989')) }",
            "NLQuery": "SELECT ?obj WHERE { Crimea population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1989')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1989",
            "choppedEntity": "1989"
        }
    },
    {
        "chopped": {
            "question": "which port city is the highest point tibidabo and which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2264924 . ?ans1 wdt:P610 wd:Q658271 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of port settlement . ?ans1 highest point Tibidabo . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which port city is the highest point Tibidabo and which contains the word barcelona in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2264924 . ?sbj wdt:P610 wd:Q658271 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'barcelona')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of port settlement . ?sbj highest point Tibidabo . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'barcelona')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "barcelona in their name",
            "choppedEntity": "barcelona"
        }
    },
    {
        "chopped": {
            "question": "which harbour city is the most elevated point tibidabo and which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2264924 . ?ans1 wdt:P610 wd:Q658271 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of port settlement . ?ans1 highest point Tibidabo . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which harbour city is the most elevated point Tibidabo and which contains the word barcelona in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2264924 . ?sbj wdt:P610 wd:Q658271 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'barcelona')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of port settlement . ?sbj highest point Tibidabo . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'barcelona')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "barcelona in their name",
            "choppedEntity": "barcelona"
        }
    },
    {
        "chopped": {
            "question": "what member of oman started in ",
            "query": "SELECT ?ans1 WHERE { wd:Q842 p:P463 ?s . ?s ps:P463 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Oman member of ?s . ?s member of ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What member of Oman started in 1995",
            "query": "SELECT ?obj WHERE { wd:Q842 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1995')) }",
            "NLQuery": "SELECT ?obj WHERE { Oman member of ?s . ?s member of ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1995')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1995",
            "choppedEntity": "1995"
        }
    },
    {
        "chopped": {
            "question": "what oman member began in ",
            "query": "SELECT ?ans1 WHERE { wd:Q842 p:P463 ?s . ?s ps:P463 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Oman member of ?s . ?s member of ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What Oman member began in 1995",
            "query": "SELECT ?obj WHERE { wd:Q842 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1995')) }",
            "NLQuery": "SELECT ?obj WHERE { Oman member of ?s . ?s member of ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1995')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1995",
            "choppedEntity": "1995"
        }
    },
    {
        "chopped": {
            "question": "when did the german empire have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q43287 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { German Empire population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did the German Empire have a population of 4.94285e+07",
            "query": "SELECT ?value WHERE { wd:Q43287 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'4.94285e+07')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { German Empire population ?s . ?s population ?x FILTER(contains(?x,'4.94285e+07')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "494285e+07",
            "choppedEntity": "4.94285e+07"
        }
    },
    {
        "chopped": {
            "question": "the date the german empire had a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q43287 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { German Empire population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "The date the German Empire had a population of 4.94285e+07",
            "query": "SELECT ?value WHERE { wd:Q43287 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'4.94285e+07')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { German Empire population ?s . ?s population ?x FILTER(contains(?x,'4.94285e+07')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "494285e+07",
            "choppedEntity": "4.94285e+07"
        }
    },
    {
        "chopped": {
            "question": "name an album whose tracklist includes misty mountain hop that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q208569 . ?ans1 wdt:P658 wd:Q267363 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of studio album . ?ans1 tracklist Misty Mountain Hop . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name an album whose tracklist includes Misty Mountain Hop that contains the word \"IV\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q208569 . ?sbj wdt:P658 wd:Q267363 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'iv')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of studio album . ?sbj tracklist Misty Mountain Hop . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'iv')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "iv in its name",
            "choppedEntity": "iv"
        }
    },
    {
        "chopped": {
            "question": "name an album whose tracklist consists of misty mountain hop that consists of the phrase ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q208569 . ?ans1 wdt:P658 wd:Q267363 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of studio album . ?ans1 tracklist Misty Mountain Hop . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name an album whose tracklist consists of Misty Mountain Hop that consists of the phrase \"IV\" in its title",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q208569 . ?sbj wdt:P658 wd:Q267363 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'iv')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of studio album . ?sbj tracklist Misty Mountain Hop . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'iv')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "iv in its title",
            "choppedEntity": "iv"
        }
    },
    {
        "chopped": {
            "question": "does carbon tetrachloride have a short-term exposure limit of ",
            "query": "SELECT ?ans1 WHERE { wd:Q225045 p:P2407 ?s . ?s ps:P2407 ?ans1 . ?s pq:P2047 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { carbon tetrachloride short-term exposure limit ?s . ?s short-term exposure limit ?ans1 . ?s duration ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "Does carbon tetrachloride have a short-term exposure limit of 60.0",
            "query": "SELECT ?obj WHERE { wd:Q225045 p:P2407 ?s . ?s ps:P2407 ?obj . ?s pq:P2047 ?x FILTER(contains(?x,'60.0')) }",
            "NLQuery": "SELECT ?obj WHERE { carbon tetrachloride short-term exposure limit ?s . ?s short-term exposure limit ?obj . ?s duration ?x FILTER(contains(?x,'60.0')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "600",
            "choppedEntity": "60.0"
        }
    },
    {
        "chopped": {
            "question": "is it correct that carbon tetrachloride has a short-term exposure limit of ",
            "query": "SELECT ?ans1 WHERE { wd:Q225045 p:P2407 ?s . ?s ps:P2407 ?ans1 . ?s pq:P2047 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { carbon tetrachloride short-term exposure limit ?s . ?s short-term exposure limit ?ans1 . ?s duration ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "Is it correct that carbon tetrachloride has a short-term exposure limit of 60.0",
            "query": "SELECT ?obj WHERE { wd:Q225045 p:P2407 ?s . ?s ps:P2407 ?obj . ?s pq:P2047 ?x FILTER(contains(?x,'60.0')) }",
            "NLQuery": "SELECT ?obj WHERE { carbon tetrachloride short-term exposure limit ?s . ?s short-term exposure limit ?obj . ?s duration ?x FILTER(contains(?x,'60.0')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "600",
            "choppedEntity": "60.0"
        }
    },
    {
        "chopped": {
            "question": "tell me taxonomic rank whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q427626 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of taxonomic rank . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me taxonomic rank whose name has the word variety in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q427626 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'variety')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of taxonomic rank . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'variety')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "variety in it",
            "choppedEntity": "variety"
        }
    },
    {
        "chopped": {
            "question": "what are the chemical compound which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11173 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of chemical compound . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the chemical compound which start with the letter w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11173 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of chemical compound . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "what are the chemical compound which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11173 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of chemical compound . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the chemical compound which begin with the letter w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11173 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of chemical compound . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "what are the comic strip which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q838795 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of comic strip . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the comic strip which start with the letter zits",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q838795 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zits')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of comic strip . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zits')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "zits",
            "choppedEntity": "zits"
        }
    },
    {
        "chopped": {
            "question": "what are the comedian strip which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q838795 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of comic strip . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the comedian strip which begin with the letter zits",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q838795 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zits')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of comic strip . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zits')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "zits",
            "choppedEntity": "zits"
        }
    },
    {
        "chopped": {
            "question": "which is the tourist attraction of the main building contractor of hazama corporation which starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q570116 . ?ans1 wdt:P193 wd:Q4410214 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of tourist attraction . ?ans1 main building contractor Hazama Ando Corporation . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the tourist attraction of the main building contractor of Hazama Corporation which starts with the letter p",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q570116 . ?sbj wdt:P193 wd:Q4410214 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of tourist attraction . ?sbj main building contractor Hazama Ando Corporation . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "p",
            "choppedEntity": "p"
        }
    },
    {
        "chopped": {
            "question": "which is the vacationer attraction of the major constructing contractor of hazama corporation which begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q570116 . ?ans1 wdt:P193 wd:Q4410214 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of tourist attraction . ?ans1 main building contractor Hazama Ando Corporation . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the vacationer attraction of the major constructing contractor of Hazama Corporation which begins with the letter p",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q570116 . ?sbj wdt:P193 wd:Q4410214 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of tourist attraction . ?sbj main building contractor Hazama Ando Corporation . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "p",
            "choppedEntity": "p"
        }
    },
    {
        "chopped": {
            "question": "which is the operating system that has assembly language as a programming language and which starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q9135 . ?ans1 wdt:P277 wd:Q165436 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of operating system . ?ans1 programming language assembly language . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the operating system that has Assembly language as a programming language and which starts with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q9135 . ?sbj wdt:P277 wd:Q165436 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of operating system . ?sbj programming language assembly language . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "which is the working framework that has gathering dialect as a programming dialect and which begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q9135 . ?ans1 wdt:P277 wd:Q165436 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of operating system . ?ans1 programming language assembly language . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the working framework that has Gathering dialect as a programming dialect and which begins with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q9135 . ?sbj wdt:P277 wd:Q165436 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of operating system . ?sbj programming language assembly language . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "who did raquel welch marry in ",
            "query": "SELECT ?ans1 WHERE { wd:Q229545 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Raquel Welch spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who did Raquel Welch marry in 1980",
            "query": "SELECT ?obj WHERE { wd:Q229545 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1980')) }",
            "NLQuery": "SELECT ?obj WHERE { Raquel Welch spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1980')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1980",
            "choppedEntity": "1980"
        }
    },
    {
        "chopped": {
            "question": "who married raquel welch in ",
            "query": "SELECT ?ans1 WHERE { wd:Q229545 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Raquel Welch spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who married Raquel Welch in 1980",
            "query": "SELECT ?obj WHERE { wd:Q229545 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1980')) }",
            "NLQuery": "SELECT ?obj WHERE { Raquel Welch spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1980')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1980",
            "choppedEntity": "1980"
        }
    },
    {
        "chopped": {
            "question": "name an eau de vie that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2166541 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of eau de vie . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name an eau de vie that starts with the letter W",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2166541 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of eau de vie . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "title an eau de compete that begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2166541 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of eau de vie . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Title an eau de compete that begins with the letter W",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2166541 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of eau de vie . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "what is the tributary of gambia river that has coordinates of ",
            "query": "SELECT ?ans1 WHERE { wd:Q160819 wdt:P974 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Gambia River tributary ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the tributary of Gambia River that has coordinates of 13.5092",
            "query": "SELECT ?answer WHERE { wd:Q160819 wdt:P974 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'13.5092'))}",
            "NLQuery": "SELECT ?answer WHERE { Gambia River tributary ?answer . ?answer coordinate location ?x FILTER(contains(?x,'13.5092'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "135092",
            "choppedEntity": "13.5092"
        }
    },
    {
        "chopped": {
            "question": "which is the gland of the lymphatic drainage of superior mesenteric lymph nodes and whose name contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q9647 . ?ans1 wdt:P2288 wd:Q7643652 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of gland . ?ans1 lymphatic drainage Superior mesenteric lymph nodes . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the gland of the lymphatic drainage of Superior mesenteric lymph nodes and whose name contains the word pancreas",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q9647 . ?sbj wdt:P2288 wd:Q7643652 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'pancreas')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of gland . ?sbj lymphatic drainage Superior mesenteric lymph nodes . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'pancreas')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "pancreas",
            "choppedEntity": "pancreas"
        }
    },
    {
        "chopped": {
            "question": "which is the gland of the lymphatic drainage of superior mesenteric lymph nodes and whose title includes the phrase ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q9647 . ?ans1 wdt:P2288 wd:Q7643652 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of gland . ?ans1 lymphatic drainage Superior mesenteric lymph nodes . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the gland of the lymphatic drainage of Superior mesenteric lymph nodes and whose title includes the phrase pancreas",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q9647 . ?sbj wdt:P2288 wd:Q7643652 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'pancreas')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of gland . ?sbj lymphatic drainage Superior mesenteric lymph nodes . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'pancreas')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "pancreas",
            "choppedEntity": "pancreas"
        }
    },
    {
        "chopped": {
            "question": "what was the population of the komi republic in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q2073 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Komi Republic population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of the Komi Republic in the year 2016",
            "query": "SELECT ?obj WHERE { wd:Q2073 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2016')) }",
            "NLQuery": "SELECT ?obj WHERE { Komi Republic population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2016')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2016",
            "choppedEntity": "2016"
        }
    },
    {
        "chopped": {
            "question": "give me the population of komi rupublic in ",
            "query": "SELECT ?ans1 WHERE { wd:Q2073 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Komi Republic population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Give me the population of Komi Rupublic in 2016.",
            "query": "SELECT ?obj WHERE { wd:Q2073 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2016')) }",
            "NLQuery": "SELECT ?obj WHERE { Komi Republic population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2016')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2016",
            "choppedEntity": "2016"
        }
    },
    {
        "chopped": {
            "question": "tell me  tournament whose name has the word  ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q500834 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of tournament . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me  tournament whose name has the word  weltklasse in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q500834 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'weltklasse')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of tournament . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'weltklasse')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "weltklasse in it",
            "choppedEntity": "weltklasse"
        }
    },
    {
        "chopped": {
            "question": "let me know competition whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q500834 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of tournament . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know competition whose title has the word weltklasse in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q500834 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'weltklasse')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of tournament . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'weltklasse')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "weltklasse in it",
            "choppedEntity": "weltklasse"
        }
    },
    {
        "chopped": {
            "question": "what are the national symbol which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1128637 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of national symbol . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the national symbol which start with the letter p",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1128637 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of national symbol . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "p",
            "choppedEntity": "p"
        }
    },
    {
        "chopped": {
            "question": "what national symbol starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1128637 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of national symbol . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What national symbol starts with \"p\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1128637 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of national symbol . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "p",
            "choppedEntity": "p"
        }
    },
    {
        "chopped": {
            "question": "what was first taught at vsevolod meyerhold in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q165721 p:P69 ?s . ?s ps:P69 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Vsevolod Meyerhold educated at ?s . ?s educated at ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was first taught at Vsevolod Meyerhold in the year 1896",
            "query": "SELECT ?obj WHERE { wd:Q165721 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1896')) }",
            "NLQuery": "SELECT ?obj WHERE { Vsevolod Meyerhold educated at ?s . ?s educated at ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1896')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1896",
            "choppedEntity": "1896"
        }
    },
    {
        "chopped": {
            "question": "what position did mitt romney begin in february ",
            "query": "SELECT ?ans1 WHERE { wd:Q4496 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mitt Romney position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What position did Mitt Romney begin in February 2003",
            "query": "SELECT ?obj WHERE { wd:Q4496 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2003')) }",
            "NLQuery": "SELECT ?obj WHERE { Mitt Romney position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2003')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2003",
            "choppedEntity": "2003"
        }
    },
    {
        "chopped": {
            "question": "which position did mitt romney start in february ",
            "query": "SELECT ?ans1 WHERE { wd:Q4496 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mitt Romney position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which position did Mitt Romney start in February 2003",
            "query": "SELECT ?obj WHERE { wd:Q4496 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2003')) }",
            "NLQuery": "SELECT ?obj WHERE { Mitt Romney position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2003')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2003",
            "choppedEntity": "2003"
        }
    },
    {
        "chopped": {
            "question": "what award did thomas mann receive that had a prize of $",
            "query": "SELECT ?ans1 WHERE { wd:Q37030 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P2121 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Thomas Mann award received ?s . ?s award received ?ans1 . ?s prize money ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "What award did Thomas Mann receive that had a prize of $172,760 ",
            "query": "SELECT ?obj WHERE { wd:Q37030 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?x FILTER(contains(?x,'172760.0')) }",
            "NLQuery": "SELECT ?obj WHERE { Thomas Mann award received ?s . ?s award received ?obj . ?s prize money ?x FILTER(contains(?x,'172760.0')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "$172,760",
            "choppedEntity": "172760.0"
        }
    },
    {
        "chopped": {
            "question": "which award did thomas mann get which carried a prize of ",
            "query": "SELECT ?ans1 WHERE { wd:Q37030 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P2121 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Thomas Mann award received ?s . ?s award received ?ans1 . ?s prize money ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "Which award did Thomas Mann get which carried a prize of $172,760",
            "query": "SELECT ?obj WHERE { wd:Q37030 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?x FILTER(contains(?x,'172760.0')) }",
            "NLQuery": "SELECT ?obj WHERE { Thomas Mann award received ?s . ?s award received ?obj . ?s prize money ?x FILTER(contains(?x,'172760.0')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "$172,760",
            "choppedEntity": "172760.0"
        }
    },
    {
        "chopped": {
            "question": "what is a historical profession that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q16335296 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of historical profession . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is a historical profession that contains the word zeugmacher in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16335296 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeugmacher')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of historical profession . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeugmacher')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "zeugmacher in its name",
            "choppedEntity": "zeugmacher"
        }
    },
    {
        "chopped": {
            "question": "what could be a authentic calling that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q16335296 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of historical profession . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What could be a authentic calling that contains the word zeugmacher in its title",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16335296 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeugmacher')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of historical profession . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeugmacher')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "zeugmacher in its title",
            "choppedEntity": "zeugmacher"
        }
    },
    {
        "chopped": {
            "question": "what award did lars von trier receive in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q133730 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Lars von Trier award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Lars von Trier receive in the year 1996",
            "query": "SELECT ?obj WHERE { wd:Q133730 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1996')) }",
            "NLQuery": "SELECT ?obj WHERE { Lars von Trier award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1996')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1996",
            "choppedEntity": "1996"
        }
    },
    {
        "chopped": {
            "question": "what was ilya prigogine nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q183509 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Ilya Prigogine nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Ilya Prigogine nominated for in 1958",
            "query": "SELECT ?obj WHERE { wd:Q183509 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1958')) }",
            "NLQuery": "SELECT ?obj WHERE { Ilya Prigogine nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1958')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1958",
            "choppedEntity": "1958"
        }
    },
    {
        "chopped": {
            "question": "what position did john walter hold in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1702096 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { John Walter position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What position did John Walter hold in 1841",
            "query": "SELECT ?obj WHERE { wd:Q1702096 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1841')) }",
            "NLQuery": "SELECT ?obj WHERE { John Walter position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1841')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1841",
            "choppedEntity": "1841"
        }
    },
    {
        "chopped": {
            "question": "john walters position in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1702096 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { John Walter position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "John Walter's position in 1841",
            "query": "SELECT ?obj WHERE { wd:Q1702096 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1841')) }",
            "NLQuery": "SELECT ?obj WHERE { John Walter position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1841')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1841",
            "choppedEntity": "1841"
        }
    },
    {
        "chopped": {
            "question": "what is a scientific hypothesis that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q30125896 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of none . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what is a scientific hypothesis that starts with the letter t.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q30125896 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of none . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what could be a logical speculation that begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q30125896 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of none . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what could be a logical speculation that begins with the letter t.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q30125896 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of none . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "name an animated movie involving randy fullmer that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q202866 . ?ans1 wdt:P3092 wd:Q7292195 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of animated film . ?ans1 film crew member Randy Fullmer . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name an animated movie involving Randy Fullmer that starts with letter K",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q202866 . ?sbj wdt:P3092 wd:Q7292195 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of animated film . ?sbj film crew member Randy Fullmer . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "k",
            "choppedEntity": "k"
        }
    },
    {
        "chopped": {
            "question": "name an animated film involving randy fullmer that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q202866 . ?ans1 wdt:P3092 wd:Q7292195 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of animated film . ?ans1 film crew member Randy Fullmer . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name an animated film involving Randy Fullmer that starts with letter K",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q202866 . ?sbj wdt:P3092 wd:Q7292195 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of animated film . ?sbj film crew member Randy Fullmer . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "k",
            "choppedEntity": "k"
        }
    },
    {
        "chopped": {
            "question": "tell me  architectural style  whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q32880 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of architectural style . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me  architectural style  whose name has the word style in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q32880 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'style')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of architectural style . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'style')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "style in it",
            "choppedEntity": "style"
        }
    },
    {
        "chopped": {
            "question": "what award did valery chkalov receive on may 5, ",
            "query": "SELECT ?ans1 WHERE { wd:Q498098 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Valery Chkalov award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Valery Chkalov receive on May 5, 1935",
            "query": "SELECT ?obj WHERE { wd:Q498098 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1935')) }",
            "NLQuery": "SELECT ?obj WHERE { Valery Chkalov award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1935')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1935",
            "choppedEntity": "1935"
        }
    },
    {
        "chopped": {
            "question": "what reward did valery chkalov get on may 5, ",
            "query": "SELECT ?ans1 WHERE { wd:Q498098 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Valery Chkalov award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What reward did Valery Chkalov get on May 5, 1935",
            "query": "SELECT ?obj WHERE { wd:Q498098 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1935')) }",
            "NLQuery": "SELECT ?obj WHERE { Valery Chkalov award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1935')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1935",
            "choppedEntity": "1935"
        }
    },
    {
        "chopped": {
            "question": "who was the chairperson of the asian development bank for the year ending in ",
            "query": "SELECT ?ans1 WHERE { wd:Q188822 p:P488 ?s . ?s ps:P488 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Asian Development Bank chairperson ?s . ?s chairperson ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was the chairperson of the Asian Development Bank for the year ending in 1993",
            "query": "SELECT ?obj WHERE { wd:Q188822 p:P488 ?s . ?s ps:P488 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1993')) }",
            "NLQuery": "SELECT ?obj WHERE { Asian Development Bank chairperson ?s . ?s chairperson ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1993')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1993",
            "choppedEntity": "1993"
        }
    },
    {
        "chopped": {
            "question": "what education received by matt groening in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q43994 p:P69 ?s . ?s ps:P69 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Matt Groening educated at ?s . ?s educated at ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What education received by Matt Groening in the year 1977",
            "query": "SELECT ?obj WHERE { wd:Q43994 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1977')) }",
            "NLQuery": "SELECT ?obj WHERE { Matt Groening educated at ?s . ?s educated at ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1977')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1977",
            "choppedEntity": "1977"
        }
    },
    {
        "chopped": {
            "question": "what qualification did matt groening receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q43994 p:P69 ?s . ?s ps:P69 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Matt Groening educated at ?s . ?s educated at ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What qualification did Matt Groening receive in 1977",
            "query": "SELECT ?obj WHERE { wd:Q43994 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1977')) }",
            "NLQuery": "SELECT ?obj WHERE { Matt Groening educated at ?s . ?s educated at ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1977')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1977",
            "choppedEntity": "1977"
        }
    },
    {
        "chopped": {
            "question": "what are the railway company which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q249556 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of railway company . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the railway company which start with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q249556 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of railway company . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what are the railroad company which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q249556 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of railway company . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the railroad company which begin with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q249556 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of railway company . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what are theory which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q17737 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of theory . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHAT ARE THEORY WHICH START WITH THE LETTER T.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17737 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of theory . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what are hypothesis which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q17737 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of theory . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHAT ARE Hypothesis WHICH Begin WITH THE LETTER T.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17737 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of theory . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "tell me type of wood whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1493054 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of type of wood . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me type of wood whose name has the word zebrawood in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1493054 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zebrawood')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of type of wood . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zebrawood')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "zebrawood in it",
            "choppedEntity": "zebrawood"
        }
    },
    {
        "chopped": {
            "question": "disclose me type of wood whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1493054 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of type of wood . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Disclose me type of wood whose name has the word zebrawood in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1493054 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zebrawood')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of type of wood . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zebrawood')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "zebrawood in it",
            "choppedEntity": "zebrawood"
        }
    },
    {
        "chopped": {
            "question": "at what point in time did peru have human development index of ",
            "query": "SELECT ?ans1 WHERE { wd:Q419 p:P1081 ?s . ?s ps:P1081 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Peru Human Development Index ?s . ?s Human Development Index ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "At what point in time did Peru have Human Development Index of 0.643",
            "query": "SELECT ?value WHERE { wd:Q419 p:P1081 ?s . ?s ps:P1081 ?x FILTER(contains(?x,'0.643')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Peru Human Development Index ?s . ?s Human Development Index ?x FILTER(contains(?x,'0.643')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "0643",
            "choppedEntity": "0.643"
        }
    },
    {
        "chopped": {
            "question": "when was perus hd index ",
            "query": "SELECT ?ans1 WHERE { wd:Q419 p:P1081 ?s . ?s ps:P1081 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Peru Human Development Index ?s . ?s Human Development Index ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was Peru's HD Index 0.643",
            "query": "SELECT ?value WHERE { wd:Q419 p:P1081 ?s . ?s ps:P1081 ?x FILTER(contains(?x,'0.643')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Peru Human Development Index ?s . ?s Human Development Index ?x FILTER(contains(?x,'0.643')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "0643",
            "choppedEntity": "0.643"
        }
    },
    {
        "chopped": {
            "question": "what award did james earl jones receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q203960 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { James Earl Jones award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did James Earl Jones receive in 1969",
            "query": "SELECT ?obj WHERE { wd:Q203960 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1969')) }",
            "NLQuery": "SELECT ?obj WHERE { James Earl Jones award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1969')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1969",
            "choppedEntity": "1969"
        }
    },
    {
        "chopped": {
            "question": "what was matthew mcconaughey nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q188955 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Matthew McConaughey nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Matthew McConaughey nominated for in 2014",
            "query": "SELECT ?obj WHERE { wd:Q188955 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2014')) }",
            "NLQuery": "SELECT ?obj WHERE { Matthew McConaughey nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2014')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2014",
            "choppedEntity": "2014"
        }
    },
    {
        "chopped": {
            "question": "which award if any was matthew mcconaughey nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q188955 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Matthew McConaughey nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "which award if any was Matthew McConaughey nominated for in 2014",
            "query": "SELECT ?obj WHERE { wd:Q188955 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2014')) }",
            "NLQuery": "SELECT ?obj WHERE { Matthew McConaughey nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2014')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2014",
            "choppedEntity": "2014"
        }
    },
    {
        "chopped": {
            "question": "what was theodor w adorno nominated for on 1 january ",
            "query": "SELECT ?ans1 WHERE { wd:Q152388 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Theodor W. Adorno nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Theodor W. Adorno nominated for on 1 January 1965",
            "query": "SELECT ?obj WHERE { wd:Q152388 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1965')) }",
            "NLQuery": "SELECT ?obj WHERE { Theodor W. Adorno nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1965')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1965",
            "choppedEntity": "1965"
        }
    },
    {
        "chopped": {
            "question": "which position theodor w adorno was short-listed for on 1 january 1",
            "query": "SELECT ?ans1 WHERE { wd:Q152388 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Theodor W. Adorno nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which position Theodor W. Adorno was short-listed for on 1 January 1965 ",
            "query": "SELECT ?obj WHERE { wd:Q152388 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1965')) }",
            "NLQuery": "SELECT ?obj WHERE { Theodor W. Adorno nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1965')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1965",
            "choppedEntity": "1965"
        }
    },
    {
        "chopped": {
            "question": "tell me w3c recommendation whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2661442 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of W3C Recommendation . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me W3C Recommendation whose name has the word xslt in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2661442 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'xslt')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of W3C Recommendation . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'xslt')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "xslt in it",
            "choppedEntity": "xslt"
        }
    },
    {
        "chopped": {
            "question": "tell me the recommendation of w3c whose name contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2661442 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of W3C Recommendation . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the recommendation of W3C whose name contains the word xslt.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2661442 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'xslt')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of W3C Recommendation . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'xslt')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "xslt",
            "choppedEntity": "xslt"
        }
    },
    {
        "chopped": {
            "question": "tell me alcohol whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q156 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of alcohols . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me alcohol whose name has the word ynol in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q156 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ynol')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of alcohols . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ynol')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "ynol in it",
            "choppedEntity": "ynol"
        }
    },
    {
        "chopped": {
            "question": "disclose me alcohol whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q156 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of alcohols . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Disclose me alcohol whose name has the word ynol in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q156 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ynol')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of alcohols . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ynol')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "ynol in it",
            "choppedEntity": "ynol"
        }
    },
    {
        "chopped": {
            "question": "which square root starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q134237 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of square root . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which square root starts with letter r",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q134237 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of square root . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "r",
            "choppedEntity": "r"
        }
    },
    {
        "chopped": {
            "question": "which square root starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q134237 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of square root . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which square root starts with \"r\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q134237 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of square root . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "r",
            "choppedEntity": "r"
        }
    },
    {
        "chopped": {
            "question": "name a company that is a business division of walt disney motion pictures group and contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q6881511 . ?ans1 wdt:P199 wd:Q1233073 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of enterprise . ?ans1 business division Walt Disney Motion Pictures Group . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a company that is a business division of Walt Disney Motion Pictures Group and contains the word \"company\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6881511 . ?sbj wdt:P199 wd:Q1233073 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'company')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of enterprise . ?sbj business division Walt Disney Motion Pictures Group . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'company')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "company in its name",
            "choppedEntity": "company"
        }
    },
    {
        "chopped": {
            "question": "title a company thats a trade division of walt disney movement pictures gather and contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q6881511 . ?ans1 wdt:P199 wd:Q1233073 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of enterprise . ?ans1 business division Walt Disney Motion Pictures Group . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Title a company that's a trade division of Walt Disney Movement Pictures Gather and contains the word \"company\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6881511 . ?sbj wdt:P199 wd:Q1233073 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'company')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of enterprise . ?sbj business division Walt Disney Motion Pictures Group . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'company')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "company in its name",
            "choppedEntity": "company"
        }
    },
    {
        "chopped": {
            "question": "what are the personal hygiene item which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q53911696 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of none . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the personal hygiene item which start with the letter wipe",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q53911696 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wipe')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of none . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wipe')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "wipe",
            "choppedEntity": "wipe"
        }
    },
    {
        "chopped": {
            "question": "what are the personal hygiene object which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q53911696 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of none . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the personal hygiene object which start with the letter wipe",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q53911696 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wipe')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of none . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wipe')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "wipe",
            "choppedEntity": "wipe"
        }
    },
    {
        "chopped": {
            "question": "tell me cold war whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q4176199 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of cold war . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me cold war whose name has the word game in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4176199 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'game')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of cold war . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'game')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "game in it",
            "choppedEntity": "game"
        }
    },
    {
        "chopped": {
            "question": "what award did ivan pavlov receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q42985 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Ivan Pavlov award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Ivan Pavlov receive in 1900",
            "query": "SELECT ?obj WHERE { wd:Q42985 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1900')) }",
            "NLQuery": "SELECT ?obj WHERE { Ivan Pavlov award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1900')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1900",
            "choppedEntity": "1900"
        }
    },
    {
        "chopped": {
            "question": "which  award did ivan pavlov receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q42985 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Ivan Pavlov award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "which  award did Ivan Pavlov receive in 1900",
            "query": "SELECT ?obj WHERE { wd:Q42985 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1900')) }",
            "NLQuery": "SELECT ?obj WHERE { Ivan Pavlov award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1900')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1900",
            "choppedEntity": "1900"
        }
    },
    {
        "chopped": {
            "question": "what award did nickelodeon win in ",
            "query": "SELECT ?ans1 WHERE { wd:Q154958 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Nickelodeon award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Nickelodeon win in 2010",
            "query": "SELECT ?obj WHERE { wd:Q154958 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2010')) }",
            "NLQuery": "SELECT ?obj WHERE { Nickelodeon award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2010')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2010",
            "choppedEntity": "2010"
        }
    },
    {
        "chopped": {
            "question": "tell me process whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3249551 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of process . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me process whose name has the word transition in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3249551 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'transition')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of process . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'transition')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "transition in it",
            "choppedEntity": "transition"
        }
    },
    {
        "chopped": {
            "question": "what process has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3249551 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of process . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What process has the word transition in it",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3249551 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'transition')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of process . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'transition')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "transition in it",
            "choppedEntity": "transition"
        }
    },
    {
        "chopped": {
            "question": "what are the area of mathematics which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1936384 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of area of mathematics . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the area of mathematics which start with the letter T",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1936384 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of area of mathematics . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what area of mathematics starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1936384 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of area of mathematics . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What area of mathematics starts with the letter 'T'",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1936384 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of area of mathematics . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "who was carl akeleys spouse until ",
            "query": "SELECT ?ans1 WHERE { wd:Q1037711 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Carl Akeley spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was Carl Akeley's spouse until 1923",
            "query": "SELECT ?obj WHERE { wd:Q1037711 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1923')) }",
            "NLQuery": "SELECT ?obj WHERE { Carl Akeley spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1923')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1923",
            "choppedEntity": "1923"
        }
    },
    {
        "chopped": {
            "question": "tell me the name of akeleys spouse until ",
            "query": "SELECT ?ans1 WHERE { wd:Q1037711 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Carl Akeley spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Tell me the name of Akeley's spouse until 1923.",
            "query": "SELECT ?obj WHERE { wd:Q1037711 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1923')) }",
            "NLQuery": "SELECT ?obj WHERE { Carl Akeley spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1923')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1923",
            "choppedEntity": "1923"
        }
    },
    {
        "chopped": {
            "question": "which colour of the rainbow is associated with the srgb colour hex triplet code #",
            "query": "SELECT ?ans1 WHERE { wd:Q1052 wdt:P462 ?ans1 . ?ans1 wdt:P465 ?x FILTER(contains(?x,'FF0000'))}",
            "NLQuery": "SELECT ?ans1 WHERE { rainbow color ?ans1 . ?ans1 sRGB color hex triplet ?x FILTER(contains(?x,'FF0000'))}"
        },
        "original": {
            "question": "Which colour of the rainbow is associated with the sRGB colour hex triplet code #FF0000",
            "query": "SELECT ?answer WHERE { wd:Q1052 wdt:P462 ?answer . ?answer wdt:P465 ?x FILTER(contains(?x,'FF0000'))}",
            "NLQuery": "SELECT ?answer WHERE { rainbow color ?answer . ?answer sRGB color hex triplet ?x FILTER(contains(?x,'FF0000'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "ff0000",
            "choppedEntity": "ff0000"
        }
    },
    {
        "chopped": {
            "question": "which color of the rainbow is related with the srgb coloration hex triplet code #",
            "query": "SELECT ?ans1 WHERE { wd:Q1052 wdt:P462 ?ans1 . ?ans1 wdt:P465 ?x FILTER(contains(?x,'FF0000'))}",
            "NLQuery": "SELECT ?ans1 WHERE { rainbow color ?ans1 . ?ans1 sRGB color hex triplet ?x FILTER(contains(?x,'FF0000'))}"
        },
        "original": {
            "question": "Which color of the rainbow is related with the sRGB coloration hex triplet code #FF0000",
            "query": "SELECT ?answer WHERE { wd:Q1052 wdt:P462 ?answer . ?answer wdt:P465 ?x FILTER(contains(?x,'FF0000'))}",
            "NLQuery": "SELECT ?answer WHERE { rainbow color ?answer . ?answer sRGB color hex triplet ?x FILTER(contains(?x,'FF0000'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "ff0000",
            "choppedEntity": "ff0000"
        }
    },
    {
        "chopped": {
            "question": "which is the new religious movement in the standard body of the religious technology center and that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q477544 . ?ans1 wdt:P1462 wd:Q2672895 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of new religious movement . ?ans1 standards body Religious Technology Center . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the new religious movement in the standard body of the Religious Technology Center and that contains the word Scientology in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q477544 . ?sbj wdt:P1462 wd:Q2672895 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'scientology')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of new religious movement . ?sbj standards body Religious Technology Center . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'scientology')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "scientology in its name",
            "choppedEntity": "scientology"
        }
    },
    {
        "chopped": {
            "question": "which is the new non secular motion in the standard body of the religious technology center and that contains the phrase ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q477544 . ?ans1 wdt:P1462 wd:Q2672895 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of new religious movement . ?ans1 standards body Religious Technology Center . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the new non secular motion in the standard body of the Religious Technology Center and that contains the phrase Scientology in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q477544 . ?sbj wdt:P1462 wd:Q2672895 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'scientology')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of new religious movement . ?sbj standards body Religious Technology Center . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'scientology')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "scientology in its name",
            "choppedEntity": "scientology"
        }
    },
    {
        "chopped": {
            "question": "when did the tokushima prefecture have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q160734 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Tokushima Prefecture population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did the Tokushima Prefecture have a population of 740783",
            "query": "SELECT ?value WHERE { wd:Q160734 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'740783')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Tokushima Prefecture population ?s . ?s population ?x FILTER(contains(?x,'740783')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "740783",
            "choppedEntity": "740783"
        }
    },
    {
        "chopped": {
            "question": "in what year did the tokushima prefecture have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q160734 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Tokushima Prefecture population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "In what year did the Tokushima Prefecture have a population of 740783",
            "query": "SELECT ?value WHERE { wd:Q160734 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'740783')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Tokushima Prefecture population ?s . ?s population ?x FILTER(contains(?x,'740783')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "740783",
            "choppedEntity": "740783"
        }
    },
    {
        "chopped": {
            "question": "tell me the fallen angel starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q581450 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of fallen angel . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "tell me the fallen angel starts with z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q581450 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of fallen angel . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "let me know the fallen blessed messenger begins with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q581450 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of fallen angel . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "let me know the fallen blessed messenger begins with z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q581450 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of fallen angel . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "what noble family of ranavalona i was destroyed in ",
            "query": "SELECT ?ans1 WHERE { wd:Q169794 wdt:P53 ?ans1 . ?ans1 wdt:P576 ?x FILTER(contains(YEAR(?x),?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Ranavalona I family ?ans1 . ?ans1 dissolved, abolished or demolished date ?x FILTER(contains(YEAR(?x),?unknown))}"
        },
        "original": {
            "question": "What noble family of Ranavalona I was destroyed in 1897",
            "query": "SELECT ?answer WHERE { wd:Q169794 wdt:P53 ?answer . ?answer wdt:P576 ?x FILTER(contains(YEAR(?x),'1897'))}",
            "NLQuery": "SELECT ?answer WHERE { Ranavalona I family ?answer . ?answer dissolved, abolished or demolished date ?x FILTER(contains(YEAR(?x),'1897'))}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1897",
            "choppedEntity": "1897"
        }
    },
    {
        "chopped": {
            "question": "what ranavalona noble family i was destroyed in ",
            "query": "SELECT ?ans1 WHERE { wd:Q169794 wdt:P53 ?ans1 . ?ans1 wdt:P576 ?x FILTER(contains(YEAR(?x),?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Ranavalona I family ?ans1 . ?ans1 dissolved, abolished or demolished date ?x FILTER(contains(YEAR(?x),?unknown))}"
        },
        "original": {
            "question": "What Ranavalona noble family I was destroyed in 1897",
            "query": "SELECT ?answer WHERE { wd:Q169794 wdt:P53 ?answer . ?answer wdt:P576 ?x FILTER(contains(YEAR(?x),'1897'))}",
            "NLQuery": "SELECT ?answer WHERE { Ranavalona I family ?answer . ?answer dissolved, abolished or demolished date ?x FILTER(contains(YEAR(?x),'1897'))}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1897",
            "choppedEntity": "1897"
        }
    },
    {
        "chopped": {
            "question": "what are the video game console model which letter starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q56682555 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of video game console model . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the video game console model which letter starts with x",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56682555 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'x')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of video game console model . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'x')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "x",
            "choppedEntity": "x"
        }
    },
    {
        "chopped": {
            "question": "what are the video amusement comfort show which letter begins with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q56682555 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of video game console model . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the video amusement comfort show which letter begins with x",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56682555 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'x')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of video game console model . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'x')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "x",
            "choppedEntity": "x"
        }
    },
    {
        "chopped": {
            "question": "whats the name of the cemetary ll zamenhof is burried in, on the coordenates 5224525 ",
            "query": "SELECT ?ans1 WHERE { wd:Q11758 p:P119 ?s . ?s ps:P119 ?ans1 . ?s pq:P625 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { L. L. Zamenhof place of burial ?s . ?s place of burial ?ans1 . ?s coordinate location ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "What's the name of the cemetary L.L. Zamenhof is burried in, on the coordenates 52.24525 20.976080555556",
            "query": "SELECT ?obj WHERE { wd:Q11758 p:P119 ?s . ?s ps:P119 ?obj . ?s pq:P625 ?x FILTER(contains(?x,'52.24525 20.976080555556')) }",
            "NLQuery": "SELECT ?obj WHERE { L. L. Zamenhof place of burial ?s . ?s place of burial ?obj . ?s coordinate location ?x FILTER(contains(?x,'52.24525 20.976080555556')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "20976080555556",
            "choppedEntity": "52.24525 20.976080555556"
        }
    },
    {
        "chopped": {
            "question": "what is the start time for the university of utah at coordinate location ",
            "query": "SELECT ?ans1 WHERE { wd:Q168515 p:P625 ?s . ?s ps:P625 ?x FILTER(contains(?x,?unknown)) . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { University of Utah coordinate location ?s . ?s coordinate location ?x FILTER(contains(?x,?unknown)) . ?s start time ?ans1}"
        },
        "original": {
            "question": "What is the start time for the University of Utah at coordinate location 40.765-111.85",
            "query": "SELECT ?value WHERE { wd:Q168515 p:P625 ?s . ?s ps:P625 ?x FILTER(contains(?x,'40.765 -111.85')) . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { University of Utah coordinate location ?s . ?s coordinate location ?x FILTER(contains(?x,'40.765 -111.85')) . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "40765-11185",
            "choppedEntity": "40.765 -111.85"
        }
    },
    {
        "chopped": {
            "question": "what is the determination method of sabadell which has population as ",
            "query": "SELECT ?ans1 WHERE { wd:Q12258 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P459 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Sabadell population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s determination method ?ans1}"
        },
        "original": {
            "question": "What is the determination method of Sabadell which has population as 185170",
            "query": "SELECT ?value WHERE { wd:Q12258 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'185170.0')) . ?s pq:P459 ?value}",
            "NLQuery": "SELECT ?value WHERE { Sabadell population ?s . ?s population ?x FILTER(contains(?x,'185170.0')) . ?s determination method ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "185170",
            "choppedEntity": "185170.0"
        }
    },
    {
        "chopped": {
            "question": "how can you determine if sabadells population is ",
            "query": "SELECT ?ans1 WHERE { wd:Q12258 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P459 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Sabadell population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s determination method ?ans1}"
        },
        "original": {
            "question": "How can you determine if Sabadell's population is 185170",
            "query": "SELECT ?value WHERE { wd:Q12258 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'185170.0')) . ?s pq:P459 ?value}",
            "NLQuery": "SELECT ?value WHERE { Sabadell population ?s . ?s population ?x FILTER(contains(?x,'185170.0')) . ?s determination method ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "185170",
            "choppedEntity": "185170.0"
        }
    },
    {
        "chopped": {
            "question": "who was jean sebergs spouse starting in october of ",
            "query": "SELECT ?ans1 WHERE { wd:Q230681 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Jean Seberg spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was Jean Seberg's spouse starting in October of 1963",
            "query": "SELECT ?obj WHERE { wd:Q230681 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1963')) }",
            "NLQuery": "SELECT ?obj WHERE { Jean Seberg spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1963')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1963",
            "choppedEntity": "1963"
        }
    },
    {
        "chopped": {
            "question": "what in the sport of college basketball has a running length of ",
            "query": "SELECT ?ans1 WHERE { wd:Q48890 wdt:P641 ?ans1 . ?ans1 wdt:P2047 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { college basketball sport ?ans1 . ?ans1 duration ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What in the sport of college basketball has a running length of 40",
            "query": "SELECT ?answer WHERE { wd:Q48890 wdt:P641 ?answer . ?answer wdt:P2047 ?x FILTER(contains(?x,'40'))}",
            "NLQuery": "SELECT ?answer WHERE { college basketball sport ?answer . ?answer duration ?x FILTER(contains(?x,'40'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "40",
            "choppedEntity": "40"
        }
    },
    {
        "chopped": {
            "question": "what within the sport of college ball includes a running length of ",
            "query": "SELECT ?ans1 WHERE { wd:Q48890 wdt:P641 ?ans1 . ?ans1 wdt:P2047 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { college basketball sport ?ans1 . ?ans1 duration ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What within the sport of college ball includes a running length of 40",
            "query": "SELECT ?answer WHERE { wd:Q48890 wdt:P641 ?answer . ?answer wdt:P2047 ?x FILTER(contains(?x,'40'))}",
            "NLQuery": "SELECT ?answer WHERE { college basketball sport ?answer . ?answer duration ?x FILTER(contains(?x,'40'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "40",
            "choppedEntity": "40"
        }
    },
    {
        "chopped": {
            "question": "which polygon starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q37555 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Polygon . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which polygon starts with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q37555 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Polygon . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "which polygon begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q37555 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Polygon . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which polygon begins with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q37555 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Polygon . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what was hideaki anno nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q23261 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Hideaki Anno nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Hideaki Anno nominated for in 2008",
            "query": "SELECT ?obj WHERE { wd:Q23261 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2008')) }",
            "NLQuery": "SELECT ?obj WHERE { Hideaki Anno nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2008')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2008",
            "choppedEntity": "2008"
        }
    },
    {
        "chopped": {
            "question": "of what reason was hideaki anno nominated in ",
            "query": "SELECT ?ans1 WHERE { wd:Q23261 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Hideaki Anno nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "of what reason was Hideaki Anno nominated in 2008",
            "query": "SELECT ?obj WHERE { wd:Q23261 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2008')) }",
            "NLQuery": "SELECT ?obj WHERE { Hideaki Anno nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2008')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2008",
            "choppedEntity": "2008"
        }
    },
    {
        "chopped": {
            "question": "what are the flammable gas which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q10913792 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of flammable gas . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the flammable gas which start with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q10913792 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of flammable gas . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "which are the flammable gas that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q10913792 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of flammable gas . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which are the flammable gas that starts with letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q10913792 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of flammable gas . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what is the determination method that bilbao has the population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q8692 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P459 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Bilbao population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s determination method ?ans1}"
        },
        "original": {
            "question": "What is the determination method that Bilbao has the population of 351629.0",
            "query": "SELECT ?value WHERE { wd:Q8692 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'351629.0')) . ?s pq:P459 ?value}",
            "NLQuery": "SELECT ?value WHERE { Bilbao population ?s . ?s population ?x FILTER(contains(?x,'351629.0')) . ?s determination method ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "3516290",
            "choppedEntity": "351629.0"
        }
    },
    {
        "chopped": {
            "question": "what high speed train has a track gauge of 1435 mm and has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q13402959 . ?ans1 wdt:P1064 wd:Q1999572 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of high-speed train . ?ans1 track gauge 1435 mm track gauge . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What high speed train has a track gauge of 1435 mm and has the word v250 in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13402959 . ?sbj wdt:P1064 wd:Q1999572 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'v250')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of high-speed train . ?sbj track gauge 1435 mm track gauge . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'v250')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "v250 in their name",
            "choppedEntity": "v250"
        }
    },
    {
        "chopped": {
            "question": "what fast train has a track check of 1435 mm and has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q13402959 . ?ans1 wdt:P1064 wd:Q1999572 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of high-speed train . ?ans1 track gauge 1435 mm track gauge . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What fast train has a track check of 1435 mm and has the word v250 in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13402959 . ?sbj wdt:P1064 wd:Q1999572 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'v250')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of high-speed train . ?sbj track gauge 1435 mm track gauge . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'v250')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "v250 in their name",
            "choppedEntity": "v250"
        }
    },
    {
        "chopped": {
            "question": "what is the isotope of hydrogen that follows deuterium that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q466603 . ?ans1 wdt:P155 wd:Q102296 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of isotope of hydrogen . ?ans1 follows deuterium . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is the isotope of hydrogen that follows deuterium that contains the word \"tritium\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q466603 . ?sbj wdt:P155 wd:Q102296 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tritium')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of isotope of hydrogen . ?sbj follows deuterium . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tritium')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "tritium in its name",
            "choppedEntity": "tritium"
        }
    },
    {
        "chopped": {
            "question": "name the peoples republic of china region with the highest point of k2 containing the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q57362 . ?ans1 wdt:P610 wd:Q43512 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of autonomous region of the People's Republic of China . ?ans1 highest point K2 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name the People's Republic of China region with the highest point of K2 containing the word \"xinjiang\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q57362 . ?sbj wdt:P610 wd:Q43512 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'xinjiang')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of autonomous region of the People's Republic of China . ?sbj highest point K2 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'xinjiang')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "xinjiang in its name",
            "choppedEntity": "xinjiang"
        }
    },
    {
        "chopped": {
            "question": "who is the writer of the faerie queen that died on 1/13/",
            "query": "SELECT ?ans1 WHERE { wd:Q1813771 wdt:P50 ?ans1 . ?ans1 wdt:P570 ?x FILTER(contains(YEAR(?x),?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { The Faerie Queene author ?ans1 . ?ans1 date of death ?x FILTER(contains(YEAR(?x),?unknown))}"
        },
        "original": {
            "question": "Who is the writer of The Faerie Queen that died on 1/13/1599",
            "query": "SELECT ?answer WHERE { wd:Q1813771 wdt:P50 ?answer . ?answer wdt:P570 ?x FILTER(contains(YEAR(?x),'1599'))}",
            "NLQuery": "SELECT ?answer WHERE { The Faerie Queene author ?answer . ?answer date of death ?x FILTER(contains(YEAR(?x),'1599'))}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1599",
            "choppedEntity": "1599"
        }
    },
    {
        "chopped": {
            "question": "who is the author of the faerie queen that died on 1/13/",
            "query": "SELECT ?ans1 WHERE { wd:Q1813771 wdt:P50 ?ans1 . ?ans1 wdt:P570 ?x FILTER(contains(YEAR(?x),?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { The Faerie Queene author ?ans1 . ?ans1 date of death ?x FILTER(contains(YEAR(?x),?unknown))}"
        },
        "original": {
            "question": "Who is the author of The Faerie Queen that died on 1/13/1599",
            "query": "SELECT ?answer WHERE { wd:Q1813771 wdt:P50 ?answer . ?answer wdt:P570 ?x FILTER(contains(YEAR(?x),'1599'))}",
            "NLQuery": "SELECT ?answer WHERE { The Faerie Queene author ?answer . ?answer date of death ?x FILTER(contains(YEAR(?x),'1599'))}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1599",
            "choppedEntity": "1599"
        }
    },
    {
        "chopped": {
            "question": "who employed james hansen beginning in ",
            "query": "SELECT ?ans1 WHERE { wd:Q724095 p:P108 ?s . ?s ps:P108 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { James Edward Hansen employer ?s . ?s employer ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who employed James Hansen beginning in 2003",
            "query": "SELECT ?obj WHERE { wd:Q724095 p:P108 ?s . ?s ps:P108 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2003')) }",
            "NLQuery": "SELECT ?obj WHERE { James Edward Hansen employer ?s . ?s employer ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2003')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2003",
            "choppedEntity": "2003"
        }
    },
    {
        "chopped": {
            "question": "who is james hansens employer beginning ",
            "query": "SELECT ?ans1 WHERE { wd:Q724095 p:P108 ?s . ?s ps:P108 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { James Edward Hansen employer ?s . ?s employer ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who is James Hansen's employer beginning 2003",
            "query": "SELECT ?obj WHERE { wd:Q724095 p:P108 ?s . ?s ps:P108 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2003')) }",
            "NLQuery": "SELECT ?obj WHERE { James Edward Hansen employer ?s . ?s employer ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2003')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2003",
            "choppedEntity": "2003"
        }
    },
    {
        "chopped": {
            "question": "which is the video game series developed by n-space and starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q7058673 . ?ans1 wdt:P178 wd:Q610952 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of video game series . ?ans1 developer n-Space . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the video game series developed by n-Space and starts with the letter r",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7058673 . ?sbj wdt:P178 wd:Q610952 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of video game series . ?sbj developer n-Space . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "r",
            "choppedEntity": "r"
        }
    },
    {
        "chopped": {
            "question": "which is the video sport series developed by using n-space and begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q7058673 . ?ans1 wdt:P178 wd:Q610952 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of video game series . ?ans1 developer n-Space . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the video sport series developed by using n-Space and begins with the letter r",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7058673 . ?sbj wdt:P178 wd:Q610952 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of video game series . ?sbj developer n-Space . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "r",
            "choppedEntity": "r"
        }
    },
    {
        "chopped": {
            "question": "tell me a research station on earth that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q195339 . ?ans1 wdt:P397 wd:Q2 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of research station . ?ans1 parent astronomical body Earth . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me a research station on Earth that starts with the letter \"i\".",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q195339 . ?sbj wdt:P397 wd:Q2 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'i')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of research station . ?sbj parent astronomical body Earth . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'i')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "i",
            "choppedEntity": "i"
        }
    },
    {
        "chopped": {
            "question": "what was henry clay position held in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q319630 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Henry Clay position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Henry Clay position held in the year 1823",
            "query": "SELECT ?obj WHERE { wd:Q319630 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1823')) }",
            "NLQuery": "SELECT ?obj WHERE { Henry Clay position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1823')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1823",
            "choppedEntity": "1823"
        }
    },
    {
        "chopped": {
            "question": "whats greater than a super-earth that has an eccentricity of ",
            "query": "SELECT ?ans1 WHERE { wd:Q327757 wdt:P5135 ?ans1 . ?ans1 wdt:P1096 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { super-Earth greater than ?ans1 . ?ans1 orbital eccentricity ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What's greater than a super-Earth that has an eccentricity of 0.0167112",
            "query": "SELECT ?answer WHERE { wd:Q327757 wdt:P5135 ?answer . ?answer wdt:P1096 ?x FILTER(contains(?x,'0.0167112'))}",
            "NLQuery": "SELECT ?answer WHERE { super-Earth greater than ?answer . ?answer orbital eccentricity ?x FILTER(contains(?x,'0.0167112'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "00167112",
            "choppedEntity": "0.0167112"
        }
    },
    {
        "chopped": {
            "question": "where is the place of activity of henri de toulouse-lautrec, that has the point of earth at ",
            "query": "SELECT ?ans1 WHERE { wd:Q82445 wdt:P937 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Henri de Toulouse-Lautrec work location ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Where is the place of activity of Henri de Toulouse-Lautrec, that has the point of earth at 2.35183",
            "query": "SELECT ?answer WHERE { wd:Q82445 wdt:P937 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'2.35183'))}",
            "NLQuery": "SELECT ?answer WHERE { Henri de Toulouse-Lautrec work location ?answer . ?answer coordinate location ?x FILTER(contains(?x,'2.35183'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "235183",
            "choppedEntity": "2.35183"
        }
    },
    {
        "chopped": {
            "question": "where is the area of pastime of henri de toulouse-lautrec, that has the point of earth at ",
            "query": "SELECT ?ans1 WHERE { wd:Q82445 wdt:P937 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Henri de Toulouse-Lautrec work location ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Where is the area of pastime of Henri de Toulouse-Lautrec, that has the point of earth at 2.35183",
            "query": "SELECT ?answer WHERE { wd:Q82445 wdt:P937 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'2.35183'))}",
            "NLQuery": "SELECT ?answer WHERE { Henri de Toulouse-Lautrec work location ?answer . ?answer coordinate location ?x FILTER(contains(?x,'2.35183'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "235183",
            "choppedEntity": "2.35183"
        }
    },
    {
        "chopped": {
            "question": "what is an aspect of the history of iowa, which was formed on december 28, ",
            "query": "SELECT ?ans1 WHERE { wd:Q5864963 wdt:P1269 ?ans1 . ?ans1 wdt:P571 ?x FILTER(contains(YEAR(?x),?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { history of Iowa facet of ?ans1 . ?ans1 inception ?x FILTER(contains(YEAR(?x),?unknown))}"
        },
        "original": {
            "question": "What is an aspect of the history of Iowa, which was formed on December 28, 1846",
            "query": "SELECT ?answer WHERE { wd:Q5864963 wdt:P1269 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1846'))}",
            "NLQuery": "SELECT ?answer WHERE { history of Iowa facet of ?answer . ?answer inception ?x FILTER(contains(YEAR(?x),'1846'))}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1846",
            "choppedEntity": "1846"
        }
    },
    {
        "chopped": {
            "question": "what is an perspective of the history of iowa, which was shaped on december 28, ",
            "query": "SELECT ?ans1 WHERE { wd:Q5864963 wdt:P1269 ?ans1 . ?ans1 wdt:P571 ?x FILTER(contains(YEAR(?x),?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { history of Iowa facet of ?ans1 . ?ans1 inception ?x FILTER(contains(YEAR(?x),?unknown))}"
        },
        "original": {
            "question": "What is an perspective of the history of Iowa, which was shaped on December 28, 1846",
            "query": "SELECT ?answer WHERE { wd:Q5864963 wdt:P1269 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1846'))}",
            "NLQuery": "SELECT ?answer WHERE { history of Iowa facet of ?answer . ?answer inception ?x FILTER(contains(YEAR(?x),'1846'))}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1846",
            "choppedEntity": "1846"
        }
    },
    {
        "chopped": {
            "question": "which position did edward viii hold when he started in 20-01-",
            "query": "SELECT ?ans1 WHERE { wd:Q590227 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Edward VIII position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "which position did Edward VIII hold when he started in 20-01-1936",
            "query": "SELECT ?obj WHERE { wd:Q590227 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1936')) }",
            "NLQuery": "SELECT ?obj WHERE { Edward VIII position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1936')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1936",
            "choppedEntity": "1936"
        }
    },
    {
        "chopped": {
            "question": "what are the party which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q200538 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of party . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the party which start with the letter zeltkirmes",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q200538 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeltkirmes')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of party . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeltkirmes')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "zeltkirmes",
            "choppedEntity": "zeltkirmes"
        }
    },
    {
        "chopped": {
            "question": "what is the party that begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q200538 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of party . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is the party that begins with the letter zeltkirmes",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q200538 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeltkirmes')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of party . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeltkirmes')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "zeltkirmes",
            "choppedEntity": "zeltkirmes"
        }
    },
    {
        "chopped": {
            "question": "what was luis miguel nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1069140 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Luis Miguel nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Luis Miguel nominated for in 1997",
            "query": "SELECT ?obj WHERE { wd:Q1069140 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1997')) }",
            "NLQuery": "SELECT ?obj WHERE { Luis Miguel nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1997')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1997",
            "choppedEntity": "1997"
        }
    },
    {
        "chopped": {
            "question": "what did luis miguel get nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1069140 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Luis Miguel nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What did Luis Miguel get nominated for in 1997",
            "query": "SELECT ?obj WHERE { wd:Q1069140 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1997')) }",
            "NLQuery": "SELECT ?obj WHERE { Luis Miguel nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1997')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1997",
            "choppedEntity": "1997"
        }
    },
    {
        "chopped": {
            "question": "who nominated from nirvana had a point of ",
            "query": "SELECT ?ans1 WHERE { wd:Q11649 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Nirvana nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who nominated from Nirvana had a point of 1992",
            "query": "SELECT ?obj WHERE { wd:Q11649 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1992')) }",
            "NLQuery": "SELECT ?obj WHERE { Nirvana nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1992')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1992",
            "choppedEntity": "1992"
        }
    },
    {
        "chopped": {
            "question": "what was nirvana nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q11649 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Nirvana nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Nirvana nominated for in 1992",
            "query": "SELECT ?obj WHERE { wd:Q11649 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1992')) }",
            "NLQuery": "SELECT ?obj WHERE { Nirvana nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1992')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1992",
            "choppedEntity": "1992"
        }
    },
    {
        "chopped": {
            "question": "tell me which theme park starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2416723 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of theme park . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me which theme park starts with the letter w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2416723 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of theme park . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "disclose me which theme park begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2416723 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of theme park . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Disclose me which theme park begins with the letter w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2416723 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of theme park . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "name a building made by the islamic art of the emirate and the caliphate that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1497375 . ?ans1 wdt:P149 wd:Q2864672 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of architectural ensemble . ?ans1 architectural style Islamic art of the Emirate and the Caliphate . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a building made by the Islamic art of the Emirate and the Caliphate that starts with letter A",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1497375 . ?sbj wdt:P149 wd:Q2864672 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of architectural ensemble . ?sbj architectural style Islamic art of the Emirate and the Caliphate . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "name a constructing made by using the islamic art of the emirate and the caliphate that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1497375 . ?ans1 wdt:P149 wd:Q2864672 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of architectural ensemble . ?ans1 architectural style Islamic art of the Emirate and the Caliphate . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a constructing made by using the Islamic art of the Emirate and the Caliphate that starts with letter A",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1497375 . ?sbj wdt:P149 wd:Q2864672 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of architectural ensemble . ?sbj architectural style Islamic art of the Emirate and the Caliphate . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "tell me form of cricket that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q5470256 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of form of cricket . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me form of cricket that contains the word k",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5470256 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of form of cricket . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "k",
            "choppedEntity": "k"
        }
    },
    {
        "chopped": {
            "question": "tell me the cricket form containing the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q5470256 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of form of cricket . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the cricket form containing the word k",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5470256 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of form of cricket . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "k",
            "choppedEntity": "k"
        }
    },
    {
        "chopped": {
            "question": "name a biblical character canonized as a saint that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q20643955 . ?ans1 wdt:P411 wd:Q43115 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of human biblical figure . ?ans1 canonization status saint . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a biblical character canonized as a saint that starts with letter Z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20643955 . ?sbj wdt:P411 wd:Q43115 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of human biblical figure . ?sbj canonization status saint . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "name a biblical character canonized as a begin that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q20643955 . ?ans1 wdt:P411 wd:Q43115 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of human biblical figure . ?ans1 canonization status saint . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a biblical character canonized as a begin that starts with letter Z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20643955 . ?sbj wdt:P411 wd:Q43115 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of human biblical figure . ?sbj canonization status saint . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "what was flannery o\u00e7onnors notable work which was published in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q234579 p:P800 ?s . ?s ps:P800 ?ans1 . ?s pq:P577 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Flannery O'Connor notable work ?s . ?s notable work ?ans1 . ?s date of publication ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Flannery O'\u00c7onnor's notable work which was published in the year 1971",
            "query": "SELECT ?obj WHERE { wd:Q234579 p:P800 ?s . ?s ps:P800 ?obj . ?s pq:P577 ?x FILTER(contains(YEAR(?x),'1971')) }",
            "NLQuery": "SELECT ?obj WHERE { Flannery O'Connor notable work ?s . ?s notable work ?obj . ?s date of publication ?x FILTER(contains(YEAR(?x),'1971')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1971",
            "choppedEntity": "1971"
        }
    },
    {
        "chopped": {
            "question": "what famous book did flannery oconnor publish in ",
            "query": "SELECT ?ans1 WHERE { wd:Q234579 p:P800 ?s . ?s ps:P800 ?ans1 . ?s pq:P577 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Flannery O'Connor notable work ?s . ?s notable work ?ans1 . ?s date of publication ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What famous book did Flannery O'Connor publish in 1971",
            "query": "SELECT ?obj WHERE { wd:Q234579 p:P800 ?s . ?s ps:P800 ?obj . ?s pq:P577 ?x FILTER(contains(YEAR(?x),'1971')) }",
            "NLQuery": "SELECT ?obj WHERE { Flannery O'Connor notable work ?s . ?s notable work ?obj . ?s date of publication ?x FILTER(contains(YEAR(?x),'1971')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1971",
            "choppedEntity": "1971"
        }
    },
    {
        "chopped": {
            "question": "tell me historic house museum that name has  the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2087181 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of historic house museum . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "tell me historic house museum that name has  the word tyntesfield in it",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2087181 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tyntesfield')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of historic house museum . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tyntesfield')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "tyntesfield in it",
            "choppedEntity": "tyntesfield"
        }
    },
    {
        "chopped": {
            "question": "tell me the historic museum of the house whose name contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2087181 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of historic house museum . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the historic museum of the house whose name contains the word tyntesfield",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2087181 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tyntesfield')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of historic house museum . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tyntesfield')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "tyntesfield",
            "choppedEntity": "tyntesfield"
        }
    },
    {
        "chopped": {
            "question": "when did paul \u00e9luard use the pseudonym ",
            "query": "SELECT ?ans1 WHERE { wd:Q152176 p:P742 ?s . ?s ps:P742 ?x FILTER(contains(?x,'Didier Desroches')) . ?s pq:P31 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Paul \u00c9luard pseudonym ?s . ?s pseudonym ?x FILTER(contains(?x,'Didier Desroches')) . ?s instance of ?ans1}"
        },
        "original": {
            "question": "When did Paul \u00c9luard use the pseudonym \"Didier Desroches\"",
            "query": "SELECT ?value WHERE { wd:Q152176 p:P742 ?s . ?s ps:P742 ?x FILTER(contains(?x,'Didier Desroches')) . ?s pq:P31 ?value}",
            "NLQuery": "SELECT ?value WHERE { Paul \u00c9luard pseudonym ?s . ?s pseudonym ?x FILTER(contains(?x,'Didier Desroches')) . ?s instance of ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "didier desroches",
            "choppedEntity": "didier desroches"
        }
    },
    {
        "chopped": {
            "question": "what are realm of the death which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q443814 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of realm of the dead . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what are realm of the death which start with the letter s",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q443814 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of realm of the dead . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what are realm of the death which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q443814 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of realm of the dead . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what are realm of the death which begin with the letter s",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q443814 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of realm of the dead . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "where in bismarck has a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q37066 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P459 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Bismarck population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s determination method ?ans1}"
        },
        "original": {
            "question": "Where in Bismarck has a population of 61272",
            "query": "SELECT ?value WHERE { wd:Q37066 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'61272')) . ?s pq:P459 ?value}",
            "NLQuery": "SELECT ?value WHERE { Bismarck population ?s . ?s population ?x FILTER(contains(?x,'61272')) . ?s determination method ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "61272",
            "choppedEntity": "61272"
        }
    },
    {
        "chopped": {
            "question": "where has bismarck population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q37066 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P459 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Bismarck population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s determination method ?ans1}"
        },
        "original": {
            "question": "where has bismarck population of 61272",
            "query": "SELECT ?value WHERE { wd:Q37066 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'61272')) . ?s pq:P459 ?value}",
            "NLQuery": "SELECT ?value WHERE { Bismarck population ?s . ?s population ?x FILTER(contains(?x,'61272')) . ?s determination method ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "61272",
            "choppedEntity": "61272"
        }
    },
    {
        "chopped": {
            "question": "what award did danny kaye receive on february 2, ",
            "query": "SELECT ?ans1 WHERE { wd:Q213425 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Danny Kaye award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Danny Kaye receive on February 2, 1986",
            "query": "SELECT ?obj WHERE { wd:Q213425 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1986')) }",
            "NLQuery": "SELECT ?obj WHERE { Danny Kaye award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1986')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1986",
            "choppedEntity": "1986"
        }
    },
    {
        "chopped": {
            "question": "which award did danny kaye receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q213425 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Danny Kaye award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which award did Danny Kaye receive in 1986",
            "query": "SELECT ?obj WHERE { wd:Q213425 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1986')) }",
            "NLQuery": "SELECT ?obj WHERE { Danny Kaye award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1986')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1986",
            "choppedEntity": "1986"
        }
    },
    {
        "chopped": {
            "question": "what position did julia gillard hold beginning in june 24th, ",
            "query": "SELECT ?ans1 WHERE { wd:Q41563 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Julia Gillard position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What position did Julia Gillard hold beginning in June 24th, 2010",
            "query": "SELECT ?obj WHERE { wd:Q41563 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2010')) }",
            "NLQuery": "SELECT ?obj WHERE { Julia Gillard position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2010')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2010",
            "choppedEntity": "2010"
        }
    },
    {
        "chopped": {
            "question": "tell me transformation whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q12202238 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of transformation . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me transformation whose name has the word transformation in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12202238 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'transformation')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of transformation . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'transformation')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "transformation in their name",
            "choppedEntity": "transformation"
        }
    },
    {
        "chopped": {
            "question": "name a sports league beginning in april that contains in its name the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q623109 . ?ans1 wdt:P4794 wd:Q118 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of sports league . ?ans1 season starts April . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a sports league beginning in April that contains in its name the word \"league\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q623109 . ?sbj wdt:P4794 wd:Q118 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'league')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of sports league . ?sbj season starts April . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'league')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "league",
            "choppedEntity": "league"
        }
    },
    {
        "chopped": {
            "question": "what is the population of fergana in ",
            "query": "SELECT ?ans1 WHERE { wd:Q486329 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Fergana population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What is the population of Fergana in 1959",
            "query": "SELECT ?obj WHERE { wd:Q486329 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1959')) }",
            "NLQuery": "SELECT ?obj WHERE { Fergana population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1959')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1959",
            "choppedEntity": "1959"
        }
    },
    {
        "chopped": {
            "question": "what was the population of argenteuil in ",
            "query": "SELECT ?ans1 WHERE { wd:Q181946 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Argenteuil population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of Argenteuil in 1856",
            "query": "SELECT ?obj WHERE { wd:Q181946 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1856')) }",
            "NLQuery": "SELECT ?obj WHERE { Argenteuil population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1856')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1856",
            "choppedEntity": "1856"
        }
    },
    {
        "chopped": {
            "question": "how many people lived in argenteuil in ",
            "query": "SELECT ?ans1 WHERE { wd:Q181946 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Argenteuil population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "How many people lived in Argenteuil in 1856",
            "query": "SELECT ?obj WHERE { wd:Q181946 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1856')) }",
            "NLQuery": "SELECT ?obj WHERE { Argenteuil population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1856')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1856",
            "choppedEntity": "1856"
        }
    },
    {
        "chopped": {
            "question": "name the scripted language using the php license that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q187432 . ?ans1 wdt:P275 wd:Q376841 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of scripting language . ?ans1 copyright license PHP License . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name the scripted language using the PHP License that contains the word \"php\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q187432 . ?sbj wdt:P275 wd:Q376841 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'php')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of scripting language . ?sbj copyright license PHP License . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'php')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "php in its name",
            "choppedEntity": "php"
        }
    },
    {
        "chopped": {
            "question": "title the scripted dialect utilizing the php permit that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q187432 . ?ans1 wdt:P275 wd:Q376841 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of scripting language . ?ans1 copyright license PHP License . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Title the scripted dialect utilizing the PHP Permit that contains the word \"php\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q187432 . ?sbj wdt:P275 wd:Q376841 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'php')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of scripting language . ?sbj copyright license PHP License . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'php')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "php in its name",
            "choppedEntity": "php"
        }
    },
    {
        "chopped": {
            "question": "what are the constellation which starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q8928 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of constellation . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what are the constellation which starts with v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q8928 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of constellation . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what constellation starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q8928 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of constellation . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What constellation starts with the letter 'v'",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q8928 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of constellation . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "tell me stock exchange whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11691 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of stock exchange . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me stock exchange whose name has the word sedex in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11691 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'sedex')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of stock exchange . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'sedex')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "sedex in it",
            "choppedEntity": "sedex"
        }
    },
    {
        "chopped": {
            "question": "what award did dan marino receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q195367 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Dan Marino award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Dan Marino receive in 1998",
            "query": "SELECT ?obj WHERE { wd:Q195367 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1998')) }",
            "NLQuery": "SELECT ?obj WHERE { Dan Marino award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1998')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1998",
            "choppedEntity": "1998"
        }
    },
    {
        "chopped": {
            "question": "tell me the data sterilization format that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q24451526 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of data serialization format . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the data sterilization format that starts with the letter 'y'.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24451526 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of data serialization format . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "y",
            "choppedEntity": "y"
        }
    },
    {
        "chopped": {
            "question": "tell me the facts sterilization format that begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q24451526 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of data serialization format . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the facts sterilization format that begins with the letter 'y'.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24451526 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of data serialization format . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "y",
            "choppedEntity": "y"
        }
    },
    {
        "chopped": {
            "question": "what intensive quality starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3387041 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of intensive quantity . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What intensive quality starts with the letter \"v\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3387041 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of intensive quantity . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "name a season that includes the month of august and that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q24384 . ?ans1 wdt:P2922 wd:Q122 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of season . ?ans1 month of the year August . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a season that includes the month of August and that contains the word \"winter\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24384 . ?sbj wdt:P2922 wd:Q122 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'winter')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of season . ?sbj month of the year August . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'winter')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "winter in its name",
            "choppedEntity": "winter"
        }
    },
    {
        "chopped": {
            "question": "title a season that incorporates the month of eminent which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q24384 . ?ans1 wdt:P2922 wd:Q122 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of season . ?ans1 month of the year August . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Title a season that incorporates the month of Eminent which contains the word \"winter\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24384 . ?sbj wdt:P2922 wd:Q122 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'winter')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of season . ?sbj month of the year August . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'winter')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "winter in its name",
            "choppedEntity": "winter"
        }
    },
    {
        "chopped": {
            "question": "name an universe that is ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q28530079 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of observable universe . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name an universe that is observable",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28530079 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'observable')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of observable universe . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'observable')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "observable",
            "choppedEntity": "observable"
        }
    },
    {
        "chopped": {
            "question": "title an universe thats ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q28530079 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of observable universe . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Title an universe that's observable",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28530079 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'observable')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of observable universe . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'observable')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "observable",
            "choppedEntity": "observable"
        }
    },
    {
        "chopped": {
            "question": "name a quantum particle that interacts with gravity and that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q22675015 . ?ans1 wdt:P517 wd:Q11412 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of type of quantum particle . ?ans1 interaction gravity . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a quantum particle that interacts with gravity and that contains the word \"quark\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22675015 . ?sbj wdt:P517 wd:Q11412 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'quark')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of type of quantum particle . ?sbj interaction gravity . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'quark')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "quark in its name",
            "choppedEntity": "quark"
        }
    },
    {
        "chopped": {
            "question": "name a quantum particle that interacts with gravity and that consists of the phrase ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q22675015 . ?ans1 wdt:P517 wd:Q11412 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of type of quantum particle . ?ans1 interaction gravity . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a quantum particle that interacts with gravity and that consists of the phrase \"quark\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22675015 . ?sbj wdt:P517 wd:Q11412 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'quark')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of type of quantum particle . ?sbj interaction gravity . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'quark')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "quark in its name",
            "choppedEntity": "quark"
        }
    },
    {
        "chopped": {
            "question": "what award did jm coetzee win in ",
            "query": "SELECT ?ans1 WHERE { wd:Q43293 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { J. M. Coetzee award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did J.M. coetzee win in 1987",
            "query": "SELECT ?obj WHERE { wd:Q43293 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1987')) }",
            "NLQuery": "SELECT ?obj WHERE { J. M. Coetzee award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1987')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1987",
            "choppedEntity": "1987"
        }
    },
    {
        "chopped": {
            "question": "what what isazane has effect by ammonia exposureand also which starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q4832226 . ?ans1 wdt:P1542 wd:Q21167772 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of azane . ?ans1 has effect ammonia exposure . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What what isazane has effect by ammonia exposureand also which starts with letter A",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4832226 . ?sbj wdt:P1542 wd:Q21167772 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of azane . ?sbj has effect ammonia exposure . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "what what isazane has impact by ammonia exposureand additionally which begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q4832226 . ?ans1 wdt:P1542 wd:Q21167772 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of azane . ?ans1 has effect ammonia exposure . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What what isazane has impact by ammonia exposureand additionally which begins with letter A",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4832226 . ?sbj wdt:P1542 wd:Q21167772 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of azane . ?sbj has effect ammonia exposure . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "which is the shape of die having stl file of ",
            "query": "SELECT ?ans1 WHERE { wd:Q45089 wdt:P1419 ?ans1 . ?ans1 wdt:P4896 ?x FILTER(contains(?x,'Hexahedron.stl'))}",
            "NLQuery": "SELECT ?ans1 WHERE { dice shape ?ans1 . ?ans1 3D model ?x FILTER(contains(?x,'Hexahedron.stl'))}"
        },
        "original": {
            "question": "Which is the shape of die having STL file of Hexahedron.stl",
            "query": "SELECT ?answer WHERE { wd:Q45089 wdt:P1419 ?answer . ?answer wdt:P4896 ?x FILTER(contains(?x,'Hexahedron.stl'))}",
            "NLQuery": "SELECT ?answer WHERE { dice shape ?answer . ?answer 3D model ?x FILTER(contains(?x,'Hexahedron.stl'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "hexahedronstl",
            "choppedEntity": "hexahedron.stl"
        }
    },
    {
        "chopped": {
            "question": "which is the form of die having stl file of ",
            "query": "SELECT ?ans1 WHERE { wd:Q45089 wdt:P1419 ?ans1 . ?ans1 wdt:P4896 ?x FILTER(contains(?x,'Hexahedron.stl'))}",
            "NLQuery": "SELECT ?ans1 WHERE { dice shape ?ans1 . ?ans1 3D model ?x FILTER(contains(?x,'Hexahedron.stl'))}"
        },
        "original": {
            "question": "Which is the form of die having STL file of Hexahedron.stl",
            "query": "SELECT ?answer WHERE { wd:Q45089 wdt:P1419 ?answer . ?answer wdt:P4896 ?x FILTER(contains(?x,'Hexahedron.stl'))}",
            "NLQuery": "SELECT ?answer WHERE { dice shape ?answer . ?answer 3D model ?x FILTER(contains(?x,'Hexahedron.stl'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "hexahedronstl",
            "choppedEntity": "hexahedron.stl"
        }
    },
    {
        "chopped": {
            "question": "tell me mosque whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q32815 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of mosque . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me mosque whose name has the word sultan in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q32815 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'sultan')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of mosque . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'sultan')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "sultan in it",
            "choppedEntity": "sultan"
        }
    },
    {
        "chopped": {
            "question": "let me know mosque whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q32815 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of mosque . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know mosque whose title has the word sultan in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q32815 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'sultan')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of mosque . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'sultan')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "sultan in it",
            "choppedEntity": "sultan"
        }
    },
    {
        "chopped": {
            "question": "tell me  political ideology whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q14934048 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of none . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me  political ideology whose name has the word workerism in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q14934048 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'workerism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of none . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'workerism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "workerism in it",
            "choppedEntity": "workerism"
        }
    },
    {
        "chopped": {
            "question": "disclose me political ideology whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q14934048 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of none . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Disclose me political ideology whose name has the word workerism in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q14934048 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'workerism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of none . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'workerism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "workerism in it",
            "choppedEntity": "workerism"
        }
    },
    {
        "chopped": {
            "question": "what was the population of the gaza strip on january 1, ",
            "query": "SELECT ?ans1 WHERE { wd:Q39760 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Gaza Strip population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of the Gaza Strip on January 1, 2014",
            "query": "SELECT ?obj WHERE { wd:Q39760 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2014')) }",
            "NLQuery": "SELECT ?obj WHERE { Gaza Strip population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2014')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2014",
            "choppedEntity": "2014"
        }
    },
    {
        "chopped": {
            "question": "how large was the population of the gaza strip in ",
            "query": "SELECT ?ans1 WHERE { wd:Q39760 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Gaza Strip population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "How large was the population of the Gaza Strip in 2014",
            "query": "SELECT ?obj WHERE { wd:Q39760 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2014')) }",
            "NLQuery": "SELECT ?obj WHERE { Gaza Strip population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2014')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2014",
            "choppedEntity": "2014"
        }
    },
    {
        "chopped": {
            "question": "what is the partner city of khujand, that has a human population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q373808 wdt:P190 ?ans1 . ?ans1 wdt:P1082 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Khujand twinned administrative body ?ans1 . ?ans1 population ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the partner city of Khujand, that has a human population of 223934.0",
            "query": "SELECT ?answer WHERE { wd:Q373808 wdt:P190 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'223934.0'))}",
            "NLQuery": "SELECT ?answer WHERE { Khujand twinned administrative body ?answer . ?answer population ?x FILTER(contains(?x,'223934.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "2239340",
            "choppedEntity": "223934.0"
        }
    },
    {
        "chopped": {
            "question": "who was elected rector of leipzig university on december 2, ",
            "query": "SELECT ?ans1 WHERE { wd:Q154804 p:P1075 ?s . ?s ps:P1075 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Leipzig University rector ?s . ?s rector ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was elected rector of Leipzig University on December 2, 1409",
            "query": "SELECT ?obj WHERE { wd:Q154804 p:P1075 ?s . ?s ps:P1075 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1409')) }",
            "NLQuery": "SELECT ?obj WHERE { Leipzig University rector ?s . ?s rector ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1409')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1409",
            "choppedEntity": "1409"
        }
    },
    {
        "chopped": {
            "question": "who was chosen minister of leipzig university on december 2, ",
            "query": "SELECT ?ans1 WHERE { wd:Q154804 p:P1075 ?s . ?s ps:P1075 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Leipzig University rector ?s . ?s rector ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was chosen minister of Leipzig University on December 2, 1409",
            "query": "SELECT ?obj WHERE { wd:Q154804 p:P1075 ?s . ?s ps:P1075 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1409')) }",
            "NLQuery": "SELECT ?obj WHERE { Leipzig University rector ?s . ?s rector ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1409')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1409",
            "choppedEntity": "1409"
        }
    },
    {
        "chopped": {
            "question": "tell me the name of a mythological greek character that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q22988604 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of mythological Greek character . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the name of a mythological Greek character that starts with the letter t.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22988604 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of mythological Greek character . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "give me the greek  mythological character that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q22988604 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of mythological Greek character . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Give me the Greek  mythological character that starts with the letter T.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22988604 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of mythological Greek character . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "give me a state in australia that starts with an s and that celebrates christmas and other holiday",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q5852411 . ?ans1 wdt:P832 wd:Q19809 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of state of Australia . ?ans1 public holiday Christmas . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Give me a state in Australia that starts with an \"S\" and that celebrates Christmas and other holidays.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5852411 . ?sbj wdt:P832 wd:Q19809 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of state of Australia . ?sbj public holiday Christmas . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "grant me a state in australia that begins with an s which celebrates christmas and other holiday",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q5852411 . ?ans1 wdt:P832 wd:Q19809 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of state of Australia . ?ans1 public holiday Christmas . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Grant me a state in Australia that begins with an \"S\" which celebrates Christmas and other holidays.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5852411 . ?sbj wdt:P832 wd:Q19809 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of state of Australia . ?sbj public holiday Christmas . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "where is the headquarters of  university of washington located with the  street address  ",
            "query": "SELECT ?ans1 WHERE { wd:Q219563 p:P159 ?s . ?s ps:P159 ?ans1 . ?s pq:P969 ?x FILTER(contains(?x,'Room 139')) }",
            "NLQuery": "SELECT ?ans1 WHERE { University of Washington headquarters location ?s . ?s headquarters location ?ans1 . ?s none ?x FILTER(contains(?x,'Room 139')) }"
        },
        "original": {
            "question": "Where is the headquarters of  University of Washington located with the  street address  Room 139",
            "query": "SELECT ?obj WHERE { wd:Q219563 p:P159 ?s . ?s ps:P159 ?obj . ?s pq:P969 ?x FILTER(contains(?x,'Room 139')) }",
            "NLQuery": "SELECT ?obj WHERE { University of Washington headquarters location ?s . ?s headquarters location ?obj . ?s none ?x FILTER(contains(?x,'Room 139')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "room 139",
            "choppedEntity": "room 139"
        }
    },
    {
        "chopped": {
            "question": "what are the comics character that contributor(s) to the creative work art babbitt and which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1114461 . ?ans1 wdt:P767 wd:Q2420722 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of comics character . ?ans1 contributor to the creative work or subject Art Babbitt . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the comics character that contributor(s) to the creative work Art Babbitt and which contains the word goofy in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1114461 . ?sbj wdt:P767 wd:Q2420722 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'goofy')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of comics character . ?sbj contributor to the creative work or subject Art Babbitt . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'goofy')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "goofy in their name",
            "choppedEntity": "goofy"
        }
    },
    {
        "chopped": {
            "question": "who did napoleon marry in ",
            "query": "SELECT ?ans1 WHERE { wd:Q517 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Napoleon spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who did Napoleon marry in 1810",
            "query": "SELECT ?obj WHERE { wd:Q517 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1810')) }",
            "NLQuery": "SELECT ?obj WHERE { Napoleon spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1810')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1810",
            "choppedEntity": "1810"
        }
    },
    {
        "chopped": {
            "question": "give the name of the person whom napoleon wed in ",
            "query": "SELECT ?ans1 WHERE { wd:Q517 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Napoleon spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Give the name of the person whom Napoleon wed in 1810.",
            "query": "SELECT ?obj WHERE { wd:Q517 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1810')) }",
            "NLQuery": "SELECT ?obj WHERE { Napoleon spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1810')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1810",
            "choppedEntity": "1810"
        }
    },
    {
        "chopped": {
            "question": "name a road bridge designed by joseph strauss that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q537127 . ?ans1 wdt:P287 wd:Q261174 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of road bridge . ?ans1 designed by Joseph Strauss . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a road bridge designed by Joseph Strauss that starts with letter B",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q537127 . ?sbj wdt:P287 wd:Q261174 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of road bridge . ?sbj designed by Joseph Strauss . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "b",
            "choppedEntity": "b"
        }
    },
    {
        "chopped": {
            "question": "name a road bridge designed by joseph strauss that begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q537127 . ?ans1 wdt:P287 wd:Q261174 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of road bridge . ?ans1 designed by Joseph Strauss . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a road bridge designed by Joseph Strauss that begins with letter B",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q537127 . ?sbj wdt:P287 wd:Q261174 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of road bridge . ?sbj designed by Joseph Strauss . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "b",
            "choppedEntity": "b"
        }
    },
    {
        "chopped": {
            "question": "what started in astana on the 26th of august ",
            "query": "SELECT ?ans1 WHERE { wd:Q1520 p:P131 ?s . ?s ps:P131 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Nur-Sultan located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What started in Astana on the 26th of August 1920",
            "query": "SELECT ?obj WHERE { wd:Q1520 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1920')) }",
            "NLQuery": "SELECT ?obj WHERE { Nur-Sultan located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1920')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1920",
            "choppedEntity": "1920"
        }
    },
    {
        "chopped": {
            "question": "at what point in time did northern england have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1788657 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Northern England population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "At what point in time did Northern England have a population of 14933000",
            "query": "SELECT ?value WHERE { wd:Q1788657 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'14933000')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Northern England population ?s . ?s population ?x FILTER(contains(?x,'14933000')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "14933000",
            "choppedEntity": "14933000"
        }
    },
    {
        "chopped": {
            "question": "when did northern england have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1788657 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Northern England population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Northern England have a population of 14933000",
            "query": "SELECT ?value WHERE { wd:Q1788657 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'14933000')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Northern England population ?s . ?s population ?x FILTER(contains(?x,'14933000')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "14933000",
            "choppedEntity": "14933000"
        }
    },
    {
        "chopped": {
            "question": "what is based on operation market garden that has an inflation rate of consumer price index of ",
            "query": "SELECT ?ans1 WHERE { wd:Q189930 wdt:P276 ?ans1 . ?ans1 wdt:P1279 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Operation Market Garden location ?ans1 . ?ans1 inflation rate ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is based on Operation Market Garden that has an inflation rate of consumer price index of 7.3",
            "query": "SELECT ?answer WHERE { wd:Q189930 wdt:P276 ?answer . ?answer wdt:P1279 ?x FILTER(contains(?x,'7.3'))}",
            "NLQuery": "SELECT ?answer WHERE { Operation Market Garden location ?answer . ?answer inflation rate ?x FILTER(contains(?x,'7.3'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "73",
            "choppedEntity": "7.3"
        }
    },
    {
        "chopped": {
            "question": "what is based totally on operation market garden that has an inflation charge of patron fee index of ",
            "query": "SELECT ?ans1 WHERE { wd:Q189930 wdt:P276 ?ans1 . ?ans1 wdt:P1279 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Operation Market Garden location ?ans1 . ?ans1 inflation rate ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is based totally on Operation Market Garden that has an inflation charge of patron fee index of 7.3",
            "query": "SELECT ?answer WHERE { wd:Q189930 wdt:P276 ?answer . ?answer wdt:P1279 ?x FILTER(contains(?x,'7.3'))}",
            "NLQuery": "SELECT ?answer WHERE { Operation Market Garden location ?answer . ?answer inflation rate ?x FILTER(contains(?x,'7.3'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "73",
            "choppedEntity": "7.3"
        }
    },
    {
        "chopped": {
            "question": "who was aaron spellings wife in ",
            "query": "SELECT ?ans1 WHERE { wd:Q295080 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Aaron Spelling spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was Aaron Spelling's wife in 1953",
            "query": "SELECT ?obj WHERE { wd:Q295080 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1953')) }",
            "NLQuery": "SELECT ?obj WHERE { Aaron Spelling spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1953')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1953",
            "choppedEntity": "1953"
        }
    },
    {
        "chopped": {
            "question": "name an animated film involving joe grant that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q202866 . ?ans1 wdt:P3092 wd:Q205002 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of animated film . ?ans1 film crew member Joe Grant . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name an animated film involving Joe Grant that contains the word \"King\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q202866 . ?sbj wdt:P3092 wd:Q205002 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'king')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of animated film . ?sbj film crew member Joe Grant . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'king')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "king in its name",
            "choppedEntity": "king"
        }
    },
    {
        "chopped": {
            "question": "what was arthur miller nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q80596 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Arthur Miller nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Arthur Miller nominated for in 1997",
            "query": "SELECT ?obj WHERE { wd:Q80596 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1997')) }",
            "NLQuery": "SELECT ?obj WHERE { Arthur Miller nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1997')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1997",
            "choppedEntity": "1997"
        }
    },
    {
        "chopped": {
            "question": "arthur miller was short-listed for an award for which play in ",
            "query": "SELECT ?ans1 WHERE { wd:Q80596 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Arthur Miller nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Arthur Miller was short-listed for an award for which play in 1997",
            "query": "SELECT ?obj WHERE { wd:Q80596 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1997')) }",
            "NLQuery": "SELECT ?obj WHERE { Arthur Miller nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1997')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1997",
            "choppedEntity": "1997"
        }
    },
    {
        "chopped": {
            "question": "what nominations was the shawshank redemption up for on 2/14/",
            "query": "SELECT ?ans1 WHERE { wd:Q172241 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { The Shawshank Redemption nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What nominations was the Shawshank Redemption up for on 2/14/1995",
            "query": "SELECT ?obj WHERE { wd:Q172241 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1995')) }",
            "NLQuery": "SELECT ?obj WHERE { The Shawshank Redemption nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1995')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1995",
            "choppedEntity": "1995"
        }
    },
    {
        "chopped": {
            "question": "who started heading the government of phoenix in ",
            "query": "SELECT ?ans1 WHERE { wd:Q16556 p:P6 ?s . ?s ps:P6 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Phoenix head of government ?s . ?s head of government ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who started heading the government of Phoenix in 2004",
            "query": "SELECT ?obj WHERE { wd:Q16556 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2004')) }",
            "NLQuery": "SELECT ?obj WHERE { Phoenix head of government ?s . ?s head of government ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2004')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2004",
            "choppedEntity": "2004"
        }
    },
    {
        "chopped": {
            "question": "who became head of the government of phoenix in ",
            "query": "SELECT ?ans1 WHERE { wd:Q16556 p:P6 ?s . ?s ps:P6 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Phoenix head of government ?s . ?s head of government ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who became head of the government of Phoenix in 2004",
            "query": "SELECT ?obj WHERE { wd:Q16556 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2004')) }",
            "NLQuery": "SELECT ?obj WHERE { Phoenix head of government ?s . ?s head of government ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2004')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2004",
            "choppedEntity": "2004"
        }
    },
    {
        "chopped": {
            "question": "the population of new valley governorate was what as of march 28, ",
            "query": "SELECT ?ans1 WHERE { wd:Q30650 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { New Valley Governorate population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "The population of New Valley Governorate was what as of March 28, 2017",
            "query": "SELECT ?obj WHERE { wd:Q30650 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2017')) }",
            "NLQuery": "SELECT ?obj WHERE { New Valley Governorate population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2017')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2017",
            "choppedEntity": "2017"
        }
    },
    {
        "chopped": {
            "question": "what was the population of laos in ",
            "query": "SELECT ?ans1 WHERE { wd:Q819 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Laos population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of Laos in 1960",
            "query": "SELECT ?obj WHERE { wd:Q819 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1960')) }",
            "NLQuery": "SELECT ?obj WHERE { Laos population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1960')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1960",
            "choppedEntity": "1960"
        }
    },
    {
        "chopped": {
            "question": "when did mannheim population rise to ",
            "query": "SELECT ?ans1 WHERE { wd:Q2119 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Mannheim population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "when did Mannheim population rise to 305741.0",
            "query": "SELECT ?value WHERE { wd:Q2119 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'305741.0')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Mannheim population ?s . ?s population ?x FILTER(contains(?x,'305741.0')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "3057410",
            "choppedEntity": "305741.0"
        }
    },
    {
        "chopped": {
            "question": "at what point did the population of mannheim reach ",
            "query": "SELECT ?ans1 WHERE { wd:Q2119 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Mannheim population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "At what point did the population of Mannheim reach 305741.0",
            "query": "SELECT ?value WHERE { wd:Q2119 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'305741.0')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Mannheim population ?s . ?s population ?x FILTER(contains(?x,'305741.0')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "3057410",
            "choppedEntity": "305741.0"
        }
    },
    {
        "chopped": {
            "question": "what is the temperature for amphetamine whose density is ",
            "query": "SELECT ?ans1 WHERE { wd:Q179452 p:P2054 ?s . ?s ps:P2054 ?x FILTER(contains(?x,?unknown)) . ?s pq:P2076 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Amphetamine density ?s . ?s density ?x FILTER(contains(?x,?unknown)) . ?s temperature ?ans1}"
        },
        "original": {
            "question": "What is the temperature for amphetamine whose density is 936000.0",
            "query": "SELECT ?value WHERE { wd:Q179452 p:P2054 ?s . ?s ps:P2054 ?x FILTER(contains(?x,'936000.0')) . ?s pq:P2076 ?value}",
            "NLQuery": "SELECT ?value WHERE { Amphetamine density ?s . ?s density ?x FILTER(contains(?x,'936000.0')) . ?s temperature ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "9360000",
            "choppedEntity": "936000.0"
        }
    },
    {
        "chopped": {
            "question": "who did jeff goldblum marry in november ",
            "query": "SELECT ?ans1 WHERE { wd:Q106706 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Jeff Goldblum spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who did Jeff Goldblum marry in November 1987",
            "query": "SELECT ?obj WHERE { wd:Q106706 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1987')) }",
            "NLQuery": "SELECT ?obj WHERE { Jeff Goldblum spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1987')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1987",
            "choppedEntity": "1987"
        }
    },
    {
        "chopped": {
            "question": "whats made from saffron, thats common name is ",
            "query": "SELECT ?ans1 WHERE { wd:Q25434 wdt:P1582 ?ans1 . ?ans1 wdt:P1843 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { saffron natural product of taxon ?ans1 . ?ans1 taxon common name ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "\"What's made from Saffron, that's common name is Szafran Uprawny\"",
            "query": "SELECT ?answer WHERE { wd:Q25434 wdt:P1582 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'szafran uprawny'))}",
            "NLQuery": "SELECT ?answer WHERE { saffron natural product of taxon ?answer . ?answer taxon common name ?x FILTER(contains(?x,'szafran uprawny'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "szafran uprawny",
            "choppedEntity": "szafran uprawny"
        }
    },
    {
        "chopped": {
            "question": "whats made from saffron, thats common title is ",
            "query": "SELECT ?ans1 WHERE { wd:Q25434 wdt:P1582 ?ans1 . ?ans1 wdt:P1843 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { saffron natural product of taxon ?ans1 . ?ans1 taxon common name ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "\"What's made from Saffron, that's common title is Szafran Uprawny\"",
            "query": "SELECT ?answer WHERE { wd:Q25434 wdt:P1582 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'szafran uprawny'))}",
            "NLQuery": "SELECT ?answer WHERE { saffron natural product of taxon ?answer . ?answer taxon common name ?x FILTER(contains(?x,'szafran uprawny'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "szafran uprawny",
            "choppedEntity": "szafran uprawny"
        }
    },
    {
        "chopped": {
            "question": "tell me the modern language that has as grammatical person the second-person singular and starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1288568 . ?ans1 wdt:P5110 wd:Q51929369 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of modern language . ?ans1 has grammatical person second-person singular . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the modern language that has as grammatical person the second-person singular and starts with the letter r",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1288568 . ?sbj wdt:P5110 wd:Q51929369 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of modern language . ?sbj has grammatical person second-person singular . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "r",
            "choppedEntity": "r"
        }
    },
    {
        "chopped": {
            "question": "tell me the modern-day language that has as grammatical person the second-person singular and starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1288568 . ?ans1 wdt:P5110 wd:Q51929369 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of modern language . ?ans1 has grammatical person second-person singular . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the modern-day language that has as grammatical person the second-person singular and starts with the letter r",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1288568 . ?sbj wdt:P5110 wd:Q51929369 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of modern language . ?sbj has grammatical person second-person singular . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "r",
            "choppedEntity": "r"
        }
    },
    {
        "chopped": {
            "question": "what position of ayub khan ended on october 26, ",
            "query": "SELECT ?ans1 WHERE { wd:Q190071 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Ayub Khan position held ?s . ?s position held ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What position of Ayub Khan ended on October 26, 1958",
            "query": "SELECT ?obj WHERE { wd:Q190071 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1958')) }",
            "NLQuery": "SELECT ?obj WHERE { Ayub Khan position held ?s . ?s position held ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1958')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1958",
            "choppedEntity": "1958"
        }
    },
    {
        "chopped": {
            "question": "what are the minor basilica hich start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q120560 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of minor basilica . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the minor basilica hich start with the letter s",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q120560 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of minor basilica . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what is the small basilica hich beginning with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q120560 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of minor basilica . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is the small basilica hich beginning with the letter s",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q120560 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of minor basilica . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what is the subdivided of veszprem county,that has corrdinate of ",
            "query": "SELECT ?ans1 WHERE { wd:Q188890 wdt:P150 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Veszpr\u00e9m County contains administrative territorial entity ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the subdivided of Veszprem County,that has corrdinate of 17,4833",
            "query": "SELECT ?answer WHERE { wd:Q188890 wdt:P150 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'17.4833'))}",
            "NLQuery": "SELECT ?answer WHERE { Veszpr\u00e9m County contains administrative territorial entity ?answer . ?answer coordinate location ?x FILTER(contains(?x,'17.4833'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "17,4833",
            "choppedEntity": "17.4833"
        }
    },
    {
        "chopped": {
            "question": "when did portsmouth have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q72259 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Portsmouth population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Portsmouth have a population of 248440",
            "query": "SELECT ?value WHERE { wd:Q72259 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'248440')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Portsmouth population ?s . ?s population ?x FILTER(contains(?x,'248440')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "248440",
            "choppedEntity": "248440"
        }
    },
    {
        "chopped": {
            "question": "what is the safety classification and labelling of titanium dioxide that for nfpa health is 1",
            "query": "SELECT ?ans1 WHERE { wd:Q193521 p:P4952 ?s . ?s ps:P4952 ?ans1 . ?s pq:P993 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { titanium dioxide safety classification and labelling ?s . ?s safety classification and labelling ?ans1 . ?s NFPA Health ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "What is the safety classification and labelling of titanium dioxide that for NFPA Health is 1 ",
            "query": "SELECT ?obj WHERE { wd:Q193521 p:P4952 ?s . ?s ps:P4952 ?obj . ?s pq:P993 ?x FILTER(contains(?x,'1')) }",
            "NLQuery": "SELECT ?obj WHERE { titanium dioxide safety classification and labelling ?s . ?s safety classification and labelling ?obj . ?s NFPA Health ?x FILTER(contains(?x,'1')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "1",
            "choppedEntity": "1"
        }
    },
    {
        "chopped": {
            "question": "what is the christian denomination that the pope of coptic orthodox church of alexandrias office held by the head of the organisation with the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q879146 . ?ans1 wdt:P2388 wd:Q58451 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Christian denomination . ?ans1 office held by head of the organization Pope of the Coptic Orthodox Church of Alexandria . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is the Christian denomination that the Pope of Coptic Orthodox Church of Alexandria's office held by the head of the organisation with the word Alexandria in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q879146 . ?sbj wdt:P2388 wd:Q58451 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'alexandria')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Christian denomination . ?sbj office held by head of the organization Pope of the Coptic Orthodox Church of Alexandria . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'alexandria')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "alexandria in it",
            "choppedEntity": "alexandria"
        }
    },
    {
        "chopped": {
            "question": "what is the christian denomination that the pope of coptic orthodox church of alexandrias office held by using the head of the corporation with the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q879146 . ?ans1 wdt:P2388 wd:Q58451 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Christian denomination . ?ans1 office held by head of the organization Pope of the Coptic Orthodox Church of Alexandria . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is the Christian denomination that the Pope of Coptic Orthodox Church of Alexandria's office held by using the head of the corporation with the word Alexandria in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q879146 . ?sbj wdt:P2388 wd:Q58451 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'alexandria')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Christian denomination . ?sbj office held by head of the organization Pope of the Coptic Orthodox Church of Alexandria . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'alexandria')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "alexandria in it",
            "choppedEntity": "alexandria"
        }
    },
    {
        "chopped": {
            "question": "which municipiu of romania starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q640364 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of municipiu of Romania . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which municipiu of romania starts with the letter z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q640364 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of municipiu of Romania . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "which romanian municipality begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q640364 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of municipiu of Romania . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which Romanian municipality begins with letter z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q640364 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of municipiu of Romania . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "what part of amu darya has location coordinates of ",
            "query": "SELECT ?ans1 WHERE { wd:Q8493 p:P625 ?s . ?s ps:P625 ?x FILTER(contains(?x,?unknown)) . ?s pq:P518 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Amu Darya coordinate location ?s . ?s coordinate location ?x FILTER(contains(?x,?unknown)) . ?s applies to part ?ans1}"
        },
        "original": {
            "question": "What part of Amu Darya has location coordinates of 37.106.68.3063",
            "query": "SELECT ?value WHERE { wd:Q8493 p:P625 ?s . ?s ps:P625 ?x FILTER(contains(?x,'37.106 68.3063')) . ?s pq:P518 ?value}",
            "NLQuery": "SELECT ?value WHERE { Amu Darya coordinate location ?s . ?s coordinate location ?x FILTER(contains(?x,'37.106 68.3063')) . ?s applies to part ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "37106683063",
            "choppedEntity": "37.106 68.3063"
        }
    },
    {
        "chopped": {
            "question": "what was the population of arica y parinacota region in ",
            "query": "SELECT ?ans1 WHERE { wd:Q2109 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Arica y Parinacota Region population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of Arica y Parinacota Region in 2002",
            "query": "SELECT ?obj WHERE { wd:Q2109 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2002')) }",
            "NLQuery": "SELECT ?obj WHERE { Arica y Parinacota Region population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2002')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2002",
            "choppedEntity": "2002"
        }
    },
    {
        "chopped": {
            "question": "which recurring sport event starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q18608583 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of recurring sporting event . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which recurring sport event starts with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18608583 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of recurring sporting event . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what recurring sporting event begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q18608583 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of recurring sporting event . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What recurring sporting event begin with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18608583 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of recurring sporting event . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what are thevideo game genre which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q659563 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of video game genre . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are thevideo game genre which start with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q659563 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of video game genre . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what are the genres of video games starting with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q659563 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of video game genre . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the genres of video games starting with letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q659563 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of video game genre . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "tell me about negative emotion that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q60539481 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of negative emotion . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "tell me about negative emotion that contains the word worry in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q60539481 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'worry')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of negative emotion . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'worry')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "worry in their name",
            "choppedEntity": "worry"
        }
    },
    {
        "chopped": {
            "question": "what are the christian denomination which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q879146 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Christian denomination . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the Christian denomination which start with the letter u",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q879146 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Christian denomination . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "what are the numerical concept which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q879146 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Christian denomination . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the numerical concept which begin with the letter u",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q879146 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Christian denomination . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "what award did jorge luis borges receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q909 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Jorge Luis Borges award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Jorge Luis Borges receive in 1971",
            "query": "SELECT ?obj WHERE { wd:Q909 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1971')) }",
            "NLQuery": "SELECT ?obj WHERE { Jorge Luis Borges award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1971')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1971",
            "choppedEntity": "1971"
        }
    },
    {
        "chopped": {
            "question": "what was jorge luis borges awarded in ",
            "query": "SELECT ?ans1 WHERE { wd:Q909 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Jorge Luis Borges award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Jorge Luis Borges awarded in 1971",
            "query": "SELECT ?obj WHERE { wd:Q909 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1971')) }",
            "NLQuery": "SELECT ?obj WHERE { Jorge Luis Borges award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1971')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1971",
            "choppedEntity": "1971"
        }
    },
    {
        "chopped": {
            "question": "tell me the city that has coat of arms as symbols of milan and starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q515 . ?ans1 wdt:P237 wd:Q2363861 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of city . ?ans1 coat of arms Symbols of Milan . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the city that has coat of arms as Symbols of Milan and starts with the letter m",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q515 . ?sbj wdt:P237 wd:Q2363861 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of city . ?sbj coat of arms Symbols of Milan . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "m",
            "choppedEntity": "m"
        }
    },
    {
        "chopped": {
            "question": "tell me the metropolis that has coat of fingers as symbols of milan and starts offevolved with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q515 . ?ans1 wdt:P237 wd:Q2363861 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of city . ?ans1 coat of arms Symbols of Milan . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the metropolis that has coat of fingers as Symbols of Milan and starts offevolved with the letter m",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q515 . ?sbj wdt:P237 wd:Q2363861 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of city . ?sbj coat of arms Symbols of Milan . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "m",
            "choppedEntity": "m"
        }
    },
    {
        "chopped": {
            "question": "what was the population of kansas in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1558 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Kansas population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of Kansas in 1940",
            "query": "SELECT ?obj WHERE { wd:Q1558 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1940')) }",
            "NLQuery": "SELECT ?obj WHERE { Kansas population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1940')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1940",
            "choppedEntity": "1940"
        }
    },
    {
        "chopped": {
            "question": "what was the populace of kansas in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1558 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Kansas population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the populace of Kansas in 1940",
            "query": "SELECT ?obj WHERE { wd:Q1558 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1940')) }",
            "NLQuery": "SELECT ?obj WHERE { Kansas population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1940')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1940",
            "choppedEntity": "1940"
        }
    },
    {
        "chopped": {
            "question": "which tagma starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1402830 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of tagma . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which tagma starts with letter a",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1402830 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of tagma . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "which tagma begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1402830 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of tagma . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which tagma begins with letter a",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1402830 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of tagma . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "what was nutan nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q146444 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Nutan Bahl nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Nutan nominated for in 1974",
            "query": "SELECT ?obj WHERE { wd:Q146444 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1974')) }",
            "NLQuery": "SELECT ?obj WHERE { Nutan Bahl nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1974')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1974",
            "choppedEntity": "1974"
        }
    },
    {
        "chopped": {
            "question": "give me the position nutan was put up for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q146444 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Nutan Bahl nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Give me the position Nutan was put up for in 1974",
            "query": "SELECT ?obj WHERE { wd:Q146444 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1974')) }",
            "NLQuery": "SELECT ?obj WHERE { Nutan Bahl nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1974')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1974",
            "choppedEntity": "1974"
        }
    },
    {
        "chopped": {
            "question": "what; in the administrative unit of poipet, has a longitude of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1015146 wdt:P131 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Poipet located in the administrative territorial entity ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What; in the administrative unit of Poipet, has a longitude of 102.567",
            "query": "SELECT ?answer WHERE { wd:Q1015146 wdt:P131 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'102.567'))}",
            "NLQuery": "SELECT ?answer WHERE { Poipet located in the administrative territorial entity ?answer . ?answer coordinate location ?x FILTER(contains(?x,'102.567'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "102567",
            "choppedEntity": "102.567"
        }
    },
    {
        "chopped": {
            "question": "what; within the administrative unit of poipet, features a longitude of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1015146 wdt:P131 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Poipet located in the administrative territorial entity ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What; within the administrative unit of Poipet, features a longitude of 102.567",
            "query": "SELECT ?answer WHERE { wd:Q1015146 wdt:P131 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'102.567'))}",
            "NLQuery": "SELECT ?answer WHERE { Poipet located in the administrative territorial entity ?answer . ?answer coordinate location ?x FILTER(contains(?x,'102.567'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "102567",
            "choppedEntity": "102.567"
        }
    },
    {
        "chopped": {
            "question": "when was new mexico has population ",
            "query": "SELECT ?ans1 WHERE { wd:Q1522 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { New Mexico population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was New Mexico has population 1.30289e+06",
            "query": "SELECT ?value WHERE { wd:Q1522 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'1.30289e+06')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { New Mexico population ?s . ?s population ?x FILTER(contains(?x,'1.30289e+06')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "130289e+06",
            "choppedEntity": "1.30289e+06"
        }
    },
    {
        "chopped": {
            "question": "on what date the opulation of new mexico was ",
            "query": "SELECT ?ans1 WHERE { wd:Q1522 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { New Mexico population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "On what date the opulation of New Mexico was 1.30289e+06",
            "query": "SELECT ?value WHERE { wd:Q1522 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'1.30289e+06')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { New Mexico population ?s . ?s population ?x FILTER(contains(?x,'1.30289e+06')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "130289e+06",
            "choppedEntity": "1.30289e+06"
        }
    },
    {
        "chopped": {
            "question": "which award was ole einar bjordndalen nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q189408 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Ole Einar Bj\u00f8rndalen nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which award was Ole Einar Bjordndalen nominated for in 2003",
            "query": "SELECT ?obj WHERE { wd:Q189408 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2003')) }",
            "NLQuery": "SELECT ?obj WHERE { Ole Einar Bj\u00f8rndalen nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2003')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2003",
            "choppedEntity": "2003"
        }
    },
    {
        "chopped": {
            "question": "/for what type of work john galsworthy has nominated in ",
            "query": "SELECT ?ans1 WHERE { wd:Q82248 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { John Galsworthy nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "/For what type of work John Galsworthy has nominated in 1932",
            "query": "SELECT ?obj WHERE { wd:Q82248 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1932')) }",
            "NLQuery": "SELECT ?obj WHERE { John Galsworthy nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1932')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1932",
            "choppedEntity": "1932"
        }
    },
    {
        "chopped": {
            "question": "what award did enrico fermi receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q8753 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Enrico Fermi award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Enrico Fermi receive in 1949",
            "query": "SELECT ?obj WHERE { wd:Q8753 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1949')) }",
            "NLQuery": "SELECT ?obj WHERE { Enrico Fermi award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1949')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1949",
            "choppedEntity": "1949"
        }
    },
    {
        "chopped": {
            "question": "tell me gold rush whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q273182 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of gold rush . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me gold rush whose name has the word gold in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q273182 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'gold')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of gold rush . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'gold')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "gold in it",
            "choppedEntity": "gold"
        }
    },
    {
        "chopped": {
            "question": "let me know gold surge whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q273182 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of gold rush . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know gold surge whose title has the word gold in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q273182 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'gold')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of gold rush . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'gold')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "gold in it",
            "choppedEntity": "gold"
        }
    },
    {
        "chopped": {
            "question": "which is the literary character that is killed by jonathan harker and contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3658341 . ?ans1 wdt:P157 wd:Q660377 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of literary character . ?ans1 killed by Jonathan Harker . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the literary character that is killed by Jonathan Harker and contains the word count in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3658341 . ?sbj wdt:P157 wd:Q660377 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'count')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of literary character . ?sbj killed by Jonathan Harker . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'count')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "count in its name",
            "choppedEntity": "count"
        }
    },
    {
        "chopped": {
            "question": "which is the literary personality that is killed by means of jonathan harker and includes the phrase ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3658341 . ?ans1 wdt:P157 wd:Q660377 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of literary character . ?ans1 killed by Jonathan Harker . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the literary personality that is killed by means of Jonathan Harker and includes the phrase count in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3658341 . ?sbj wdt:P157 wd:Q660377 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'count')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of literary character . ?sbj killed by Jonathan Harker . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'count')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "count in its name",
            "choppedEntity": "count"
        }
    },
    {
        "chopped": {
            "question": "what was rent nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q553890 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Rent nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Rent nominated for in 1996",
            "query": "SELECT ?obj WHERE { wd:Q553890 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1996')) }",
            "NLQuery": "SELECT ?obj WHERE { Rent nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1996')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1996",
            "choppedEntity": "1996"
        }
    },
    {
        "chopped": {
            "question": "rent was nominated for what in ",
            "query": "SELECT ?ans1 WHERE { wd:Q553890 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Rent nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Rent was nominated for what in 1996",
            "query": "SELECT ?obj WHERE { wd:Q553890 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1996')) }",
            "NLQuery": "SELECT ?obj WHERE { Rent nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1996')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1996",
            "choppedEntity": "1996"
        }
    },
    {
        "chopped": {
            "question": "which award did mstislav rostropovich receive in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q152043 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mstislav Rostropovich award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which award did Mstislav Rostropovich receive in the year 1981",
            "query": "SELECT ?obj WHERE { wd:Q152043 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1981')) }",
            "NLQuery": "SELECT ?obj WHERE { Mstislav Rostropovich award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1981')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1981",
            "choppedEntity": "1981"
        }
    },
    {
        "chopped": {
            "question": "what was the award won by mstislav rostropovich in the year \n",
            "query": "SELECT ?ans1 WHERE { wd:Q152043 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mstislav Rostropovich award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "what was the award won by Mstislav Rostropovich in the year \n1981",
            "query": "SELECT ?obj WHERE { wd:Q152043 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1981')) }",
            "NLQuery": "SELECT ?obj WHERE { Mstislav Rostropovich award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1981')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1981",
            "choppedEntity": "1981"
        }
    },
    {
        "chopped": {
            "question": "what was bertha von suttner nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q18456 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Bertha von Suttner nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Bertha Von Suttner nominated for in 1905",
            "query": "SELECT ?obj WHERE { wd:Q18456 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1905')) }",
            "NLQuery": "SELECT ?obj WHERE { Bertha von Suttner nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1905')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1905",
            "choppedEntity": "1905"
        }
    },
    {
        "chopped": {
            "question": "please tell me the award bertha von suttner was up for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q18456 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Bertha von Suttner nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Please tell me the award Bertha Von Suttner was up for in 1905",
            "query": "SELECT ?obj WHERE { wd:Q18456 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1905')) }",
            "NLQuery": "SELECT ?obj WHERE { Bertha von Suttner nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1905')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1905",
            "choppedEntity": "1905"
        }
    },
    {
        "chopped": {
            "question": "what award did nikolay cherkasov win on february 26, ",
            "query": "SELECT ?ans1 WHERE { wd:Q713014 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Nikolay Cherkasov award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Nikolay Cherkasov win on February 26, 1947",
            "query": "SELECT ?obj WHERE { wd:Q713014 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1947')) }",
            "NLQuery": "SELECT ?obj WHERE { Nikolay Cherkasov award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1947')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1947",
            "choppedEntity": "1947"
        }
    },
    {
        "chopped": {
            "question": "what position did charles g dawes hold starting april 16, ",
            "query": "SELECT ?ans1 WHERE { wd:Q184565 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Charles G. Dawes position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What position did Charles G. Dawes hold starting April 16, 1929",
            "query": "SELECT ?obj WHERE { wd:Q184565 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1929')) }",
            "NLQuery": "SELECT ?obj WHERE { Charles G. Dawes position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1929')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1929",
            "choppedEntity": "1929"
        }
    },
    {
        "chopped": {
            "question": "what spot did charles g dawes have authority over beginning april 16, ",
            "query": "SELECT ?ans1 WHERE { wd:Q184565 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Charles G. Dawes position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What spot did Charles G. Dawes have authority over beginning April 16, 1929",
            "query": "SELECT ?obj WHERE { wd:Q184565 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1929')) }",
            "NLQuery": "SELECT ?obj WHERE { Charles G. Dawes position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1929')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1929",
            "choppedEntity": "1929"
        }
    },
    {
        "chopped": {
            "question": "tell me science whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q336 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of science . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me science whose name has the word teuthology in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q336 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'teuthology')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of science . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'teuthology')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "teuthology in it",
            "choppedEntity": "teuthology"
        }
    },
    {
        "chopped": {
            "question": "let me know science whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q336 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of science . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know science whose title has the word teuthology in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q336 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'teuthology')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of science . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'teuthology')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "teuthology in it",
            "choppedEntity": "teuthology"
        }
    },
    {
        "chopped": {
            "question": "how many episodes are in supernatural season ",
            "query": "SELECT ?ans1 WHERE { wd:Q130585 p:P2437 ?s . ?s ps:P2437 ?x FILTER(contains(?x,?unknown)) . ?s pq:P1013 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Supernatural number of seasons ?s . ?s number of seasons ?x FILTER(contains(?x,?unknown)) . ?s criterion used ?ans1}"
        },
        "original": {
            "question": "How many episodes are in Supernatural season 12.0",
            "query": "SELECT ?value WHERE { wd:Q130585 p:P2437 ?s . ?s ps:P2437 ?x FILTER(contains(?x,'12.0')) . ?s pq:P1013 ?value}",
            "NLQuery": "SELECT ?value WHERE { Supernatural number of seasons ?s . ?s number of seasons ?x FILTER(contains(?x,'12.0')) . ?s criterion used ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "120",
            "choppedEntity": "12.0"
        }
    },
    {
        "chopped": {
            "question": "who was hayao miyazakis last employer in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q55400 p:P108 ?s . ?s ps:P108 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Hayao Miyazaki employer ?s . ?s employer ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was Hayao Miyazaki's last employer in the year 1984",
            "query": "SELECT ?obj WHERE { wd:Q55400 p:P108 ?s . ?s ps:P108 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1984')) }",
            "NLQuery": "SELECT ?obj WHERE { Hayao Miyazaki employer ?s . ?s employer ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1984')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1984",
            "choppedEntity": "1984"
        }
    },
    {
        "chopped": {
            "question": "who did hayao miyazaki work for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q55400 p:P108 ?s . ?s ps:P108 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Hayao Miyazaki employer ?s . ?s employer ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who did Hayao Miyazaki work for in 1984",
            "query": "SELECT ?obj WHERE { wd:Q55400 p:P108 ?s . ?s ps:P108 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1984')) }",
            "NLQuery": "SELECT ?obj WHERE { Hayao Miyazaki employer ?s . ?s employer ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1984')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1984",
            "choppedEntity": "1984"
        }
    },
    {
        "chopped": {
            "question": "what are the doll which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q168658 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of doll . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the doll which start with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q168658 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of doll . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what are the doll which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q168658 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of doll . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the doll which begin with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q168658 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of doll . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what country was abolished in kirovohrad oblast in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q180981 p:P17 ?s . ?s ps:P17 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Kirovohrad Oblast country ?s . ?s country ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What country was abolished in Kirovohrad oblast in the year 1991",
            "query": "SELECT ?obj WHERE { wd:Q180981 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1991')) }",
            "NLQuery": "SELECT ?obj WHERE { Kirovohrad Oblast country ?s . ?s country ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1991')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1991",
            "choppedEntity": "1991"
        }
    },
    {
        "chopped": {
            "question": "which country was abolished in kirovohrad oblast in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q180981 p:P17 ?s . ?s ps:P17 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Kirovohrad Oblast country ?s . ?s country ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "which country was abolished in Kirovohrad oblast in the year 1991",
            "query": "SELECT ?obj WHERE { wd:Q180981 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1991')) }",
            "NLQuery": "SELECT ?obj WHERE { Kirovohrad Oblast country ?s . ?s country ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1991')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1991",
            "choppedEntity": "1991"
        }
    },
    {
        "chopped": {
            "question": "let me know championship whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1079023 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of championship . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know championship whose title has the word ligue in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1079023 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ligue')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of championship . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ligue')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "ligue in it",
            "choppedEntity": "ligue"
        }
    },
    {
        "chopped": {
            "question": "tell me paradox whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q483372 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of paradox . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "TELL ME PARADOX WHOSE NAME HAS THE WORD UPSIDE IN IT.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q483372 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'upside')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of paradox . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'upside')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "upside in it",
            "choppedEntity": "upside"
        }
    },
    {
        "chopped": {
            "question": "let me know conundrum whose title has the word upside inlet me know conundrum whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q483372 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of paradox . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let Me know Conundrum WHOSE Title HAS THE WORD UPSIDE INLet Me know Conundrum WHOSE Title HAS THE WORD UPSIDE IN IT.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q483372 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'upside')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of paradox . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'upside')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "upside in it",
            "choppedEntity": "upside"
        }
    },
    {
        "chopped": {
            "question": "how does saskatchewan determine that their population is ",
            "query": "SELECT ?ans1 WHERE { wd:Q1989 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P459 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Saskatchewan population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s determination method ?ans1}"
        },
        "original": {
            "question": "How does Saskatchewan determine that their population is 1.13264+06",
            "query": "SELECT ?value WHERE { wd:Q1989 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'1.13264e+06')) . ?s pq:P459 ?value}",
            "NLQuery": "SELECT ?value WHERE { Saskatchewan population ?s . ?s population ?x FILTER(contains(?x,'1.13264e+06')) . ?s determination method ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "113264+06",
            "choppedEntity": "1.13264e+06"
        }
    },
    {
        "chopped": {
            "question": "what award did martha nussbaum receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q235470 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Martha Nussbaum award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Martha Nussbaum receive in 2012",
            "query": "SELECT ?obj WHERE { wd:Q235470 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2012')) }",
            "NLQuery": "SELECT ?obj WHERE { Martha Nussbaum award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2012')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2012",
            "choppedEntity": "2012"
        }
    },
    {
        "chopped": {
            "question": "name the award which was received by martha nussbaum in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q235470 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Martha Nussbaum award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Name the award which was received by Martha Nussbaum in the year 2012",
            "query": "SELECT ?obj WHERE { wd:Q235470 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2012')) }",
            "NLQuery": "SELECT ?obj WHERE { Martha Nussbaum award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2012')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2012",
            "choppedEntity": "2012"
        }
    },
    {
        "chopped": {
            "question": "what is a mythology that begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q9134 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of mythology . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is a mythology that begins with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q9134 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of mythology . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what is a myth that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q9134 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of mythology . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is a myth that starts with letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q9134 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of mythology . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "when did newark have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q25395 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Newark population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Newark have a population of 246,070",
            "query": "SELECT ?value WHERE { wd:Q25395 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'246070.0')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Newark population ?s . ?s population ?x FILTER(contains(?x,'246070.0')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "246,070",
            "choppedEntity": "246070.0"
        }
    },
    {
        "chopped": {
            "question": "tell me medical test whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2671652 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of medical test . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me medical test whose name has the word tomography in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2671652 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tomography')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of medical test . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tomography')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "tomography in it",
            "choppedEntity": "tomography"
        }
    },
    {
        "chopped": {
            "question": "which medical test has word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2671652 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of medical test . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which medical test has word tomography in it",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2671652 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tomography')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of medical test . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tomography')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "tomography in it",
            "choppedEntity": "tomography"
        }
    },
    {
        "chopped": {
            "question": "what award did dietrich fischer-dieskau receive on january 1, ",
            "query": "SELECT ?ans1 WHERE { wd:Q77060 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Dietrich Fischer-Dieskau award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Dietrich Fischer-Dieskau receive on January 1, 1988",
            "query": "SELECT ?obj WHERE { wd:Q77060 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1988')) }",
            "NLQuery": "SELECT ?obj WHERE { Dietrich Fischer-Dieskau award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1988')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1988",
            "choppedEntity": "1988"
        }
    },
    {
        "chopped": {
            "question": "what grant did dietrich fischer-dieskau get on january 1, ",
            "query": "SELECT ?ans1 WHERE { wd:Q77060 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Dietrich Fischer-Dieskau award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What grant did Dietrich Fischer-Dieskau get on January 1, 1988",
            "query": "SELECT ?obj WHERE { wd:Q77060 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1988')) }",
            "NLQuery": "SELECT ?obj WHERE { Dietrich Fischer-Dieskau award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1988')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1988",
            "choppedEntity": "1988"
        }
    },
    {
        "chopped": {
            "question": "give the place final fantasy vii was publicated on june 25, ",
            "query": "SELECT ?ans1 WHERE { wd:Q214232 p:P577 ?s . ?s ps:P577 ?x FILTER(contains(YEAR(?x),?unknown)) . ?s pq:P291 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Final Fantasy VII date of publication ?s . ?s date of publication ?x FILTER(contains(YEAR(?x),?unknown)) . ?s place of publication ?ans1}"
        },
        "original": {
            "question": "Give the place Final Fantasy VII was publicated on June 25, 1998.",
            "query": "SELECT ?value WHERE { wd:Q214232 p:P577 ?s . ?s ps:P577 ?x FILTER(contains(YEAR(?x),'1998')) . ?s pq:P291 ?value}",
            "NLQuery": "SELECT ?value WHERE { Final Fantasy VII date of publication ?s . ?s date of publication ?x FILTER(contains(YEAR(?x),'1998')) . ?s place of publication ?value}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1998",
            "choppedEntity": "1998"
        }
    },
    {
        "chopped": {
            "question": "what was emmanuelle riva nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q436996 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Emmanuelle Riva nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Emmanuelle Riva nominated for in 2013",
            "query": "SELECT ?obj WHERE { wd:Q436996 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2013')) }",
            "NLQuery": "SELECT ?obj WHERE { Emmanuelle Riva nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2013')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2013",
            "choppedEntity": "2013"
        }
    },
    {
        "chopped": {
            "question": "what was the population of portland in ",
            "query": "SELECT ?ans1 WHERE { wd:Q6106 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Portland population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of Portland in 2010.",
            "query": "SELECT ?obj WHERE { wd:Q6106 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2010')) }",
            "NLQuery": "SELECT ?obj WHERE { Portland population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2010')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2010",
            "choppedEntity": "2010"
        }
    },
    {
        "chopped": {
            "question": "what position was harold wilson in, on february 8, ",
            "query": "SELECT ?ans1 WHERE { wd:Q128956 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Harold Wilson position held ?s . ?s position held ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What position was Harold Wilson in, on February 8, 1974",
            "query": "SELECT ?obj WHERE { wd:Q128956 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1974')) }",
            "NLQuery": "SELECT ?obj WHERE { Harold Wilson position held ?s . ?s position held ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1974')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1974",
            "choppedEntity": "1974"
        }
    },
    {
        "chopped": {
            "question": "when did bhutan have an inflation rate of ",
            "query": "SELECT ?ans1 WHERE { wd:Q917 p:P1279 ?s . ?s ps:P1279 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Bhutan inflation rate ?s . ?s inflation rate ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Bhutan have an inflation rate of 14.7",
            "query": "SELECT ?value WHERE { wd:Q917 p:P1279 ?s . ?s ps:P1279 ?x FILTER(contains(?x,'14.7')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Bhutan inflation rate ?s . ?s inflation rate ?x FILTER(contains(?x,'14.7')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "147",
            "choppedEntity": "14.7"
        }
    },
    {
        "chopped": {
            "question": "tell me social movement whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q49773 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of social movement . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me social movement whose name has the word yomango in it",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q49773 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yomango')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of social movement . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yomango')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "yomango in it",
            "choppedEntity": "yomango"
        }
    },
    {
        "chopped": {
            "question": "let me know social development whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q49773 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of social movement . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know social development whose title has the word yomango in it",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q49773 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yomango')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of social movement . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yomango')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "yomango in it",
            "choppedEntity": "yomango"
        }
    },
    {
        "chopped": {
            "question": "tell me the bell tower that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q200334 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of bell tower . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the bell tower that starts with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q200334 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of bell tower . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "who did steve martin mary in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q16473 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Steve Martin spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who did Steve Martin mary in the year 1986",
            "query": "SELECT ?obj WHERE { wd:Q16473 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1986')) }",
            "NLQuery": "SELECT ?obj WHERE { Steve Martin spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1986')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1986",
            "choppedEntity": "1986"
        }
    },
    {
        "chopped": {
            "question": "the stock exchange rate of nintendo is ticker symbol, ",
            "query": "SELECT ?ans1 WHERE { wd:Q8093 p:P414 ?s . ?s ps:P414 ?ans1 . ?s pq:P249 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Nintendo stock exchange ?s . ?s stock exchange ?ans1 . ?s ticker symbol ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "The stock exchange rate of Nintendo is ticker symbol, 7974",
            "query": "SELECT ?obj WHERE { wd:Q8093 p:P414 ?s . ?s ps:P414 ?obj . ?s pq:P249 ?x FILTER(contains(?x,'7974')) }",
            "NLQuery": "SELECT ?obj WHERE { Nintendo stock exchange ?s . ?s stock exchange ?obj . ?s ticker symbol ?x FILTER(contains(?x,'7974')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "7974",
            "choppedEntity": "7974"
        }
    },
    {
        "chopped": {
            "question": "is the stock exchange rate for nintendo symbol number ",
            "query": "SELECT ?ans1 WHERE { wd:Q8093 p:P414 ?s . ?s ps:P414 ?ans1 . ?s pq:P249 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Nintendo stock exchange ?s . ?s stock exchange ?ans1 . ?s ticker symbol ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "Is the stock exchange rate for Nintendo symbol number 7974",
            "query": "SELECT ?obj WHERE { wd:Q8093 p:P414 ?s . ?s ps:P414 ?obj . ?s pq:P249 ?x FILTER(contains(?x,'7974')) }",
            "NLQuery": "SELECT ?obj WHERE { Nintendo stock exchange ?s . ?s stock exchange ?obj . ?s ticker symbol ?x FILTER(contains(?x,'7974')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "7974",
            "choppedEntity": "7974"
        }
    },
    {
        "chopped": {
            "question": "tell me energy production whose name has ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3406659 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of energy production . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me energy production whose name has hydropower in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3406659 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'hydropower')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of energy production . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'hydropower')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "hydropower in it",
            "choppedEntity": "hydropower"
        }
    },
    {
        "chopped": {
            "question": "what energy is produced by ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3406659 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of energy production . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What energy is produced by hydropower",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3406659 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'hydropower')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of energy production . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'hydropower')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "hydropower",
            "choppedEntity": "hydropower"
        }
    },
    {
        "chopped": {
            "question": "name the kind of business entity in the us that contains the world ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q57653825 . ?ans1 wdt:P1001 wd:Q30 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of type of business entity in the USA . ?ans1 applies to jurisdiction United States of America . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name the kind of business entity in the US that contains the world \"company\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q57653825 . ?sbj wdt:P1001 wd:Q30 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'company')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of type of business entity in the USA . ?sbj applies to jurisdiction United States of America . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'company')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "company",
            "choppedEntity": "company"
        }
    },
    {
        "chopped": {
            "question": "name the form of business entity in the us that consists of the world ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q57653825 . ?ans1 wdt:P1001 wd:Q30 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of type of business entity in the USA . ?ans1 applies to jurisdiction United States of America . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name the form of business entity in the US that consists of the world \"company\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q57653825 . ?sbj wdt:P1001 wd:Q30 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'company')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of type of business entity in the USA . ?sbj applies to jurisdiction United States of America . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'company')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "company",
            "choppedEntity": "company"
        }
    },
    {
        "chopped": {
            "question": "what award was received by konrad zuse in ",
            "query": "SELECT ?ans1 WHERE { wd:Q60093 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Konrad Zuse award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award was received by Konrad Zuse in 1964",
            "query": "SELECT ?obj WHERE { wd:Q60093 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1964')) }",
            "NLQuery": "SELECT ?obj WHERE { Konrad Zuse award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1964')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1964",
            "choppedEntity": "1964"
        }
    },
    {
        "chopped": {
            "question": "when did guatemala have an inflation rate of ",
            "query": "SELECT ?ans1 WHERE { wd:Q774 p:P1279 ?s . ?s ps:P1279 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Guatemala inflation rate ?s . ?s inflation rate ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Guatemala have an inflation rate of 12.3",
            "query": "SELECT ?value WHERE { wd:Q774 p:P1279 ?s . ?s ps:P1279 ?x FILTER(contains(?x,'12.3')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Guatemala inflation rate ?s . ?s inflation rate ?x FILTER(contains(?x,'12.3')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "123",
            "choppedEntity": "12.3"
        }
    },
    {
        "chopped": {
            "question": "tell me media franchise whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q196600 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of media franchise . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "TELL ME MEDIA FRANCHISE WHOSE NAME HAS THE WORD ZOIDS IN IT.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q196600 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zoids')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of media franchise . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zoids')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "zoids in it",
            "choppedEntity": "zoids"
        }
    },
    {
        "chopped": {
            "question": "tell me historical event whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q13418847 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of historical event . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "TELL ME HISTORICAL EVENT WHOSE NAME HAS THE WORD WAR IN IT.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13418847 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of historical event . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "war in it",
            "choppedEntity": "war"
        }
    },
    {
        "chopped": {
            "question": "disclose to me historical event whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q13418847 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of historical event . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Disclose to ME HISTORICAL EVENT WHOSE NAME HAS THE WORD WAR IN IT.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13418847 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of historical event . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "war in it",
            "choppedEntity": "war"
        }
    },
    {
        "chopped": {
            "question": "which song starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q7366 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of song . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which song starts with the letter w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7366 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of song . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "which tune begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q7366 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of song . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which tune begins with the letter w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7366 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of song . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "tell me computer network protocol that starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15836568 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of computer network protocol . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "tell me computer network protocol that starts with w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15836568 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of computer network protocol . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "disclose me computer network protocol that starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15836568 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of computer network protocol . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Disclose me computer network protocol that starts with w",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15836568 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of computer network protocol . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "what did wg sebald win in ",
            "query": "SELECT ?ans1 WHERE { wd:Q76952 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { W. G. Sebald award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What did W.G. Sebald win in 1994",
            "query": "SELECT ?obj WHERE { wd:Q76952 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1994')) }",
            "NLQuery": "SELECT ?obj WHERE { W. G. Sebald award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1994')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1994",
            "choppedEntity": "1994"
        }
    },
    {
        "chopped": {
            "question": "i want to know what won wg sebald in ",
            "query": "SELECT ?ans1 WHERE { wd:Q76952 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { W. G. Sebald award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "I want to know what won W.G. Sebald in 1994!",
            "query": "SELECT ?obj WHERE { wd:Q76952 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1994')) }",
            "NLQuery": "SELECT ?obj WHERE { W. G. Sebald award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1994')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1994!",
            "choppedEntity": "1994"
        }
    },
    {
        "chopped": {
            "question": "what is logarithmic unit starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q17342348 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of logarithmic unit . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what is logarithmic unit starts with t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17342348 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of logarithmic unit . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what is logarithmic unit begins with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q17342348 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of logarithmic unit . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what is logarithmic unit begins with t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17342348 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of logarithmic unit . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "which cell type starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q189118 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of cell type . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which cell type starts with the letter r",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q189118 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of cell type . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "r",
            "choppedEntity": "r"
        }
    },
    {
        "chopped": {
            "question": "which cell sort begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q189118 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of cell type . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which cell sort begins with the letter r",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q189118 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of cell type . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "r",
            "choppedEntity": "r"
        }
    },
    {
        "chopped": {
            "question": "tell me comic book series whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q14406742 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of comic book series . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me comic book series whose name has the word valentina in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q14406742 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'valentina')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of comic book series . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'valentina')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "valentina in it",
            "choppedEntity": "valentina"
        }
    },
    {
        "chopped": {
            "question": "tell me the series of comic books whose name includes the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q14406742 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of comic book series . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the series of comic books whose name includes the word valentina.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q14406742 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'valentina')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of comic book series . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'valentina')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "valentina",
            "choppedEntity": "valentina"
        }
    },
    {
        "chopped": {
            "question": "what is the subtopic of universal decimal classification ",
            "query": "SELECT ?ans1 WHERE { wd:Q12684 wdt:P1269 ?ans1 . ?ans1 wdt:P1190 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Fashion facet of ?ans1 . ?ans1 Universal Decimal Classification ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the subtopic of Universal Decimal Classification 391",
            "query": "SELECT ?answer WHERE { wd:Q12684 wdt:P1269 ?answer . ?answer wdt:P1190 ?x FILTER(contains(?x,'391'))}",
            "NLQuery": "SELECT ?answer WHERE { Fashion facet of ?answer . ?answer Universal Decimal Classification ?x FILTER(contains(?x,'391'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "391",
            "choppedEntity": "391"
        }
    },
    {
        "chopped": {
            "question": "what is geochronological unit starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q6156156 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of none . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what is geochronological unit starts with s",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6156156 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of none . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what socrates sports team member scored a 6",
            "query": "SELECT ?ans1 WHERE { wd:Q102331 p:P54 ?s . ?s ps:P54 ?ans1 . ?s pq:P1351 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { S\u00f3crates member of sports team ?s . ?s member of sports team ?ans1 . ?s number of points/goals/set scored ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "What Socrates sports team member scored a 6.0 ",
            "query": "SELECT ?obj WHERE { wd:Q102331 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1351 ?x FILTER(contains(?x,'6.0')) }",
            "NLQuery": "SELECT ?obj WHERE { S\u00f3crates member of sports team ?s . ?s member of sports team ?obj . ?s number of points/goals/set scored ?x FILTER(contains(?x,'6.0')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "60",
            "choppedEntity": "6.0"
        }
    },
    {
        "chopped": {
            "question": "which is the mineral species which starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q55076514 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of none . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the mineral species which starts with the letter z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55076514 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of none . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "what is the species of minerals that begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q55076514 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of none . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is the species of minerals that begins with letter z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55076514 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of none . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "tell me unary operation whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q657596 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of unary operation . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me unary operation whose name has the word subderivative in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q657596 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'subderivative')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of unary operation . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'subderivative')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "subderivative in it",
            "choppedEntity": "subderivative"
        }
    },
    {
        "chopped": {
            "question": "let me know unary operation whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q657596 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of unary operation . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know unary operation whose title has the word subderivative in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q657596 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'subderivative')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of unary operation . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'subderivative')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "subderivative in it",
            "choppedEntity": "subderivative"
        }
    },
    {
        "chopped": {
            "question": "what anatomical structure starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q4936952 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of anatomical structure . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What anatomical structure starts with z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4936952 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of anatomical structure . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "what anatomical structure begins with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q4936952 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of anatomical structure . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What anatomical structure begins with z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4936952 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of anatomical structure . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "tell me the silent film for which d w griffith was a production designer and contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q226730 . ?ans1 wdt:P2554 wd:Q51123 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of silent film . ?ans1 production designer D. W. Griffith . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the silent film for which D. W. Griffith was a production designer and contains the word birth in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q226730 . ?sbj wdt:P2554 wd:Q51123 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'birth')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of silent film . ?sbj production designer D. W. Griffith . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'birth')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "birth in its name",
            "choppedEntity": "birth"
        }
    },
    {
        "chopped": {
            "question": "let me know the quiet film for which d w griffith was a generation architect and contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q226730 . ?ans1 wdt:P2554 wd:Q51123 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of silent film . ?ans1 production designer D. W. Griffith . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know the quiet film for which D. W. Griffith was a generation architect and contains the word birth in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q226730 . ?sbj wdt:P2554 wd:Q51123 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'birth')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of silent film . ?sbj production designer D. W. Griffith . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'birth')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "birth in its name",
            "choppedEntity": "birth"
        }
    },
    {
        "chopped": {
            "question": "what was located in the administrative territorial entity of toranto during ",
            "query": "SELECT ?ans1 WHERE { wd:Q172 p:P131 ?s . ?s ps:P131 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Toronto located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was located in the administrative territorial entity of Toranto during 1840",
            "query": "SELECT ?obj WHERE { wd:Q172 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1840')) }",
            "NLQuery": "SELECT ?obj WHERE { Toronto located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1840')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1840",
            "choppedEntity": "1840"
        }
    },
    {
        "chopped": {
            "question": "which locations are administrative territorial entity of toranto during ",
            "query": "SELECT ?ans1 WHERE { wd:Q172 p:P131 ?s . ?s ps:P131 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Toronto located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "which locations are administrative territorial entity of Toranto during 1840",
            "query": "SELECT ?obj WHERE { wd:Q172 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1840')) }",
            "NLQuery": "SELECT ?obj WHERE { Toronto located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1840')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1840",
            "choppedEntity": "1840"
        }
    },
    {
        "chopped": {
            "question": "name acity whose patron saint is paul and that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q515 . ?ans1 wdt:P417 wd:Q9200 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of city . ?ans1 patron saint Paul . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name acity whose patron Saint is Paul and that contains the word \"rome\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q515 . ?sbj wdt:P417 wd:Q9200 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'rome')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of city . ?sbj patron saint Paul . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'rome')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "rome in its name",
            "choppedEntity": "rome"
        }
    },
    {
        "chopped": {
            "question": "title acity whose supporter holy person is paul which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q515 . ?ans1 wdt:P417 wd:Q9200 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of city . ?ans1 patron saint Paul . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Title acity whose supporter Holy person is Paul which contains the word \"rome\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q515 . ?sbj wdt:P417 wd:Q9200 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'rome')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of city . ?sbj patron saint Paul . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'rome')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "rome in its name",
            "choppedEntity": "rome"
        }
    },
    {
        "chopped": {
            "question": "which is the war that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q198 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of war . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the war that contains the word wars in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q198 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wars')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of war . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wars')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "wars in its name",
            "choppedEntity": "wars"
        }
    },
    {
        "chopped": {
            "question": "what is the war in the name of the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q198 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of war . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is the war in the name of the word wars",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q198 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wars')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of war . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wars')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "wars",
            "choppedEntity": "wars"
        }
    },
    {
        "chopped": {
            "question": "what is the language of the name of all quiet on the western front whose abbreviation is ",
            "query": "SELECT ?ans1 WHERE { wd:Q207332 wdt:P407 ?ans1 . ?ans1 wdt:P1813 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { All Quiet on the Western Front language of work or name ?ans1 . ?ans1 short name ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the language of the name of All Quiet on the Western Front whose abbreviation is \u043d\u0456\u043c\u0435\u0446\u044c\u043a\u0430",
            "query": "SELECT ?answer WHERE { wd:Q207332 wdt:P407 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'\u043d\u0456\u043c\u0435\u0446\u044c\u043a\u0430'))}",
            "NLQuery": "SELECT ?answer WHERE { All Quiet on the Western Front language of work or name ?answer . ?answer short name ?x FILTER(contains(?x,'\u043d\u0456\u043c\u0435\u0446\u044c\u043a\u0430'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u043d\u0456\u043c\u0435\u0446\u044c\u043a\u0430",
            "choppedEntity": "\u043d\u0456\u043c\u0435\u0446\u044c\u043a\u0430"
        }
    },
    {
        "chopped": {
            "question": "what is the language of the identify of all quiet on the western front whose abbreviation is ",
            "query": "SELECT ?ans1 WHERE { wd:Q207332 wdt:P407 ?ans1 . ?ans1 wdt:P1813 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { All Quiet on the Western Front language of work or name ?ans1 . ?ans1 short name ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the language of the identify of All Quiet on the Western Front whose abbreviation is \u043d\u0456\u043c\u0435\u0446\u044c\u043a\u0430",
            "query": "SELECT ?answer WHERE { wd:Q207332 wdt:P407 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'\u043d\u0456\u043c\u0435\u0446\u044c\u043a\u0430'))}",
            "NLQuery": "SELECT ?answer WHERE { All Quiet on the Western Front language of work or name ?answer . ?answer short name ?x FILTER(contains(?x,'\u043d\u0456\u043c\u0435\u0446\u044c\u043a\u0430'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u043d\u0456\u043c\u0435\u0446\u044c\u043a\u0430",
            "choppedEntity": "\u043d\u0456\u043c\u0435\u0446\u044c\u043a\u0430"
        }
    },
    {
        "chopped": {
            "question": "what residence of ll zamenhof has a surface area of ",
            "query": "SELECT ?ans1 WHERE { wd:Q11758 wdt:P551 ?ans1 . ?ans1 wdt:P2046 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { L. L. Zamenhof residence ?ans1 . ?ans1 area ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What residence of L.L. Zamenhof has a surface area of 517.24",
            "query": "SELECT ?answer WHERE { wd:Q11758 wdt:P551 ?answer . ?answer wdt:P2046 ?x FILTER(contains(?x,'517.24'))}",
            "NLQuery": "SELECT ?answer WHERE { L. L. Zamenhof residence ?answer . ?answer area ?x FILTER(contains(?x,'517.24'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "51724",
            "choppedEntity": "517.24"
        }
    },
    {
        "chopped": {
            "question": "what house of ll zamenhof has a floor place of ",
            "query": "SELECT ?ans1 WHERE { wd:Q11758 wdt:P551 ?ans1 . ?ans1 wdt:P2046 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { L. L. Zamenhof residence ?ans1 . ?ans1 area ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What house of L.L. Zamenhof has a floor place of 517.24",
            "query": "SELECT ?answer WHERE { wd:Q11758 wdt:P551 ?answer . ?answer wdt:P2046 ?x FILTER(contains(?x,'517.24'))}",
            "NLQuery": "SELECT ?answer WHERE { L. L. Zamenhof residence ?answer . ?answer area ?x FILTER(contains(?x,'517.24'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "51724",
            "choppedEntity": "517.24"
        }
    },
    {
        "chopped": {
            "question": "what was the population of manaus at the start of ",
            "query": "SELECT ?ans1 WHERE { wd:Q40236 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Manaus population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of Manaus at the start of 2014",
            "query": "SELECT ?obj WHERE { wd:Q40236 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2014')) }",
            "NLQuery": "SELECT ?obj WHERE { Manaus population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2014')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2014",
            "choppedEntity": "2014"
        }
    },
    {
        "chopped": {
            "question": "how many humans existed in manaus around january, ",
            "query": "SELECT ?ans1 WHERE { wd:Q40236 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Manaus population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "How many humans existed in Manaus around January, 2014",
            "query": "SELECT ?obj WHERE { wd:Q40236 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2014')) }",
            "NLQuery": "SELECT ?obj WHERE { Manaus population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2014')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2014",
            "choppedEntity": "2014"
        }
    },
    {
        "chopped": {
            "question": "what are the sexual orientation which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q17888 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of sexual orientation . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the sexual orientation which start with the letter s",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17888 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of sexual orientation . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what are the sexual introduction which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q17888 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of sexual orientation . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the sexual introduction which begin with the letter s",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17888 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of sexual orientation . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "name the award which was received by paul robeson in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q273233 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Paul Robeson award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Name the award which was received by Paul Robeson in the year 1974",
            "query": "SELECT ?obj WHERE { wd:Q273233 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1974')) }",
            "NLQuery": "SELECT ?obj WHERE { Paul Robeson award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1974')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1974",
            "choppedEntity": "1974"
        }
    },
    {
        "chopped": {
            "question": "what was the name of the award that paul robeson won in ",
            "query": "SELECT ?ans1 WHERE { wd:Q273233 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Paul Robeson award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the name of the award that Paul Robeson won in 1974",
            "query": "SELECT ?obj WHERE { wd:Q273233 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1974')) }",
            "NLQuery": "SELECT ?obj WHERE { Paul Robeson award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1974')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1974",
            "choppedEntity": "1974"
        }
    },
    {
        "chopped": {
            "question": "which state of chiapas covers ",
            "query": "SELECT ?ans1 WHERE { wd:Q60123 wdt:P150 ?ans1 . ?ans1 wdt:P2046 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Chiapas contains administrative territorial entity ?ans1 . ?ans1 area ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Which state of Chiapas covers 446.99",
            "query": "SELECT ?answer WHERE { wd:Q60123 wdt:P150 ?answer . ?answer wdt:P2046 ?x FILTER(contains(?x,'446.99'))}",
            "NLQuery": "SELECT ?answer WHERE { Chiapas contains administrative territorial entity ?answer . ?answer area ?x FILTER(contains(?x,'446.99'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "44699",
            "choppedEntity": "446.99"
        }
    },
    {
        "chopped": {
            "question": "name a postgraduate degree that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q23015928 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of postgraduate degree . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a postgraduate degree that starts with letter P",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23015928 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of postgraduate degree . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "p",
            "choppedEntity": "p"
        }
    },
    {
        "chopped": {
            "question": "name a postgraduate degree beginning with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q23015928 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of postgraduate degree . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a postgraduate degree beginning with letter P",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23015928 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of postgraduate degree . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "p",
            "choppedEntity": "p"
        }
    },
    {
        "chopped": {
            "question": "what was werner heisenberg nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q40904 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Werner Heisenberg nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Werner Heisenberg nominated for in 1929",
            "query": "SELECT ?obj WHERE { wd:Q40904 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1929')) }",
            "NLQuery": "SELECT ?obj WHERE { Werner Heisenberg nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1929')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1929",
            "choppedEntity": "1929"
        }
    },
    {
        "chopped": {
            "question": "which award was werner heisenberg short-listed for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q40904 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Werner Heisenberg nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which award was Werner Heisenberg short-listed for in 1929",
            "query": "SELECT ?obj WHERE { wd:Q40904 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1929')) }",
            "NLQuery": "SELECT ?obj WHERE { Werner Heisenberg nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1929')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1929",
            "choppedEntity": "1929"
        }
    },
    {
        "chopped": {
            "question": "where did mikhail lomonosov finish his education in ",
            "query": "SELECT ?ans1 WHERE { wd:Q58720 p:P69 ?s . ?s ps:P69 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mikhail Vassilyevich Lomonosov educated at ?s . ?s educated at ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Where did Mikhail Lomonosov finish his education in 1736",
            "query": "SELECT ?obj WHERE { wd:Q58720 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1736')) }",
            "NLQuery": "SELECT ?obj WHERE { Mikhail Vassilyevich Lomonosov educated at ?s . ?s educated at ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1736')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1736",
            "choppedEntity": "1736"
        }
    },
    {
        "chopped": {
            "question": "what did mikhail lomonosov finish his education in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q58720 p:P69 ?s . ?s ps:P69 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mikhail Vassilyevich Lomonosov educated at ?s . ?s educated at ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "what did Mikhail Lomonosov finish his education in the year 1736",
            "query": "SELECT ?obj WHERE { wd:Q58720 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1736')) }",
            "NLQuery": "SELECT ?obj WHERE { Mikhail Vassilyevich Lomonosov educated at ?s . ?s educated at ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1736')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1736",
            "choppedEntity": "1736"
        }
    },
    {
        "chopped": {
            "question": "what glucan starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q416796 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of glucan . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What glucan starts with the letter \"z\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q416796 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of glucan . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "what is the pseudonym of musicbrainz artist johnpeel, id number ",
            "query": "SELECT ?ans1 WHERE { wd:Q326542 p:P742 ?s . ?s ps:P742 ?ans1 . ?s pq:P434 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { John Peel pseudonym ?s . ?s pseudonym ?ans1 . ?s MusicBrainz artist ID ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "What is the pseudonym of MusicBrainz artist JohnPeel, ID number 65ddc5dd-6e1c-4f70-bee3-b67703bbf4c8",
            "query": "SELECT ?obj WHERE { wd:Q326542 p:P742 ?s . ?s ps:P742 ?obj . ?s pq:P434 ?x FILTER(contains(?x,'65ddc5dd-6e1c-4f70-bee3-b67703bbf4c8')) }",
            "NLQuery": "SELECT ?obj WHERE { John Peel pseudonym ?s . ?s pseudonym ?obj . ?s MusicBrainz artist ID ?x FILTER(contains(?x,'65ddc5dd-6e1c-4f70-bee3-b67703bbf4c8')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "65ddc5dd-6e1c-4f70-bee3-b67703bbf4c8",
            "choppedEntity": "65ddc5dd-6e1c-4f70-bee3-b67703bbf4c8"
        }
    },
    {
        "chopped": {
            "question": "give the alias of johnpeel, the musicbrainz artist with id number ",
            "query": "SELECT ?ans1 WHERE { wd:Q326542 p:P742 ?s . ?s ps:P742 ?ans1 . ?s pq:P434 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { John Peel pseudonym ?s . ?s pseudonym ?ans1 . ?s MusicBrainz artist ID ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "Give the alias of JohnPeel, the MusicBrainz artist with ID number 65ddc5dd-6e1c-4f70-bee3-b67703bbf4c8",
            "query": "SELECT ?obj WHERE { wd:Q326542 p:P742 ?s . ?s ps:P742 ?obj . ?s pq:P434 ?x FILTER(contains(?x,'65ddc5dd-6e1c-4f70-bee3-b67703bbf4c8')) }",
            "NLQuery": "SELECT ?obj WHERE { John Peel pseudonym ?s . ?s pseudonym ?obj . ?s MusicBrainz artist ID ?x FILTER(contains(?x,'65ddc5dd-6e1c-4f70-bee3-b67703bbf4c8')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "65ddc5dd-6e1c-4f70-bee3-b67703bbf4c8",
            "choppedEntity": "65ddc5dd-6e1c-4f70-bee3-b67703bbf4c8"
        }
    },
    {
        "chopped": {
            "question": "who was divorced to rupert murdoch in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q53944 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Rupert Murdoch spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was divorced to Rupert Murdoch in the year 1967",
            "query": "SELECT ?obj WHERE { wd:Q53944 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1967')) }",
            "NLQuery": "SELECT ?obj WHERE { Rupert Murdoch spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1967')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1967",
            "choppedEntity": "1967"
        }
    },
    {
        "chopped": {
            "question": "who divorced rupert murdoch in ",
            "query": "SELECT ?ans1 WHERE { wd:Q53944 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Rupert Murdoch spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who divorced Rupert Murdoch in 1967",
            "query": "SELECT ?obj WHERE { wd:Q53944 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1967')) }",
            "NLQuery": "SELECT ?obj WHERE { Rupert Murdoch spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1967')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1967",
            "choppedEntity": "1967"
        }
    },
    {
        "chopped": {
            "question": "tell me a taxon that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q16521 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of taxon . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me a taxon that starts with the letter s.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16521 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of taxon . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "which is the taxon that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q16521 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of taxon . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHICH IS THE TAXON THAT STARTS WITH THE LETTER S",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16521 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of taxon . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what used language of das lied der deutschen has the shortened name of ",
            "query": "SELECT ?ans1 WHERE { wd:Q44042 wdt:P407 ?ans1 . ?ans1 wdt:P1813 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Das Lied der Deutschen language of work or name ?ans1 . ?ans1 short name ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What used language of Das Lied der Deutschen has the shortened name of \u043d\u0456\u043c\u0435\u0446\u044c\u043a\u0430",
            "query": "SELECT ?answer WHERE { wd:Q44042 wdt:P407 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'\u043d\u0456\u043c\u0435\u0446\u044c\u043a\u0430'))}",
            "NLQuery": "SELECT ?answer WHERE { Das Lied der Deutschen language of work or name ?answer . ?answer short name ?x FILTER(contains(?x,'\u043d\u0456\u043c\u0435\u0446\u044c\u043a\u0430'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u043d\u0456\u043c\u0435\u0446\u044c\u043a\u0430",
            "choppedEntity": "\u043d\u0456\u043c\u0435\u0446\u044c\u043a\u0430"
        }
    },
    {
        "chopped": {
            "question": "what utilized dialect of das lied der deutschen has the abbreviated title of ",
            "query": "SELECT ?ans1 WHERE { wd:Q44042 wdt:P407 ?ans1 . ?ans1 wdt:P1813 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Das Lied der Deutschen language of work or name ?ans1 . ?ans1 short name ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What utilized dialect of Das Lied der Deutschen has the abbreviated title of \u043d\u0456\u043c\u0435\u0446\u044c\u043a\u0430",
            "query": "SELECT ?answer WHERE { wd:Q44042 wdt:P407 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'\u043d\u0456\u043c\u0435\u0446\u044c\u043a\u0430'))}",
            "NLQuery": "SELECT ?answer WHERE { Das Lied der Deutschen language of work or name ?answer . ?answer short name ?x FILTER(contains(?x,'\u043d\u0456\u043c\u0435\u0446\u044c\u043a\u0430'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u043d\u0456\u043c\u0435\u0446\u044c\u043a\u0430",
            "choppedEntity": "\u043d\u0456\u043c\u0435\u0446\u044c\u043a\u0430"
        }
    },
    {
        "chopped": {
            "question": "tell me type of magnets whose name has the word  ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q50002046 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of type of magnets . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me type of magnets whose name has the word  magnet in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q50002046 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'magnet')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of type of magnets . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'magnet')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "magnet in it",
            "choppedEntity": "magnet"
        }
    },
    {
        "chopped": {
            "question": "what are the kinds of magnets which begins with the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q50002046 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of type of magnets . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the kinds of magnets which begins with the word magnet in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q50002046 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'magnet')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of type of magnets . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'magnet')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "magnet in their name",
            "choppedEntity": "magnet"
        }
    },
    {
        "chopped": {
            "question": "which award did howard jacobson receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q357929 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Howard Jacobson award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which award did Howard Jacobson receive in 2013",
            "query": "SELECT ?obj WHERE { wd:Q357929 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2013')) }",
            "NLQuery": "SELECT ?obj WHERE { Howard Jacobson award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2013')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2013",
            "choppedEntity": "2013"
        }
    },
    {
        "chopped": {
            "question": "howard jacobson was awarded with what in ",
            "query": "SELECT ?ans1 WHERE { wd:Q357929 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Howard Jacobson award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Howard Jacobson was awarded with what in 2013",
            "query": "SELECT ?obj WHERE { wd:Q357929 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2013')) }",
            "NLQuery": "SELECT ?obj WHERE { Howard Jacobson award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2013')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2013",
            "choppedEntity": "2013"
        }
    },
    {
        "chopped": {
            "question": "what is the capital of qing dynasty during its end in ",
            "query": "SELECT ?ans1 WHERE { wd:Q8733 p:P36 ?s . ?s ps:P36 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Qing dynasty capital ?s . ?s capital ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What is the capital of Qing dynasty during its end in 1912",
            "query": "SELECT ?obj WHERE { wd:Q8733 p:P36 ?s . ?s ps:P36 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1912')) }",
            "NLQuery": "SELECT ?obj WHERE { Qing dynasty capital ?s . ?s capital ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1912')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1912",
            "choppedEntity": "1912"
        }
    },
    {
        "chopped": {
            "question": "gurbanguly berdimuhamedow was a member of which political party in ",
            "query": "SELECT ?ans1 WHERE { wd:Q57530 p:P102 ?s . ?s ps:P102 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Gurbanguly Berdimuhamedow member of political party ?s . ?s member of political party ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Gurbanguly Berdimuhamedow was a member of which political party in 2013",
            "query": "SELECT ?obj WHERE { wd:Q57530 p:P102 ?s . ?s ps:P102 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2013')) }",
            "NLQuery": "SELECT ?obj WHERE { Gurbanguly Berdimuhamedow member of political party ?s . ?s member of political party ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2013')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2013",
            "choppedEntity": "2013"
        }
    },
    {
        "chopped": {
            "question": "what is si derived unit that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q208469 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of SI derived unit . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what is si derived unit that contains the word weber in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q208469 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'weber')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of SI derived unit . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'weber')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "weber in their name",
            "choppedEntity": "weber"
        }
    },
    {
        "chopped": {
            "question": "what is si inferred unit that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q208469 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of SI derived unit . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what is si inferred unit that contains the word weber in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q208469 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'weber')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of SI derived unit . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'weber')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "weber in their name",
            "choppedEntity": "weber"
        }
    },
    {
        "chopped": {
            "question": "what are the space program which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q60054001 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of space program . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the space program which start with the letter s",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q60054001 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of space program . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what are the space program whichbegin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q60054001 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of space program . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the space program whichbegin with the letter s",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q60054001 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of space program . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "in the administrative unit of port elizabeth what has wgs 84 and is ",
            "query": "SELECT ?ans1 WHERE { wd:Q125434 wdt:P131 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Port Elizabeth located in the administrative territorial entity ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "In the administrative unit of Port Elizabeth what has wgs 84 and is -33.95",
            "query": "SELECT ?answer WHERE { wd:Q125434 wdt:P131 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'-33.95'))}",
            "NLQuery": "SELECT ?answer WHERE { Port Elizabeth located in the administrative territorial entity ?answer . ?answer coordinate location ?x FILTER(contains(?x,'-33.95'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "-3395",
            "choppedEntity": "-33.95"
        }
    },
    {
        "chopped": {
            "question": "within the authoritative unit of harbour elizabeth what has wgs 84 and is ",
            "query": "SELECT ?ans1 WHERE { wd:Q125434 wdt:P131 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Port Elizabeth located in the administrative territorial entity ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Within the authoritative unit of Harbour Elizabeth what has wgs 84 and is -33.95",
            "query": "SELECT ?answer WHERE { wd:Q125434 wdt:P131 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'-33.95'))}",
            "NLQuery": "SELECT ?answer WHERE { Port Elizabeth located in the administrative territorial entity ?answer . ?answer coordinate location ?x FILTER(contains(?x,'-33.95'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "-3395",
            "choppedEntity": "-33.95"
        }
    },
    {
        "chopped": {
            "question": "what happened in hiroshima in year ",
            "query": "SELECT ?ans1 WHERE { wd:Q34664 p:P31 ?s . ?s ps:P31 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Hiroshima instance of ?s . ?s instance of ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What happened in Hiroshima in year 1904",
            "query": "SELECT ?obj WHERE { wd:Q34664 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1904')) }",
            "NLQuery": "SELECT ?obj WHERE { Hiroshima instance of ?s . ?s instance of ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1904')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1904",
            "choppedEntity": "1904"
        }
    },
    {
        "chopped": {
            "question": "describe the detail of hiroshima, ",
            "query": "SELECT ?ans1 WHERE { wd:Q34664 p:P31 ?s . ?s ps:P31 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Hiroshima instance of ?s . ?s instance of ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Describe the detail of Hiroshima, 1904",
            "query": "SELECT ?obj WHERE { wd:Q34664 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1904')) }",
            "NLQuery": "SELECT ?obj WHERE { Hiroshima instance of ?s . ?s instance of ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1904')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1904",
            "choppedEntity": "1904"
        }
    },
    {
        "chopped": {
            "question": "what type of landscape starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1803829 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of landscape type . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What type of landscape starts with the letter \"t\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1803829 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of landscape type . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what type of landscape begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1803829 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of landscape type . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What type of landscape begins with the letter \"t\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1803829 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of landscape type . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "tell me book whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q571 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of book . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me book whose name has the word world in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q571 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'world')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of book . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'world')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "world in it",
            "choppedEntity": "world"
        }
    },
    {
        "chopped": {
            "question": "let me know book whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q571 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of book . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know book whose title has the word world in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q571 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'world')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of book . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'world')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "world in it",
            "choppedEntity": "world"
        }
    },
    {
        "chopped": {
            "question": "tina turner was a citizen of what country as of 01/01/",
            "query": "SELECT ?ans1 WHERE { wd:Q131814 p:P27 ?s . ?s ps:P27 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Tina Turner country of citizenship ?s . ?s country of citizenship ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Tina Turner was a citizen of what country as of 01/01/2013",
            "query": "SELECT ?obj WHERE { wd:Q131814 p:P27 ?s . ?s ps:P27 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'2013')) }",
            "NLQuery": "SELECT ?obj WHERE { Tina Turner country of citizenship ?s . ?s country of citizenship ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'2013')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2013",
            "choppedEntity": "2013"
        }
    },
    {
        "chopped": {
            "question": "what country was tina turner a citizen of on 01/01/",
            "query": "SELECT ?ans1 WHERE { wd:Q131814 p:P27 ?s . ?s ps:P27 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Tina Turner country of citizenship ?s . ?s country of citizenship ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What country was Tina Turner a citizen of on 01/01/2013",
            "query": "SELECT ?obj WHERE { wd:Q131814 p:P27 ?s . ?s ps:P27 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'2013')) }",
            "NLQuery": "SELECT ?obj WHERE { Tina Turner country of citizenship ?s . ?s country of citizenship ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'2013')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2013",
            "choppedEntity": "2013"
        }
    },
    {
        "chopped": {
            "question": "where did hugo pratt move from on august 20, ",
            "query": "SELECT ?ans1 WHERE { wd:Q12113 p:P551 ?s . ?s ps:P551 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Hugo Pratt residence ?s . ?s residence ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Where did Hugo Pratt move from on August 20, 1995",
            "query": "SELECT ?obj WHERE { wd:Q12113 p:P551 ?s . ?s ps:P551 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1995')) }",
            "NLQuery": "SELECT ?obj WHERE { Hugo Pratt residence ?s . ?s residence ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1995')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1995",
            "choppedEntity": "1995"
        }
    },
    {
        "chopped": {
            "question": "what is the award received by american graffiti in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q375855 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { American Graffiti award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What is the award received by American Graffiti in the year 1995",
            "query": "SELECT ?obj WHERE { wd:Q375855 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1995')) }",
            "NLQuery": "SELECT ?obj WHERE { American Graffiti award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1995')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1995",
            "choppedEntity": "1995"
        }
    },
    {
        "chopped": {
            "question": "what is the determination method for kazakystans fertility rate of ",
            "query": "SELECT ?ans1 WHERE { wd:Q232 p:P4841 ?s . ?s ps:P4841 ?x FILTER(contains(?x,?unknown)) . ?s pq:P459 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Kazakhstan total fertility rate ?s . ?s total fertility rate ?x FILTER(contains(?x,?unknown)) . ?s determination method ?ans1}"
        },
        "original": {
            "question": "What is the determination method for Kazakystan's fertility rate of 1.9",
            "query": "SELECT ?value WHERE { wd:Q232 p:P4841 ?s . ?s ps:P4841 ?x FILTER(contains(?x,'1.9')) . ?s pq:P459 ?value}",
            "NLQuery": "SELECT ?value WHERE { Kazakhstan total fertility rate ?s . ?s total fertility rate ?x FILTER(contains(?x,'1.9')) . ?s determination method ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "19",
            "choppedEntity": "1.9"
        }
    },
    {
        "chopped": {
            "question": "what ffh habitat starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q60029820 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of FFH-Habitat . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What FFH habitat starts with \"v\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q60029820 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of FFH-Habitat . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "name the ffh habitat that starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q60029820 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of FFH-Habitat . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name the FFH habitat that starts with \"v\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q60029820 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of FFH-Habitat . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "in idaho, when did the postal service begin using ",
            "query": "SELECT ?ans1 WHERE { wd:Q1221 p:P1813 ?s . ?s ps:P1813 ?x FILTER(contains(?x,'ID')) . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Idaho short name ?s . ?s short name ?x FILTER(contains(?x,'ID')) . ?s start time ?ans1}"
        },
        "original": {
            "question": "In Idaho, when did the postal service begin using ID",
            "query": "SELECT ?value WHERE { wd:Q1221 p:P1813 ?s . ?s ps:P1813 ?x FILTER(contains(?x,'ID')) . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { Idaho short name ?s . ?s short name ?x FILTER(contains(?x,'ID')) . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "id",
            "choppedEntity": "id"
        }
    },
    {
        "chopped": {
            "question": "what award did jos\u00e9 echegaray get in ",
            "query": "SELECT ?ans1 WHERE { wd:Q127349 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Jos\u00e9 Echegaray award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Jos\u00e9 Echegaray get in 1911",
            "query": "SELECT ?obj WHERE { wd:Q127349 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1911')) }",
            "NLQuery": "SELECT ?obj WHERE { Jos\u00e9 Echegaray award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1911')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1911",
            "choppedEntity": "1911"
        }
    },
    {
        "chopped": {
            "question": "when did inflation rate increased to ",
            "query": "SELECT ?ans1 WHERE { wd:Q736 p:P1279 ?s . ?s ps:P1279 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ecuador inflation rate ?s . ?s inflation rate ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "when did inflation rate increased to 2.7",
            "query": "SELECT ?value WHERE { wd:Q736 p:P1279 ?s . ?s ps:P1279 ?x FILTER(contains(?x,'2.7')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ecuador inflation rate ?s . ?s inflation rate ?x FILTER(contains(?x,'2.7')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "27",
            "choppedEntity": "2.7"
        }
    },
    {
        "chopped": {
            "question": "on what date did the inflation rate increase to ",
            "query": "SELECT ?ans1 WHERE { wd:Q736 p:P1279 ?s . ?s ps:P1279 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ecuador inflation rate ?s . ?s inflation rate ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "On what date did the inflation rate increase to 2.7",
            "query": "SELECT ?value WHERE { wd:Q736 p:P1279 ?s . ?s ps:P1279 ?x FILTER(contains(?x,'2.7')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ecuador inflation rate ?s . ?s inflation rate ?x FILTER(contains(?x,'2.7')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "27",
            "choppedEntity": "2.7"
        }
    },
    {
        "chopped": {
            "question": "name an alcoholic beverage obtained by fermentation that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q154 . ?ans1 wdt:P2079 wd:Q41760 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of alcoholic beverage . ?ans1 fabrication method fermentation . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name an alcoholic beverage obtained by fermentation that starts with letter R",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q154 . ?sbj wdt:P2079 wd:Q41760 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of alcoholic beverage . ?sbj fabrication method fermentation . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "r",
            "choppedEntity": "r"
        }
    },
    {
        "chopped": {
            "question": "what anatomic part named by realdo colombo starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q4936952 . ?ans1 wdt:P3938 wd:Q367016 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of anatomical structure . ?ans1 named by Realdo Colombo . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What anatomic part named by Realdo Colombo starts with letter V",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4936952 . ?sbj wdt:P3938 wd:Q367016 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of anatomical structure . ?sbj named by Realdo Colombo . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what anatomic portion named by realdo colombo begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q4936952 . ?ans1 wdt:P3938 wd:Q367016 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of anatomical structure . ?ans1 named by Realdo Colombo . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What anatomic portion named by Realdo Colombo begins with letter V",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4936952 . ?sbj wdt:P3938 wd:Q367016 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of anatomical structure . ?sbj named by Realdo Colombo . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "let me know kin twosome whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q14073567 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of sibling duo . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know kin twosome whose title has the word von in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q14073567 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'von')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of sibling duo . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'von')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "von in it",
            "choppedEntity": "von"
        }
    },
    {
        "chopped": {
            "question": "which kidney artery has official name ",
            "query": "SELECT ?ans1 WHERE { wd:Q9377 wdt:P2286 ?ans1 . ?ans1 wdt:P1705 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { kidney arterial supply ?ans1 . ?ans1 native label ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Which kidney artery has official name arteria renalis",
            "query": "SELECT ?answer WHERE { wd:Q9377 wdt:P2286 ?answer . ?answer wdt:P1705 ?x FILTER(contains(?x,'arteria renalis'))}",
            "NLQuery": "SELECT ?answer WHERE { kidney arterial supply ?answer . ?answer native label ?x FILTER(contains(?x,'arteria renalis'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "arteria renalis",
            "choppedEntity": "arteria renalis"
        }
    },
    {
        "chopped": {
            "question": "which kidney course has official title ",
            "query": "SELECT ?ans1 WHERE { wd:Q9377 wdt:P2286 ?ans1 . ?ans1 wdt:P1705 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { kidney arterial supply ?ans1 . ?ans1 native label ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Which kidney course has official title arteria renalis",
            "query": "SELECT ?answer WHERE { wd:Q9377 wdt:P2286 ?answer . ?answer wdt:P1705 ?x FILTER(contains(?x,'arteria renalis'))}",
            "NLQuery": "SELECT ?answer WHERE { kidney arterial supply ?answer . ?answer native label ?x FILTER(contains(?x,'arteria renalis'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "arteria renalis",
            "choppedEntity": "arteria renalis"
        }
    },
    {
        "chopped": {
            "question": "what political party was zine el abidine ben ali a member of in ",
            "query": "SELECT ?ans1 WHERE { wd:Q204487 p:P102 ?s . ?s ps:P102 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Zine El Abidine Ben Ali member of political party ?s . ?s member of political party ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What political party was Zine El Abidine Ben Ali a member of in 1988",
            "query": "SELECT ?obj WHERE { wd:Q204487 p:P102 ?s . ?s ps:P102 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1988')) }",
            "NLQuery": "SELECT ?obj WHERE { Zine El Abidine Ben Ali member of political party ?s . ?s member of political party ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1988')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1988",
            "choppedEntity": "1988"
        }
    },
    {
        "chopped": {
            "question": "for which party was zine el abidine ben ali a member in ",
            "query": "SELECT ?ans1 WHERE { wd:Q204487 p:P102 ?s . ?s ps:P102 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Zine El Abidine Ben Ali member of political party ?s . ?s member of political party ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "For which party was Zine El Abidine Ben Ali a member in 1988",
            "query": "SELECT ?obj WHERE { wd:Q204487 p:P102 ?s . ?s ps:P102 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1988')) }",
            "NLQuery": "SELECT ?obj WHERE { Zine El Abidine Ben Ali member of political party ?s . ?s member of political party ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1988')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1988",
            "choppedEntity": "1988"
        }
    },
    {
        "chopped": {
            "question": "tell me the medication which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q12140 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of medication . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the medication which contains the word verapamil in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12140 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'verapamil')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of medication . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'verapamil')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "verapamil in its name",
            "choppedEntity": "verapamil"
        }
    },
    {
        "chopped": {
            "question": "tell me the remedy which includes the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q12140 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of medication . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the remedy which includes the word verapamil in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12140 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'verapamil')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of medication . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'verapamil')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "verapamil in its name",
            "choppedEntity": "verapamil"
        }
    },
    {
        "chopped": {
            "question": "what are spacce observatory whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q148578 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of space observatory . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHAT ARE SPACCE OBSERVATORY WHOSE NAME HAS THE WORD XUNTIAN IN THEIR NAME.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q148578 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'xuntian')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of space observatory . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'xuntian')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "xuntian in their name",
            "choppedEntity": "xuntian"
        }
    },
    {
        "chopped": {
            "question": "who has been married to mary astor since january 1, ",
            "query": "SELECT ?ans1 WHERE { wd:Q232109 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mary Astor spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who has been married to Mary Astor since January 1, 1928",
            "query": "SELECT ?obj WHERE { wd:Q232109 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1928')) }",
            "NLQuery": "SELECT ?obj WHERE { Mary Astor spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1928')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1928",
            "choppedEntity": "1928"
        }
    },
    {
        "chopped": {
            "question": "what are the what are the film studio which start with the letter s which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11173 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of chemical compound . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the What are the film studio which start with the letter s which start with the letter water",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11173 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'water')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of chemical compound . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'water')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "water",
            "choppedEntity": "water"
        }
    },
    {
        "chopped": {
            "question": "what are the what are the film studio which begin with the letter s which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11173 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of chemical compound . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the What are the film studio which begin with the letter s which begin with the letter water",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11173 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'water')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of chemical compound . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'water')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "water",
            "choppedEntity": "water"
        }
    },
    {
        "chopped": {
            "question": "what was the net profit of the state grid corporation of china in ",
            "query": "SELECT ?ans1 WHERE { wd:Q209078 p:P2295 ?s . ?s ps:P2295 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { State Grid Corporation of China net profit ?s . ?s net profit ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the net profit of the State Grid Corporation of China in 2015",
            "query": "SELECT ?obj WHERE { wd:Q209078 p:P2295 ?s . ?s ps:P2295 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2015')) }",
            "NLQuery": "SELECT ?obj WHERE { State Grid Corporation of China net profit ?s . ?s net profit ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2015')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2015",
            "choppedEntity": "2015"
        }
    },
    {
        "chopped": {
            "question": "what is the gender of anthony fantano whose acronym is ",
            "query": "SELECT ?ans1 WHERE { wd:Q51882459 wdt:P21 ?ans1 . ?ans1 wdt:P1813 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Anthony Fantano sex or gender ?ans1 . ?ans1 short name ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the gender of Anthony Fantano whose acronym is \u043c\u0443\u0436\u0441\u043a\u043e\u0439",
            "query": "SELECT ?answer WHERE { wd:Q51882459 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'\u043c\u0443\u0436\u0441\u043a\u043e\u0439'))}",
            "NLQuery": "SELECT ?answer WHERE { Anthony Fantano sex or gender ?answer . ?answer short name ?x FILTER(contains(?x,'\u043c\u0443\u0436\u0441\u043a\u043e\u0439'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u043c\u0443\u0436\u0441\u043a\u043e\u0439",
            "choppedEntity": "\u043c\u0443\u0436\u0441\u043a\u043e\u0439"
        }
    },
    {
        "chopped": {
            "question": "which girl group starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q641066 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of girl group . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which girl group starts with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q641066 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of girl group . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "can you tell me the girl group that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q641066 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of girl group . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Can you tell me the girl group that starts with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q641066 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of girl group . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "tell meduo  whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q10648343 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of duo . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell meduo  whose name has the word roy in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q10648343 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'roy')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of duo . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'roy')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "roy in it",
            "choppedEntity": "roy"
        }
    },
    {
        "chopped": {
            "question": "disclose meduo whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q10648343 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of duo . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Disclose meduo whose name has the word roy in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q10648343 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'roy')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of duo . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'roy')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "roy in it",
            "choppedEntity": "roy"
        }
    },
    {
        "chopped": {
            "question": "tell me minor basilica  whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q120560 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of minor basilica . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me minor basilica  whose name has the word st in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q120560 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'st')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of minor basilica . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'st')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "st in it",
            "choppedEntity": "st"
        }
    },
    {
        "chopped": {
            "question": "tell me the basilica of a minor whose name contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q120560 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of minor basilica . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the basilica of a minor whose name contains the word st.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q120560 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'st')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of minor basilica . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'st')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "st",
            "choppedEntity": "st"
        }
    },
    {
        "chopped": {
            "question": "tell me  the doctrine that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q117850 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of doctrine . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me  the doctrine that contains the word trinity in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q117850 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'trinity')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of doctrine . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'trinity')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "trinity in their name",
            "choppedEntity": "trinity"
        }
    },
    {
        "chopped": {
            "question": "let me know the teaching that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q117850 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of doctrine . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know the teaching that contains the word trinity in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q117850 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'trinity')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of doctrine . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'trinity')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "trinity in their name",
            "choppedEntity": "trinity"
        }
    },
    {
        "chopped": {
            "question": "how many people lived under the suez governorate on november, 17, ",
            "query": "SELECT ?ans1 WHERE { wd:Q31070 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Suez Governorate population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "How many people lived under the Suez Governorate on November, 17, 1986",
            "query": "SELECT ?obj WHERE { wd:Q31070 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1986')) }",
            "NLQuery": "SELECT ?obj WHERE { Suez Governorate population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1986')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1986",
            "choppedEntity": "1986"
        }
    },
    {
        "chopped": {
            "question": "who started being a subsidiary of cisco systems in ",
            "query": "SELECT ?ans1 WHERE { wd:Q173395 p:P355 ?s . ?s ps:P355 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Cisco Systems subsidiary ?s . ?s subsidiary ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who started being a subsidiary of Cisco Systems in 2010",
            "query": "SELECT ?obj WHERE { wd:Q173395 p:P355 ?s . ?s ps:P355 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2010')) }",
            "NLQuery": "SELECT ?obj WHERE { Cisco Systems subsidiary ?s . ?s subsidiary ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2010')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2010",
            "choppedEntity": "2010"
        }
    },
    {
        "chopped": {
            "question": "who established a subsidiary of cisco systems in ",
            "query": "SELECT ?ans1 WHERE { wd:Q173395 p:P355 ?s . ?s ps:P355 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Cisco Systems subsidiary ?s . ?s subsidiary ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who established a subsidiary of Cisco Systems in 2010",
            "query": "SELECT ?obj WHERE { wd:Q173395 p:P355 ?s . ?s ps:P355 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2010')) }",
            "NLQuery": "SELECT ?obj WHERE { Cisco Systems subsidiary ?s . ?s subsidiary ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2010')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2010",
            "choppedEntity": "2010"
        }
    },
    {
        "chopped": {
            "question": "what award did rihanna receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q36844 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Rihanna award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Rihanna Receive in 2010",
            "query": "SELECT ?obj WHERE { wd:Q36844 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2010')) }",
            "NLQuery": "SELECT ?obj WHERE { Rihanna award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2010')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2010",
            "choppedEntity": "2010"
        }
    },
    {
        "chopped": {
            "question": "what is the measure of the observable dimension of solar radius, or ",
            "query": "SELECT ?ans1 WHERE { wd:Q48440 wdt:P111 ?ans1 . ?ans1 wdt:P4020 ?x FILTER(contains(?x,'L'))}",
            "NLQuery": "SELECT ?ans1 WHERE { solar radius measured physical quantity ?ans1 . ?ans1 ISQ dimension ?x FILTER(contains(?x,'L'))}"
        },
        "original": {
            "question": "What is the measure of the observable dimension of solar radius, or L",
            "query": "SELECT ?answer WHERE { wd:Q48440 wdt:P111 ?answer . ?answer wdt:P4020 ?x FILTER(contains(?x,'L'))}",
            "NLQuery": "SELECT ?answer WHERE { solar radius measured physical quantity ?answer . ?answer ISQ dimension ?x FILTER(contains(?x,'L'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "l",
            "choppedEntity": "l"
        }
    },
    {
        "chopped": {
            "question": "what is the degree of the perceptible measurement of sun oriented span, or ",
            "query": "SELECT ?ans1 WHERE { wd:Q48440 wdt:P111 ?ans1 . ?ans1 wdt:P4020 ?x FILTER(contains(?x,'L'))}",
            "NLQuery": "SELECT ?ans1 WHERE { solar radius measured physical quantity ?ans1 . ?ans1 ISQ dimension ?x FILTER(contains(?x,'L'))}"
        },
        "original": {
            "question": "What is the degree of the perceptible measurement of sun oriented span, or L",
            "query": "SELECT ?answer WHERE { wd:Q48440 wdt:P111 ?answer . ?answer wdt:P4020 ?x FILTER(contains(?x,'L'))}",
            "NLQuery": "SELECT ?answer WHERE { solar radius measured physical quantity ?answer . ?answer ISQ dimension ?x FILTER(contains(?x,'L'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "l",
            "choppedEntity": "l"
        }
    },
    {
        "chopped": {
            "question": "what is the translation of dennis rodmans nickname ",
            "query": "SELECT ?ans1 WHERE { wd:Q201608 p:P1449 ?s . ?s ps:P1449 ?x FILTER(contains(?x,'Adivina quien viene esta noche')) . ?s pq:P2441 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Dennis Rodman nickname ?s . ?s nickname ?x FILTER(contains(?x,'Adivina quien viene esta noche')) . ?s literal translation ?ans1}"
        },
        "original": {
            "question": "What is the translation of Dennis Rodman's nickname 'Adivina quien viene esta noche'",
            "query": "SELECT ?value WHERE { wd:Q201608 p:P1449 ?s . ?s ps:P1449 ?x FILTER(contains(?x,'Adivina quien viene esta noche')) . ?s pq:P2441 ?value}",
            "NLQuery": "SELECT ?value WHERE { Dennis Rodman nickname ?s . ?s nickname ?x FILTER(contains(?x,'Adivina quien viene esta noche')) . ?s literal translation ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "adivina quien viene esta noche",
            "choppedEntity": "adivina quien viene esta noche"
        }
    },
    {
        "chopped": {
            "question": "what is the of dennis rendition  nickname ",
            "query": "SELECT ?ans1 WHERE { wd:Q201608 p:P1449 ?s . ?s ps:P1449 ?x FILTER(contains(?x,'Adivina quien viene esta noche')) . ?s pq:P2441 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Dennis Rodman nickname ?s . ?s nickname ?x FILTER(contains(?x,'Adivina quien viene esta noche')) . ?s literal translation ?ans1}"
        },
        "original": {
            "question": "What is the of Dennis rendition  nickname 'Adivina quien viene esta noche'",
            "query": "SELECT ?value WHERE { wd:Q201608 p:P1449 ?s . ?s ps:P1449 ?x FILTER(contains(?x,'Adivina quien viene esta noche')) . ?s pq:P2441 ?value}",
            "NLQuery": "SELECT ?value WHERE { Dennis Rodman nickname ?s . ?s nickname ?x FILTER(contains(?x,'Adivina quien viene esta noche')) . ?s literal translation ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "adivina quien viene esta noche",
            "choppedEntity": "adivina quien viene esta noche"
        }
    },
    {
        "chopped": {
            "question": "what are the internet working devices that contain the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1067099 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of internetworking . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the internet working devices that contain the word internet in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1067099 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'internet')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of internetworking . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'internet')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "internet in their name",
            "choppedEntity": "internet"
        }
    },
    {
        "chopped": {
            "question": "what are internet working devices in their name that contain the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1067099 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of internetworking . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are internet working devices in their name that contain the word internet",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1067099 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'internet')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of internetworking . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'internet')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "internet",
            "choppedEntity": "internet"
        }
    },
    {
        "chopped": {
            "question": "what was richard feynman nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q39246 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Richard Feynman nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Richard Feynman nominated for in 1960",
            "query": "SELECT ?obj WHERE { wd:Q39246 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1960')) }",
            "NLQuery": "SELECT ?obj WHERE { Richard Feynman nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1960')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1960",
            "choppedEntity": "1960"
        }
    },
    {
        "chopped": {
            "question": "for which award was richard feynman nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q39246 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Richard Feynman nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "For which award was Richard Feynman nominated for in 1960",
            "query": "SELECT ?obj WHERE { wd:Q39246 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1960')) }",
            "NLQuery": "SELECT ?obj WHERE { Richard Feynman nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1960')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1960",
            "choppedEntity": "1960"
        }
    },
    {
        "chopped": {
            "question": "name an isotope of neutronium with weak interaction that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q12525553 . ?ans1 wdt:P517 wd:Q11418 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of isotope of neutronium . ?ans1 interaction weak interaction . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name an isotope of neutronium with weak interaction that contains the word \"neutron\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12525553 . ?sbj wdt:P517 wd:Q11418 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'neutron')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of isotope of neutronium . ?sbj interaction weak interaction . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'neutron')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "neutron in its name",
            "choppedEntity": "neutron"
        }
    },
    {
        "chopped": {
            "question": "name an isotope of neutronium with weak interaction that includes the phrase ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q12525553 . ?ans1 wdt:P517 wd:Q11418 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of isotope of neutronium . ?ans1 interaction weak interaction . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name an isotope of neutronium with weak interaction that includes the phrase \"neutron\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12525553 . ?sbj wdt:P517 wd:Q11418 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'neutron')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of isotope of neutronium . ?sbj interaction weak interaction . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'neutron')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "neutron in its name",
            "choppedEntity": "neutron"
        }
    },
    {
        "chopped": {
            "question": "what is the image of the flag of moldavia that began in ",
            "query": "SELECT ?ans1 WHERE { wd:Q10957559 p:P41 ?s . ?s ps:P41 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Principality of Moldavia flag image ?s . ?s flag image ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What is the image of the flag of Moldavia that began in 1834",
            "query": "SELECT ?obj WHERE { wd:Q10957559 p:P41 ?s . ?s ps:P41 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1834')) }",
            "NLQuery": "SELECT ?obj WHERE { Principality of Moldavia flag image ?s . ?s flag image ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1834')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1834",
            "choppedEntity": "1834"
        }
    },
    {
        "chopped": {
            "question": "show me the flag of moldavia from ",
            "query": "SELECT ?ans1 WHERE { wd:Q10957559 p:P41 ?s . ?s ps:P41 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Principality of Moldavia flag image ?s . ?s flag image ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Show me the flag of Moldavia from 1834.",
            "query": "SELECT ?obj WHERE { wd:Q10957559 p:P41 ?s . ?s ps:P41 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1834')) }",
            "NLQuery": "SELECT ?obj WHERE { Principality of Moldavia flag image ?s . ?s flag image ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1834')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1834",
            "choppedEntity": "1834"
        }
    },
    {
        "chopped": {
            "question": "what territorial entity has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1496967 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of territorial entity . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What territorial entity has the word zuph in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1496967 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zuph')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of territorial entity . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zuph')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "zuph in its name",
            "choppedEntity": "zuph"
        }
    },
    {
        "chopped": {
            "question": "what regional substance has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1496967 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of territorial entity . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What regional substance has the word zuph in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1496967 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zuph')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of territorial entity . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zuph')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "zuph in its name",
            "choppedEntity": "zuph"
        }
    },
    {
        "chopped": {
            "question": "what award did james d watson receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q83333 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { James D. Watson award received ?s . ?s award received ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did James D. Watson receive in 1985",
            "query": "SELECT ?obj WHERE { wd:Q83333 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1985')) }",
            "NLQuery": "SELECT ?obj WHERE { James D. Watson award received ?s . ?s award received ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1985')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1985",
            "choppedEntity": "1985"
        }
    },
    {
        "chopped": {
            "question": "what was the population of florida in ",
            "query": "SELECT ?ans1 WHERE { wd:Q812 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Florida population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of Florida in 1940",
            "query": "SELECT ?obj WHERE { wd:Q812 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1940')) }",
            "NLQuery": "SELECT ?obj WHERE { Florida population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1940')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1940",
            "choppedEntity": "1940"
        }
    },
    {
        "chopped": {
            "question": "name a food ingredient made of elaeis guineensis that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q25403900 . ?ans1 wdt:P1582 wd:Q165403 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of food ingredient . ?ans1 natural product of taxon Elaeis guineensis . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a food ingredient made of Elaeis guineensis that starts with letter O",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q25403900 . ?sbj wdt:P1582 wd:Q165403 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'o')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of food ingredient . ?sbj natural product of taxon Elaeis guineensis . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'o')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "o",
            "choppedEntity": "o"
        }
    },
    {
        "chopped": {
            "question": "name a food ingredient made of elaeis guineensis that begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q25403900 . ?ans1 wdt:P1582 wd:Q165403 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of food ingredient . ?ans1 natural product of taxon Elaeis guineensis . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a food ingredient made of Elaeis guineensis that begins with letter O",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q25403900 . ?sbj wdt:P1582 wd:Q165403 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'o')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of food ingredient . ?sbj natural product of taxon Elaeis guineensis . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'o')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "o",
            "choppedEntity": "o"
        }
    },
    {
        "chopped": {
            "question": "which is the constitution which starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q7755 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of constitution . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the constitution which starts with the letter f",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7755 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'f')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of constitution . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'f')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "f",
            "choppedEntity": "f"
        }
    },
    {
        "chopped": {
            "question": "give me the constitution that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q7755 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of constitution . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Give me the constitution that starts with the letter F.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7755 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'f')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of constitution . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'f')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "f",
            "choppedEntity": "f"
        }
    },
    {
        "chopped": {
            "question": "where will the journey of the voyager 2 spacecraft end, given the semi-major axis of ",
            "query": "SELECT ?ans1 WHERE { wd:Q48475 wdt:P1444 ?ans1 . ?ans1 wdt:P2233 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Voyager 2 destination point ?ans1 . ?ans1 semi-major axis of an orbit ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Where will the journey of the Voyager 2 spacecraft end, given the semi-major axis of 9.53668",
            "query": "SELECT ?answer WHERE { wd:Q48475 wdt:P1444 ?answer . ?answer wdt:P2233 ?x FILTER(contains(?x,'9.53668'))}",
            "NLQuery": "SELECT ?answer WHERE { Voyager 2 destination point ?answer . ?answer semi-major axis of an orbit ?x FILTER(contains(?x,'9.53668'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "953668",
            "choppedEntity": "9.53668"
        }
    },
    {
        "chopped": {
            "question": "who was claude francoiss partner in ",
            "query": "SELECT ?ans1 WHERE { wd:Q365985 p:P451 ?s . ?s ps:P451 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Claude Fran\u00e7ois unmarried partner ?s . ?s unmarried partner ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was Claude Francois's partner in 1964",
            "query": "SELECT ?obj WHERE { wd:Q365985 p:P451 ?s . ?s ps:P451 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1964')) }",
            "NLQuery": "SELECT ?obj WHERE { Claude Fran\u00e7ois unmarried partner ?s . ?s unmarried partner ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1964')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1964",
            "choppedEntity": "1964"
        }
    },
    {
        "chopped": {
            "question": "give me the name of claude francoiss partner in ",
            "query": "SELECT ?ans1 WHERE { wd:Q365985 p:P451 ?s . ?s ps:P451 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Claude Fran\u00e7ois unmarried partner ?s . ?s unmarried partner ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Give me the name of Claude Francois's partner in 1964.",
            "query": "SELECT ?obj WHERE { wd:Q365985 p:P451 ?s . ?s ps:P451 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1964')) }",
            "NLQuery": "SELECT ?obj WHERE { Claude Fran\u00e7ois unmarried partner ?s . ?s unmarried partner ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1964')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1964",
            "choppedEntity": "1964"
        }
    },
    {
        "chopped": {
            "question": "tell me art whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q735 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of art . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me art whose name has the word typography in it",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q735 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'typography')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of art . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'typography')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "typography in it",
            "choppedEntity": "typography"
        }
    },
    {
        "chopped": {
            "question": "let me know craftsmanship whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q735 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of art . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know craftsmanship whose title has the word typography in it",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q735 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'typography')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of art . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'typography')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "typography in it",
            "choppedEntity": "typography"
        }
    },
    {
        "chopped": {
            "question": "who was the composer of the super mario bros theme and was born august 13, ",
            "query": "SELECT ?ans1 WHERE { wd:Q871513 wdt:P86 ?ans1 . ?ans1 wdt:P569 ?x FILTER(contains(YEAR(?x),?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Super Mario Bros. theme composer ?ans1 . ?ans1 date of birth ?x FILTER(contains(YEAR(?x),?unknown))}"
        },
        "original": {
            "question": "Who was the composer of the Super Mario Bros. theme and was born August 13, 1961",
            "query": "SELECT ?answer WHERE { wd:Q871513 wdt:P86 ?answer . ?answer wdt:P569 ?x FILTER(contains(YEAR(?x),'1961'))}",
            "NLQuery": "SELECT ?answer WHERE { Super Mario Bros. theme composer ?answer . ?answer date of birth ?x FILTER(contains(YEAR(?x),'1961'))}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1961",
            "choppedEntity": "1961"
        }
    },
    {
        "chopped": {
            "question": "who used to be the composer of the super mario bros theme and was born august 13, ",
            "query": "SELECT ?ans1 WHERE { wd:Q871513 wdt:P86 ?ans1 . ?ans1 wdt:P569 ?x FILTER(contains(YEAR(?x),?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Super Mario Bros. theme composer ?ans1 . ?ans1 date of birth ?x FILTER(contains(YEAR(?x),?unknown))}"
        },
        "original": {
            "question": "Who used to be the composer of the Super Mario Bros. theme and was born August 13, 1961",
            "query": "SELECT ?answer WHERE { wd:Q871513 wdt:P86 ?answer . ?answer wdt:P569 ?x FILTER(contains(YEAR(?x),'1961'))}",
            "NLQuery": "SELECT ?answer WHERE { Super Mario Bros. theme composer ?answer . ?answer date of birth ?x FILTER(contains(YEAR(?x),'1961'))}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1961",
            "choppedEntity": "1961"
        }
    },
    {
        "chopped": {
            "question": "when did the weimar republic release de-weimarer ",
            "query": "SELECT ?ans1 WHERE { wd:Q41304 p:P989 ?s . ?s ps:P989 ?x FILTER(contains(?x,'De-Weimarer Republik-Teil-2-article.ogg')) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Weimar Republic spoken text audio ?s . ?s spoken text audio ?x FILTER(contains(?x,'De-Weimarer Republik-Teil-2-article.ogg')) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did the Weimar Republic release De-Weimarer Republik-Teil-2-article.ogg",
            "query": "SELECT ?value WHERE { wd:Q41304 p:P989 ?s . ?s ps:P989 ?x FILTER(contains(?x,'De-Weimarer Republik-Teil-2-article.ogg')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Weimar Republic spoken text audio ?s . ?s spoken text audio ?x FILTER(contains(?x,'De-Weimarer Republik-Teil-2-article.ogg')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "republik-teil-2-articleogg",
            "choppedEntity": "de-weimarer republik-teil-2-article.ogg"
        }
    },
    {
        "chopped": {
            "question": "what are the narrative which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1318295 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of narrative . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the narrative which start with the letter visitor",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1318295 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'visitor')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of narrative . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'visitor')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "visitor",
            "choppedEntity": "visitor"
        }
    },
    {
        "chopped": {
            "question": "what is a software company in the watson business division with the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1058914 . ?ans1 wdt:P199 wd:Q12253 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of software company . ?ans1 business division Watson . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is a software company in the Watson business division with the word \"ibm\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1058914 . ?sbj wdt:P199 wd:Q12253 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ibm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of software company . ?sbj business division Watson . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ibm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "ibm in its name",
            "choppedEntity": "ibm"
        }
    },
    {
        "chopped": {
            "question": "what is a software corporation in the watson business division with the phrase ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1058914 . ?ans1 wdt:P199 wd:Q12253 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of software company . ?ans1 business division Watson . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is a software corporation in the Watson business division with the phrase \"ibm\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1058914 . ?sbj wdt:P199 wd:Q12253 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ibm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of software company . ?sbj business division Watson . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ibm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "ibm in its name",
            "choppedEntity": "ibm"
        }
    },
    {
        "chopped": {
            "question": "sumy oblast was a citizen of what country in ",
            "query": "SELECT ?ans1 WHERE { wd:Q170446 p:P17 ?s . ?s ps:P17 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Sumy Oblast country ?s . ?s country ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Sumy Oblast was a citizen of what country in 1991",
            "query": "SELECT ?obj WHERE { wd:Q170446 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1991')) }",
            "NLQuery": "SELECT ?obj WHERE { Sumy Oblast country ?s . ?s country ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1991')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1991",
            "choppedEntity": "1991"
        }
    },
    {
        "chopped": {
            "question": "what country was sumy oblast a citizen of in ",
            "query": "SELECT ?ans1 WHERE { wd:Q170446 p:P17 ?s . ?s ps:P17 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Sumy Oblast country ?s . ?s country ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What country was Sumy Oblast a citizen of in 1991",
            "query": "SELECT ?obj WHERE { wd:Q170446 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1991')) }",
            "NLQuery": "SELECT ?obj WHERE { Sumy Oblast country ?s . ?s country ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1991')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1991",
            "choppedEntity": "1991"
        }
    },
    {
        "chopped": {
            "question": "what are the interface standard  which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q6046311 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of interface standard . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the interface standard  which start with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6046311 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of interface standard . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what are the interface standard which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q6046311 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of interface standard . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the interface standard which begin with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6046311 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of interface standard . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "name an art form performed by people playing instruments that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q56055944 . ?ans1 wdt:P3095 wd:Q1278335 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of art form . ?ans1 practiced by instrumentalist . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name an art form performed by people playing instruments that starts with letter M",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56055944 . ?sbj wdt:P3095 wd:Q1278335 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of art form . ?sbj practiced by instrumentalist . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "m",
            "choppedEntity": "m"
        }
    },
    {
        "chopped": {
            "question": "title an craftsmanship shape performed by individuals playing rebellious that begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q56055944 . ?ans1 wdt:P3095 wd:Q1278335 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of art form . ?ans1 practiced by instrumentalist . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Title an craftsmanship shape performed by individuals playing rebellious that begins with letter M",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56055944 . ?sbj wdt:P3095 wd:Q1278335 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of art form . ?sbj practiced by instrumentalist . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "m",
            "choppedEntity": "m"
        }
    },
    {
        "chopped": {
            "question": "when did french polynesia have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q30971 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { French Polynesia population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did French Polynesia have a population of 223734",
            "query": "SELECT ?value WHERE { wd:Q30971 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'223734.0')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { French Polynesia population ?s . ?s population ?x FILTER(contains(?x,'223734.0')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "223734",
            "choppedEntity": "223734.0"
        }
    },
    {
        "chopped": {
            "question": "what was tilburgs population on janary 1, ",
            "query": "SELECT ?ans1 WHERE { wd:Q26430 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Tilburg population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Tilburg's population on Janary 1, 1895",
            "query": "SELECT ?obj WHERE { wd:Q26430 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1895')) }",
            "NLQuery": "SELECT ?obj WHERE { Tilburg population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1895')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1895",
            "choppedEntity": "1895"
        }
    },
    {
        "chopped": {
            "question": "what economic branch starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q268592 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of industry . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What economic branch starts with the letter \"t\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q268592 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of industry . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what financial department begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q268592 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of industry . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What financial department begins with the letter \"t\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q268592 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of industry . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what what is fossil taxon parent taxon trilobitomorpha and also which starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q23038290 . ?ans1 wdt:P171 wd:Q1210232 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of fossil taxon . ?ans1 parent taxon Trilobitomorpha . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What what is fossil taxon parent taxon trilobitomorpha and also which starts with letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23038290 . ?sbj wdt:P171 wd:Q1210232 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of fossil taxon . ?sbj parent taxon Trilobitomorpha . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what what is fossil taxon mum or dad taxon trilobitomorpha and also which begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q23038290 . ?ans1 wdt:P171 wd:Q1210232 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of fossil taxon . ?ans1 parent taxon Trilobitomorpha . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What what is fossil taxon mum or dad taxon trilobitomorpha and also which begins with letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23038290 . ?sbj wdt:P171 wd:Q1210232 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of fossil taxon . ?sbj parent taxon Trilobitomorpha . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what are the stellar evolution which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q6472 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of stellar evolution . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the stellar evolution which start with the letter k",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6472 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of stellar evolution . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "k",
            "choppedEntity": "k"
        }
    },
    {
        "chopped": {
            "question": "what are the stellar advancement which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q6472 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of stellar evolution . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the stellar advancement which begin with the letter k",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6472 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of stellar evolution . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "k",
            "choppedEntity": "k"
        }
    },
    {
        "chopped": {
            "question": "who was fred perrys wife in ",
            "query": "SELECT ?ans1 WHERE { wd:Q312639 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Fred Perry spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was Fred Perry's wife in 1940",
            "query": "SELECT ?obj WHERE { wd:Q312639 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1940')) }",
            "NLQuery": "SELECT ?obj WHERE { Fred Perry spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1940')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1940",
            "choppedEntity": "1940"
        }
    },
    {
        "chopped": {
            "question": "who was fred perry married to in ",
            "query": "SELECT ?ans1 WHERE { wd:Q312639 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Fred Perry spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was Fred Perry married to in 1940",
            "query": "SELECT ?obj WHERE { wd:Q312639 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1940')) }",
            "NLQuery": "SELECT ?obj WHERE { Fred Perry spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1940')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1940",
            "choppedEntity": "1940"
        }
    },
    {
        "chopped": {
            "question": "what territory was yaroslavl a part of on 10 march ",
            "query": "SELECT ?ans1 WHERE { wd:Q2423 p:P131 ?s . ?s ps:P131 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Yaroslavl located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What territory was Yaroslavl a part of on 10 March 1936",
            "query": "SELECT ?obj WHERE { wd:Q2423 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1936')) }",
            "NLQuery": "SELECT ?obj WHERE { Yaroslavl located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1936')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1936",
            "choppedEntity": "1936"
        }
    },
    {
        "chopped": {
            "question": "what region was yaroslavl a piece of on 10 march ",
            "query": "SELECT ?ans1 WHERE { wd:Q2423 p:P131 ?s . ?s ps:P131 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Yaroslavl located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What region was Yaroslavl a piece of on 10 March 1936",
            "query": "SELECT ?obj WHERE { wd:Q2423 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1936')) }",
            "NLQuery": "SELECT ?obj WHERE { Yaroslavl located in the administrative territorial entity ?s . ?s located in the administrative territorial entity ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1936')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1936",
            "choppedEntity": "1936"
        }
    },
    {
        "chopped": {
            "question": "which flavored tea that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3526264 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of flavored tea . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which Flavored tea that contains the word grey in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3526264 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'grey')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of flavored tea . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'grey')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "grey in their name",
            "choppedEntity": "grey"
        }
    },
    {
        "chopped": {
            "question": "which flavored tea in their name contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3526264 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of flavored tea . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which flavored tea in their name contains the word gray",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3526264 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'grey')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of flavored tea . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'grey')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "gray",
            "choppedEntity": "grey"
        }
    },
    {
        "chopped": {
            "question": "what are the municipality of west bengal which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q18918041 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of municipality of West Bengal . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the municipality of West Bengal which start with the letter titagarh",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18918041 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'titagarh')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of municipality of West Bengal . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'titagarh')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "titagarh",
            "choppedEntity": "titagarh"
        }
    },
    {
        "chopped": {
            "question": "what are the district of west bengal which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q18918041 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of municipality of West Bengal . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the district of West Bengal which begin with the letter titagarh",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18918041 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'titagarh')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of municipality of West Bengal . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'titagarh')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "titagarh",
            "choppedEntity": "titagarh"
        }
    },
    {
        "chopped": {
            "question": "who performed symphony no 9 for the first time on may 7th, ",
            "query": "SELECT ?ans1 WHERE { wd:Q11989 p:P1191 ?s . ?s ps:P1191 ?x FILTER(contains(YEAR(?x),?unknown)) . ?s pq:P175 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Symphony No. 9 date of first performance ?s . ?s date of first performance ?x FILTER(contains(YEAR(?x),?unknown)) . ?s performer ?ans1}"
        },
        "original": {
            "question": "Who performed Symphony No. 9 for the first time on May 7th, 1824",
            "query": "SELECT ?value WHERE { wd:Q11989 p:P1191 ?s . ?s ps:P1191 ?x FILTER(contains(YEAR(?x),'1824')) . ?s pq:P175 ?value}",
            "NLQuery": "SELECT ?value WHERE { Symphony No. 9 date of first performance ?s . ?s date of first performance ?x FILTER(contains(YEAR(?x),'1824')) . ?s performer ?value}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1824",
            "choppedEntity": "1824"
        }
    },
    {
        "chopped": {
            "question": "who did edward teller marry on february 24, ",
            "query": "SELECT ?ans1 WHERE { wd:Q6733 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Edward Teller spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who did Edward Teller marry on February 24, 1934",
            "query": "SELECT ?obj WHERE { wd:Q6733 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1934')) }",
            "NLQuery": "SELECT ?obj WHERE { Edward Teller spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1934')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1934",
            "choppedEntity": "1934"
        }
    },
    {
        "chopped": {
            "question": "who married edward teller on february 24, ",
            "query": "SELECT ?ans1 WHERE { wd:Q6733 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Edward Teller spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who married Edward Teller on February 24, 1934",
            "query": "SELECT ?obj WHERE { wd:Q6733 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1934')) }",
            "NLQuery": "SELECT ?obj WHERE { Edward Teller spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1934')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1934",
            "choppedEntity": "1934"
        }
    },
    {
        "chopped": {
            "question": "what award did erik axel karlfeldt receive on january 1st, ",
            "query": "SELECT ?ans1 WHERE { wd:Q134641 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Erik Axel Karlfeldt award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Erik Axel Karlfeldt receive on January 1st, 1916",
            "query": "SELECT ?obj WHERE { wd:Q134641 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1916')) }",
            "NLQuery": "SELECT ?obj WHERE { Erik Axel Karlfeldt award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1916')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1916",
            "choppedEntity": "1916"
        }
    },
    {
        "chopped": {
            "question": "what was kingdom of sicilys capital in the year of ",
            "query": "SELECT ?ans1 WHERE { wd:Q188586 p:P36 ?s . ?s ps:P36 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Kingdom of Sicily capital ?s . ?s capital ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Kingdom of Sicily's capital in the year of 1816",
            "query": "SELECT ?obj WHERE { wd:Q188586 p:P36 ?s . ?s ps:P36 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1816')) }",
            "NLQuery": "SELECT ?obj WHERE { Kingdom of Sicily capital ?s . ?s capital ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1816')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1816",
            "choppedEntity": "1816"
        }
    },
    {
        "chopped": {
            "question": "tell me type of number  whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q47460393 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of type of number . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me type of number  whose name has the word number in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q47460393 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'number')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of type of number . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'number')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "number in it",
            "choppedEntity": "number"
        }
    },
    {
        "chopped": {
            "question": "which is the type of number whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q47460393 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of type of number . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the type of number whose name has the word number in it",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q47460393 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'number')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of type of number . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'number')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "number in it",
            "choppedEntity": "number"
        }
    },
    {
        "chopped": {
            "question": "name a skyscraper designed by atkins that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q18142 . ?ans1 wdt:P631 wd:Q1510450 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of high-rise building . ?ans1 structural engineer Atkins . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a skyscraper designed by Atkins that contains the word \"Al\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18142 . ?sbj wdt:P631 wd:Q1510450 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'al')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of high-rise building . ?sbj structural engineer Atkins . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'al')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "al in its name",
            "choppedEntity": "al"
        }
    },
    {
        "chopped": {
            "question": "name a skyscraper designed with the aid of atkins that includes the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q18142 . ?ans1 wdt:P631 wd:Q1510450 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of high-rise building . ?ans1 structural engineer Atkins . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a skyscraper designed with the aid of Atkins that includes the word \"Al\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18142 . ?sbj wdt:P631 wd:Q1510450 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'al')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of high-rise building . ?sbj structural engineer Atkins . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'al')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "al in its name",
            "choppedEntity": "al"
        }
    },
    {
        "chopped": {
            "question": "what is the fraser river coordinate locations is it ",
            "query": "SELECT ?ans1 WHERE { wd:Q269710 p:P625 ?s . ?s ps:P625 ?x FILTER(contains(?x,?unknown)) . ?s pq:P518 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Fraser River coordinate location ?s . ?s coordinate location ?x FILTER(contains(?x,?unknown)) . ?s applies to part ?ans1}"
        },
        "original": {
            "question": "What is the Fraser River coordinate locations is it -118.317",
            "query": "SELECT ?value WHERE { wd:Q269710 p:P625 ?s . ?s ps:P625 ?x FILTER(contains(?x,'-118.317')) . ?s pq:P518 ?value}",
            "NLQuery": "SELECT ?value WHERE { Fraser River coordinate location ?s . ?s coordinate location ?x FILTER(contains(?x,'-118.317')) . ?s applies to part ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "-118317",
            "choppedEntity": "-118.317"
        }
    },
    {
        "chopped": {
            "question": "tell me musikdrama whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q279272 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Musikdrama . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me Musikdrama whose name has the word parsifal in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q279272 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'parsifal')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Musikdrama . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'parsifal')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "parsifal in it",
            "choppedEntity": "parsifal"
        }
    },
    {
        "chopped": {
            "question": "which music drama, contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q279272 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Musikdrama . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which music drama, contains the word parsifal in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q279272 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'parsifal')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Musikdrama . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'parsifal')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "parsifal in its name",
            "choppedEntity": "parsifal"
        }
    },
    {
        "chopped": {
            "question": "what are the action which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q4026292 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of action . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the action which start with the letter \u00f4x\u00ea",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4026292 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), '\u00f4x\u00ea')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of action . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), '\u00f4x\u00ea')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u00f4x\u00ea",
            "choppedEntity": "\u00f4x\u00ea"
        }
    },
    {
        "chopped": {
            "question": "tell me protestantism whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q23540 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Protestantism . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me Protestantism whose name has the word huguenot in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23540 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'huguenot')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Protestantism . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'huguenot')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "huguenot in it",
            "choppedEntity": "huguenot"
        }
    },
    {
        "chopped": {
            "question": "let me know protestantism whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q23540 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Protestantism . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know Protestantism whose title has the word huguenot in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23540 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'huguenot')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Protestantism . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'huguenot')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "huguenot in it",
            "choppedEntity": "huguenot"
        }
    },
    {
        "chopped": {
            "question": "name a social skill useful in the media jobs that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1413287 . ?ans1 wdt:P1535 wd:Q17502905 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of social skills . ?ans1 used by the media . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a social skill useful in the media jobs that starts with letter C",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1413287 . ?sbj wdt:P1535 wd:Q17502905 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of social skills . ?sbj used by the media . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "c",
            "choppedEntity": "c"
        }
    },
    {
        "chopped": {
            "question": "which social skill is useful in the media jobs beginning with alphabet ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1413287 . ?ans1 wdt:P1535 wd:Q17502905 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of social skills . ?ans1 used by the media . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which social skill is useful in the media jobs beginning with alphabet C",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1413287 . ?sbj wdt:P1535 wd:Q17502905 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of social skills . ?sbj used by the media . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "c",
            "choppedEntity": "c"
        }
    },
    {
        "chopped": {
            "question": "tell me which is the polygon which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q37555 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Polygon . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me which is the polygon which contains the word trapezoid in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q37555 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'trapezoid')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Polygon . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'trapezoid')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "trapezoid in its name",
            "choppedEntity": "trapezoid"
        }
    },
    {
        "chopped": {
            "question": "let me know which is the polygon which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q37555 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Polygon . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know which is the polygon which contains the word trapezoid in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q37555 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'trapezoid')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Polygon . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'trapezoid')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "trapezoid in its name",
            "choppedEntity": "trapezoid"
        }
    },
    {
        "chopped": {
            "question": "what was the population of kiel on december 31st, ",
            "query": "SELECT ?ans1 WHERE { wd:Q1707 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Kiel population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of Kiel on December 31st, 2015",
            "query": "SELECT ?obj WHERE { wd:Q1707 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2015')) }",
            "NLQuery": "SELECT ?obj WHERE { Kiel population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2015')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2015",
            "choppedEntity": "2015"
        }
    },
    {
        "chopped": {
            "question": "which population of kiel on december 31st,",
            "query": "SELECT ?ans1 WHERE { wd:Q1707 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Kiel population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "which population of kiel on december 31st,2015",
            "query": "SELECT ?obj WHERE { wd:Q1707 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2015')) }",
            "NLQuery": "SELECT ?obj WHERE { Kiel population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2015')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2015",
            "choppedEntity": "2015"
        }
    },
    {
        "chopped": {
            "question": "what what is  mineral acid conjugate base hydrogen sulfate ion which that starts with letters ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q408683 . ?ans1 wdt:P4149 wd:Q3143743 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of mineral acid . ?ans1 conjugate base hydrogen sulfate ion . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What what is  mineral acid conjugate base hydrogen sulfate ion which that starts with letters a",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q408683 . ?sbj wdt:P4149 wd:Q3143743 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of mineral acid . ?sbj conjugate base hydrogen sulfate ion . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "what what is mineral acid conjugate base hydrogen sulfate ion which that begins with letters ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q408683 . ?ans1 wdt:P4149 wd:Q3143743 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of mineral acid . ?ans1 conjugate base hydrogen sulfate ion . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What what is mineral acid conjugate base hydrogen sulfate ion which that begins with letters a",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q408683 . ?sbj wdt:P4149 wd:Q3143743 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of mineral acid . ?sbj conjugate base hydrogen sulfate ion . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "when did ismailia governorate have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q31067 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ismailia Governorate population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Ismailia Governorate have a population of 1303993",
            "query": "SELECT ?value WHERE { wd:Q31067 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'1303993')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ismailia Governorate population ?s . ?s population ?x FILTER(contains(?x,'1303993')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "1303993",
            "choppedEntity": "1303993"
        }
    },
    {
        "chopped": {
            "question": "on what date ismailia governorate have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q31067 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ismailia Governorate population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "on what date ismailia Governorate have a population of 1303993",
            "query": "SELECT ?value WHERE { wd:Q31067 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'1303993')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ismailia Governorate population ?s . ?s population ?x FILTER(contains(?x,'1303993')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "1303993",
            "choppedEntity": "1303993"
        }
    },
    {
        "chopped": {
            "question": "which is the dissolution of an administrative territorial entity that has belavezha accords as main regulatory text and whose name contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q18603729 . ?ans1 wdt:P92 wd:Q76986 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of dissolution of an administrative territorial entity . ?ans1 main regulatory text Belavezha Accords . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the dissolution of an administrative territorial entity that has Belavezha Accords as main regulatory text and whose name contains the word dissolution",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18603729 . ?sbj wdt:P92 wd:Q76986 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'dissolution')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of dissolution of an administrative territorial entity . ?sbj main regulatory text Belavezha Accords . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'dissolution')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "dissolution",
            "choppedEntity": "dissolution"
        }
    },
    {
        "chopped": {
            "question": "which is the disintegration of an regulatory regional substance that has belavezha concurs as primary administrative content and whose title contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q18603729 . ?ans1 wdt:P92 wd:Q76986 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of dissolution of an administrative territorial entity . ?ans1 main regulatory text Belavezha Accords . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the disintegration of an regulatory regional substance that has Belavezha Concurs as primary administrative content and whose title contains the word dissolution",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18603729 . ?sbj wdt:P92 wd:Q76986 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'dissolution')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of dissolution of an administrative territorial entity . ?sbj main regulatory text Belavezha Accords . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'dissolution')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "dissolution",
            "choppedEntity": "dissolution"
        }
    },
    {
        "chopped": {
            "question": "when did the arabian peninsula have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q31945 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Arabian Peninsula population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did the Arabian Peninsula have a population of 4.74665e+07",
            "query": "SELECT ?value WHERE { wd:Q31945 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'4.74665e+07')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Arabian Peninsula population ?s . ?s population ?x FILTER(contains(?x,'4.74665e+07')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "474665e+07",
            "choppedEntity": "4.74665e+07"
        }
    },
    {
        "chopped": {
            "question": "at what point was the arabian peninsula population recorded as being ",
            "query": "SELECT ?ans1 WHERE { wd:Q31945 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Arabian Peninsula population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "At what point was the Arabian Peninsula population recorded as being 4.74665e+07",
            "query": "SELECT ?value WHERE { wd:Q31945 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'4.74665e+07')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Arabian Peninsula population ?s . ?s population ?x FILTER(contains(?x,'4.74665e+07')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "474665e+07",
            "choppedEntity": "4.74665e+07"
        }
    },
    {
        "chopped": {
            "question": "which academic discipline starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11862829 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of academic discipline . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which academic discipline starts with the letter z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11862829 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of academic discipline . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "which scholarly teach begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11862829 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of academic discipline . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which scholarly teach begins with the letter z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11862829 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of academic discipline . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "how many visitors per year does british museum get in ",
            "query": "SELECT ?ans1 WHERE { wd:Q6373 p:P1174 ?s . ?s ps:P1174 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { British Museum visitors per year ?s . ?s visitors per year ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "How many visitors per year does British Museum get in 2016",
            "query": "SELECT ?obj WHERE { wd:Q6373 p:P1174 ?s . ?s ps:P1174 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2016')) }",
            "NLQuery": "SELECT ?obj WHERE { British Museum visitors per year ?s . ?s visitors per year ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2016')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2016",
            "choppedEntity": "2016"
        }
    },
    {
        "chopped": {
            "question": "tell me which is the capital that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q5119 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of capital . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me which is the capital that contains the word yao in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5119 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yao')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of capital . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yao')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "yao in its name",
            "choppedEntity": "yao"
        }
    },
    {
        "chopped": {
            "question": "let me know which is the capital that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q5119 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of capital . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know which is the capital that contains the word yao in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5119 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yao')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of capital . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yao')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "yao in its name",
            "choppedEntity": "yao"
        }
    },
    {
        "chopped": {
            "question": "what was the award of trondheim received in ",
            "query": "SELECT ?ans1 WHERE { wd:Q25804 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Trondheim award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the award of Trondheim received in 2008",
            "query": "SELECT ?obj WHERE { wd:Q25804 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2008')) }",
            "NLQuery": "SELECT ?obj WHERE { Trondheim award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2008')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2008",
            "choppedEntity": "2008"
        }
    },
    {
        "chopped": {
            "question": "what unit of time starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1790144 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of unit of time . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What unit of time starts with \"z\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1790144 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of unit of time . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "what unit of time begins with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1790144 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of unit of time . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What unit of time begins with \"z\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1790144 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of unit of time . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "what award did robert aumann receive on january 1, ",
            "query": "SELECT ?ans1 WHERE { wd:Q157235 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Robert Aumann award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Robert Aumann receive on January 1, 2001",
            "query": "SELECT ?obj WHERE { wd:Q157235 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2005')) }",
            "NLQuery": "SELECT ?obj WHERE { Robert Aumann award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2005')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2001",
            "choppedEntity": "2005"
        }
    },
    {
        "chopped": {
            "question": "what type of award was received by peter debye in ",
            "query": "SELECT ?ans1 WHERE { wd:Q103835 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Peter Debye award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What type of award was received by Peter Debye in 1937",
            "query": "SELECT ?obj WHERE { wd:Q103835 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1937')) }",
            "NLQuery": "SELECT ?obj WHERE { Peter Debye award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1937')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1937",
            "choppedEntity": "1937"
        }
    },
    {
        "chopped": {
            "question": "what are the taxation which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1964442 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of taxation . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the taxation which start with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1964442 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of taxation . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what are the taxation which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1964442 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of taxation . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the taxation which begin with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1964442 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of taxation . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "name the country formerly known as old toronto that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2319498 . ?ans1 wdt:P131 wd:Q919169 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of landmark . ?ans1 located in the administrative territorial entity Old Toronto . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name the country formerly known as Old Toronto that contains the word \"Cn\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2319498 . ?sbj wdt:P131 wd:Q919169 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'cn')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of landmark . ?sbj located in the administrative territorial entity Old Toronto . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'cn')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "cn in its name",
            "choppedEntity": "cn"
        }
    },
    {
        "chopped": {
            "question": "name the u  s  a  previously regarded as old toronto that contains the phrase ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2319498 . ?ans1 wdt:P131 wd:Q919169 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of landmark . ?ans1 located in the administrative territorial entity Old Toronto . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name the u . s . a . previously regarded as Old Toronto that contains the phrase \"Cn\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2319498 . ?sbj wdt:P131 wd:Q919169 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'cn')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of landmark . ?sbj located in the administrative territorial entity Old Toronto . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'cn')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "cn in its name",
            "choppedEntity": "cn"
        }
    },
    {
        "chopped": {
            "question": "what is the opposite of blueshift, that is represented by the variable ",
            "query": "SELECT ?ans1 WHERE { wd:Q845345 wdt:P461 ?ans1 . ?ans1 wdt:P416 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { blueshift opposite of ?ans1 . ?ans1 quantity symbol (string) ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the opposite of blueshift, that is represented by the variable z",
            "query": "SELECT ?answer WHERE { wd:Q845345 wdt:P461 ?answer . ?answer wdt:P416 ?x FILTER(contains(?x,'z'))}",
            "NLQuery": "SELECT ?answer WHERE { blueshift opposite of ?answer . ?answer quantity symbol (string) ?x FILTER(contains(?x,'z'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "tell me fan convention whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1129398 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of fan convention . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me fan convention whose name has the word vidcon in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1129398 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vidcon')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of fan convention . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vidcon')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "vidcon in it",
            "choppedEntity": "vidcon"
        }
    },
    {
        "chopped": {
            "question": "let me know fan tradition whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1129398 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of fan convention . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know fan tradition whose title has the word vidcon in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1129398 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vidcon')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of fan convention . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vidcon')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "vidcon in it",
            "choppedEntity": "vidcon"
        }
    },
    {
        "chopped": {
            "question": "what is the temperature for benzene at density ",
            "query": "SELECT ?ans1 WHERE { wd:Q2270 p:P2054 ?s . ?s ps:P2054 ?x FILTER(contains(?x,?unknown)) . ?s pq:P2076 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { benzene density ?s . ?s density ?x FILTER(contains(?x,?unknown)) . ?s temperature ?ans1}"
        },
        "original": {
            "question": "What is the temperature for benzene at density 0.88",
            "query": "SELECT ?value WHERE { wd:Q2270 p:P2054 ?s . ?s ps:P2054 ?x FILTER(contains(?x,'0.88')) . ?s pq:P2076 ?value}",
            "NLQuery": "SELECT ?value WHERE { benzene density ?s . ?s density ?x FILTER(contains(?x,'0.88')) . ?s temperature ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "088",
            "choppedEntity": "0.88"
        }
    },
    {
        "chopped": {
            "question": "give the temperature for benzene at density ",
            "query": "SELECT ?ans1 WHERE { wd:Q2270 p:P2054 ?s . ?s ps:P2054 ?x FILTER(contains(?x,?unknown)) . ?s pq:P2076 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { benzene density ?s . ?s density ?x FILTER(contains(?x,?unknown)) . ?s temperature ?ans1}"
        },
        "original": {
            "question": "Give the temperature for benzene at density 0.88.",
            "query": "SELECT ?value WHERE { wd:Q2270 p:P2054 ?s . ?s ps:P2054 ?x FILTER(contains(?x,'0.88')) . ?s pq:P2076 ?value}",
            "NLQuery": "SELECT ?value WHERE { benzene density ?s . ?s density ?x FILTER(contains(?x,'0.88')) . ?s temperature ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "088",
            "choppedEntity": "0.88"
        }
    },
    {
        "chopped": {
            "question": "for what john elway was in nomination in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q432931 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { John Elway nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "For what John Elway was in nomination in the year 1992",
            "query": "SELECT ?obj WHERE { wd:Q432931 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1992')) }",
            "NLQuery": "SELECT ?obj WHERE { John Elway nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1992')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1992",
            "choppedEntity": "1992"
        }
    },
    {
        "chopped": {
            "question": "what is the reason for john elway was in nomination in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q432931 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { John Elway nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "what is the reason for John Elway was in nomination in the year 1992",
            "query": "SELECT ?obj WHERE { wd:Q432931 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1992')) }",
            "NLQuery": "SELECT ?obj WHERE { John Elway nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1992')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1992",
            "choppedEntity": "1992"
        }
    },
    {
        "chopped": {
            "question": "tell me summit whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1072326 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of summit . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me summit whose name has the word summit in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1072326 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'summit')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of summit . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'summit')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "summit in it",
            "choppedEntity": "summit"
        }
    },
    {
        "chopped": {
            "question": "tell me television character whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15773317 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of television character . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me television character whose name has the word viper in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15773317 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'viper')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of television character . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'viper')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "viper in it",
            "choppedEntity": "viper"
        }
    },
    {
        "chopped": {
            "question": "disclose me television character whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15773317 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of television character . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Disclose me television character whose name has the word viper in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15773317 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'viper')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of television character . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'viper')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "viper in it",
            "choppedEntity": "viper"
        }
    },
    {
        "chopped": {
            "question": "who was carrier fishers spouse prior to their divorce on jan 1st, ",
            "query": "SELECT ?ans1 WHERE { wd:Q108941 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Carrie Fisher spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was Carrier Fisher's spouse prior to their divorce on Jan 1st, 1983",
            "query": "SELECT ?obj WHERE { wd:Q108941 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1984')) }",
            "NLQuery": "SELECT ?obj WHERE { Carrie Fisher spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1984')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1983",
            "choppedEntity": "1984"
        }
    },
    {
        "chopped": {
            "question": "name the carrier fishers spouse prior to their divorce on jan 1st, ",
            "query": "SELECT ?ans1 WHERE { wd:Q108941 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Carrie Fisher spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Name the Carrier Fisher's spouse prior to their divorce on Jan 1st, 1983.",
            "query": "SELECT ?obj WHERE { wd:Q108941 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1984')) }",
            "NLQuery": "SELECT ?obj WHERE { Carrie Fisher spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1984')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1983",
            "choppedEntity": "1984"
        }
    },
    {
        "chopped": {
            "question": "what is the lowest point of kerala that has a gps location of 9425, ",
            "query": "SELECT ?ans1 WHERE { wd:Q1186 wdt:P1589 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Kerala lowest point ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the lowest point of Kerala that has a GPS location of 9.425, 76.463888888889",
            "query": "SELECT ?answer WHERE { wd:Q1186 wdt:P1589 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'9.425 76.463888888889'))}",
            "NLQuery": "SELECT ?answer WHERE { Kerala lowest point ?answer . ?answer coordinate location ?x FILTER(contains(?x,'9.425 76.463888888889'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "76463888888889",
            "choppedEntity": "9.425 76.463888888889"
        }
    },
    {
        "chopped": {
            "question": "what are the electromagnetic radiation which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q12969754 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of electromagnetic radiation . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the electromagnetic radiation which start with the letter ray",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12969754 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ray')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of electromagnetic radiation . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ray')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "ray",
            "choppedEntity": "ray"
        }
    },
    {
        "chopped": {
            "question": "what is taxon parent of populus, which has the vernacular name of ",
            "query": "SELECT ?ans1 WHERE { wd:Q25356 wdt:P171 ?ans1 . ?ans1 wdt:P1843 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Populus parent taxon ?ans1 . ?ans1 taxon common name ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is taxon parent of Populus, which has the vernacular name of \u30e4\u30ca\u30ae\u79d1",
            "query": "SELECT ?answer WHERE { wd:Q25356 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'\u30e4\u30ca\u30ae\u79d1'))}",
            "NLQuery": "SELECT ?answer WHERE { Populus parent taxon ?answer . ?answer taxon common name ?x FILTER(contains(?x,'\u30e4\u30ca\u30ae\u79d1'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u30e4\u30ca\u30ae\u79d1",
            "choppedEntity": "\u30e4\u30ca\u30ae\u79d1"
        }
    },
    {
        "chopped": {
            "question": "what is taxon parent of populus, which has the vernacular title of ",
            "query": "SELECT ?ans1 WHERE { wd:Q25356 wdt:P171 ?ans1 . ?ans1 wdt:P1843 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Populus parent taxon ?ans1 . ?ans1 taxon common name ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is taxon parent of Populus, which has the vernacular title of \u30e4\u30ca\u30ae\u79d1",
            "query": "SELECT ?answer WHERE { wd:Q25356 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'\u30e4\u30ca\u30ae\u79d1'))}",
            "NLQuery": "SELECT ?answer WHERE { Populus parent taxon ?answer . ?answer taxon common name ?x FILTER(contains(?x,'\u30e4\u30ca\u30ae\u79d1'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u30e4\u30ca\u30ae\u79d1",
            "choppedEntity": "\u30e4\u30ca\u30ae\u79d1"
        }
    },
    {
        "chopped": {
            "question": "who is the taxon parent of manatee having a common name as ",
            "query": "SELECT ?ans1 WHERE { wd:Q42797 wdt:P171 ?ans1 . ?ans1 wdt:P1843 ?x FILTER(contains(?x,'Morfuwch'))}",
            "NLQuery": "SELECT ?ans1 WHERE { Trichechus parent taxon ?ans1 . ?ans1 taxon common name ?x FILTER(contains(?x,'Morfuwch'))}"
        },
        "original": {
            "question": "Who is the taxon parent of manatee having a common name as Morfuwch",
            "query": "SELECT ?answer WHERE { wd:Q42797 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'Morfuwch'))}",
            "NLQuery": "SELECT ?answer WHERE { Trichechus parent taxon ?answer . ?answer taxon common name ?x FILTER(contains(?x,'Morfuwch'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "morfuwch",
            "choppedEntity": "morfuwch"
        }
    },
    {
        "chopped": {
            "question": "who is the taxon dad or mum of manatee having a frequent title as ",
            "query": "SELECT ?ans1 WHERE { wd:Q42797 wdt:P171 ?ans1 . ?ans1 wdt:P1843 ?x FILTER(contains(?x,'Morfuwch'))}",
            "NLQuery": "SELECT ?ans1 WHERE { Trichechus parent taxon ?ans1 . ?ans1 taxon common name ?x FILTER(contains(?x,'Morfuwch'))}"
        },
        "original": {
            "question": "Who is the taxon dad or mum of manatee having a frequent title as Morfuwch",
            "query": "SELECT ?answer WHERE { wd:Q42797 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'Morfuwch'))}",
            "NLQuery": "SELECT ?answer WHERE { Trichechus parent taxon ?answer . ?answer taxon common name ?x FILTER(contains(?x,'Morfuwch'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "morfuwch",
            "choppedEntity": "morfuwch"
        }
    },
    {
        "chopped": {
            "question": "where did george grosz live in ",
            "query": "SELECT ?ans1 WHERE { wd:Q107194 p:P551 ?s . ?s ps:P551 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { George Grosz residence ?s . ?s residence ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Where did George Grosz live in 1933",
            "query": "SELECT ?obj WHERE { wd:Q107194 p:P551 ?s . ?s ps:P551 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1933')) }",
            "NLQuery": "SELECT ?obj WHERE { George Grosz residence ?s . ?s residence ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1933')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1933",
            "choppedEntity": "1933"
        }
    },
    {
        "chopped": {
            "question": "who was steven seagals spouse on september 5, ",
            "query": "SELECT ?ans1 WHERE { wd:Q82110 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Steven Seagal spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was Steven Seagal's spouse on September 5, 1987",
            "query": "SELECT ?obj WHERE { wd:Q82110 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1987')) }",
            "NLQuery": "SELECT ?obj WHERE { Steven Seagal spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1987')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1987",
            "choppedEntity": "1987"
        }
    },
    {
        "chopped": {
            "question": "who was steven seagal married to on september 5th, ",
            "query": "SELECT ?ans1 WHERE { wd:Q82110 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Steven Seagal spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was Steven Seagal married to on September 5th, 1987",
            "query": "SELECT ?obj WHERE { wd:Q82110 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1987')) }",
            "NLQuery": "SELECT ?obj WHERE { Steven Seagal spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1987')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1987",
            "choppedEntity": "1987"
        }
    },
    {
        "chopped": {
            "question": "tell me the aircraft family which begins with alphabet ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15056993 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of aircraft family . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the aircraft family which begins with alphabet v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15056993 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of aircraft family . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "disclose me the aircraft family which starts with alphabet ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15056993 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of aircraft family . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "disclose me the aircraft family which starts with alphabet v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15056993 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of aircraft family . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "when did uruguay have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q77 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Uruguay population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Uruguay have a population of 3.03105e+06",
            "query": "SELECT ?value WHERE { wd:Q77 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'3.03105e+06')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Uruguay population ?s . ?s population ?x FILTER(contains(?x,'3.03105e+06')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "303105e+06",
            "choppedEntity": "3.03105e+06"
        }
    },
    {
        "chopped": {
            "question": "what year did uruguay have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q77 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Uruguay population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "What year did Uruguay have a population of 3.03105e+06",
            "query": "SELECT ?value WHERE { wd:Q77 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'3.03105e+06')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Uruguay population ?s . ?s population ?x FILTER(contains(?x,'3.03105e+06')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "303105e+06",
            "choppedEntity": "3.03105e+06"
        }
    },
    {
        "chopped": {
            "question": "what is the deathplace of henry purcell, that current inhabits ",
            "query": "SELECT ?ans1 WHERE { wd:Q9695 wdt:P20 ?ans1 . ?ans1 wdt:P1082 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Henry Purcell place of death ?ans1 . ?ans1 population ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "\"What is the deathplace of Henry Purcell, that current inhabits 8787892\"",
            "query": "SELECT ?answer WHERE { wd:Q9695 wdt:P20 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'8787892'))}",
            "NLQuery": "SELECT ?answer WHERE { Henry Purcell place of death ?answer . ?answer population ?x FILTER(contains(?x,'8787892'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "8787892",
            "choppedEntity": "8787892"
        }
    },
    {
        "chopped": {
            "question": "what is the deathplace of henry purcell, that present day inhabits ",
            "query": "SELECT ?ans1 WHERE { wd:Q9695 wdt:P20 ?ans1 . ?ans1 wdt:P1082 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Henry Purcell place of death ?ans1 . ?ans1 population ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "\"What is the deathplace of Henry Purcell, that present day inhabits 8787892\"",
            "query": "SELECT ?answer WHERE { wd:Q9695 wdt:P20 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'8787892'))}",
            "NLQuery": "SELECT ?answer WHERE { Henry Purcell place of death ?answer . ?answer population ?x FILTER(contains(?x,'8787892'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "8787892",
            "choppedEntity": "8787892"
        }
    },
    {
        "chopped": {
            "question": "what position did john mcewen hold on the 19th december ",
            "query": "SELECT ?ans1 WHERE { wd:Q23386 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { John McEwen position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What position did John McEwen hold on the 19th December 1967",
            "query": "SELECT ?obj WHERE { wd:Q23386 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1967')) }",
            "NLQuery": "SELECT ?obj WHERE { John McEwen position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1967')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1967",
            "choppedEntity": "1967"
        }
    },
    {
        "chopped": {
            "question": "what archaeological period starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15401633 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of archaeological period . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What archaeological period starts with the letter \"s\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15401633 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of archaeological period . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "name the archaeological period that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15401633 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of archaeological period . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name the archaeological period that starts with the letter \"s\".",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15401633 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of archaeological period . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what are the diagnostic test which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1762591 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of diagnostic test . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the diagnostic test which start with the letter z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1762591 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of diagnostic test . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "what are the symptomatic test which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1762591 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of diagnostic test . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the symptomatic test which begin with the letter z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1762591 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of diagnostic test . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "what instance of  the taungoo dynasty was created in ",
            "query": "SELECT ?ans1 WHERE { wd:Q519718 p:P571 ?s . ?s ps:P571 ?x FILTER(contains(YEAR(?x),?unknown)) . ?s pq:P31 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Taungoo Dynasty inception ?s . ?s inception ?x FILTER(contains(YEAR(?x),?unknown)) . ?s instance of ?ans1}"
        },
        "original": {
            "question": "What instance of  the Taungoo Dynasty was created in 1486",
            "query": "SELECT ?value WHERE { wd:Q519718 p:P571 ?s . ?s ps:P571 ?x FILTER(contains(YEAR(?x),'1486')) . ?s pq:P31 ?value}",
            "NLQuery": "SELECT ?value WHERE { Taungoo Dynasty inception ?s . ?s inception ?x FILTER(contains(YEAR(?x),'1486')) . ?s instance of ?value}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1486",
            "choppedEntity": "1486"
        }
    },
    {
        "chopped": {
            "question": "name an organization ruled by brendan the navigator that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q55983715 . ?ans1 wdt:P417 wd:Q208961 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of organisms known by a particular common name . ?ans1 patron saint Brendan the Navigator . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name an organization ruled by Brendan the Navigator that starts with letter W",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55983715 . ?sbj wdt:P417 wd:Q208961 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of organisms known by a particular common name . ?sbj patron saint Brendan the Navigator . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "title an organization ruled by brendan the pilot that begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q55983715 . ?ans1 wdt:P417 wd:Q208961 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of organisms known by a particular common name . ?ans1 patron saint Brendan the Navigator . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Title an organization ruled by Brendan the Pilot that begins with letter W",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55983715 . ?sbj wdt:P417 wd:Q208961 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of organisms known by a particular common name . ?sbj patron saint Brendan the Navigator . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "where tsai ing-wen had her collegre degree on ",
            "query": "SELECT ?ans1 WHERE { wd:Q233984 p:P69 ?s . ?s ps:P69 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Tsai Ing-wen educated at ?s . ?s educated at ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Where Tsai Ing-wen had her collegre degree on 1978",
            "query": "SELECT ?obj WHERE { wd:Q233984 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1978')) }",
            "NLQuery": "SELECT ?obj WHERE { Tsai Ing-wen educated at ?s . ?s educated at ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1978')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1978",
            "choppedEntity": "1978"
        }
    },
    {
        "chopped": {
            "question": "what year the tsai ing-wern was granted a college degree on ",
            "query": "SELECT ?ans1 WHERE { wd:Q233984 p:P69 ?s . ?s ps:P69 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Tsai Ing-wen educated at ?s . ?s educated at ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What year the Tsai Ing-wern was granted a college degree on 1978",
            "query": "SELECT ?obj WHERE { wd:Q233984 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1978')) }",
            "NLQuery": "SELECT ?obj WHERE { Tsai Ing-wen educated at ?s . ?s educated at ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1978')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1978",
            "choppedEntity": "1978"
        }
    },
    {
        "chopped": {
            "question": "what was georges simenon nominated for in 1",
            "query": "SELECT ?ans1 WHERE { wd:Q128790 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Georges Simenon nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Georges Simenon nominated for in 1965 ",
            "query": "SELECT ?obj WHERE { wd:Q128790 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1965')) }",
            "NLQuery": "SELECT ?obj WHERE { Georges Simenon nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1965')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1965",
            "choppedEntity": "1965"
        }
    },
    {
        "chopped": {
            "question": "when was the art of painting was started which was ended in ",
            "query": "SELECT ?ans1 WHERE { wd:Q588695 p:P571 ?s . ?s ps:P571 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { The Art of Painting inception ?s . ?s inception ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "When was the Art of Painting was started which was ended in 1668",
            "query": "SELECT ?obj WHERE { wd:Q588695 p:P571 ?s . ?s ps:P571 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1668')) }",
            "NLQuery": "SELECT ?obj WHERE { The Art of Painting inception ?s . ?s inception ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1668')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1668",
            "choppedEntity": "1668"
        }
    },
    {
        "chopped": {
            "question": "when did angeles have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q55741 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Angeles population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Angeles have a population of 134544",
            "query": "SELECT ?value WHERE { wd:Q55741 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'134544.0')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Angeles population ?s . ?s population ?x FILTER(contains(?x,'134544.0')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "134544",
            "choppedEntity": "134544.0"
        }
    },
    {
        "chopped": {
            "question": "in what year did angeles have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q55741 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Angeles population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "In what year did Angeles have a population of 134544",
            "query": "SELECT ?value WHERE { wd:Q55741 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'134544.0')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Angeles population ?s . ?s population ?x FILTER(contains(?x,'134544.0')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "134544",
            "choppedEntity": "134544.0"
        }
    },
    {
        "chopped": {
            "question": "what is branch of science in physics studies and also which starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2465832 . ?ans1 wdt:P2578 wd:Q413 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of branch of science . ?ans1 studies physics . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what is branch of science in physics studies and also which starts with letter e",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2465832 . ?sbj wdt:P2578 wd:Q413 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of branch of science . ?sbj studies physics . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "e",
            "choppedEntity": "e"
        }
    },
    {
        "chopped": {
            "question": "what is branch of science in physics research and also which starts offevolved with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2465832 . ?ans1 wdt:P2578 wd:Q413 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of branch of science . ?ans1 studies physics . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what is branch of science in physics research and also which starts offevolved with letter e",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2465832 . ?sbj wdt:P2578 wd:Q413 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of branch of science . ?sbj studies physics . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "e",
            "choppedEntity": "e"
        }
    },
    {
        "chopped": {
            "question": "what are the craft which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2207288 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of craft . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the craft which start with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2207288 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of craft . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what are the craft which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2207288 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of craft . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the craft which begin with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2207288 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of craft . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what is a pseudovector that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q621476 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of pseudovector . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is a pseudovector that starts with the letter a.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q621476 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of pseudovector . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "what could be a pseudovector that begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q621476 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of pseudovector . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What could be a pseudovector that begins with the letter a.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q621476 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of pseudovector . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "what is the population of miami in ",
            "query": "SELECT ?ans1 WHERE { wd:Q8652 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Miami population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What is the population of Miami in 2010",
            "query": "SELECT ?obj WHERE { wd:Q8652 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2010')) }",
            "NLQuery": "SELECT ?obj WHERE { Miami population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2010')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2010",
            "choppedEntity": "2010"
        }
    },
    {
        "chopped": {
            "question": "401 lakhs ",
            "query": "SELECT ?ans1 WHERE { wd:Q8652 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Miami population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "4.01 lakhs (2010)",
            "query": "SELECT ?obj WHERE { wd:Q8652 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2010')) }",
            "NLQuery": "SELECT ?obj WHERE { Miami population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2010')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "(2010)",
            "choppedEntity": "2010"
        }
    },
    {
        "chopped": {
            "question": "who became the editor of glamour in ",
            "query": "SELECT ?ans1 WHERE { wd:Q472870 p:P98 ?s . ?s ps:P98 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Glamour editor ?s . ?s editor ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who became the editor of Glamour in 1998",
            "query": "SELECT ?obj WHERE { wd:Q472870 p:P98 ?s . ?s ps:P98 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1998')) }",
            "NLQuery": "SELECT ?obj WHERE { Glamour editor ?s . ?s editor ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1998')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1998",
            "choppedEntity": "1998"
        }
    },
    {
        "chopped": {
            "question": "who was the editor of glamour in ",
            "query": "SELECT ?ans1 WHERE { wd:Q472870 p:P98 ?s . ?s ps:P98 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Glamour editor ?s . ?s editor ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was the editor of Glamour in 1998.",
            "query": "SELECT ?obj WHERE { wd:Q472870 p:P98 ?s . ?s ps:P98 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1998')) }",
            "NLQuery": "SELECT ?obj WHERE { Glamour editor ?s . ?s editor ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1998')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1998",
            "choppedEntity": "1998"
        }
    },
    {
        "chopped": {
            "question": "when was the population of baltimore ",
            "query": "SELECT ?ans1 WHERE { wd:Q5092 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Baltimore population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was the population of Baltimore 622,104",
            "query": "SELECT ?value WHERE { wd:Q5092 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'622104')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Baltimore population ?s . ?s population ?x FILTER(contains(?x,'622104')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "622,104",
            "choppedEntity": "622104"
        }
    },
    {
        "chopped": {
            "question": "tell me category in the k\u00f6ppen climate classification system starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q23702033 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of category in the K\u00f6ppen climate classification system . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "tell me category in the K\u00f6ppen climate classification system starts with c",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23702033 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of category in the K\u00f6ppen climate classification system . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "c",
            "choppedEntity": "c"
        }
    },
    {
        "chopped": {
            "question": "disclose me category in the k\u00f6ppen climate classification system starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q23702033 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of category in the K\u00f6ppen climate classification system . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Disclose me category in the K\u00f6ppen climate classification system starts with c",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23702033 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of category in the K\u00f6ppen climate classification system . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "c",
            "choppedEntity": "c"
        }
    },
    {
        "chopped": {
            "question": "tell me the name of the bank that starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q22687 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of bank . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the name of the bank that starts with \"u\".",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22687 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of bank . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "tell me the name of the bank that begins with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q22687 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of bank . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the name of the bank that begins with \"u\".",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22687 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of bank . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "who did mary mccarthy divorce in ",
            "query": "SELECT ?ans1 WHERE { wd:Q268147 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mary McCarthy spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who did Mary McCarthy divorce in 1946",
            "query": "SELECT ?obj WHERE { wd:Q268147 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1946')) }",
            "NLQuery": "SELECT ?obj WHERE { Mary McCarthy spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1946')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1946",
            "choppedEntity": "1946"
        }
    },
    {
        "chopped": {
            "question": "which was the person that mary mccarthy divorced from in ",
            "query": "SELECT ?ans1 WHERE { wd:Q268147 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mary McCarthy spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which was the person that Mary McCarthy divorced from in 1946",
            "query": "SELECT ?obj WHERE { wd:Q268147 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1946')) }",
            "NLQuery": "SELECT ?obj WHERE { Mary McCarthy spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1946')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1946",
            "choppedEntity": "1946"
        }
    },
    {
        "chopped": {
            "question": "what is the instance of republic of genova since the year of ",
            "query": "SELECT ?ans1 WHERE { wd:Q174306 p:P31 ?s . ?s ps:P31 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Republic of Genova instance of ?s . ?s instance of ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What is the instance of Republic of Genova since the year of 1005",
            "query": "SELECT ?obj WHERE { wd:Q174306 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1005')) }",
            "NLQuery": "SELECT ?obj WHERE { Republic of Genova instance of ?s . ?s instance of ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1005')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1005",
            "choppedEntity": "1005"
        }
    },
    {
        "chopped": {
            "question": "what is the republic of genova an example of since the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q174306 p:P31 ?s . ?s ps:P31 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Republic of Genova instance of ?s . ?s instance of ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What is the Republic of Genova an example of since the year 1005",
            "query": "SELECT ?obj WHERE { wd:Q174306 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1005')) }",
            "NLQuery": "SELECT ?obj WHERE { Republic of Genova instance of ?s . ?s instance of ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1005')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1005",
            "choppedEntity": "1005"
        }
    },
    {
        "chopped": {
            "question": "what is academy that starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q162633 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of academy . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what is academy that starts with u",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q162633 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of academy . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "name a public research university that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q62078547 . ?ans1 wdt:P1792 wd:Q9074335 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of public research university . ?ans1 category of associated people Category:McGill University people . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a public research university that starts with letter M",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q62078547 . ?sbj wdt:P1792 wd:Q9074335 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of public research university . ?sbj category of associated people Category:McGill University people . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "m",
            "choppedEntity": "m"
        }
    },
    {
        "chopped": {
            "question": "title a open investigate college that begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q62078547 . ?ans1 wdt:P1792 wd:Q9074335 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of public research university . ?ans1 category of associated people Category:McGill University people . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Title a open investigate college that begins with letter M",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q62078547 . ?sbj wdt:P1792 wd:Q9074335 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of public research university . ?sbj category of associated people Category:McGill University people . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "m",
            "choppedEntity": "m"
        }
    },
    {
        "chopped": {
            "question": "name a trade association that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2178147 . ?ans1 wdt:P1454 wd:Q48204 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of trade association . ?ans1 legal form voluntary association . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a trade association that starts with letter A",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2178147 . ?sbj wdt:P1454 wd:Q48204 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of trade association . ?sbj legal form voluntary association . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "which is the name of a trade association that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2178147 . ?ans1 wdt:P1454 wd:Q48204 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of trade association . ?ans1 legal form voluntary association . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the name of a trade association that starts with letter A",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2178147 . ?sbj wdt:P1454 wd:Q48204 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of trade association . ?sbj legal form voluntary association . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "when did daimier ag have a profit of ",
            "query": "SELECT ?ans1 WHERE { wd:Q27530 p:P2295 ?s . ?s ps:P2295 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Daimler AG net profit ?s . ?s net profit ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Daimier AG have a profit of 8.711e+09",
            "query": "SELECT ?value WHERE { wd:Q27530 p:P2295 ?s . ?s ps:P2295 ?x FILTER(contains(?x,'8.711e+09')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Daimler AG net profit ?s . ?s net profit ?x FILTER(contains(?x,'8.711e+09')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "8711e+09",
            "choppedEntity": "8.711e+09"
        }
    },
    {
        "chopped": {
            "question": "what award did lady gaga receive in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q19848 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Lady Gaga award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Lady Gaga receive in the year 2010",
            "query": "SELECT ?obj WHERE { wd:Q19848 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2010')) }",
            "NLQuery": "SELECT ?obj WHERE { Lady Gaga award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2010')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2010",
            "choppedEntity": "2010"
        }
    },
    {
        "chopped": {
            "question": "name the award received by lady gaga in ",
            "query": "SELECT ?ans1 WHERE { wd:Q19848 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Lady Gaga award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Name the award received by Lady Gaga in 2010.",
            "query": "SELECT ?obj WHERE { wd:Q19848 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2010')) }",
            "NLQuery": "SELECT ?obj WHERE { Lady Gaga award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2010')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2010",
            "choppedEntity": "2010"
        }
    },
    {
        "chopped": {
            "question": "how was it determined that puerto princessa has a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q111739 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P459 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Puerto Princesa population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s determination method ?ans1}"
        },
        "original": {
            "question": "How was it determined that Puerto Princessa has a population of 45,709",
            "query": "SELECT ?value WHERE { wd:Q111739 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'45709.0')) . ?s pq:P459 ?value}",
            "NLQuery": "SELECT ?value WHERE { Puerto Princesa population ?s . ?s population ?x FILTER(contains(?x,'45709.0')) . ?s determination method ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "45,709",
            "choppedEntity": "45709.0"
        }
    },
    {
        "chopped": {
            "question": "tell me greek deity that  sibling zeus starts letter with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q22989102 . ?ans1 wdt:P3373 wd:Q34201 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Greek deity . ?ans1 sibling Zeus . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "tell me greek deity that  sibling zeus starts letter with p",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22989102 . ?sbj wdt:P3373 wd:Q34201 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Greek deity . ?sbj sibling Zeus . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "p",
            "choppedEntity": "p"
        }
    },
    {
        "chopped": {
            "question": "let me know greek god that kin zeus begins letter with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q22989102 . ?ans1 wdt:P3373 wd:Q34201 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Greek deity . ?ans1 sibling Zeus . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "let me know greek god that kin zeus begins letter with p",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22989102 . ?sbj wdt:P3373 wd:Q34201 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Greek deity . ?sbj sibling Zeus . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "p",
            "choppedEntity": "p"
        }
    },
    {
        "chopped": {
            "question": "what are the mineral supergroup which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3977918 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of mineral supergroup . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the mineral supergroup which start with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3977918 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of mineral supergroup . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what is the supergroup of minerals that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3977918 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of mineral supergroup . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is the supergroup of minerals that starts with letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3977918 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of mineral supergroup . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "which category in the koppen climate classification system contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q23702033 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of category in the K\u00f6ppen climate classification system . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which category in the koppen climate classification system contains the word climate in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23702033 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'climate')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of category in the K\u00f6ppen climate classification system . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'climate')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "climate in their name",
            "choppedEntity": "climate"
        }
    },
    {
        "chopped": {
            "question": "which category within the koppen climate classification framework contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q23702033 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of category in the K\u00f6ppen climate classification system . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which category within the koppen climate classification framework contains the word climate in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23702033 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'climate')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of category in the K\u00f6ppen climate classification system . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'climate')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "climate in their name",
            "choppedEntity": "climate"
        }
    },
    {
        "chopped": {
            "question": "what award was received by mairead maguire in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q157655 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mairead Maguire award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award was received by Mairead maguire in the year 1976",
            "query": "SELECT ?obj WHERE { wd:Q157655 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1976')) }",
            "NLQuery": "SELECT ?obj WHERE { Mairead Maguire award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1976')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1976",
            "choppedEntity": "1976"
        }
    },
    {
        "chopped": {
            "question": "give me the name of the award that was received by mairead maguire in ",
            "query": "SELECT ?ans1 WHERE { wd:Q157655 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mairead Maguire award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Give me the name of the award that was received by Mairead maguire in 1976.",
            "query": "SELECT ?obj WHERE { wd:Q157655 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1976')) }",
            "NLQuery": "SELECT ?obj WHERE { Mairead Maguire award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1976')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1976",
            "choppedEntity": "1976"
        }
    },
    {
        "chopped": {
            "question": "what award did ninette de valois receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q234436 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Ninette de Valois award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Ninette de Valois receive in 1964",
            "query": "SELECT ?obj WHERE { wd:Q234436 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1964')) }",
            "NLQuery": "SELECT ?obj WHERE { Ninette de Valois award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1964')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1964",
            "choppedEntity": "1964"
        }
    },
    {
        "chopped": {
            "question": "what is based in the italian front and has a total area of ",
            "query": "SELECT ?ans1 WHERE { wd:Q659745 wdt:P276 ?ans1 . ?ans1 wdt:P2046 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Italian Front location ?ans1 . ?ans1 area ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is based in the Italian front and has a total area of 130000.0",
            "query": "SELECT ?answer WHERE { wd:Q659745 wdt:P276 ?answer . ?answer wdt:P2046 ?x FILTER(contains(?x,'130000.0'))}",
            "NLQuery": "SELECT ?answer WHERE { Italian Front location ?answer . ?answer area ?x FILTER(contains(?x,'130000.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "1300000",
            "choppedEntity": "130000.0"
        }
    },
    {
        "chopped": {
            "question": "what is based within the italian front and incorporates a add up to region of ",
            "query": "SELECT ?ans1 WHERE { wd:Q659745 wdt:P276 ?ans1 . ?ans1 wdt:P2046 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Italian Front location ?ans1 . ?ans1 area ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is based within the Italian front and incorporates a add up to region of 130000.0",
            "query": "SELECT ?answer WHERE { wd:Q659745 wdt:P276 ?answer . ?answer wdt:P2046 ?x FILTER(contains(?x,'130000.0'))}",
            "NLQuery": "SELECT ?answer WHERE { Italian Front location ?answer . ?answer area ?x FILTER(contains(?x,'130000.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "1300000",
            "choppedEntity": "130000.0"
        }
    },
    {
        "chopped": {
            "question": "what is the name of the administrative centre of the canary islands, that has gps co-ordinates ",
            "query": "SELECT ?ans1 WHERE { wd:Q5813 wdt:P36 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Canary Islands capital ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the name of the administrative centre of the Canary Islands, that has gps co-ordinates 8.1333-81.45",
            "query": "SELECT ?answer WHERE { wd:Q5813 wdt:P36 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'8.1333 -81.45'))}",
            "NLQuery": "SELECT ?answer WHERE { Canary Islands capital ?answer . ?answer coordinate location ?x FILTER(contains(?x,'8.1333 -81.45'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "81333-8145",
            "choppedEntity": "8.1333 -81.45"
        }
    },
    {
        "chopped": {
            "question": "tell me  film whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11424 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of film . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me  film whose name has the word yor in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11424 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yor')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of film . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yor')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "yor in it",
            "choppedEntity": "yor"
        }
    },
    {
        "chopped": {
            "question": "tell me the movie whose name contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11424 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of film . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the movie whose name contains the word yor.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11424 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yor')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of film . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yor')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "yor",
            "choppedEntity": "yor"
        }
    },
    {
        "chopped": {
            "question": "tell me child birth was starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q34581 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of childbirth . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "tell me child birth was starts with J",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q34581 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'j')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of childbirth . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'j')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "j",
            "choppedEntity": "j"
        }
    },
    {
        "chopped": {
            "question": "let me know child birth was begins with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q34581 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of childbirth . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "let me know child birth was begins with J",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q34581 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'j')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of childbirth . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'j')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "j",
            "choppedEntity": "j"
        }
    },
    {
        "chopped": {
            "question": "what arew the administrative territorial entity of russia that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q192287 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of subdivisions of Russia . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What arew the administrative territorial entity of Russia that contains the word tomsk in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q192287 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tomsk')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of subdivisions of Russia . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tomsk')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "tomsk in their name",
            "choppedEntity": "tomsk"
        }
    },
    {
        "chopped": {
            "question": "what arew the administrative territorial entity of russia that incorporates the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q192287 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of subdivisions of Russia . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What arew the administrative territorial entity of Russia that incorporates the word tomsk in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q192287 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tomsk')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of subdivisions of Russia . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tomsk')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "tomsk in their name",
            "choppedEntity": "tomsk"
        }
    },
    {
        "chopped": {
            "question": "tell me the folk saint that is named after saint nicholas and starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q5464477 . ?ans1 wdt:P138 wd:Q44269 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of folk saint . ?ans1 named after Saint Nicholas . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the folk saint that is named after Saint Nicholas and starts with the letter c",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5464477 . ?sbj wdt:P138 wd:Q44269 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of folk saint . ?sbj named after Saint Nicholas . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "c",
            "choppedEntity": "c"
        }
    },
    {
        "chopped": {
            "question": "tell me the people saint that is named after saint nicholas and begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q5464477 . ?ans1 wdt:P138 wd:Q44269 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of folk saint . ?ans1 named after Saint Nicholas . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the people saint that is named after Saint Nicholas and begins with the letter c",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5464477 . ?sbj wdt:P138 wd:Q44269 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of folk saint . ?sbj named after Saint Nicholas . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "c",
            "choppedEntity": "c"
        }
    },
    {
        "chopped": {
            "question": "what is the death place of kukrit pramoj, of which the wgs 84 is ",
            "query": "SELECT ?ans1 WHERE { wd:Q959588 wdt:P20 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Kukrit Pramoj place of death ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the death place of Kukrit Pramoj, of which the wgs 84 is 13.75",
            "query": "SELECT ?answer WHERE { wd:Q959588 wdt:P20 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'13.75'))}",
            "NLQuery": "SELECT ?answer WHERE { Kukrit Pramoj place of death ?answer . ?answer coordinate location ?x FILTER(contains(?x,'13.75'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "1375",
            "choppedEntity": "13.75"
        }
    },
    {
        "chopped": {
            "question": "what is the passing put of kukrit pramoj, of which the wgs 84 is ",
            "query": "SELECT ?ans1 WHERE { wd:Q959588 wdt:P20 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Kukrit Pramoj place of death ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the passing put of Kukrit Pramoj, of which the wgs 84 is 13.75",
            "query": "SELECT ?answer WHERE { wd:Q959588 wdt:P20 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'13.75'))}",
            "NLQuery": "SELECT ?answer WHERE { Kukrit Pramoj place of death ?answer . ?answer coordinate location ?x FILTER(contains(?x,'13.75'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "1375",
            "choppedEntity": "13.75"
        }
    },
    {
        "chopped": {
            "question": "what award did igor sikorsky receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q212446 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Igor Sikorsky award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Igor Sikorsky receive in 1967",
            "query": "SELECT ?obj WHERE { wd:Q212446 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1967')) }",
            "NLQuery": "SELECT ?obj WHERE { Igor Sikorsky award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1967')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1967",
            "choppedEntity": "1967"
        }
    },
    {
        "chopped": {
            "question": "give me examples that contain the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3435924 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of computational problem . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Give me examples that contain the word sorting",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3435924 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'sorting')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of computational problem . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'sorting')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "sorting",
            "choppedEntity": "sorting"
        }
    },
    {
        "chopped": {
            "question": "provide me illustrations that contain the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3435924 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of computational problem . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Provide me illustrations that contain the word sorting",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3435924 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'sorting')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of computational problem . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'sorting')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "sorting",
            "choppedEntity": "sorting"
        }
    },
    {
        "chopped": {
            "question": "tell me sport in antiquity whose name that starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q16465962 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of sport in antiquity . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "TELL ME SPORT IN ANTIQUITY WHOSE NAME THAT STARTS WITH P",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16465962 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of sport in antiquity . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "p",
            "choppedEntity": "p"
        }
    },
    {
        "chopped": {
            "question": "which essential medicine  contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q35456 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of essential medicine . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which essential medicine  contains the word vincristine in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q35456 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vincristine')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of essential medicine . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vincristine')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "vincristine in their name",
            "choppedEntity": "vincristine"
        }
    },
    {
        "chopped": {
            "question": "what was the population of caen in ",
            "query": "SELECT ?ans1 WHERE { wd:Q41185 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Caen population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of Caen in 1866",
            "query": "SELECT ?obj WHERE { wd:Q41185 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1866')) }",
            "NLQuery": "SELECT ?obj WHERE { Caen population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1866')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1866",
            "choppedEntity": "1866"
        }
    },
    {
        "chopped": {
            "question": "what shopping day contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q43516519 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of shopping day . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What shopping day contains the word boxing in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q43516519 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'boxing')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of shopping day . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'boxing')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "boxing in its name",
            "choppedEntity": "boxing"
        }
    },
    {
        "chopped": {
            "question": "name a geographic region located in oeania that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q82794 . ?ans1 wdt:P706 wd:Q538 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of geographic region . ?ans1 located on terrain feature Oceania . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a geographic region located in Oeania that starts with letter M",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q82794 . ?sbj wdt:P706 wd:Q538 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of geographic region . ?sbj located on terrain feature Oceania . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "m",
            "choppedEntity": "m"
        }
    },
    {
        "chopped": {
            "question": "title a geographic locale found in oeania that begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q82794 . ?ans1 wdt:P706 wd:Q538 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of geographic region . ?ans1 located on terrain feature Oceania . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Title a geographic locale found in Oeania that begins with letter M",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q82794 . ?sbj wdt:P706 wd:Q538 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of geographic region . ?sbj located on terrain feature Oceania . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "m",
            "choppedEntity": "m"
        }
    },
    {
        "chopped": {
            "question": "what was the last residence of paul gauguin in april ",
            "query": "SELECT ?ans1 WHERE { wd:Q37693 p:P551 ?s . ?s ps:P551 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Paul Gauguin residence ?s . ?s residence ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the last residence of Paul Gauguin in April 1885",
            "query": "SELECT ?obj WHERE { wd:Q37693 p:P551 ?s . ?s ps:P551 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1885')) }",
            "NLQuery": "SELECT ?obj WHERE { Paul Gauguin residence ?s . ?s residence ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1885')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1885",
            "choppedEntity": "1885"
        }
    },
    {
        "chopped": {
            "question": "what is schism starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q41521 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of schism . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHAT IS SCHISM STARTS WITH S",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q41521 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of schism . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what you are schism start",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q41521 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of schism . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHAT YOU ARE SCHISM STARTS",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q41521 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of schism . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "tell me which is the administrative territorial entity of kenya which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3976641 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of administrative territorial entity of Kenya . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me which is the administrative territorial entity of Kenya which contains the word nairobi in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3976641 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'nairobi')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of administrative territorial entity of Kenya . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'nairobi')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "nairobi in its name",
            "choppedEntity": "nairobi"
        }
    },
    {
        "chopped": {
            "question": "tell me what is kenyas territorial administrative entity that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3976641 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of administrative territorial entity of Kenya . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me what is Kenya's territorial administrative entity that contains the word nairobi in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3976641 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'nairobi')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of administrative territorial entity of Kenya . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'nairobi')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "nairobi in its name",
            "choppedEntity": "nairobi"
        }
    },
    {
        "chopped": {
            "question": "was kherson oblast part of ukraine on 3-10-",
            "query": "SELECT ?ans1 WHERE { wd:Q163271 p:P17 ?s . ?s ps:P17 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Kherson Oblast country ?s . ?s country ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Was Kherson Oblast part of Ukraine on 3-10-1919",
            "query": "SELECT ?obj WHERE { wd:Q163271 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1919')) }",
            "NLQuery": "SELECT ?obj WHERE { Kherson Oblast country ?s . ?s country ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1919')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1919",
            "choppedEntity": "1919"
        }
    },
    {
        "chopped": {
            "question": "what was ammans population on january 1, ",
            "query": "SELECT ?ans1 WHERE { wd:Q3805 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Amman population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Amman's population on January 1, 1979",
            "query": "SELECT ?obj WHERE { wd:Q3805 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1979')) }",
            "NLQuery": "SELECT ?obj WHERE { Amman population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1979')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1979",
            "choppedEntity": "1979"
        }
    },
    {
        "chopped": {
            "question": "tell me experiment whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q101965 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of experiment . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me experiment whose name has the word totem in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q101965 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'totem')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of experiment . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'totem')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "totem in it",
            "choppedEntity": "totem"
        }
    },
    {
        "chopped": {
            "question": "disclose to me test whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q101965 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of experiment . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Disclose to me test whose name has the word totem in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q101965 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'totem')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of experiment . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'totem')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "totem in it",
            "choppedEntity": "totem"
        }
    },
    {
        "chopped": {
            "question": "what position did kenneth kaunda hold until 6-21-",
            "query": "SELECT ?ans1 WHERE { wd:Q105480 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Kenneth Kaunda position held ?s . ?s position held ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What position did Kenneth Kaunda hold until 6-21-1971",
            "query": "SELECT ?obj WHERE { wd:Q105480 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1971')) }",
            "NLQuery": "SELECT ?obj WHERE { Kenneth Kaunda position held ?s . ?s position held ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1971')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1971",
            "choppedEntity": "1971"
        }
    },
    {
        "chopped": {
            "question": "what was the population of grand rapids in ",
            "query": "SELECT ?ans1 WHERE { wd:Q184587 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Grand Rapids population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of Grand Rapids in 1888",
            "query": "SELECT ?obj WHERE { wd:Q184587 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1880')) }",
            "NLQuery": "SELECT ?obj WHERE { Grand Rapids population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1880')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1888",
            "choppedEntity": "1880"
        }
    },
    {
        "chopped": {
            "question": "tell me the game variant that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q28807042 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of game variant . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the game variant that starts with the letter b",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28807042 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of game variant . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "b",
            "choppedEntity": "b"
        }
    },
    {
        "chopped": {
            "question": "what are variant of the game that starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q28807042 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of game variant . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are variant of the game that starts with b",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28807042 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of game variant . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "b",
            "choppedEntity": "b"
        }
    },
    {
        "chopped": {
            "question": "how many number of points  in time that the southeast asia school children out ie ",
            "query": "SELECT ?ans1 WHERE { wd:Q11708 p:P2573 ?s . ?s ps:P2573 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Southeast Asia number of out-of-school children ?s . ?s number of out-of-school children ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "How many number of points  in time that the Southeast Asia School children out i.e. 2.73761e+07",
            "query": "SELECT ?value WHERE { wd:Q11708 p:P2573 ?s . ?s ps:P2573 ?x FILTER(contains(?x,'2.73761e+07')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Southeast Asia number of out-of-school children ?s . ?s number of out-of-school children ?x FILTER(contains(?x,'2.73761e+07')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "273761e+07",
            "choppedEntity": "2.73761e+07"
        }
    },
    {
        "chopped": {
            "question": "what number of number of focuses in time that the southeast asia school youngsters out for example ",
            "query": "SELECT ?ans1 WHERE { wd:Q11708 p:P2573 ?s . ?s ps:P2573 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Southeast Asia number of out-of-school children ?s . ?s number of out-of-school children ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "What number of number of focuses in time that the Southeast Asia School youngsters out for example 2.73761e+07",
            "query": "SELECT ?value WHERE { wd:Q11708 p:P2573 ?s . ?s ps:P2573 ?x FILTER(contains(?x,'2.73761e+07')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Southeast Asia number of out-of-school children ?s . ?s number of out-of-school children ?x FILTER(contains(?x,'2.73761e+07')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "273761e+07",
            "choppedEntity": "2.73761e+07"
        }
    },
    {
        "chopped": {
            "question": "which is heptalogy that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q614101 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of heptalogy . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHICH IS HEPTALOGY THAT CONTAINS THE WORD SAGA IN THEIR NAME",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q614101 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'saga')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of heptalogy . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'saga')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "saga in their name",
            "choppedEntity": "saga"
        }
    },
    {
        "chopped": {
            "question": "what is the city in india that is ruled by amritsar municipal corporation and that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q6936225 . ?ans1 wdt:P797 wd:Q58942508 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of municipal corporation in India . ?ans1 authority Amritsar Municipal Corporation . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHat is the city in India that is ruled by Amritsar Municipal Corporation and that contains the word \"amritsar\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6936225 . ?sbj wdt:P797 wd:Q58942508 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'amritsar')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of municipal corporation in India . ?sbj authority Amritsar Municipal Corporation . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'amritsar')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "amritsar in its name",
            "choppedEntity": "amritsar"
        }
    },
    {
        "chopped": {
            "question": "what are the mathematical concept which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q24034552 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of mathematical concept . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the mathematical concept which start with the letter u",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24034552 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of mathematical concept . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "what are the numerical concept which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q24034552 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of mathematical concept . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the numerical concept which begin with the letter u",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24034552 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of mathematical concept . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "tell me which is the astronomical object type which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q17444909 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of astronomical object type . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me which is the astronomical object type which contains the word void in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17444909 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'void')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of astronomical object type . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'void')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "void in its name",
            "choppedEntity": "void"
        }
    },
    {
        "chopped": {
            "question": "tell me what is the type of astronomical object containing the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q17444909 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of astronomical object type . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me what is the type of astronomical object containing the word void in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17444909 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'void')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of astronomical object type . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'void')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "void in its name",
            "choppedEntity": "void"
        }
    },
    {
        "chopped": {
            "question": "when did belgium have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q31 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Belgium population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Belgium have a population of 11,150,516",
            "query": "SELECT ?value WHERE { wd:Q31 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'11150516')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Belgium population ?s . ?s population ?x FILTER(contains(?x,'11150516')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "11,150,516",
            "choppedEntity": "11150516"
        }
    },
    {
        "chopped": {
            "question": "in what year was belgiums population ",
            "query": "SELECT ?ans1 WHERE { wd:Q31 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Belgium population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "In what year was Belgium's population 11,150,516",
            "query": "SELECT ?value WHERE { wd:Q31 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'11150516')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Belgium population ?s . ?s population ?x FILTER(contains(?x,'11150516')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "11,150,516",
            "choppedEntity": "11150516"
        }
    },
    {
        "chopped": {
            "question": "what is the birth location of david dudley field ii with an acreage of ",
            "query": "SELECT ?ans1 WHERE { wd:Q352906 wdt:P19 ?ans1 . ?ans1 wdt:P2046 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { David Dudley Field II place of birth ?ans1 . ?ans1 area ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the birth location of David Dudley Field II with an acreage of 14,357",
            "query": "SELECT ?answer WHERE { wd:Q352906 wdt:P19 ?answer . ?answer wdt:P2046 ?x FILTER(contains(?x,'14357.0'))}",
            "NLQuery": "SELECT ?answer WHERE { David Dudley Field II place of birth ?answer . ?answer area ?x FILTER(contains(?x,'14357.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "14,357",
            "choppedEntity": "14357.0"
        }
    },
    {
        "chopped": {
            "question": "what is the start region of david dudley field ii with an acreage of ",
            "query": "SELECT ?ans1 WHERE { wd:Q352906 wdt:P19 ?ans1 . ?ans1 wdt:P2046 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { David Dudley Field II place of birth ?ans1 . ?ans1 area ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the start region of David Dudley Field II with an acreage of 14,357",
            "query": "SELECT ?answer WHERE { wd:Q352906 wdt:P19 ?answer . ?answer wdt:P2046 ?x FILTER(contains(?x,'14357.0'))}",
            "NLQuery": "SELECT ?answer WHERE { David Dudley Field II place of birth ?answer . ?answer area ?x FILTER(contains(?x,'14357.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "14,357",
            "choppedEntity": "14357.0"
        }
    },
    {
        "chopped": {
            "question": "what are the cat breed whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q43577 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of cat breed . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHAT ARE THE CAT BREED WHOSE NAME HAS THE WORD TOYGER IN IT.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q43577 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'toyger')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of cat breed . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'toyger')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "toyger in it",
            "choppedEntity": "toyger"
        }
    },
    {
        "chopped": {
            "question": "what are the clade which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q713623 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of clade . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the clade which start with the letter x",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q713623 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'x')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of clade . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'x')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "x",
            "choppedEntity": "x"
        }
    },
    {
        "chopped": {
            "question": "what is the class starting with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q713623 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of clade . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is the class starting with the letter x",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q713623 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'x')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of clade . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'x')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "x",
            "choppedEntity": "x"
        }
    },
    {
        "chopped": {
            "question": "buckminster fuller received which award in ",
            "query": "SELECT ?ans1 WHERE { wd:Q102289 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Buckminster Fuller award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Buckminster Fuller received which award in 1968",
            "query": "SELECT ?obj WHERE { wd:Q102289 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1968')) }",
            "NLQuery": "SELECT ?obj WHERE { Buckminster Fuller award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1968')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1968",
            "choppedEntity": "1968"
        }
    },
    {
        "chopped": {
            "question": "which award did buckminster fuller receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q102289 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Buckminster Fuller award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which award did Buckminster Fuller receive in 1968",
            "query": "SELECT ?obj WHERE { wd:Q102289 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1968')) }",
            "NLQuery": "SELECT ?obj WHERE { Buckminster Fuller award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1968')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1968",
            "choppedEntity": "1968"
        }
    },
    {
        "chopped": {
            "question": "which is the shopping day in the day in year periodic occurrence in december 26 that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q43516519 . ?ans1 wdt:P837 wd:Q2761 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of shopping day . ?ans1 day in year for periodic occurrence December 26 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the shopping day in the day in year periodic occurrence in December 26 that starts with the letter b",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q43516519 . ?sbj wdt:P837 wd:Q2761 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of shopping day . ?sbj day in year for periodic occurrence December 26 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "b",
            "choppedEntity": "b"
        }
    },
    {
        "chopped": {
            "question": "which is the shopping day in the day in year periodic occurrence in december 26 that begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q43516519 . ?ans1 wdt:P837 wd:Q2761 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of shopping day . ?ans1 day in year for periodic occurrence December 26 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the shopping day in the day in year periodic occurrence in December 26 that begins with the letter b",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q43516519 . ?sbj wdt:P837 wd:Q2761 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of shopping day . ?sbj day in year for periodic occurrence December 26 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "b",
            "choppedEntity": "b"
        }
    },
    {
        "chopped": {
            "question": "what are the military alliance which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1127126 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of military alliance . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the military alliance which start with the letter u",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1127126 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of military alliance . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "what are the military union which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1127126 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of military alliance . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the military union which begin with the letter u",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1127126 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of military alliance . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "tell me vaccine whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q134808 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of vaccine . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me vaccine whose name has the word vaccine in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q134808 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vaccine')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of vaccine . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vaccine')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "vaccine in it",
            "choppedEntity": "vaccine"
        }
    },
    {
        "chopped": {
            "question": "name a fundamental state of matter that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15831576 . ?ans1 wdt:P1557 wd:Q29147941 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of fundamental state of matter . ?ans1 manifestation of gaseous state of matter . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a fundamental state of matter that starts with letter G",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15831576 . ?sbj wdt:P1557 wd:Q29147941 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'g')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of fundamental state of matter . ?sbj manifestation of gaseous state of matter . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'g')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "g",
            "choppedEntity": "g"
        }
    },
    {
        "chopped": {
            "question": "name a imperative state of rely that begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15831576 . ?ans1 wdt:P1557 wd:Q29147941 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of fundamental state of matter . ?ans1 manifestation of gaseous state of matter . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a imperative state of rely that begins with letter G",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15831576 . ?sbj wdt:P1557 wd:Q29147941 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'g')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of fundamental state of matter . ?sbj manifestation of gaseous state of matter . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'g')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "g",
            "choppedEntity": "g"
        }
    },
    {
        "chopped": {
            "question": "name the state function measured by kelvin units that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q230937 . ?ans1 wdt:P1880 wd:Q11579 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of state function . ?ans1 measurement scale kelvin . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name the state function measured by kelvin units that starts with letter T",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q230937 . ?sbj wdt:P1880 wd:Q11579 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of state function . ?sbj measurement scale kelvin . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "name the kingdom characteristic measured through kelvin units that begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q230937 . ?ans1 wdt:P1880 wd:Q11579 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of state function . ?ans1 measurement scale kelvin . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name the kingdom characteristic measured through kelvin units that begins with letter T",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q230937 . ?sbj wdt:P1880 wd:Q11579 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of state function . ?sbj measurement scale kelvin . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "name an english written daily newspaper that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1110794 . ?ans1 wdt:P407 wd:Q1860 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of daily newspaper . ?ans1 language of work or name English . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name an English written daily newspaper that starts with letter T",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1110794 . ?sbj wdt:P407 wd:Q1860 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of daily newspaper . ?sbj language of work or name English . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "which is the english written daily nespaper that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1110794 . ?ans1 wdt:P407 wd:Q1860 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of daily newspaper . ?ans1 language of work or name English . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHICH IS THE ENGLISH WRITTEN DAILY NESPAPER THAT STARTS WITH THE LETTER T",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1110794 . ?sbj wdt:P407 wd:Q1860 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of daily newspaper . ?sbj language of work or name English . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "did jpmorgan chase start the ipv4 routing prefix in ",
            "query": "SELECT ?ans1 WHERE { wd:Q192314 p:P3761 ?s . ?s ps:P3761 ?x FILTER(contains(?x,?unknown)) . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { JPMorgan Chase IPv4 routing prefix ?s . ?s IPv4 routing prefix ?x FILTER(contains(?x,?unknown)) . ?s start time ?ans1}"
        },
        "original": {
            "question": "did jpmorgan chase start the ipv4 routing prefix in 161.192.0.0/16",
            "query": "SELECT ?value WHERE { wd:Q192314 p:P3761 ?s . ?s ps:P3761 ?x FILTER(contains(?x,'161.192.0.0/16')) . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { JPMorgan Chase IPv4 routing prefix ?s . ?s IPv4 routing prefix ?x FILTER(contains(?x,'161.192.0.0/16')) . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "16119200/16",
            "choppedEntity": "161.192.0.0/16"
        }
    },
    {
        "chopped": {
            "question": "has jpmorgan chase commenced the ipv4 routing prefix in ",
            "query": "SELECT ?ans1 WHERE { wd:Q192314 p:P3761 ?s . ?s ps:P3761 ?x FILTER(contains(?x,?unknown)) . ?s pq:P580 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { JPMorgan Chase IPv4 routing prefix ?s . ?s IPv4 routing prefix ?x FILTER(contains(?x,?unknown)) . ?s start time ?ans1}"
        },
        "original": {
            "question": "Has jpmorgan chase commenced the ipv4 routing prefix in 161.192.0.0/16",
            "query": "SELECT ?value WHERE { wd:Q192314 p:P3761 ?s . ?s ps:P3761 ?x FILTER(contains(?x,'161.192.0.0/16')) . ?s pq:P580 ?value}",
            "NLQuery": "SELECT ?value WHERE { JPMorgan Chase IPv4 routing prefix ?s . ?s IPv4 routing prefix ?x FILTER(contains(?x,'161.192.0.0/16')) . ?s start time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "16119200/16",
            "choppedEntity": "161.192.0.0/16"
        }
    },
    {
        "chopped": {
            "question": "name an alcohol that can interact with potassium inwardly-rectifying channel, subfamily j, member 3 and starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q156 . ?ans1 wdt:P129 wd:Q21497887 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of alcohols . ?ans1 physically interacts with Potassium inwardly-rectifying channel, subfamily J, member 3 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name an alcohol that can interact with Potassium inwardly-rectifying channel, subfamily J, member 3 and starts with letter E",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q156 . ?sbj wdt:P129 wd:Q21497887 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of alcohols . ?sbj physically interacts with Potassium inwardly-rectifying channel, subfamily J, member 3 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "e",
            "choppedEntity": "e"
        }
    },
    {
        "chopped": {
            "question": "title an liquor that can connected with potassium inwardly-rectifying channel, subfamily j, part 3 and begins with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q156 . ?ans1 wdt:P129 wd:Q21497887 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of alcohols . ?ans1 physically interacts with Potassium inwardly-rectifying channel, subfamily J, member 3 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Title an liquor that can connected with Potassium inwardly-rectifying channel, subfamily J, part 3 and begins with letter E",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q156 . ?sbj wdt:P129 wd:Q21497887 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of alcohols . ?sbj physically interacts with Potassium inwardly-rectifying channel, subfamily J, member 3 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "e",
            "choppedEntity": "e"
        }
    },
    {
        "chopped": {
            "question": "what award did orson scott card receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q217110 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Orson Scott Card award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Orson Scott Card receive in 1987",
            "query": "SELECT ?obj WHERE { wd:Q217110 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1987')) }",
            "NLQuery": "SELECT ?obj WHERE { Orson Scott Card award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1987')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1987",
            "choppedEntity": "1987"
        }
    },
    {
        "chopped": {
            "question": "tell me the award orson scott card received in ",
            "query": "SELECT ?ans1 WHERE { wd:Q217110 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Orson Scott Card award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Tell me the award Orson Scott Card received in 1987.",
            "query": "SELECT ?obj WHERE { wd:Q217110 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1987')) }",
            "NLQuery": "SELECT ?obj WHERE { Orson Scott Card award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1987')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1987",
            "choppedEntity": "1987"
        }
    },
    {
        "chopped": {
            "question": "what is the other half of the coordinates for the tagus river whose one half in ",
            "query": "SELECT ?ans1 WHERE { wd:Q14294 p:P625 ?s . ?s ps:P625 ?x FILTER(contains(?x,?unknown)) . ?s pq:P518 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Tagus river coordinate location ?s . ?s coordinate location ?x FILTER(contains(?x,?unknown)) . ?s applies to part ?ans1}"
        },
        "original": {
            "question": "What is the other half of the coordinates for the Tagus River whose one half in -1.6975",
            "query": "SELECT ?value WHERE { wd:Q14294 p:P625 ?s . ?s ps:P625 ?x FILTER(contains(?x,'-1.6975')) . ?s pq:P518 ?value}",
            "NLQuery": "SELECT ?value WHERE { Tagus river coordinate location ?s . ?s coordinate location ?x FILTER(contains(?x,'-1.6975')) . ?s applies to part ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "-16975",
            "choppedEntity": "-1.6975"
        }
    },
    {
        "chopped": {
            "question": "name the other half of tagus rivers coordinates apart from ",
            "query": "SELECT ?ans1 WHERE { wd:Q14294 p:P625 ?s . ?s ps:P625 ?x FILTER(contains(?x,?unknown)) . ?s pq:P518 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Tagus river coordinate location ?s . ?s coordinate location ?x FILTER(contains(?x,?unknown)) . ?s applies to part ?ans1}"
        },
        "original": {
            "question": "Name the other half of Tagus River's coordinates apart from -1.6975",
            "query": "SELECT ?value WHERE { wd:Q14294 p:P625 ?s . ?s ps:P625 ?x FILTER(contains(?x,'-1.6975')) . ?s pq:P518 ?value}",
            "NLQuery": "SELECT ?value WHERE { Tagus river coordinate location ?s . ?s coordinate location ?x FILTER(contains(?x,'-1.6975')) . ?s applies to part ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "-16975",
            "choppedEntity": "-1.6975"
        }
    },
    {
        "chopped": {
            "question": "what is standards organization that starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1328899 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of standards organization . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what is standards organization that starts with t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1328899 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of standards organization . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what is benchmarks organization that begins with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1328899 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of standards organization . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what is benchmarks organization that begins with t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1328899 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of standards organization . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "which religious belief starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2728698 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of religious belief . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which religious belief starts with the letter p",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2728698 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of religious belief . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "p",
            "choppedEntity": "p"
        }
    },
    {
        "chopped": {
            "question": "which devout conviction begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2728698 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of religious belief . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which devout conviction begins with the letter p",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2728698 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of religious belief . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "p",
            "choppedEntity": "p"
        }
    },
    {
        "chopped": {
            "question": "what is the position of mustafa kemal atat\u00fcrk that started may 3, ",
            "query": "SELECT ?ans1 WHERE { wd:Q5152 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mustafa Kemal Atat\u00fcrk position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What is the position of Mustafa Kemal Atat\u00fcrk that started May 3, 1920",
            "query": "SELECT ?obj WHERE { wd:Q5152 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1920')) }",
            "NLQuery": "SELECT ?obj WHERE { Mustafa Kemal Atat\u00fcrk position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1920')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1920",
            "choppedEntity": "1920"
        }
    },
    {
        "chopped": {
            "question": "what position did mustafa kemal ataturk hold starting may 3, ",
            "query": "SELECT ?ans1 WHERE { wd:Q5152 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mustafa Kemal Atat\u00fcrk position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What position did Mustafa Kemal Ataturk hold starting May 3, 1920",
            "query": "SELECT ?obj WHERE { wd:Q5152 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1920')) }",
            "NLQuery": "SELECT ?obj WHERE { Mustafa Kemal Atat\u00fcrk position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1920')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1920",
            "choppedEntity": "1920"
        }
    },
    {
        "chopped": {
            "question": "where was the battle of pavia, where the postal code is ",
            "query": "SELECT ?ans1 WHERE { wd:Q63468 wdt:P276 ?ans1 . ?ans1 wdt:P281 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Battle of Pavia location ?ans1 . ?ans1 postal code ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Where was the battle of Pavia, where the postal code is 27100",
            "query": "SELECT ?answer WHERE { wd:Q63468 wdt:P276 ?answer . ?answer wdt:P281 ?x FILTER(contains(?x,'27100'))}",
            "NLQuery": "SELECT ?answer WHERE { Battle of Pavia location ?answer . ?answer postal code ?x FILTER(contains(?x,'27100'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "27100",
            "choppedEntity": "27100"
        }
    },
    {
        "chopped": {
            "question": "where was the fight of pavia, where the postal code is ",
            "query": "SELECT ?ans1 WHERE { wd:Q63468 wdt:P276 ?ans1 . ?ans1 wdt:P281 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Battle of Pavia location ?ans1 . ?ans1 postal code ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Where was the fight of Pavia, where the postal code is 27100",
            "query": "SELECT ?answer WHERE { wd:Q63468 wdt:P276 ?answer . ?answer wdt:P281 ?x FILTER(contains(?x,'27100'))}",
            "NLQuery": "SELECT ?answer WHERE { Battle of Pavia location ?answer . ?answer postal code ?x FILTER(contains(?x,'27100'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "27100",
            "choppedEntity": "27100"
        }
    },
    {
        "chopped": {
            "question": "give me an black body radiation object, that starts with an alphabet ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q900097 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of black-body radiation . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Give me an black body radiation object, that starts with an alphabet 'h'.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q900097 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'h')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of black-body radiation . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'h')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "h",
            "choppedEntity": "h"
        }
    },
    {
        "chopped": {
            "question": "deliver me an dark body radiation question, that begins with an letter set ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q900097 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of black-body radiation . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Deliver me an dark body radiation question, that begins with an letter set 'h'.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q900097 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'h')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of black-body radiation . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'h')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "h",
            "choppedEntity": "h"
        }
    },
    {
        "chopped": {
            "question": "what is award received of walter houser brattain that has prize money is 6",
            "query": "SELECT ?ans1 WHERE { wd:Q184577 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P2121 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Walter Houser Brattain award received ?s . ?s award received ?ans1 . ?s prize money ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "What is award received of Walter Houser Brattain that has prize money is 66707.0 ",
            "query": "SELECT ?obj WHERE { wd:Q184577 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?x FILTER(contains(?x,'66707.0')) }",
            "NLQuery": "SELECT ?obj WHERE { Walter Houser Brattain award received ?s . ?s award received ?obj . ?s prize money ?x FILTER(contains(?x,'66707.0')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "667070",
            "choppedEntity": "66707.0"
        }
    },
    {
        "chopped": {
            "question": "what award did walter houser brattain receive which was in the amount of ",
            "query": "SELECT ?ans1 WHERE { wd:Q184577 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P2121 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Walter Houser Brattain award received ?s . ?s award received ?ans1 . ?s prize money ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "what award did Walter Houser Brattain receive which was in the amount of $66707.0",
            "query": "SELECT ?obj WHERE { wd:Q184577 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?x FILTER(contains(?x,'66707.0')) }",
            "NLQuery": "SELECT ?obj WHERE { Walter Houser Brattain award received ?s . ?s award received ?obj . ?s prize money ?x FILTER(contains(?x,'66707.0')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "$667070",
            "choppedEntity": "66707.0"
        }
    },
    {
        "chopped": {
            "question": "what are thebranch of service which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q690109 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of branch of service . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are thebranch of service which start with the letter voltigeur",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q690109 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'voltigeur')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of branch of service . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'voltigeur')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "voltigeur",
            "choppedEntity": "voltigeur"
        }
    },
    {
        "chopped": {
            "question": "what are thebranch of benefit which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q690109 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of branch of service . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are thebranch of benefit which begin with the letter voltigeur",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q690109 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'voltigeur')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of branch of service . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'voltigeur')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "voltigeur",
            "choppedEntity": "voltigeur"
        }
    },
    {
        "chopped": {
            "question": "who did greer garson marry on january 1, ",
            "query": "SELECT ?ans1 WHERE { wd:Q182486 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Greer Garson spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who did Greer Garson marry on January 1, 1943",
            "query": "SELECT ?obj WHERE { wd:Q182486 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1943')) }",
            "NLQuery": "SELECT ?obj WHERE { Greer Garson spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1943')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1943",
            "choppedEntity": "1943"
        }
    },
    {
        "chopped": {
            "question": "who did greer garson get married to in ",
            "query": "SELECT ?ans1 WHERE { wd:Q182486 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Greer Garson spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who did Greer Garson get married to in 1943",
            "query": "SELECT ?obj WHERE { wd:Q182486 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1943')) }",
            "NLQuery": "SELECT ?obj WHERE { Greer Garson spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1943')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1943",
            "choppedEntity": "1943"
        }
    },
    {
        "chopped": {
            "question": "what are the gravitational-wave detector which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2302080 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of gravitational-wave detector . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the gravitational-wave detector which start with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2302080 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of gravitational-wave detector . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "name a gravitational-wave detector that begins with a ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2302080 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of gravitational-wave detector . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a gravitational-wave detector that begins with a V.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2302080 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of gravitational-wave detector . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what are the cooking method which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1039303 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of cooking method . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the cooking method which start with the letter s",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1039303 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of cooking method . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "which are the cooking method which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1039303 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of cooking method . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which are the cooking method which start with the letter s",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1039303 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of cooking method . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what is the life stance of the christian denomination hat has the osm key which is ",
            "query": "SELECT ?ans1 WHERE { wd:Q879146 wdt:P140 ?ans1 . ?ans1 wdt:P1282 ?x FILTER(contains(?x,'Tag:religion=christian'))}",
            "NLQuery": "SELECT ?ans1 WHERE { Christian denomination religion ?ans1 . ?ans1 OpenStreetMap tag or key ?x FILTER(contains(?x,'Tag:religion=christian'))}"
        },
        "original": {
            "question": "What is the life stance of the Christian denomination hat has the OSM key which is Tag:lifestance=christian",
            "query": "SELECT ?answer WHERE { wd:Q879146 wdt:P140 ?answer . ?answer wdt:P1282 ?x FILTER(contains(?x,'Tag:religion=christian'))}",
            "NLQuery": "SELECT ?answer WHERE { Christian denomination religion ?answer . ?answer OpenStreetMap tag or key ?x FILTER(contains(?x,'Tag:religion=christian'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "tag:lifestance=christian",
            "choppedEntity": "tag:religion=christian"
        }
    },
    {
        "chopped": {
            "question": "what is the life position of the christian category cap has the osm key which is ",
            "query": "SELECT ?ans1 WHERE { wd:Q879146 wdt:P140 ?ans1 . ?ans1 wdt:P1282 ?x FILTER(contains(?x,'Tag:religion=christian'))}",
            "NLQuery": "SELECT ?ans1 WHERE { Christian denomination religion ?ans1 . ?ans1 OpenStreetMap tag or key ?x FILTER(contains(?x,'Tag:religion=christian'))}"
        },
        "original": {
            "question": "What is the life position of the Christian category cap has the OSM key which is Tag:lifestance=christian",
            "query": "SELECT ?answer WHERE { wd:Q879146 wdt:P140 ?answer . ?answer wdt:P1282 ?x FILTER(contains(?x,'Tag:religion=christian'))}",
            "NLQuery": "SELECT ?answer WHERE { Christian denomination religion ?answer . ?answer OpenStreetMap tag or key ?x FILTER(contains(?x,'Tag:religion=christian'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "tag:lifestance=christian",
            "choppedEntity": "tag:religion=christian"
        }
    },
    {
        "chopped": {
            "question": "what was the residence of kurt weill in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q55004 p:P551 ?s . ?s ps:P551 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Kurt Weill residence ?s . ?s residence ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the residence of Kurt Weill in the year 1932",
            "query": "SELECT ?obj WHERE { wd:Q55004 p:P551 ?s . ?s ps:P551 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1932')) }",
            "NLQuery": "SELECT ?obj WHERE { Kurt Weill residence ?s . ?s residence ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1932')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1932",
            "choppedEntity": "1932"
        }
    },
    {
        "chopped": {
            "question": "where did kurt weill live in ",
            "query": "SELECT ?ans1 WHERE { wd:Q55004 p:P551 ?s . ?s ps:P551 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Kurt Weill residence ?s . ?s residence ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Where did Kurt Weill live in 1932",
            "query": "SELECT ?obj WHERE { wd:Q55004 p:P551 ?s . ?s ps:P551 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1932')) }",
            "NLQuery": "SELECT ?obj WHERE { Kurt Weill residence ?s . ?s residence ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1932')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1932",
            "choppedEntity": "1932"
        }
    },
    {
        "chopped": {
            "question": "who was a student of john foster dulles that graduated in ",
            "query": "SELECT ?ans1 WHERE { wd:Q223677 p:P69 ?s . ?s ps:P69 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { John Foster Dulles educated at ?s . ?s educated at ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "who was a student of John Foster Dulles that graduated in 1908",
            "query": "SELECT ?obj WHERE { wd:Q223677 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1908')) }",
            "NLQuery": "SELECT ?obj WHERE { John Foster Dulles educated at ?s . ?s educated at ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1908')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1908",
            "choppedEntity": "1908"
        }
    },
    {
        "chopped": {
            "question": "tell me the artistic theme of the characters of penitent thief that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1406161 . ?ans1 wdt:P674 wd:Q355121 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of artistic theme . ?ans1 characters Penitent Thief . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the artistic theme of the characters of Penitent thief that starts with the letter c",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1406161 . ?sbj wdt:P674 wd:Q355121 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of artistic theme . ?sbj characters Penitent Thief . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "c",
            "choppedEntity": "c"
        }
    },
    {
        "chopped": {
            "question": "tell me the creative theme of the characters of penitent thief that begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1406161 . ?ans1 wdt:P674 wd:Q355121 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of artistic theme . ?ans1 characters Penitent Thief . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the creative theme of the characters of Penitent thief that begins with the letter c",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1406161 . ?sbj wdt:P674 wd:Q355121 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of artistic theme . ?sbj characters Penitent Thief . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "c",
            "choppedEntity": "c"
        }
    },
    {
        "chopped": {
            "question": "which award was received by daniel barenboim in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q152768 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Daniel Barenboim award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which award was received by Daniel Barenboim in the year 2002",
            "query": "SELECT ?obj WHERE { wd:Q152768 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2002')) }",
            "NLQuery": "SELECT ?obj WHERE { Daniel Barenboim award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2002')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2002",
            "choppedEntity": "2002"
        }
    },
    {
        "chopped": {
            "question": "what award did daniel barenboim receive in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q152768 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Daniel Barenboim award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Daniel Barenboim receive in the year 2002",
            "query": "SELECT ?obj WHERE { wd:Q152768 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2002')) }",
            "NLQuery": "SELECT ?obj WHERE { Daniel Barenboim award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2002')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2002",
            "choppedEntity": "2002"
        }
    },
    {
        "chopped": {
            "question": "what was clive barker nominated for in ",
            "query": "SELECT ?ans1 WHERE { wd:Q298761 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Clive Barker nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Clive Barker nominated for in 1988",
            "query": "SELECT ?obj WHERE { wd:Q298761 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1988')) }",
            "NLQuery": "SELECT ?obj WHERE { Clive Barker nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1988')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1988",
            "choppedEntity": "1988"
        }
    },
    {
        "chopped": {
            "question": "clive barker was nominated for what in ",
            "query": "SELECT ?ans1 WHERE { wd:Q298761 p:P1411 ?s . ?s ps:P1411 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Clive Barker nominated for ?s . ?s nominated for ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Clive Barker was nominated for what in 1988",
            "query": "SELECT ?obj WHERE { wd:Q298761 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1988')) }",
            "NLQuery": "SELECT ?obj WHERE { Clive Barker nominated for ?s . ?s nominated for ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1988')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1988",
            "choppedEntity": "1988"
        }
    },
    {
        "chopped": {
            "question": "where is the workplace of heinrich von treitschke, whose inhabitants are ",
            "query": "SELECT ?ans1 WHERE { wd:Q62400 wdt:P937 ?ans1 . ?ans1 wdt:P1082 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Heinrich von Treitschke work location ?ans1 . ?ans1 population ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Where is the workplace of Heinrich von Treitschke, whose inhabitants are 8100.0.",
            "query": "SELECT ?answer WHERE { wd:Q62400 wdt:P937 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'8100.0'))}",
            "NLQuery": "SELECT ?answer WHERE { Heinrich von Treitschke work location ?answer . ?answer population ?x FILTER(contains(?x,'8100.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "81000",
            "choppedEntity": "8100.0"
        }
    },
    {
        "chopped": {
            "question": "where is the work environment of heinrich von treitschke, whose occupants are ",
            "query": "SELECT ?ans1 WHERE { wd:Q62400 wdt:P937 ?ans1 . ?ans1 wdt:P1082 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Heinrich von Treitschke work location ?ans1 . ?ans1 population ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Where is the work environment of Heinrich von Treitschke, whose occupants are 8100.0.",
            "query": "SELECT ?answer WHERE { wd:Q62400 wdt:P937 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'8100.0'))}",
            "NLQuery": "SELECT ?answer WHERE { Heinrich von Treitschke work location ?answer . ?answer population ?x FILTER(contains(?x,'8100.0'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "81000",
            "choppedEntity": "8100.0"
        }
    },
    {
        "chopped": {
            "question": "tell me which profession contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q28640 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of profession . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me which profession contains the word tenor in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28640 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tenor')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of profession . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tenor')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "tenor in its name",
            "choppedEntity": "tenor"
        }
    },
    {
        "chopped": {
            "question": "let me know which calling contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q28640 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of profession . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know which calling contains the word tenor in it's title",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28640 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tenor')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of profession . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tenor')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "tenor in its title",
            "choppedEntity": "tenor"
        }
    },
    {
        "chopped": {
            "question": "which is the ethnic conflict which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q766875 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of ethnic conflict . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the ethnic conflict which contains the word wars in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q766875 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wars')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of ethnic conflict . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wars')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "wars in its name",
            "choppedEntity": "wars"
        }
    },
    {
        "chopped": {
            "question": "which is the ethnic struggle which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q766875 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of ethnic conflict . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the ethnic struggle which contains the word wars in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q766875 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wars')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of ethnic conflict . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wars')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "wars in its name",
            "choppedEntity": "wars"
        }
    },
    {
        "chopped": {
            "question": "what are the radiometric dating which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q214753 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of radiometric dating . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the radiometric dating which start with the letter d",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q214753 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of radiometric dating . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "d",
            "choppedEntity": "d"
        }
    },
    {
        "chopped": {
            "question": "what is educated at of elsie clews parsons that is end time is ",
            "query": "SELECT ?ans1 WHERE { wd:Q523870 p:P69 ?s . ?s ps:P69 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Elsie Clews Parsons educated at ?s . ?s educated at ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What is educated at of Elsie Clews Parsons that is end time is 1899",
            "query": "SELECT ?obj WHERE { wd:Q523870 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1899')) }",
            "NLQuery": "SELECT ?obj WHERE { Elsie Clews Parsons educated at ?s . ?s educated at ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1899')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1899",
            "choppedEntity": "1899"
        }
    },
    {
        "chopped": {
            "question": "what was taught at elsie clews parsons, which closed in ",
            "query": "SELECT ?ans1 WHERE { wd:Q523870 p:P69 ?s . ?s ps:P69 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Elsie Clews Parsons educated at ?s . ?s educated at ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was taught at Elsie Clews Parsons, which closed in 1899",
            "query": "SELECT ?obj WHERE { wd:Q523870 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1899')) }",
            "NLQuery": "SELECT ?obj WHERE { Elsie Clews Parsons educated at ?s . ?s educated at ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1899')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1899",
            "choppedEntity": "1899"
        }
    },
    {
        "chopped": {
            "question": "name a super cultural area that contains the word  ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15733622 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of cultural superarea . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a super cultural area that contains the word \" mesoamerica\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15733622 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'mesoamerica')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of cultural superarea . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'mesoamerica')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "mesoamerica in its name",
            "choppedEntity": "mesoamerica"
        }
    },
    {
        "chopped": {
            "question": "name a super cultural area containing in its name the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15733622 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of cultural superarea . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a super cultural area containing in its name the word \"mesoamerica\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15733622 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'mesoamerica')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of cultural superarea . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'mesoamerica')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "mesoamerica",
            "choppedEntity": "mesoamerica"
        }
    },
    {
        "chopped": {
            "question": "tell me space sport starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q194188 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of spaceport . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "tell me space sport starts with the letter s",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q194188 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of spaceport . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "which is the space sport starts by the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q194188 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of spaceport . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHICH IS THE SPACE SPORT STARTS BY THE LETTER S",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q194188 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of spaceport . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "which award did mother teresa receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q30547 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mother Teresa award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which award did Mother Teresa receive in 1976",
            "query": "SELECT ?obj WHERE { wd:Q30547 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1976')) }",
            "NLQuery": "SELECT ?obj WHERE { Mother Teresa award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1976')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1976",
            "choppedEntity": "1976"
        }
    },
    {
        "chopped": {
            "question": "what was the award that mother teresa received in ",
            "query": "SELECT ?ans1 WHERE { wd:Q30547 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mother Teresa award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the award that Mother Teresa received in 1976",
            "query": "SELECT ?obj WHERE { wd:Q30547 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1976')) }",
            "NLQuery": "SELECT ?obj WHERE { Mother Teresa award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1976')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1976",
            "choppedEntity": "1976"
        }
    },
    {
        "chopped": {
            "question": "which is the trade association which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2178147 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of trade association . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the trade association which contains the word obsai in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2178147 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'obsai')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of trade association . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'obsai')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "obsai in its name",
            "choppedEntity": "obsai"
        }
    },
    {
        "chopped": {
            "question": "which is the exchange association which carries the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2178147 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of trade association . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the exchange association which carries the word obsai in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2178147 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'obsai')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of trade association . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'obsai')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "obsai in its name",
            "choppedEntity": "obsai"
        }
    },
    {
        "chopped": {
            "question": "what started to happen in east francia in ",
            "query": "SELECT ?ans1 WHERE { wd:Q153080 p:P31 ?s . ?s ps:P31 ?ans1 . ?s pq:P580 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { East Francia instance of ?s . ?s instance of ?ans1 . ?s start time ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "What started to happen in East Francia in 843-1-1",
            "query": "SELECT ?obj WHERE { wd:Q153080 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P580 ?x FILTER(contains(?x,'843-1-1')) }",
            "NLQuery": "SELECT ?obj WHERE { East Francia instance of ?s . ?s instance of ?obj . ?s start time ?x FILTER(contains(?x,'843-1-1')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "843-1-1",
            "choppedEntity": "843-1-1"
        }
    },
    {
        "chopped": {
            "question": "tell me  vaccine for mumps whose  contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q134808 . ?ans1 wdt:P1924 wd:Q176741 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of vaccine . ?ans1 vaccine for mumps . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me  vaccine for mumps whose  contains the word vaccine in it name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q134808 . ?sbj wdt:P1924 wd:Q176741 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vaccine')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of vaccine . ?sbj vaccine for mumps . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vaccine')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "vaccine in it name",
            "choppedEntity": "vaccine"
        }
    },
    {
        "chopped": {
            "question": "tell me vaccine for mumps whose carries the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q134808 . ?ans1 wdt:P1924 wd:Q176741 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of vaccine . ?ans1 vaccine for mumps . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me vaccine for mumps whose carries the word vaccine in it name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q134808 . ?sbj wdt:P1924 wd:Q176741 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vaccine')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of vaccine . ?sbj vaccine for mumps . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vaccine')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "vaccine in it name",
            "choppedEntity": "vaccine"
        }
    },
    {
        "chopped": {
            "question": "tell me angle whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11352 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of angle . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me angle whose name has the word elevation in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11352 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'elevation')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of angle . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'elevation')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "elevation in it",
            "choppedEntity": "elevation"
        }
    },
    {
        "chopped": {
            "question": "what is the birthplace of henry mancini that has an acreage of ",
            "query": "SELECT ?ans1 WHERE { wd:Q185928 wdt:P19 ?ans1 . ?ans1 wdt:P2046 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Henry Mancini place of birth ?ans1 . ?ans1 area ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the birthplace of Henry Mancini that has an acreage of 213.587",
            "query": "SELECT ?answer WHERE { wd:Q185928 wdt:P19 ?answer . ?answer wdt:P2046 ?x FILTER(contains(?x,'213.587'))}",
            "NLQuery": "SELECT ?answer WHERE { Henry Mancini place of birth ?answer . ?answer area ?x FILTER(contains(?x,'213.587'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "213587",
            "choppedEntity": "213.587"
        }
    },
    {
        "chopped": {
            "question": "what is the prequel of the qin dynasty, that has the co-ordinates ",
            "query": "SELECT ?ans1 WHERE { wd:Q7183 wdt:P156 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Qin dynasty followed by ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the prequel of the Qin dynasty, that has the co-ordinates 34.1558",
            "query": "SELECT ?answer WHERE { wd:Q7183 wdt:P156 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'34.1558'))}",
            "NLQuery": "SELECT ?answer WHERE { Qin dynasty followed by ?answer . ?answer coordinate location ?x FILTER(contains(?x,'34.1558'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "341558",
            "choppedEntity": "34.1558"
        }
    },
    {
        "chopped": {
            "question": "what is the prequel of the qin line, that has the co-ordinates ",
            "query": "SELECT ?ans1 WHERE { wd:Q7183 wdt:P156 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Qin dynasty followed by ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the prequel of the Qin line, that has the co-ordinates 34.1558",
            "query": "SELECT ?answer WHERE { wd:Q7183 wdt:P156 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'34.1558'))}",
            "NLQuery": "SELECT ?answer WHERE { Qin dynasty followed by ?answer . ?answer coordinate location ?x FILTER(contains(?x,'34.1558'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "341558",
            "choppedEntity": "34.1558"
        }
    },
    {
        "chopped": {
            "question": "how much tax revenue did zamboangna collect in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1629 p:P3087 ?s . ?s ps:P3087 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Zamboanga City fiscal/tax revenue ?s . ?s fiscal/tax revenue ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "How much tax revenue did Zamboangna collect in 2016",
            "query": "SELECT ?obj WHERE { wd:Q1629 p:P3087 ?s . ?s ps:P3087 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2016')) }",
            "NLQuery": "SELECT ?obj WHERE { Zamboanga City fiscal/tax revenue ?s . ?s fiscal/tax revenue ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2016')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2016",
            "choppedEntity": "2016"
        }
    },
    {
        "chopped": {
            "question": "what was the tax revenue that zamboangna collected in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1629 p:P3087 ?s . ?s ps:P3087 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Zamboanga City fiscal/tax revenue ?s . ?s fiscal/tax revenue ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the tax revenue that Zamboangna collected in 2016",
            "query": "SELECT ?obj WHERE { wd:Q1629 p:P3087 ?s . ?s ps:P3087 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2016')) }",
            "NLQuery": "SELECT ?obj WHERE { Zamboanga City fiscal/tax revenue ?s . ?s fiscal/tax revenue ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2016')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2016",
            "choppedEntity": "2016"
        }
    },
    {
        "chopped": {
            "question": "what are the written work which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q47461344 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of written work . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the written work which start with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q47461344 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of written work . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what are the composed work which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q47461344 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of written work . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the composed work which begin with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q47461344 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of written work . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what was the population of eurasia in ",
            "query": "SELECT ?ans1 WHERE { wd:Q5401 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Eurasia population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of Eurasia in 1893",
            "query": "SELECT ?obj WHERE { wd:Q5401 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1893')) }",
            "NLQuery": "SELECT ?obj WHERE { Eurasia population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1893')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1893",
            "choppedEntity": "1893"
        }
    },
    {
        "chopped": {
            "question": "give me the population of eurasia in ",
            "query": "SELECT ?ans1 WHERE { wd:Q5401 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Eurasia population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Give me the population of Eurasia in 1893",
            "query": "SELECT ?obj WHERE { wd:Q5401 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1893')) }",
            "NLQuery": "SELECT ?obj WHERE { Eurasia population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1893')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1893",
            "choppedEntity": "1893"
        }
    },
    {
        "chopped": {
            "question": "for what juan antonio samarnch held the position in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q171166 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Juan Antonio Samaranch position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "For what Juan Antonio Samarnch held the position in the year 1973",
            "query": "SELECT ?obj WHERE { wd:Q171166 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1973')) }",
            "NLQuery": "SELECT ?obj WHERE { Juan Antonio Samaranch position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1973')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1973",
            "choppedEntity": "1973"
        }
    },
    {
        "chopped": {
            "question": "what position did juan antonio samarnch hold in ",
            "query": "SELECT ?ans1 WHERE { wd:Q171166 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Juan Antonio Samaranch position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What position did Juan Antonio Samarnch hold in 1973",
            "query": "SELECT ?obj WHERE { wd:Q171166 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1973')) }",
            "NLQuery": "SELECT ?obj WHERE { Juan Antonio Samaranch position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1973')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1973",
            "choppedEntity": "1973"
        }
    },
    {
        "chopped": {
            "question": "what census found the population of ceuta to be ",
            "query": "SELECT ?ans1 WHERE { wd:Q5823 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P459 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Ceuta population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s determination method ?ans1}"
        },
        "original": {
            "question": "What census found the population of Ceuta to be 84180",
            "query": "SELECT ?value WHERE { wd:Q5823 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'84180.0')) . ?s pq:P459 ?value}",
            "NLQuery": "SELECT ?value WHERE { Ceuta population ?s . ?s population ?x FILTER(contains(?x,'84180.0')) . ?s determination method ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "84180",
            "choppedEntity": "84180.0"
        }
    },
    {
        "chopped": {
            "question": "which is the social class that starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q187588 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of social class . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHICH IS THE SOCIAL CLASS THAT STARTS WITH Z",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q187588 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of social class . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "give me the name of the social class that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q187588 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of social class . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Give me the name of the Social Class that starts with the letter Z.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q187588 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of social class . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "z",
            "choppedEntity": "z"
        }
    },
    {
        "chopped": {
            "question": "which is the city of indonesia that starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3199141 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of city of Indonesia . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHICH IS THE CITY OF INDONESIA THAT STARTS WITH Y",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3199141 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of city of Indonesia . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "y",
            "choppedEntity": "y"
        }
    },
    {
        "chopped": {
            "question": "what is the start of indonesia with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q3199141 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of city of Indonesia . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHAT IS THE START OF INDONESIA WITH Y",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3199141 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of city of Indonesia . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "y",
            "choppedEntity": "y"
        }
    },
    {
        "chopped": {
            "question": "what are the occupational carcinogen which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q21074597 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of occupational carcinogen . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the occupational carcinogen which start with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21074597 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of occupational carcinogen . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "name the occupational carcinogen that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q21074597 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of occupational carcinogen . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name the occupational carcinogen that starts with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21074597 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of occupational carcinogen . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "andres manuel lopez obrador held what  position in 0-0-",
            "query": "SELECT ?ans1 WHERE { wd:Q318508 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Andr\u00e9s Manuel L\u00f3pez Obrador position held ?s . ?s position held ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Andres Manuel Lopez Obrador held what  position in 0-0-2017",
            "query": "SELECT ?obj WHERE { wd:Q318508 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'2017')) }",
            "NLQuery": "SELECT ?obj WHERE { Andr\u00e9s Manuel L\u00f3pez Obrador position held ?s . ?s position held ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'2017')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2017",
            "choppedEntity": "2017"
        }
    },
    {
        "chopped": {
            "question": "tell me sub-provincce-level division whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q250811 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of sub-province-level division . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "TELL ME SUB-PROVINCCE-LEVEL DIVISION WHOSE NAME HAS THE WORD XIAMEN IN IT.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q250811 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'xiamen')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of sub-province-level division . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'xiamen')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "xiamen in it",
            "choppedEntity": "xiamen"
        }
    },
    {
        "chopped": {
            "question": "disclsoe me sub-provincce-level division whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q250811 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of sub-province-level division . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "DISCLSOE ME SUB-PROVINCCE-LEVEL DIVISION WHOSE NAME HAS THE WORD XIAMEN IN IT.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q250811 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'xiamen')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of sub-province-level division . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'xiamen')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "xiamen in it",
            "choppedEntity": "xiamen"
        }
    },
    {
        "chopped": {
            "question": "what communist partys name starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q233591 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of communist party . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What communist party's name starts with the letter \"p\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q233591 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of communist party . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "p",
            "choppedEntity": "p"
        }
    },
    {
        "chopped": {
            "question": "what communist partys title begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q233591 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of communist party . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What communist party's title begins with the letter \"p\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q233591 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of communist party . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "p",
            "choppedEntity": "p"
        }
    },
    {
        "chopped": {
            "question": "which is the mathematical concept which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q24034552 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of mathematical concept . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the mathematical concept which contains the word ultrafinitism in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24034552 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ultrafinitism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of mathematical concept . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ultrafinitism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "ultrafinitism in its name",
            "choppedEntity": "ultrafinitism"
        }
    },
    {
        "chopped": {
            "question": "which mathematical concept contains ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q24034552 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of mathematical concept . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which mathematical concept contains ultrafinitism in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24034552 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ultrafinitism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of mathematical concept . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ultrafinitism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "ultrafinitism in its name",
            "choppedEntity": "ultrafinitism"
        }
    },
    {
        "chopped": {
            "question": "what are the naval offensive which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q6982012 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of naval offensive . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the naval offensive which start with the letter a",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6982012 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of naval offensive . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "which are the naval offensive which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q6982012 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of naval offensive . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which are the naval offensive which start with the letter a",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6982012 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of naval offensive . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "a",
            "choppedEntity": "a"
        }
    },
    {
        "chopped": {
            "question": "what is the county seat of polokwane, which was constructed in ",
            "query": "SELECT ?ans1 WHERE { wd:Q131662 wdt:P1376 ?ans1 . ?ans1 wdt:P571 ?x FILTER(contains(YEAR(?x),?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Polokwane capital of ?ans1 . ?ans1 inception ?x FILTER(contains(YEAR(?x),?unknown))}"
        },
        "original": {
            "question": "What is the county seat of Polokwane, which was constructed in 1994",
            "query": "SELECT ?answer WHERE { wd:Q131662 wdt:P1376 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1994'))}",
            "NLQuery": "SELECT ?answer WHERE { Polokwane capital of ?answer . ?answer inception ?x FILTER(contains(YEAR(?x),'1994'))}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1994",
            "choppedEntity": "1994"
        }
    },
    {
        "chopped": {
            "question": "what is the district situate of polokwane, which was developed in ",
            "query": "SELECT ?ans1 WHERE { wd:Q131662 wdt:P1376 ?ans1 . ?ans1 wdt:P571 ?x FILTER(contains(YEAR(?x),?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Polokwane capital of ?ans1 . ?ans1 inception ?x FILTER(contains(YEAR(?x),?unknown))}"
        },
        "original": {
            "question": "What is the district situate of Polokwane, which was developed in 1994",
            "query": "SELECT ?answer WHERE { wd:Q131662 wdt:P1376 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1994'))}",
            "NLQuery": "SELECT ?answer WHERE { Polokwane capital of ?answer . ?answer inception ?x FILTER(contains(YEAR(?x),'1994'))}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1994",
            "choppedEntity": "1994"
        }
    },
    {
        "chopped": {
            "question": "where did mikhail skobelev receive his education in ",
            "query": "SELECT ?ans1 WHERE { wd:Q57173 p:P69 ?s . ?s ps:P69 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mikhail Skobelev educated at ?s . ?s educated at ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Where did Mikhail Skobelev receive his education in 1861",
            "query": "SELECT ?obj WHERE { wd:Q57173 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1861')) }",
            "NLQuery": "SELECT ?obj WHERE { Mikhail Skobelev educated at ?s . ?s educated at ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1861')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1861",
            "choppedEntity": "1861"
        }
    },
    {
        "chopped": {
            "question": "at what place was mikhail skobelev educated at in ",
            "query": "SELECT ?ans1 WHERE { wd:Q57173 p:P69 ?s . ?s ps:P69 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mikhail Skobelev educated at ?s . ?s educated at ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "At what place was Mikhail Skobelev educated at in 1861",
            "query": "SELECT ?obj WHERE { wd:Q57173 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1861')) }",
            "NLQuery": "SELECT ?obj WHERE { Mikhail Skobelev educated at ?s . ?s educated at ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1861')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1861",
            "choppedEntity": "1861"
        }
    },
    {
        "chopped": {
            "question": "when did winterthur have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q9125 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Winterthur population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Winterthur have a population of 104,468",
            "query": "SELECT ?value WHERE { wd:Q9125 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'104468.0')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Winterthur population ?s . ?s population ?x FILTER(contains(?x,'104468.0')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "104,468",
            "choppedEntity": "104468.0"
        }
    },
    {
        "chopped": {
            "question": "which is the subsidiary company that is managed by daniel schwartz and contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q658255 . ?ans1 wdt:P1037 wd:Q28229358 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of subsidiary . ?ans1 director / manager Daniel Schwartz . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the subsidiary company that is managed by Daniel Schwartz and contains the word burger in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q658255 . ?sbj wdt:P1037 wd:Q28229358 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'burger')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of subsidiary . ?sbj director / manager Daniel Schwartz . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'burger')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "burger in its name",
            "choppedEntity": "burger"
        }
    },
    {
        "chopped": {
            "question": "which is the subsidiary organization that is managed by using daniel schwartz and incorporates the phrase ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q658255 . ?ans1 wdt:P1037 wd:Q28229358 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of subsidiary . ?ans1 director / manager Daniel Schwartz . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which is the subsidiary organization that is managed by using Daniel Schwartz and incorporates the phrase burger in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q658255 . ?sbj wdt:P1037 wd:Q28229358 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'burger')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of subsidiary . ?sbj director / manager Daniel Schwartz . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'burger')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "burger in its name",
            "choppedEntity": "burger"
        }
    },
    {
        "chopped": {
            "question": "what position did adolfo su\u00e1rez hold until ",
            "query": "SELECT ?ans1 WHERE { wd:Q214367 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Adolfo Su\u00e1rez position held ?s . ?s position held ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What position did Adolfo Su\u00e1rez hold until 1973",
            "query": "SELECT ?obj WHERE { wd:Q214367 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1973')) }",
            "NLQuery": "SELECT ?obj WHERE { Adolfo Su\u00e1rez position held ?s . ?s position held ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1973')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1973",
            "choppedEntity": "1973"
        }
    },
    {
        "chopped": {
            "question": "what job did adolfo suarez have until ",
            "query": "SELECT ?ans1 WHERE { wd:Q214367 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Adolfo Su\u00e1rez position held ?s . ?s position held ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What job did Adolfo Suarez have until 1973",
            "query": "SELECT ?obj WHERE { wd:Q214367 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1973')) }",
            "NLQuery": "SELECT ?obj WHERE { Adolfo Su\u00e1rez position held ?s . ?s position held ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1973')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1973",
            "choppedEntity": "1973"
        }
    },
    {
        "chopped": {
            "question": "was inner mongolia founded in ",
            "query": "SELECT ?ans1 WHERE { wd:Q41079 p:P17 ?s . ?s ps:P17 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Inner Mongolia country ?s . ?s country ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Was Inner Mongolia founded in 1947",
            "query": "SELECT ?obj WHERE { wd:Q41079 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1947')) }",
            "NLQuery": "SELECT ?obj WHERE { Inner Mongolia country ?s . ?s country ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1947')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1947",
            "choppedEntity": "1947"
        }
    },
    {
        "chopped": {
            "question": "is it true that inner mongolia was founded in ",
            "query": "SELECT ?ans1 WHERE { wd:Q41079 p:P17 ?s . ?s ps:P17 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Inner Mongolia country ?s . ?s country ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Is it true that Inner Mongolia was founded in 1947",
            "query": "SELECT ?obj WHERE { wd:Q41079 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1947')) }",
            "NLQuery": "SELECT ?obj WHERE { Inner Mongolia country ?s . ?s country ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1947')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1947",
            "choppedEntity": "1947"
        }
    },
    {
        "chopped": {
            "question": "tell me colonial colleges whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1188663 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Colonial Colleges . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me colonial colleges whose name has the word university in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1188663 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'university')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Colonial Colleges . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'university')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "university in it",
            "choppedEntity": "university"
        }
    },
    {
        "chopped": {
            "question": "what is international organization  organization by unesco and also which starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q484652 . ?ans1 wdt:P2388 wd:Q28784183 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of international organization . ?ans1 office held by head of the organization Director-General of UNESCO . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what is international organization  organization by unesco and also which starts with letter u",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q484652 . ?sbj wdt:P2388 wd:Q28784183 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of international organization . ?sbj office held by head of the organization Director-General of UNESCO . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "what is worldwide company employer through unesco and additionally which starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q484652 . ?ans1 wdt:P2388 wd:Q28784183 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of international organization . ?ans1 office held by head of the organization Director-General of UNESCO . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what is worldwide company employer through unesco and additionally which starts with letter u",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q484652 . ?sbj wdt:P2388 wd:Q28784183 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of international organization . ?sbj office held by head of the organization Director-General of UNESCO . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "u",
            "choppedEntity": "u"
        }
    },
    {
        "chopped": {
            "question": "what what is male organ lymphatic drainage lumbar lymph nodes and  also which that starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q25553355 . ?ans1 wdt:P2288 wd:Q1662950 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of male organ . ?ans1 lymphatic drainage Lumbar lymph nodes . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What what is male organ lymphatic drainage Lumbar lymph nodes and  also which that starts with t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q25553355 . ?sbj wdt:P2288 wd:Q1662950 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of male organ . ?sbj lymphatic drainage Lumbar lymph nodes . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what what is male organ lymphatic drainage lumbar lymph nodes and also which that starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q25553355 . ?ans1 wdt:P2288 wd:Q1662950 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of male organ . ?ans1 lymphatic drainage Lumbar lymph nodes . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What what is male organ lymphatic drainage Lumbar lymph nodes and also which that starts with t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q25553355 . ?sbj wdt:P2288 wd:Q1662950 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of male organ . ?sbj lymphatic drainage Lumbar lymph nodes . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "who did marcia gay harden marry in ",
            "query": "SELECT ?ans1 WHERE { wd:Q228931 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Marcia Gay Harden spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who did Marcia Gay Harden marry in 1996",
            "query": "SELECT ?obj WHERE { wd:Q228931 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1996')) }",
            "NLQuery": "SELECT ?obj WHERE { Marcia Gay Harden spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1996')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1996",
            "choppedEntity": "1996"
        }
    },
    {
        "chopped": {
            "question": "marcia gay harden was wed to who in ",
            "query": "SELECT ?ans1 WHERE { wd:Q228931 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Marcia Gay Harden spouse ?s . ?s spouse ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Marcia Gay Harden was wed to who in 1996",
            "query": "SELECT ?obj WHERE { wd:Q228931 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1996')) }",
            "NLQuery": "SELECT ?obj WHERE { Marcia Gay Harden spouse ?s . ?s spouse ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1996')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1996",
            "choppedEntity": "1996"
        }
    },
    {
        "chopped": {
            "question": "what position did p v narasimha rao in telugu hold on march 12, ",
            "query": "SELECT ?ans1 WHERE { wd:Q275146 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { P. V. Narasimha Rao position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What position did P. V. Narasimha Rao in Telugu hold on March 12, 1986",
            "query": "SELECT ?obj WHERE { wd:Q275146 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1986')) }",
            "NLQuery": "SELECT ?obj WHERE { P. V. Narasimha Rao position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1986')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1986",
            "choppedEntity": "1986"
        }
    },
    {
        "chopped": {
            "question": "what was  p v narasimha raos position in telugu on march 12, ",
            "query": "SELECT ?ans1 WHERE { wd:Q275146 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { P. V. Narasimha Rao position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was  P. V. Narasimha Rao's position in Telugu on March 12, 1986",
            "query": "SELECT ?obj WHERE { wd:Q275146 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1986')) }",
            "NLQuery": "SELECT ?obj WHERE { P. V. Narasimha Rao position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1986')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1986",
            "choppedEntity": "1986"
        }
    },
    {
        "chopped": {
            "question": "what are the probability distribution which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q200726 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of probability distribution . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the probability distribution which start with the letter d",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q200726 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of probability distribution . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "d",
            "choppedEntity": "d"
        }
    },
    {
        "chopped": {
            "question": "what are the likelihood dispersion which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q200726 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of probability distribution . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the likelihood dispersion which begin with the letter d",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q200726 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of probability distribution . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "d",
            "choppedEntity": "d"
        }
    },
    {
        "chopped": {
            "question": "what are the treaty  which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q131569 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of treaty . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the treaty  which start with the letter treaty",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q131569 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'treaty')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of treaty . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'treaty')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "treaty",
            "choppedEntity": "treaty"
        }
    },
    {
        "chopped": {
            "question": "which are the treaty that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q131569 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of treaty . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which are the treaty that starts with letter treaty",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q131569 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'treaty')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of treaty . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'treaty')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "treaty",
            "choppedEntity": "treaty"
        }
    },
    {
        "chopped": {
            "question": "what was the electorate of muntinlupa on april 28, ",
            "query": "SELECT ?ans1 WHERE { wd:Q17176 p:P1831 ?s . ?s ps:P1831 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Muntinlupa electorate ?s . ?s electorate ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the electorate of Muntinlupa on April 28, 2004",
            "query": "SELECT ?obj WHERE { wd:Q17176 p:P1831 ?s . ?s ps:P1831 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2004')) }",
            "NLQuery": "SELECT ?obj WHERE { Muntinlupa electorate ?s . ?s electorate ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2004')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2004",
            "choppedEntity": "2004"
        }
    },
    {
        "chopped": {
            "question": "what engine was dota 2 based on at the start of september ",
            "query": "SELECT ?ans1 WHERE { wd:Q771541 p:P408 ?s . ?s ps:P408 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Dota 2 software engine ?s . ?s software engine ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What engine was Dota 2 based on at the start of September 2015",
            "query": "SELECT ?obj WHERE { wd:Q771541 p:P408 ?s . ?s ps:P408 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'2015')) }",
            "NLQuery": "SELECT ?obj WHERE { Dota 2 software engine ?s . ?s software engine ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'2015')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2015",
            "choppedEntity": "2015"
        }
    },
    {
        "chopped": {
            "question": "give the name of the engine  the dota 2 was based on as of september ",
            "query": "SELECT ?ans1 WHERE { wd:Q771541 p:P408 ?s . ?s ps:P408 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Dota 2 software engine ?s . ?s software engine ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Give the name of the engine  the Dota 2 was based on as of September 2015.",
            "query": "SELECT ?obj WHERE { wd:Q771541 p:P408 ?s . ?s ps:P408 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'2015')) }",
            "NLQuery": "SELECT ?obj WHERE { Dota 2 software engine ?s . ?s software engine ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'2015')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2015",
            "choppedEntity": "2015"
        }
    },
    {
        "chopped": {
            "question": "what team did paul gascoigne leave in ",
            "query": "SELECT ?ans1 WHERE { wd:Q13002 p:P54 ?s . ?s ps:P54 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Paul Gascoigne member of sports team ?s . ?s member of sports team ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What team did Paul Gascoigne leave in 2003",
            "query": "SELECT ?obj WHERE { wd:Q13002 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'2003')) }",
            "NLQuery": "SELECT ?obj WHERE { Paul Gascoigne member of sports team ?s . ?s member of sports team ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'2003')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2003",
            "choppedEntity": "2003"
        }
    },
    {
        "chopped": {
            "question": "paul gascoigne left which team in ",
            "query": "SELECT ?ans1 WHERE { wd:Q13002 p:P54 ?s . ?s ps:P54 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Paul Gascoigne member of sports team ?s . ?s member of sports team ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Paul Gascoigne left which team in 2003",
            "query": "SELECT ?obj WHERE { wd:Q13002 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'2003')) }",
            "NLQuery": "SELECT ?obj WHERE { Paul Gascoigne member of sports team ?s . ?s member of sports team ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'2003')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2003",
            "choppedEntity": "2003"
        }
    },
    {
        "chopped": {
            "question": "when did vicenza have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q6537 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Vicenza population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did Vicenza have a population of 112953",
            "query": "SELECT ?value WHERE { wd:Q6537 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'112953.0')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Vicenza population ?s . ?s population ?x FILTER(contains(?x,'112953.0')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "112953",
            "choppedEntity": "112953.0"
        }
    },
    {
        "chopped": {
            "question": "on what date did vicenza have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q6537 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Vicenza population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "On what date did Vicenza have a population of 112953",
            "query": "SELECT ?value WHERE { wd:Q6537 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'112953.0')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Vicenza population ?s . ?s population ?x FILTER(contains(?x,'112953.0')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "112953",
            "choppedEntity": "112953.0"
        }
    },
    {
        "chopped": {
            "question": "what is the sister town of nara whose geocoordinates are 3585 ",
            "query": "SELECT ?ans1 WHERE { wd:Q169134 wdt:P190 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Nara twinned administrative body ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the sister town of Nara whose geocoordinates are 35.85 129.21666666667",
            "query": "SELECT ?answer WHERE { wd:Q169134 wdt:P190 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'35.85 129.21666666667'))}",
            "NLQuery": "SELECT ?answer WHERE { Nara twinned administrative body ?answer . ?answer coordinate location ?x FILTER(contains(?x,'35.85 129.21666666667'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "12921666666667",
            "choppedEntity": "35.85 129.21666666667"
        }
    },
    {
        "chopped": {
            "question": "what is the sister city of nara whose geocoordinates are 3585 ",
            "query": "SELECT ?ans1 WHERE { wd:Q169134 wdt:P190 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Nara twinned administrative body ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the sister city of Nara whose geocoordinates are 35.85 129.21666666667",
            "query": "SELECT ?answer WHERE { wd:Q169134 wdt:P190 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'35.85 129.21666666667'))}",
            "NLQuery": "SELECT ?answer WHERE { Nara twinned administrative body ?answer . ?answer coordinate location ?x FILTER(contains(?x,'35.85 129.21666666667'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "12921666666667",
            "choppedEntity": "35.85 129.21666666667"
        }
    },
    {
        "chopped": {
            "question": "what was the abbreviation for the sakha republic on december 12, ",
            "query": "SELECT ?ans1 WHERE { wd:Q6605 p:P1813 ?s . ?s ps:P1813 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Sakha Republic short name ?s . ?s short name ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the abbreviation for the Sakha Republic on December 12, 1991",
            "query": "SELECT ?obj WHERE { wd:Q6605 p:P1813 ?s . ?s ps:P1813 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1991')) }",
            "NLQuery": "SELECT ?obj WHERE { Sakha Republic short name ?s . ?s short name ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1991')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1991",
            "choppedEntity": "1991"
        }
    },
    {
        "chopped": {
            "question": "tell me about public holidays in norway that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2398229 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of public holidays in Norway . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "tell me about public holidays in norway that contains the word pentecost in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2398229 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'pentecost')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of public holidays in Norway . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'pentecost')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "pentecost in their name",
            "choppedEntity": "pentecost"
        }
    },
    {
        "chopped": {
            "question": "let me know almost open occasions in norway that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2398229 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of public holidays in Norway . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "let me know almost open occasions in norway that contains the word pentecost in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2398229 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'pentecost')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of public holidays in Norway . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'pentecost')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "pentecost in their name",
            "choppedEntity": "pentecost"
        }
    },
    {
        "chopped": {
            "question": "which genre starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q483394 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of genre . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which genre starts with the letter y",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q483394 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of genre . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "y",
            "choppedEntity": "y"
        }
    },
    {
        "chopped": {
            "question": "which genre begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q483394 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of genre . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which genre begins with the letter y",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q483394 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of genre . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "y",
            "choppedEntity": "y"
        }
    },
    {
        "chopped": {
            "question": "what are the animated series that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q581714 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of animated series . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the animated series that starts with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q581714 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of animated series . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what are the animated series that begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q581714 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of animated series . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the animated series that begins with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q581714 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of animated series . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "name an hill on the asian continent that starts with letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q54050 . ?ans1 wdt:P30 wd:Q48 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of hill . ?ans1 continent Asia . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name an hill on the Asian Continent that starts with letter R",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q54050 . ?sbj wdt:P30 wd:Q48 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of hill . ?sbj continent Asia . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "r",
            "choppedEntity": "r"
        }
    },
    {
        "chopped": {
            "question": "which is the hill on the asian continent that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q54050 . ?ans1 wdt:P30 wd:Q48 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of hill . ?ans1 continent Asia . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHICH IS THE HILL ON THE ASIAN CONTINENT THAT STARTS WITH THE LETTER R",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q54050 . ?sbj wdt:P30 wd:Q48 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of hill . ?sbj continent Asia . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "r",
            "choppedEntity": "r"
        }
    },
    {
        "chopped": {
            "question": "what are the fish which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q600396 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of fish . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the fish which start with the letter p",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q600396 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of fish . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "p",
            "choppedEntity": "p"
        }
    },
    {
        "chopped": {
            "question": "what are the fish that begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q600396 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of fish . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the fish that begin with the letter p",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q600396 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of fish . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "p",
            "choppedEntity": "p"
        }
    },
    {
        "chopped": {
            "question": "what are the civil liberties that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q29556 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of civil liberties . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the civil liberties that contains the word freedom in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q29556 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'freedom')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of civil liberties . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'freedom')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "freedom in their name",
            "choppedEntity": "freedom"
        }
    },
    {
        "chopped": {
            "question": "tell me military operation whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q645883 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of military operation . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me military operation whose name has the word operation in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q645883 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'operation')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of military operation . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'operation')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "operation in it",
            "choppedEntity": "operation"
        }
    },
    {
        "chopped": {
            "question": "let me know military operation whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q645883 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of military operation . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know military operation whose title has the word operation in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q645883 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'operation')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of military operation . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'operation')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "operation in it",
            "choppedEntity": "operation"
        }
    },
    {
        "chopped": {
            "question": "tell me radiometric dating whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q214753 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of radiometric dating . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me radiometric dating whose name has the word dating in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q214753 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'dating')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of radiometric dating . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'dating')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "dating in it",
            "choppedEntity": "dating"
        }
    },
    {
        "chopped": {
            "question": "let me know radiometric dating whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q214753 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of radiometric dating . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know radiometric dating whose title has the word dating in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q214753 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'dating')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of radiometric dating . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'dating')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "dating in it",
            "choppedEntity": "dating"
        }
    },
    {
        "chopped": {
            "question": "what is an educational stage that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q18189 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of educational stage . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what is an educational stage that contains the word kantonsschule in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18189 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'kantonsschule')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of educational stage . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'kantonsschule')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "kantonsschule in their name",
            "choppedEntity": "kantonsschule"
        }
    },
    {
        "chopped": {
            "question": "what is an academic stage that consists of the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q18189 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of educational stage . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what is an academic stage that consists of the word kantonsschule in their name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18189 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'kantonsschule')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of educational stage . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'kantonsschule')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "kantonsschule in their name",
            "choppedEntity": "kantonsschule"
        }
    },
    {
        "chopped": {
            "question": "what is the subject of rococo that has a q48460 that is ",
            "query": "SELECT ?ans1 WHERE { wd:Q122960 wdt:P101 ?ans1 . ?ans1 wdt:P1036 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Rococo field of work ?ans1 . ?ans1 Dewey Decimal Classification ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the subject of rococo that has a Q48460 that is 780",
            "query": "SELECT ?answer WHERE { wd:Q122960 wdt:P101 ?answer . ?answer wdt:P1036 ?x FILTER(contains(?x,'780'))}",
            "NLQuery": "SELECT ?answer WHERE { Rococo field of work ?answer . ?answer Dewey Decimal Classification ?x FILTER(contains(?x,'780'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "780",
            "choppedEntity": "780"
        }
    },
    {
        "chopped": {
            "question": "is the mains voltage frequency in the balearic islands ",
            "query": "SELECT ?ans1 WHERE { wd:Q5765 p:P2884 ?s . ?s ps:P2884 ?x FILTER(contains(?x,?unknown)) . ?s pq:P2144 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Balearic Islands mains voltage ?s . ?s mains voltage ?x FILTER(contains(?x,?unknown)) . ?s frequency ?ans1}"
        },
        "original": {
            "question": "Is the mains voltage frequency in the Balearic Islands 220.0",
            "query": "SELECT ?value WHERE { wd:Q5765 p:P2884 ?s . ?s ps:P2884 ?x FILTER(contains(?x,'220.0')) . ?s pq:P2144 ?value}",
            "NLQuery": "SELECT ?value WHERE { Balearic Islands mains voltage ?s . ?s mains voltage ?x FILTER(contains(?x,'220.0')) . ?s frequency ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "2200",
            "choppedEntity": "220.0"
        }
    },
    {
        "chopped": {
            "question": "what is the name of carl jungs spouse in ",
            "query": "SELECT ?ans1 WHERE { wd:Q41532 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Carl Gustav Jung spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "what is the name of Carl Jung's spouse in 1955",
            "query": "SELECT ?obj WHERE { wd:Q41532 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1955')) }",
            "NLQuery": "SELECT ?obj WHERE { Carl Gustav Jung spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1955')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1955",
            "choppedEntity": "1955"
        }
    },
    {
        "chopped": {
            "question": "disclose me world view whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q49447 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of world view . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Disclose me world view whose name has the word theism in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q49447 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'theism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of world view . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'theism')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "theism in it",
            "choppedEntity": "theism"
        }
    },
    {
        "chopped": {
            "question": "what was the population of toledo in ",
            "query": "SELECT ?ans1 WHERE { wd:Q5836 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Toledo population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of Toledo in 2015",
            "query": "SELECT ?obj WHERE { wd:Q5836 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2015')) }",
            "NLQuery": "SELECT ?obj WHERE { Toledo population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2015')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2015",
            "choppedEntity": "2015"
        }
    },
    {
        "chopped": {
            "question": "what was toledos population in ",
            "query": "SELECT ?ans1 WHERE { wd:Q5836 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Toledo population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was Toledo's population in 2015",
            "query": "SELECT ?obj WHERE { wd:Q5836 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'2015')) }",
            "NLQuery": "SELECT ?obj WHERE { Toledo population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'2015')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2015",
            "choppedEntity": "2015"
        }
    },
    {
        "chopped": {
            "question": "what are the public holidays in switzerland which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q671354 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of public holidays in Switzerland . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the Public holidays in Switzerland which start with the letter friday",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q671354 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'friday')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of public holidays in Switzerland . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'friday')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "friday",
            "choppedEntity": "friday"
        }
    },
    {
        "chopped": {
            "question": "what are the open occasions in switzerland which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q671354 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of public holidays in Switzerland . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the Open occasions in Switzerland which begin with the letter friday",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q671354 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'friday')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of public holidays in Switzerland . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'friday')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "friday",
            "choppedEntity": "friday"
        }
    },
    {
        "chopped": {
            "question": "what is the eponym of cummingtonite, which has a size of ",
            "query": "SELECT ?ans1 WHERE { wd:Q418873 wdt:P138 ?ans1 . ?ans1 wdt:P2046 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { cummingtonite named after ?ans1 . ?ans1 area ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the eponym of Cummingtonite, which has a size of 23.1",
            "query": "SELECT ?answer WHERE { wd:Q418873 wdt:P138 ?answer . ?answer wdt:P2046 ?x FILTER(contains(?x,'23.1'))}",
            "NLQuery": "SELECT ?answer WHERE { cummingtonite named after ?answer . ?answer area ?x FILTER(contains(?x,'23.1'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "231",
            "choppedEntity": "23.1"
        }
    },
    {
        "chopped": {
            "question": "tell me cable-stayed bridge whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q158555 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of cable-stayed bridge . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "TELL ME CABLE-STAYED BRIDGE WHOSE NAME HAS THE WORD YPSILON IN IT.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q158555 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ypsilon')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of cable-stayed bridge . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ypsilon')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "ypsilon in it",
            "choppedEntity": "ypsilon"
        }
    },
    {
        "chopped": {
            "question": "let me know cable-stayed bridge whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q158555 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of cable-stayed bridge . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let Me know CABLE-STAYED BRIDGE WHOSE Title HAS THE WORD YPSILON IN IT.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q158555 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ypsilon')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of cable-stayed bridge . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ypsilon')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "ypsilon in it",
            "choppedEntity": "ypsilon"
        }
    },
    {
        "chopped": {
            "question": "what was the population of samara in ",
            "query": "SELECT ?ans1 WHERE { wd:Q894 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Samara population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What was the population of Samara in 1890",
            "query": "SELECT ?obj WHERE { wd:Q894 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1890')) }",
            "NLQuery": "SELECT ?obj WHERE { Samara population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1890')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1890",
            "choppedEntity": "1890"
        }
    },
    {
        "chopped": {
            "question": "when did south carolina have a population of ",
            "query": "SELECT ?ans1 WHERE { wd:Q1456 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { South Carolina population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did South Carolina have a population of 3.12182e+06",
            "query": "SELECT ?value WHERE { wd:Q1456 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'3.12182e+06')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { South Carolina population ?s . ?s population ?x FILTER(contains(?x,'3.12182e+06')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "312182e+06",
            "choppedEntity": "3.12182e+06"
        }
    },
    {
        "chopped": {
            "question": "when was south carolinas population at ",
            "query": "SELECT ?ans1 WHERE { wd:Q1456 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { South Carolina population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was South Carolina's population at 31,218,206",
            "query": "SELECT ?value WHERE { wd:Q1456 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'3.12182e+06')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { South Carolina population ?s . ?s population ?x FILTER(contains(?x,'3.12182e+06')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "31,218,206",
            "choppedEntity": "3.12182e+06"
        }
    },
    {
        "chopped": {
            "question": "tell me comedic genre whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q5151404 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of comedic genre . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me comedic genre whose name has the word sitcom in it name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5151404 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'sitcom')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of comedic genre . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'sitcom')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "sitcom in it name",
            "choppedEntity": "sitcom"
        }
    },
    {
        "chopped": {
            "question": "let me know comedic sort whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q5151404 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of comedic genre . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know comedic sort whose title has the word sitcom in it title",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5151404 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'sitcom')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of comedic genre . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'sitcom')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "sitcom in it title",
            "choppedEntity": "sitcom"
        }
    },
    {
        "chopped": {
            "question": "what are  the boat type  which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q16103215 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of boat type . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are  the boat type  which start with the letter y",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16103215 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of boat type . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "y",
            "choppedEntity": "y"
        }
    },
    {
        "chopped": {
            "question": "what are the vessel sort which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q16103215 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of boat type . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the vessel sort which begin with the letter y",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16103215 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of boat type . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "y",
            "choppedEntity": "y"
        }
    },
    {
        "chopped": {
            "question": "tell me  hindu deity  whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q979507 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Hindu deity . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me  Hindu deity  whose name has the word yama in it",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q979507 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yama')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Hindu deity . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yama')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "yama in it",
            "choppedEntity": "yama"
        }
    },
    {
        "chopped": {
            "question": "reveal me hindu deity whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q979507 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of Hindu deity . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Reveal me Hindu deity whose name has the word yama in it",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q979507 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yama')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of Hindu deity . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yama')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "yama in it",
            "choppedEntity": "yama"
        }
    },
    {
        "chopped": {
            "question": "what is the gender of phyllis schlafly whose shortened name is ",
            "query": "SELECT ?ans1 WHERE { wd:Q434669 wdt:P21 ?ans1 . ?ans1 wdt:P1813 ?x FILTER(contains(?x,'\u0410\u044f\u043b'))}",
            "NLQuery": "SELECT ?ans1 WHERE { Phyllis Schlafly sex or gender ?ans1 . ?ans1 short name ?x FILTER(contains(?x,'\u0410\u044f\u043b'))}"
        },
        "original": {
            "question": "What is the gender of Phyllis Schlafly whose shortened name is \u0410\u044f\u043b",
            "query": "SELECT ?answer WHERE { wd:Q434669 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'\u0410\u044f\u043b'))}",
            "NLQuery": "SELECT ?answer WHERE { Phyllis Schlafly sex or gender ?answer . ?answer short name ?x FILTER(contains(?x,'\u0410\u044f\u043b'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u0430\u044f\u043b",
            "choppedEntity": "\u0430\u044f\u043b"
        }
    },
    {
        "chopped": {
            "question": "what is the gender of phyllis schlafly whose shortened identify is ",
            "query": "SELECT ?ans1 WHERE { wd:Q434669 wdt:P21 ?ans1 . ?ans1 wdt:P1813 ?x FILTER(contains(?x,'\u0410\u044f\u043b'))}",
            "NLQuery": "SELECT ?ans1 WHERE { Phyllis Schlafly sex or gender ?ans1 . ?ans1 short name ?x FILTER(contains(?x,'\u0410\u044f\u043b'))}"
        },
        "original": {
            "question": "What is the gender of Phyllis Schlafly whose shortened identify is \u0410\u044f\u043b",
            "query": "SELECT ?answer WHERE { wd:Q434669 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'\u0410\u044f\u043b'))}",
            "NLQuery": "SELECT ?answer WHERE { Phyllis Schlafly sex or gender ?answer . ?answer short name ?x FILTER(contains(?x,'\u0410\u044f\u043b'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u0430\u044f\u043b",
            "choppedEntity": "\u0430\u044f\u043b"
        }
    },
    {
        "chopped": {
            "question": "tell me the name of a single that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q134556 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of single . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the name of a single that starts with the letter w.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q134556 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of single . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "disclose me the name of a single the begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q134556 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of single . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "disclose me the name of a single the begins with the letter w.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q134556 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of single . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "w",
            "choppedEntity": "w"
        }
    },
    {
        "chopped": {
            "question": "what is not the same as the cerberus and has a surface that is ",
            "query": "SELECT ?ans1 WHERE { wd:Q83496 wdt:P1889 ?ans1 . ?ans1 wdt:P2046 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Cerberus different from ?ans1 . ?ans1 area ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is not the same as the Cerberus and has a surface that is 8.18",
            "query": "SELECT ?answer WHERE { wd:Q83496 wdt:P1889 ?answer . ?answer wdt:P2046 ?x FILTER(contains(?x,'8.18'))}",
            "NLQuery": "SELECT ?answer WHERE { Cerberus different from ?answer . ?answer area ?x FILTER(contains(?x,'8.18'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "818",
            "choppedEntity": "8.18"
        }
    },
    {
        "chopped": {
            "question": "what are the nishiki-e which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1683337 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of nishiki-e . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the nishiki-e which start with the letter s",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1683337 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of nishiki-e . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what are the nishiki-e which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1683337 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of nishiki-e . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the nishiki-e which begin with the letter s",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1683337 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of nishiki-e . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "s",
            "choppedEntity": "s"
        }
    },
    {
        "chopped": {
            "question": "what is the twinned administrative body in chennai which started in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q1352 p:P190 ?s . ?s ps:P190 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Chennai twinned administrative body ?s . ?s twinned administrative body ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What is the twinned administrative body in Chennai which started in the year 2008",
            "query": "SELECT ?obj WHERE { wd:Q1352 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2008')) }",
            "NLQuery": "SELECT ?obj WHERE { Chennai twinned administrative body ?s . ?s twinned administrative body ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2008')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2008",
            "choppedEntity": "2008"
        }
    },
    {
        "chopped": {
            "question": "in chennai, what is the similar administrative body that started in ",
            "query": "SELECT ?ans1 WHERE { wd:Q1352 p:P190 ?s . ?s ps:P190 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Chennai twinned administrative body ?s . ?s twinned administrative body ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "In Chennai, what is the similar administrative body that started in 2008",
            "query": "SELECT ?obj WHERE { wd:Q1352 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'2008')) }",
            "NLQuery": "SELECT ?obj WHERE { Chennai twinned administrative body ?s . ?s twinned administrative body ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'2008')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "2008",
            "choppedEntity": "2008"
        }
    },
    {
        "chopped": {
            "question": "what are the geological epoch which start with the letter s",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q754897 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of geological epoch . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the geological epoch which start with the letter swenlock",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q754897 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wenlock')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of geological epoch . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wenlock')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "wenlock",
            "choppedEntity": "wenlock"
        }
    },
    {
        "chopped": {
            "question": "what are the geographical age which begin with the letter s",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q754897 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of geological epoch . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the geographical age which begin with the letter swenlock",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q754897 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wenlock')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of geological epoch . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wenlock')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "wenlock",
            "choppedEntity": "wenlock"
        }
    },
    {
        "chopped": {
            "question": "what is the population of torshavn in year ",
            "query": "SELECT ?ans1 WHERE { wd:Q10704 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { T\u00f3rshavn population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What is the population of Torshavn in year 1991",
            "query": "SELECT ?obj WHERE { wd:Q10704 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1991')) }",
            "NLQuery": "SELECT ?obj WHERE { T\u00f3rshavn population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1991')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1991",
            "choppedEntity": "1991"
        }
    },
    {
        "chopped": {
            "question": "which is the number of population of torshavn in ",
            "query": "SELECT ?ans1 WHERE { wd:Q10704 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { T\u00f3rshavn population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Which is the number of population of Torshavn in 1991",
            "query": "SELECT ?obj WHERE { wd:Q10704 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1991')) }",
            "NLQuery": "SELECT ?obj WHERE { T\u00f3rshavn population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1991')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1991",
            "choppedEntity": "1991"
        }
    },
    {
        "chopped": {
            "question": "which type of value starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q194112 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of value . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which type of value starts with b",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q194112 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of value . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "b",
            "choppedEntity": "b"
        }
    },
    {
        "chopped": {
            "question": "what type of value starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q194112 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of value . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What type of value starts with the letter B",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q194112 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of value . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "b",
            "choppedEntity": "b"
        }
    },
    {
        "chopped": {
            "question": "brian lara joined which team in ",
            "query": "SELECT ?ans1 WHERE { wd:Q202877 p:P54 ?s . ?s ps:P54 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Brian Lara member of sports team ?s . ?s member of sports team ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Brian Lara joined which team in 1987",
            "query": "SELECT ?obj WHERE { wd:Q202877 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1987')) }",
            "NLQuery": "SELECT ?obj WHERE { Brian Lara member of sports team ?s . ?s member of sports team ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1987')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1987",
            "choppedEntity": "1987"
        }
    },
    {
        "chopped": {
            "question": "on what date did the human development index in benin increase to ",
            "query": "SELECT ?ans1 WHERE { wd:Q962 p:P1081 ?s . ?s ps:P1081 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Benin Human Development Index ?s . ?s Human Development Index ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "On what date did the Human Development Index in Benin increase to 0.477",
            "query": "SELECT ?value WHERE { wd:Q962 p:P1081 ?s . ?s ps:P1081 ?x FILTER(contains(?x,'0.477')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Benin Human Development Index ?s . ?s Human Development Index ?x FILTER(contains(?x,'0.477')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "0477",
            "choppedEntity": "0.477"
        }
    },
    {
        "chopped": {
            "question": "what position did earle page leave on april 26, ",
            "query": "SELECT ?ans1 WHERE { wd:Q370926 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Earle Page position held ?s . ?s position held ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What position did Earle Page leave on April 26, 1939",
            "query": "SELECT ?obj WHERE { wd:Q370926 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1939')) }",
            "NLQuery": "SELECT ?obj WHERE { Earle Page position held ?s . ?s position held ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1939')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1939",
            "choppedEntity": "1939"
        }
    },
    {
        "chopped": {
            "question": "what position did earle page resigned on april 26, ",
            "query": "SELECT ?ans1 WHERE { wd:Q370926 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Earle Page position held ?s . ?s position held ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "what position did Earle page resigned on April 26, 1939",
            "query": "SELECT ?obj WHERE { wd:Q370926 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1939')) }",
            "NLQuery": "SELECT ?obj WHERE { Earle Page position held ?s . ?s position held ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1939')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1939",
            "choppedEntity": "1939"
        }
    },
    {
        "chopped": {
            "question": "tell me the group of organisms known by one particular common name and that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q55983715 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of organisms known by a particular common name . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the group of organisms known by one particular common name and that contains the word wireworm in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55983715 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wireworm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of organisms known by a particular common name . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wireworm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "wireworm in its name",
            "choppedEntity": "wireworm"
        }
    },
    {
        "chopped": {
            "question": "tell me the crew of organisms regarded by means of one precise common name and that includes the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q55983715 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of organisms known by a particular common name . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the crew of organisms regarded by means of one precise common name and that includes the word wireworm in it's name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55983715 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wireworm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of organisms known by a particular common name . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wireworm')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "wireworm in its name",
            "choppedEntity": "wireworm"
        }
    },
    {
        "chopped": {
            "question": "who is the brother of manuel i komnenos that died on 1-1-",
            "query": "SELECT ?ans1 WHERE { wd:Q41610 wdt:P3373 ?ans1 . ?ans1 wdt:P570 ?x FILTER(contains(YEAR(?x),?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Manuel I Komnenos sibling ?ans1 . ?ans1 date of death ?x FILTER(contains(YEAR(?x),?unknown))}"
        },
        "original": {
            "question": "Who is the brother of Manuel I Komnenos that died on 1-1-1142",
            "query": "SELECT ?answer WHERE { wd:Q41610 wdt:P3373 ?answer . ?answer wdt:P570 ?x FILTER(contains(YEAR(?x),'1142'))}",
            "NLQuery": "SELECT ?answer WHERE { Manuel I Komnenos sibling ?answer . ?answer date of death ?x FILTER(contains(YEAR(?x),'1142'))}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1142",
            "choppedEntity": "1142"
        }
    },
    {
        "chopped": {
            "question": "who is the brother of manuel i komnenos that passed on on 1-1-",
            "query": "SELECT ?ans1 WHERE { wd:Q41610 wdt:P3373 ?ans1 . ?ans1 wdt:P570 ?x FILTER(contains(YEAR(?x),?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Manuel I Komnenos sibling ?ans1 . ?ans1 date of death ?x FILTER(contains(YEAR(?x),?unknown))}"
        },
        "original": {
            "question": "Who is the brother of Manuel I Komnenos that passed on on 1-1-1142",
            "query": "SELECT ?answer WHERE { wd:Q41610 wdt:P3373 ?answer . ?answer wdt:P570 ?x FILTER(contains(YEAR(?x),'1142'))}",
            "NLQuery": "SELECT ?answer WHERE { Manuel I Komnenos sibling ?answer . ?answer date of death ?x FILTER(contains(YEAR(?x),'1142'))}"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1142",
            "choppedEntity": "1142"
        }
    },
    {
        "chopped": {
            "question": "tell me military rankw wose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q56019 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of military rank . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me military rankw wose name has the word stabswachtmeister in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56019 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'stabswachtmeister')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of military rank . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'stabswachtmeister')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "stabswachtmeister in it",
            "choppedEntity": "stabswachtmeister"
        }
    },
    {
        "chopped": {
            "question": "let me know military rankw wose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q56019 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of military rank . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know military rankw wose title has the word stabswachtmeister in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56019 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'stabswachtmeister')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of military rank . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'stabswachtmeister')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "stabswachtmeister in it",
            "choppedEntity": "stabswachtmeister"
        }
    },
    {
        "chopped": {
            "question": "how many people lived in mandaluyong in may of ",
            "query": "SELECT ?ans1 WHERE { wd:Q9085 p:P1082 ?s . ?s ps:P1082 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mandaluyong population ?s . ?s population ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "How many people lived in Mandaluyong in May of 1975",
            "query": "SELECT ?obj WHERE { wd:Q9085 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1975')) }",
            "NLQuery": "SELECT ?obj WHERE { Mandaluyong population ?s . ?s population ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1975')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1975",
            "choppedEntity": "1975"
        }
    },
    {
        "chopped": {
            "question": "when is the herat country started in ",
            "query": "SELECT ?ans1 WHERE { wd:Q45313 p:P17 ?s . ?s ps:P17 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Herat country ?s . ?s country ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "When is the Herat country started in 1370",
            "query": "SELECT ?obj WHERE { wd:Q45313 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1370')) }",
            "NLQuery": "SELECT ?obj WHERE { Herat country ?s . ?s country ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1370')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1370",
            "choppedEntity": "1370"
        }
    },
    {
        "chopped": {
            "question": "what country was j\u00f3zef pi\u0142sudski a citizen of at the start of ",
            "query": "SELECT ?ans1 WHERE { wd:Q885 p:P27 ?s . ?s ps:P27 ?ans1 . ?s pq:P580 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { J\u00f3zef Pi\u0142sudski country of citizenship ?s . ?s country of citizenship ?ans1 . ?s start time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What country was J\u00f3zef Pi\u0142sudski a citizen of at the start of 1918",
            "query": "SELECT ?obj WHERE { wd:Q885 p:P27 ?s . ?s ps:P27 ?obj . ?s pq:P580 ?x FILTER(contains(YEAR(?x),'1918')) }",
            "NLQuery": "SELECT ?obj WHERE { J\u00f3zef Pi\u0142sudski country of citizenship ?s . ?s country of citizenship ?obj . ?s start time ?x FILTER(contains(YEAR(?x),'1918')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1918",
            "choppedEntity": "1918"
        }
    },
    {
        "chopped": {
            "question": "tell me colonial empire whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1790360 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of colonial empire . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me colonial empire whose name has the word list in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1790360 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'list')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of colonial empire . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'list')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "list in it",
            "choppedEntity": "list"
        }
    },
    {
        "chopped": {
            "question": "let me know colonial domain whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1790360 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of colonial empire . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know colonial domain whose title has the word list in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1790360 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'list')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of colonial empire . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'list')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "list in it",
            "choppedEntity": "list"
        }
    },
    {
        "chopped": {
            "question": "which branch of psychology starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q60680430 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of branch of psychology . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which branch of psychology starts with p",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q60680430 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of branch of psychology . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "p",
            "choppedEntity": "p"
        }
    },
    {
        "chopped": {
            "question": "which department of brain research begins with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q60680430 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of branch of psychology . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which department of brain research begins with p",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q60680430 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of branch of psychology . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "p",
            "choppedEntity": "p"
        }
    },
    {
        "chopped": {
            "question": "what are the nutrition which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2138622 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of nutrition . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the nutrition which start with the letter e",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2138622 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of nutrition . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "e",
            "choppedEntity": "e"
        }
    },
    {
        "chopped": {
            "question": "what are the sustenance which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q2138622 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of nutrition . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the sustenance which begin with the letter e",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2138622 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of nutrition . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "e",
            "choppedEntity": "e"
        }
    },
    {
        "chopped": {
            "question": "what is the name of the member of the latin union that has a longitude of ",
            "query": "SELECT ?ans1 WHERE { wd:Q123209 wdt:P463 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Latin Union member of ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the name of the member of the Latin Union that has a longitude of 48.85",
            "query": "SELECT ?answer WHERE { wd:Q123209 wdt:P463 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'48.85'))}",
            "NLQuery": "SELECT ?answer WHERE { Latin Union member of ?answer . ?answer coordinate location ?x FILTER(contains(?x,'48.85'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "4885",
            "choppedEntity": "48.85"
        }
    },
    {
        "chopped": {
            "question": "what is the title of the part of the latin union that features a longitude of ",
            "query": "SELECT ?ans1 WHERE { wd:Q123209 wdt:P463 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Latin Union member of ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "What is the title of the part of the Latin Union that features a longitude of 48.85",
            "query": "SELECT ?answer WHERE { wd:Q123209 wdt:P463 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'48.85'))}",
            "NLQuery": "SELECT ?answer WHERE { Latin Union member of ?answer . ?answer coordinate location ?x FILTER(contains(?x,'48.85'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "4885",
            "choppedEntity": "48.85"
        }
    },
    {
        "chopped": {
            "question": "what sports team did mircea lucescu play for on 1-1-",
            "query": "SELECT ?ans1 WHERE { wd:Q342698 p:P54 ?s . ?s ps:P54 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mircea Lucescu member of sports team ?s . ?s member of sports team ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What sports team did Mircea Lucescu play for on 1-1-1977",
            "query": "SELECT ?obj WHERE { wd:Q342698 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1977')) }",
            "NLQuery": "SELECT ?obj WHERE { Mircea Lucescu member of sports team ?s . ?s member of sports team ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1977')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1977",
            "choppedEntity": "1977"
        }
    },
    {
        "chopped": {
            "question": "who did mircea lucescu play for in january of ",
            "query": "SELECT ?ans1 WHERE { wd:Q342698 p:P54 ?s . ?s ps:P54 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Mircea Lucescu member of sports team ?s . ?s member of sports team ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who did Mircea Lucescu play for in January of 1977",
            "query": "SELECT ?obj WHERE { wd:Q342698 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1977')) }",
            "NLQuery": "SELECT ?obj WHERE { Mircea Lucescu member of sports team ?s . ?s member of sports team ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1977')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1977",
            "choppedEntity": "1977"
        }
    },
    {
        "chopped": {
            "question": "which is the ip network that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q11224256 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of IP network . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHICH IS THE IP NETWORK THAT CONTAINS THE WORD INTERNET IN THEIR NAME",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11224256 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'internet')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of IP network . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'internet')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "internet in their name",
            "choppedEntity": "internet"
        }
    },
    {
        "chopped": {
            "question": "what award did richard gere receive in ",
            "query": "SELECT ?ans1 WHERE { wd:Q48410 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Richard Gere award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award did Richard Gere receive in 1979",
            "query": "SELECT ?obj WHERE { wd:Q48410 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1979')) }",
            "NLQuery": "SELECT ?obj WHERE { Richard Gere award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1979')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1979",
            "choppedEntity": "1979"
        }
    },
    {
        "chopped": {
            "question": "what award was richard gere presented with in ",
            "query": "SELECT ?ans1 WHERE { wd:Q48410 p:P166 ?s . ?s ps:P166 ?ans1 . ?s pq:P585 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Richard Gere award received ?s . ?s award received ?ans1 . ?s point in time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "What award was Richard Gere presented with in 1979",
            "query": "SELECT ?obj WHERE { wd:Q48410 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x FILTER(contains(YEAR(?x),'1979')) }",
            "NLQuery": "SELECT ?obj WHERE { Richard Gere award received ?s . ?s award received ?obj . ?s point in time ?x FILTER(contains(YEAR(?x),'1979')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1979",
            "choppedEntity": "1979"
        }
    },
    {
        "chopped": {
            "question": "what are the system which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q403523 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of system . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the system which start with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q403523 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of system . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what are the framework which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q403523 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of system . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the framework which begin with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q403523 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of system . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what are the part of a plant which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q20011319 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of plant structure . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the part of a plant which start with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20011319 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of plant structure . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what is the part of a plant that begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q20011319 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of plant structure . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is the part of a plant that begins with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20011319 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of plant structure . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "tell me technical term  that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q12812139 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of technical term . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me technical term  that contains the word VIBEX IN IT",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12812139 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vibex')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of technical term . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vibex')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "vibex in it",
            "choppedEntity": "vibex"
        }
    },
    {
        "chopped": {
            "question": "what are the alternative medical treatment which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q31338769 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of alternative medical treatment . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the alternative medical treatment which start with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q31338769 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of alternative medical treatment . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what are the elective therapeutic treatment which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q31338769 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of alternative medical treatment . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the elective therapeutic treatment which begin with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q31338769 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of alternative medical treatment . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "which theory that named by fred hoyle starts with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q17737 . ?ans1 wdt:P3938 wd:Q183397 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of theory . ?ans1 named by Fred Hoyle . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which theory that named by fred hoyle starts with b",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17737 . ?sbj wdt:P3938 wd:Q183397 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of theory . ?sbj named by Fred Hoyle . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "b",
            "choppedEntity": "b"
        }
    },
    {
        "chopped": {
            "question": "which theory that named by fred hoyle begins with ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q17737 . ?ans1 wdt:P3938 wd:Q183397 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of theory . ?ans1 named by Fred Hoyle . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which theory that named by fred hoyle begins with b",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17737 . ?sbj wdt:P3938 wd:Q183397 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of theory . ?sbj named by Fred Hoyle . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "b",
            "choppedEntity": "b"
        }
    },
    {
        "chopped": {
            "question": "name an historical region whose highest point is ben nevis that contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1620908 . ?ans1 wdt:P610 wd:Q104674 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of historical region . ?ans1 highest point Ben Nevis . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name an historical region whose highest point is Ben Nevis that contains the word \"highlands\" in its name",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1620908 . ?sbj wdt:P610 wd:Q104674 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'highlands')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of historical region . ?sbj highest point Ben Nevis . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'highlands')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "highlands in its name",
            "choppedEntity": "highlands"
        }
    },
    {
        "chopped": {
            "question": "name a historic region whose highest point is ben nevis, containing in its name the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q1620908 . ?ans1 wdt:P610 wd:Q104674 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of historical region . ?ans1 highest point Ben Nevis . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a historic region whose highest point is Ben Nevis, containing in its name the word \"highlands\"",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1620908 . ?sbj wdt:P610 wd:Q104674 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'highlands')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of historical region . ?sbj highest point Ben Nevis . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'highlands')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "highlands",
            "choppedEntity": "highlands"
        }
    },
    {
        "chopped": {
            "question": "who was no longer the spouse of joan crawford in the year ",
            "query": "SELECT ?ans1 WHERE { wd:Q40475 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Joan Crawford spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was no longer the spouse of Joan Crawford in the year 1933",
            "query": "SELECT ?obj WHERE { wd:Q40475 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1933')) }",
            "NLQuery": "SELECT ?obj WHERE { Joan Crawford spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1933')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1933",
            "choppedEntity": "1933"
        }
    },
    {
        "chopped": {
            "question": "who did joan crawford divorce in ",
            "query": "SELECT ?ans1 WHERE { wd:Q40475 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Joan Crawford spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who did Joan Crawford divorce in 1933",
            "query": "SELECT ?obj WHERE { wd:Q40475 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1933')) }",
            "NLQuery": "SELECT ?obj WHERE { Joan Crawford spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1933')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1933",
            "choppedEntity": "1933"
        }
    },
    {
        "chopped": {
            "question": "who is the doctoral student for stephen hawking with the ethos thesis id of ",
            "query": "SELECT ?ans1 WHERE { wd:Q17714 p:P185 ?s . ?s ps:P185 ?ans1 . ?s pq:P4536 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Stephen Hawking doctoral student ?s . ?s doctoral student ?ans1 . ?s EThOS thesis ID ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "Who is the doctoral student for Stephen Hawking with the EThOS thesis ID of uk.bl.ethos.625075",
            "query": "SELECT ?obj WHERE { wd:Q17714 p:P185 ?s . ?s ps:P185 ?obj . ?s pq:P4536 ?x FILTER(contains(?x,'uk.bl.ethos.625075')) }",
            "NLQuery": "SELECT ?obj WHERE { Stephen Hawking doctoral student ?s . ?s doctoral student ?obj . ?s EThOS thesis ID ?x FILTER(contains(?x,'uk.bl.ethos.625075')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "ukblethos625075",
            "choppedEntity": "uk.bl.ethos.625075"
        }
    },
    {
        "chopped": {
            "question": "which is the state of india that coextensive with amnipur and which contains the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q13390680 . ?ans1 wdt:P3403 wd:Q57156482 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of none . ?ans1 coextensive with Manipur . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHICH IS THE STATE OF INDIA THAT COEXTENSIVE WITH AMNIPUR AND WHICH CONTAINS THE WORD MANIPUR IN THEIR NAME",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13390680 . ?sbj wdt:P3403 wd:Q57156482 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'manipur')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of none . ?sbj coextensive with Manipur . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'manipur')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "manipur in their name",
            "choppedEntity": "manipur"
        }
    },
    {
        "chopped": {
            "question": "which is the state of india that coextensive with amnipur and which hold the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q13390680 . ?ans1 wdt:P3403 wd:Q57156482 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of none . ?ans1 coextensive with Manipur . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "WHICH IS THE STATE OF INDIA THAT COEXTENSIVE WITH AMNIPUR AND WHICH HOLD THE WORD MANIPUR IN THEIR NAME",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13390680 . ?sbj wdt:P3403 wd:Q57156482 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'manipur')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of none . ?sbj coextensive with Manipur . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'manipur')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "manipur in their name",
            "choppedEntity": "manipur"
        }
    },
    {
        "chopped": {
            "question": "who was johnny depps partner until ",
            "query": "SELECT ?ans1 WHERE { wd:Q37175 p:P451 ?s . ?s ps:P451 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Johnny Depp unmarried partner ?s . ?s unmarried partner ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was Johnny Depp's partner until 1993",
            "query": "SELECT ?obj WHERE { wd:Q37175 p:P451 ?s . ?s ps:P451 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1993')) }",
            "NLQuery": "SELECT ?obj WHERE { Johnny Depp unmarried partner ?s . ?s unmarried partner ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1993')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1993",
            "choppedEntity": "1993"
        }
    },
    {
        "chopped": {
            "question": "who was johnny depp partnered with until ",
            "query": "SELECT ?ans1 WHERE { wd:Q37175 p:P451 ?s . ?s ps:P451 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Johnny Depp unmarried partner ?s . ?s unmarried partner ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who was Johnny Depp partnered with until 1993",
            "query": "SELECT ?obj WHERE { wd:Q37175 p:P451 ?s . ?s ps:P451 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1993')) }",
            "NLQuery": "SELECT ?obj WHERE { Johnny Depp unmarried partner ?s . ?s unmarried partner ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1993')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1993",
            "choppedEntity": "1993"
        }
    },
    {
        "chopped": {
            "question": "tell me the archaeological artifact that was discovered by pierre-fran\u00e7ois bouchard and starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q220659 . ?ans1 wdt:P61 wd:Q1386062 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of archaeological artifact . ?ans1 discoverer or inventor Pierre-Fran\u00e7ois Bouchard . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the archaeological artifact that was discovered by Pierre-Fran\u00e7ois Bouchard and starts with the letter r",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q220659 . ?sbj wdt:P61 wd:Q1386062 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of archaeological artifact . ?sbj discoverer or inventor Pierre-Fran\u00e7ois Bouchard . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "r",
            "choppedEntity": "r"
        }
    },
    {
        "chopped": {
            "question": "tell me the archaeological artifact that was once found by means of pierre-fran\u00e7ois bouchard and starts offevolved with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q220659 . ?ans1 wdt:P61 wd:Q1386062 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of archaeological artifact . ?ans1 discoverer or inventor Pierre-Fran\u00e7ois Bouchard . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me the archaeological artifact that was once found by means of Pierre-Fran\u00e7ois Bouchard and starts offevolved with the letter r",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q220659 . ?sbj wdt:P61 wd:Q1386062 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of archaeological artifact . ?sbj discoverer or inventor Pierre-Fran\u00e7ois Bouchard . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "r",
            "choppedEntity": "r"
        }
    },
    {
        "chopped": {
            "question": "what was the position of ali ibn abi talib in ",
            "query": "SELECT ?ans1 WHERE { wd:Q39619 p:P39 ?s . ?s ps:P39 ?ans1 . ?s pq:P580 ?x FILTER(contains(?x,?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Ali position held ?s . ?s position held ?ans1 . ?s start time ?x FILTER(contains(?x,?unknown)) }"
        },
        "original": {
            "question": "what was the position of ali ibn abi talib in 656-1-1",
            "query": "SELECT ?obj WHERE { wd:Q39619 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x FILTER(contains(?x,'656-1-1')) }",
            "NLQuery": "SELECT ?obj WHERE { Ali position held ?s . ?s position held ?obj . ?s start time ?x FILTER(contains(?x,'656-1-1')) }"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "656-1-1",
            "choppedEntity": "656-1-1"
        }
    },
    {
        "chopped": {
            "question": "which taxon parent of piper longum has the common name ",
            "query": "SELECT ?ans1 WHERE { wd:Q685336 wdt:P171 ?ans1 . ?ans1 wdt:P1843 ?x FILTER(contains(?x,'\u041f\u0438\u043f\u0435\u0440'))}",
            "NLQuery": "SELECT ?ans1 WHERE { Piper longum parent taxon ?ans1 . ?ans1 taxon common name ?x FILTER(contains(?x,'\u041f\u0438\u043f\u0435\u0440'))}"
        },
        "original": {
            "question": "Which taxon parent of Piper longum has the common name \u041f\u0438\u043f\u0435\u0440",
            "query": "SELECT ?answer WHERE { wd:Q685336 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'\u041f\u0438\u043f\u0435\u0440'))}",
            "NLQuery": "SELECT ?answer WHERE { Piper longum parent taxon ?answer . ?answer taxon common name ?x FILTER(contains(?x,'\u041f\u0438\u043f\u0435\u0440'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "\u043f\u0438\u043f\u0435\u0440",
            "choppedEntity": "\u043f\u0438\u043f\u0435\u0440"
        }
    },
    {
        "chopped": {
            "question": "which planning starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q309100 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of planning . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which planning starts with the letter p",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q309100 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of planning . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "p",
            "choppedEntity": "p"
        }
    },
    {
        "chopped": {
            "question": "which arranging begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q309100 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of planning . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "which arranging begins with the letter p",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q309100 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of planning . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "p",
            "choppedEntity": "p"
        }
    },
    {
        "chopped": {
            "question": "which book was published in journal des d\u00e9bats and which that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q571 . ?ans1 wdt:P1433 wd:Q2565164 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of book . ?ans1 published in Journal des d\u00e9bats . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which book was published in Journal des d\u00e9bats and which that starts with the letter c",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q571 . ?sbj wdt:P1433 wd:Q2565164 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of book . ?sbj published in Journal des d\u00e9bats . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "c",
            "choppedEntity": "c"
        }
    },
    {
        "chopped": {
            "question": "which book was published in journal des d\u00e9bats and which that starts offevolved with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q571 . ?ans1 wdt:P1433 wd:Q2565164 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of book . ?ans1 published in Journal des d\u00e9bats . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Which book was published in Journal des d\u00e9bats and which that starts offevolved with the letter c",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q571 . ?sbj wdt:P1433 wd:Q2565164 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of book . ?sbj published in Journal des d\u00e9bats . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "c",
            "choppedEntity": "c"
        }
    },
    {
        "chopped": {
            "question": "located in the administrative territorial entity of samara, what would be found at the geo-coordinates of ",
            "query": "SELECT ?ans1 WHERE { wd:Q894 wdt:P131 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Samara located in the administrative territorial entity ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Located in the administrative territorial entity of Samara, what would be found at the geo-coordinates of 53.5167",
            "query": "SELECT ?answer WHERE { wd:Q894 wdt:P131 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'53.5167'))}",
            "NLQuery": "SELECT ?answer WHERE { Samara located in the administrative territorial entity ?answer . ?answer coordinate location ?x FILTER(contains(?x,'53.5167'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "535167",
            "choppedEntity": "53.5167"
        }
    },
    {
        "chopped": {
            "question": "found within the regulatory regional substance of samara, what would be found at the geo-coordinates of ",
            "query": "SELECT ?ans1 WHERE { wd:Q894 wdt:P131 ?ans1 . ?ans1 wdt:P625 ?x FILTER(contains(?x,?unknown))}",
            "NLQuery": "SELECT ?ans1 WHERE { Samara located in the administrative territorial entity ?ans1 . ?ans1 coordinate location ?x FILTER(contains(?x,?unknown))}"
        },
        "original": {
            "question": "Found within the regulatory regional substance of Samara, what would be found at the geo-coordinates of 53.5167",
            "query": "SELECT ?answer WHERE { wd:Q894 wdt:P131 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'53.5167'))}",
            "NLQuery": "SELECT ?answer WHERE { Samara located in the administrative territorial entity ?answer . ?answer coordinate location ?x FILTER(contains(?x,'53.5167'))}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "535167",
            "choppedEntity": "53.5167"
        }
    },
    {
        "chopped": {
            "question": "when did the population of santiago metropolitan region reach ",
            "query": "SELECT ?ans1 WHERE { wd:Q2131 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Santiago Metropolitan Region population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When did the population of Santiago Metropolitan Region reach 7112808",
            "query": "SELECT ?value WHERE { wd:Q2131 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'7112808')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Santiago Metropolitan Region population ?s . ?s population ?x FILTER(contains(?x,'7112808')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "7112808",
            "choppedEntity": "7112808"
        }
    },
    {
        "chopped": {
            "question": "when was the population of santiago ",
            "query": "SELECT ?ans1 WHERE { wd:Q2131 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,?unknown)) . ?s pq:P585 ?ans1}",
            "NLQuery": "SELECT ?ans1 WHERE { Santiago Metropolitan Region population ?s . ?s population ?x FILTER(contains(?x,?unknown)) . ?s point in time ?ans1}"
        },
        "original": {
            "question": "When was the population of Santiago 7112808",
            "query": "SELECT ?value WHERE { wd:Q2131 p:P1082 ?s . ?s ps:P1082 ?x FILTER(contains(?x,'7112808')) . ?s pq:P585 ?value}",
            "NLQuery": "SELECT ?value WHERE { Santiago Metropolitan Region population ?s . ?s population ?x FILTER(contains(?x,'7112808')) . ?s point in time ?value}"
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "7112808",
            "choppedEntity": "7112808"
        }
    },
    {
        "chopped": {
            "question": "what is a state of malaysia that starts with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15063586 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of state of Malaysia . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What is a state of Malaysia that starts with the letter t.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15063586 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of state of Malaysia . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what may be a state of malaysia that begins with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q15063586 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of state of Malaysia . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What may be a state of Malaysia that begins with the letter t.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15063586 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of state of Malaysia . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "what are the jurisdiction which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q471855 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of jurisdiction . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the jurisdiction which start with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q471855 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of jurisdiction . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "what are the ward which begin with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q471855 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of jurisdiction . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the ward which begin with the letter v",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q471855 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of jurisdiction . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "v",
            "choppedEntity": "v"
        }
    },
    {
        "chopped": {
            "question": "who did alfred kinsey divorce in ",
            "query": "SELECT ?ans1 WHERE { wd:Q186561 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Alfred Kinsey spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Who did Alfred Kinsey divorce in 1956",
            "query": "SELECT ?obj WHERE { wd:Q186561 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1956')) }",
            "NLQuery": "SELECT ?obj WHERE { Alfred Kinsey spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1956')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1956",
            "choppedEntity": "1956"
        }
    },
    {
        "chopped": {
            "question": "give me the name of the alfred kinseys spouse whom he divorced in ",
            "query": "SELECT ?ans1 WHERE { wd:Q186561 p:P26 ?s . ?s ps:P26 ?ans1 . ?s pq:P582 ?x FILTER(contains(YEAR(?x),?unknown)) }",
            "NLQuery": "SELECT ?ans1 WHERE { Alfred Kinsey spouse ?s . ?s spouse ?ans1 . ?s end time ?x FILTER(contains(YEAR(?x),?unknown)) }"
        },
        "original": {
            "question": "Give me the name of the Alfred Kinsey's spouse whom he divorced in 1956.",
            "query": "SELECT ?obj WHERE { wd:Q186561 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x FILTER(contains(YEAR(?x),'1956')) }",
            "NLQuery": "SELECT ?obj WHERE { Alfred Kinsey spouse ?s . ?s spouse ?obj . ?s end time ?x FILTER(contains(YEAR(?x),'1956')) }"
        },
        "meta": {
            "entityTagNER": "DATE",
            "choppedText": "1956",
            "choppedEntity": "1956"
        }
    },
    {
        "chopped": {
            "question": "what are the emirate of the united arab emirates which start with the latter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q19833031 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of emirate of the United Arab Emirates . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what are the emirate of the united arab emirates which start with the latter f",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q19833031 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'f')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of emirate of the United Arab Emirates . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'f')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "f",
            "choppedEntity": "f"
        }
    },
    {
        "chopped": {
            "question": "what are the emirate of the joined together middle easterner emirates which begin with the last mentioned ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q19833031 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of emirate of the United Arab Emirates . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "what are the emirate of the joined together middle easterner emirates which begin with the last mentioned f",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q19833031 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'f')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of emirate of the United Arab Emirates . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'f')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "f",
            "choppedEntity": "f"
        }
    },
    {
        "chopped": {
            "question": "what are the gene which start with the letter ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q7187 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of gene . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "What are the gene which start with the letter t",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7187 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of gene . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "name a gene that begins with a ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q7187 . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of gene . ?ans1 rdfs:label ?ans1_label . FILTER(STRSTARTS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Name a gene that begins with a T.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7187 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of gene . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: strstarts",
            "choppedText": "t",
            "choppedEntity": "t"
        }
    },
    {
        "chopped": {
            "question": "tell me mixture whose name has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q169336 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of mixture . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Tell me mixture whose name has the word spiromax in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q169336 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'spiromax')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of mixture . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'spiromax')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "spiromax in it",
            "choppedEntity": "spiromax"
        }
    },
    {
        "chopped": {
            "question": "let me know blend whose title has the word ",
            "query": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 wdt:P31 wd:Q169336 . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?ans1 ?ans1_label WHERE { ?ans1 instance of mixture . ?ans1 rdfs:label ?ans1_label . FILTER(CONTAINS(lcase(?ans1_label), ?unknown)) . FILTER(lang(?ans1_label) = 'en') } LIMIT 25 "
        },
        "original": {
            "question": "Let me know blend whose title has the word spiromax in it.",
            "query": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q169336 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'spiromax')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 ",
            "NLQuery": "SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj instance of mixture . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'spiromax')) . FILTER(lang(?sbj_label) = 'en') } LIMIT 25 "
        },
        "meta": {
            "entityTagNER": "NA: contains",
            "choppedText": "spiromax in it",
            "choppedEntity": "spiromax"
        }
    }
]